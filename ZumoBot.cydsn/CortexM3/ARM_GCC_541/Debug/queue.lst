ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"queue.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	prvGetDisinheritPriorityAfterTimeout, %function
  24              	prvGetDisinheritPriorityAfterTimeout:
  25              	.LFB91:
  26              		.file 1 "..\\FreeRTOS\\Source\\queue.c"
   1:..\FreeRTOS\Source/queue.c **** /*
   2:..\FreeRTOS\Source/queue.c ****  * FreeRTOS Kernel V10.0.1
   3:..\FreeRTOS\Source/queue.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS\Source/queue.c ****  *
   5:..\FreeRTOS\Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS\Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS\Source/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS\Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS\Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS\Source/queue.c ****  * subject to the following conditions:
  11:..\FreeRTOS\Source/queue.c ****  *
  12:..\FreeRTOS\Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS\Source/queue.c ****  * copies or substantial portions of the Software.
  14:..\FreeRTOS\Source/queue.c ****  *
  15:..\FreeRTOS\Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\FreeRTOS\Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\FreeRTOS\Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\FreeRTOS\Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\FreeRTOS\Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\FreeRTOS\Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\FreeRTOS\Source/queue.c ****  *
  22:..\FreeRTOS\Source/queue.c ****  * http://www.FreeRTOS.org
  23:..\FreeRTOS\Source/queue.c ****  * http://aws.amazon.com/freertos
  24:..\FreeRTOS\Source/queue.c ****  *
  25:..\FreeRTOS\Source/queue.c ****  * 1 tab == 4 spaces!
  26:..\FreeRTOS\Source/queue.c ****  */
  27:..\FreeRTOS\Source/queue.c **** 
  28:..\FreeRTOS\Source/queue.c **** #include <stdlib.h>
  29:..\FreeRTOS\Source/queue.c **** #include <string.h>
  30:..\FreeRTOS\Source/queue.c **** 
  31:..\FreeRTOS\Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 2


  32:..\FreeRTOS\Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:..\FreeRTOS\Source/queue.c **** task.h is included from an application file. */
  34:..\FreeRTOS\Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:..\FreeRTOS\Source/queue.c **** 
  36:..\FreeRTOS\Source/queue.c **** #include "FreeRTOS.h"
  37:..\FreeRTOS\Source/queue.c **** #include "task.h"
  38:..\FreeRTOS\Source/queue.c **** #include "queue.h"
  39:..\FreeRTOS\Source/queue.c **** 
  40:..\FreeRTOS\Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:..\FreeRTOS\Source/queue.c **** 	#include "croutine.h"
  42:..\FreeRTOS\Source/queue.c **** #endif
  43:..\FreeRTOS\Source/queue.c **** 
  44:..\FreeRTOS\Source/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  45:..\FreeRTOS\Source/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  46:..\FreeRTOS\Source/queue.c **** header files above, but not in this file, in order to generate the correct
  47:..\FreeRTOS\Source/queue.c **** privileged Vs unprivileged linkage and placement. */
  48:..\FreeRTOS\Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  49:..\FreeRTOS\Source/queue.c **** 
  50:..\FreeRTOS\Source/queue.c **** 
  51:..\FreeRTOS\Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:..\FreeRTOS\Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:..\FreeRTOS\Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:..\FreeRTOS\Source/queue.c **** 
  55:..\FreeRTOS\Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:..\FreeRTOS\Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:..\FreeRTOS\Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:..\FreeRTOS\Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:..\FreeRTOS\Source/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
  60:..\FreeRTOS\Source/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
  61:..\FreeRTOS\Source/queue.c **** the code is maintained despite this dual use of two structure members.  An
  62:..\FreeRTOS\Source/queue.c **** alternative implementation would be to use a union, but use of a union is
  63:..\FreeRTOS\Source/queue.c **** against the coding standard (although an exception to the standard has been
  64:..\FreeRTOS\Source/queue.c **** permitted where the dual use also significantly changes the type of the
  65:..\FreeRTOS\Source/queue.c **** structure member). */
  66:..\FreeRTOS\Source/queue.c **** #define pxMutexHolder					pcTail
  67:..\FreeRTOS\Source/queue.c **** #define uxQueueType						pcHead
  68:..\FreeRTOS\Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  69:..\FreeRTOS\Source/queue.c **** 
  70:..\FreeRTOS\Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  71:..\FreeRTOS\Source/queue.c **** zero. */
  72:..\FreeRTOS\Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  73:..\FreeRTOS\Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  74:..\FreeRTOS\Source/queue.c **** 
  75:..\FreeRTOS\Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
  76:..\FreeRTOS\Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  77:..\FreeRTOS\Source/queue.c **** 	performed just because a higher priority task has been woken. */
  78:..\FreeRTOS\Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  79:..\FreeRTOS\Source/queue.c **** #else
  80:..\FreeRTOS\Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  81:..\FreeRTOS\Source/queue.c **** #endif
  82:..\FreeRTOS\Source/queue.c **** 
  83:..\FreeRTOS\Source/queue.c **** /*
  84:..\FreeRTOS\Source/queue.c ****  * Definition of the queue used by the scheduler.
  85:..\FreeRTOS\Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  86:..\FreeRTOS\Source/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
  87:..\FreeRTOS\Source/queue.c ****  */
  88:..\FreeRTOS\Source/queue.c **** typedef struct QueueDefinition
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 3


  89:..\FreeRTOS\Source/queue.c **** {
  90:..\FreeRTOS\Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
  91:..\FreeRTOS\Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  92:..\FreeRTOS\Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
  93:..\FreeRTOS\Source/queue.c **** 
  94:..\FreeRTOS\Source/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
  95:..\FreeRTOS\Source/queue.c **** 	{
  96:..\FreeRTOS\Source/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
  97:..\FreeRTOS\Source/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
  98:..\FreeRTOS\Source/queue.c **** 	} u;
  99:..\FreeRTOS\Source/queue.c **** 
 100:..\FreeRTOS\Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 101:..\FreeRTOS\Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 102:..\FreeRTOS\Source/queue.c **** 
 103:..\FreeRTOS\Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 104:..\FreeRTOS\Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 105:..\FreeRTOS\Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 106:..\FreeRTOS\Source/queue.c **** 
 107:..\FreeRTOS\Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 108:..\FreeRTOS\Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 109:..\FreeRTOS\Source/queue.c **** 
 110:..\FreeRTOS\Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 111:..\FreeRTOS\Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 112:..\FreeRTOS\Source/queue.c **** 	#endif
 113:..\FreeRTOS\Source/queue.c **** 
 114:..\FreeRTOS\Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 115:..\FreeRTOS\Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 116:..\FreeRTOS\Source/queue.c **** 	#endif
 117:..\FreeRTOS\Source/queue.c **** 
 118:..\FreeRTOS\Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 119:..\FreeRTOS\Source/queue.c **** 		UBaseType_t uxQueueNumber;
 120:..\FreeRTOS\Source/queue.c **** 		uint8_t ucQueueType;
 121:..\FreeRTOS\Source/queue.c **** 	#endif
 122:..\FreeRTOS\Source/queue.c **** 
 123:..\FreeRTOS\Source/queue.c **** } xQUEUE;
 124:..\FreeRTOS\Source/queue.c **** 
 125:..\FreeRTOS\Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 126:..\FreeRTOS\Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 127:..\FreeRTOS\Source/queue.c **** typedef xQUEUE Queue_t;
 128:..\FreeRTOS\Source/queue.c **** 
 129:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 130:..\FreeRTOS\Source/queue.c **** 
 131:..\FreeRTOS\Source/queue.c **** /*
 132:..\FreeRTOS\Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 133:..\FreeRTOS\Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 134:..\FreeRTOS\Source/queue.c ****  */
 135:..\FreeRTOS\Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 136:..\FreeRTOS\Source/queue.c **** 
 137:..\FreeRTOS\Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 138:..\FreeRTOS\Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 139:..\FreeRTOS\Source/queue.c **** 	more user friendly. */
 140:..\FreeRTOS\Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 141:..\FreeRTOS\Source/queue.c **** 	{
 142:..\FreeRTOS\Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 143:..\FreeRTOS\Source/queue.c **** 		QueueHandle_t xHandle;
 144:..\FreeRTOS\Source/queue.c **** 	} xQueueRegistryItem;
 145:..\FreeRTOS\Source/queue.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 4


 146:..\FreeRTOS\Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 147:..\FreeRTOS\Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 148:..\FreeRTOS\Source/queue.c **** 	debuggers. */
 149:..\FreeRTOS\Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 150:..\FreeRTOS\Source/queue.c **** 
 151:..\FreeRTOS\Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 152:..\FreeRTOS\Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 153:..\FreeRTOS\Source/queue.c **** 	array position being vacant. */
 154:..\FreeRTOS\Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 155:..\FreeRTOS\Source/queue.c **** 
 156:..\FreeRTOS\Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 157:..\FreeRTOS\Source/queue.c **** 
 158:..\FreeRTOS\Source/queue.c **** /*
 159:..\FreeRTOS\Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 160:..\FreeRTOS\Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 161:..\FreeRTOS\Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 162:..\FreeRTOS\Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 163:..\FreeRTOS\Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 164:..\FreeRTOS\Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 165:..\FreeRTOS\Source/queue.c ****  */
 166:..\FreeRTOS\Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 167:..\FreeRTOS\Source/queue.c **** 
 168:..\FreeRTOS\Source/queue.c **** /*
 169:..\FreeRTOS\Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 170:..\FreeRTOS\Source/queue.c ****  *
 171:..\FreeRTOS\Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 172:..\FreeRTOS\Source/queue.c ****  */
 173:..\FreeRTOS\Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 174:..\FreeRTOS\Source/queue.c **** 
 175:..\FreeRTOS\Source/queue.c **** /*
 176:..\FreeRTOS\Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 177:..\FreeRTOS\Source/queue.c ****  *
 178:..\FreeRTOS\Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 179:..\FreeRTOS\Source/queue.c ****  */
 180:..\FreeRTOS\Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 181:..\FreeRTOS\Source/queue.c **** 
 182:..\FreeRTOS\Source/queue.c **** /*
 183:..\FreeRTOS\Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 184:..\FreeRTOS\Source/queue.c ****  * back of the queue.
 185:..\FreeRTOS\Source/queue.c ****  */
 186:..\FreeRTOS\Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 187:..\FreeRTOS\Source/queue.c **** 
 188:..\FreeRTOS\Source/queue.c **** /*
 189:..\FreeRTOS\Source/queue.c ****  * Copies an item out of a queue.
 190:..\FreeRTOS\Source/queue.c ****  */
 191:..\FreeRTOS\Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 192:..\FreeRTOS\Source/queue.c **** 
 193:..\FreeRTOS\Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 194:..\FreeRTOS\Source/queue.c **** 	/*
 195:..\FreeRTOS\Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 196:..\FreeRTOS\Source/queue.c **** 	 * the queue set that the queue contains data.
 197:..\FreeRTOS\Source/queue.c **** 	 */
 198:..\FreeRTOS\Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 199:..\FreeRTOS\Source/queue.c **** #endif
 200:..\FreeRTOS\Source/queue.c **** 
 201:..\FreeRTOS\Source/queue.c **** /*
 202:..\FreeRTOS\Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 5


 203:..\FreeRTOS\Source/queue.c ****  * dynamically to fill in the structure's members.
 204:..\FreeRTOS\Source/queue.c ****  */
 205:..\FreeRTOS\Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 206:..\FreeRTOS\Source/queue.c **** 
 207:..\FreeRTOS\Source/queue.c **** /*
 208:..\FreeRTOS\Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 209:..\FreeRTOS\Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 210:..\FreeRTOS\Source/queue.c ****  * as a mutex.
 211:..\FreeRTOS\Source/queue.c ****  */
 212:..\FreeRTOS\Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 213:..\FreeRTOS\Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 214:..\FreeRTOS\Source/queue.c **** #endif
 215:..\FreeRTOS\Source/queue.c **** 
 216:..\FreeRTOS\Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 217:..\FreeRTOS\Source/queue.c **** 	/*
 218:..\FreeRTOS\Source/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 219:..\FreeRTOS\Source/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 220:..\FreeRTOS\Source/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 221:..\FreeRTOS\Source/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 222:..\FreeRTOS\Source/queue.c **** 	 * that priority.
 223:..\FreeRTOS\Source/queue.c **** 	 */
 224:..\FreeRTOS\Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 225:..\FreeRTOS\Source/queue.c **** #endif
 226:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 227:..\FreeRTOS\Source/queue.c **** 
 228:..\FreeRTOS\Source/queue.c **** /*
 229:..\FreeRTOS\Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 230:..\FreeRTOS\Source/queue.c ****  * accessing the queue event lists.
 231:..\FreeRTOS\Source/queue.c ****  */
 232:..\FreeRTOS\Source/queue.c **** #define prvLockQueue( pxQueue )								\
 233:..\FreeRTOS\Source/queue.c **** 	taskENTER_CRITICAL();									\
 234:..\FreeRTOS\Source/queue.c **** 	{														\
 235:..\FreeRTOS\Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 236:..\FreeRTOS\Source/queue.c **** 		{													\
 237:..\FreeRTOS\Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 238:..\FreeRTOS\Source/queue.c **** 		}													\
 239:..\FreeRTOS\Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 240:..\FreeRTOS\Source/queue.c **** 		{													\
 241:..\FreeRTOS\Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 242:..\FreeRTOS\Source/queue.c **** 		}													\
 243:..\FreeRTOS\Source/queue.c **** 	}														\
 244:..\FreeRTOS\Source/queue.c **** 	taskEXIT_CRITICAL()
 245:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 246:..\FreeRTOS\Source/queue.c **** 
 247:..\FreeRTOS\Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 248:..\FreeRTOS\Source/queue.c **** {
 249:..\FreeRTOS\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 250:..\FreeRTOS\Source/queue.c **** 
 251:..\FreeRTOS\Source/queue.c **** 	configASSERT( pxQueue );
 252:..\FreeRTOS\Source/queue.c **** 
 253:..\FreeRTOS\Source/queue.c **** 	taskENTER_CRITICAL();
 254:..\FreeRTOS\Source/queue.c **** 	{
 255:..\FreeRTOS\Source/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 256:..\FreeRTOS\Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 257:..\FreeRTOS\Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 258:..\FreeRTOS\Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 259:..\FreeRTOS\Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 6


 260:..\FreeRTOS\Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 261:..\FreeRTOS\Source/queue.c **** 
 262:..\FreeRTOS\Source/queue.c **** 		if( xNewQueue == pdFALSE )
 263:..\FreeRTOS\Source/queue.c **** 		{
 264:..\FreeRTOS\Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 265:..\FreeRTOS\Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 266:..\FreeRTOS\Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 267:..\FreeRTOS\Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 268:..\FreeRTOS\Source/queue.c **** 			it will be possible to write to it. */
 269:..\FreeRTOS\Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 270:..\FreeRTOS\Source/queue.c **** 			{
 271:..\FreeRTOS\Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 272:..\FreeRTOS\Source/queue.c **** 				{
 273:..\FreeRTOS\Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 274:..\FreeRTOS\Source/queue.c **** 				}
 275:..\FreeRTOS\Source/queue.c **** 				else
 276:..\FreeRTOS\Source/queue.c **** 				{
 277:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 278:..\FreeRTOS\Source/queue.c **** 				}
 279:..\FreeRTOS\Source/queue.c **** 			}
 280:..\FreeRTOS\Source/queue.c **** 			else
 281:..\FreeRTOS\Source/queue.c **** 			{
 282:..\FreeRTOS\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 283:..\FreeRTOS\Source/queue.c **** 			}
 284:..\FreeRTOS\Source/queue.c **** 		}
 285:..\FreeRTOS\Source/queue.c **** 		else
 286:..\FreeRTOS\Source/queue.c **** 		{
 287:..\FreeRTOS\Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 288:..\FreeRTOS\Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 289:..\FreeRTOS\Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 290:..\FreeRTOS\Source/queue.c **** 		}
 291:..\FreeRTOS\Source/queue.c **** 	}
 292:..\FreeRTOS\Source/queue.c **** 	taskEXIT_CRITICAL();
 293:..\FreeRTOS\Source/queue.c **** 
 294:..\FreeRTOS\Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 295:..\FreeRTOS\Source/queue.c **** 	versions. */
 296:..\FreeRTOS\Source/queue.c **** 	return pdPASS;
 297:..\FreeRTOS\Source/queue.c **** }
 298:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 299:..\FreeRTOS\Source/queue.c **** 
 300:..\FreeRTOS\Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 301:..\FreeRTOS\Source/queue.c **** 
 302:..\FreeRTOS\Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 303:..\FreeRTOS\Source/queue.c **** 	{
 304:..\FreeRTOS\Source/queue.c **** 	Queue_t *pxNewQueue;
 305:..\FreeRTOS\Source/queue.c **** 
 306:..\FreeRTOS\Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 307:..\FreeRTOS\Source/queue.c **** 
 308:..\FreeRTOS\Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 309:..\FreeRTOS\Source/queue.c **** 		supplied. */
 310:..\FreeRTOS\Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 311:..\FreeRTOS\Source/queue.c **** 
 312:..\FreeRTOS\Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 313:..\FreeRTOS\Source/queue.c **** 		should not be provided if the item size is 0. */
 314:..\FreeRTOS\Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 315:..\FreeRTOS\Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 316:..\FreeRTOS\Source/queue.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 7


 317:..\FreeRTOS\Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 318:..\FreeRTOS\Source/queue.c **** 		{
 319:..\FreeRTOS\Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 320:..\FreeRTOS\Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 321:..\FreeRTOS\Source/queue.c **** 			the real queue and semaphore structures. */
 322:..\FreeRTOS\Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 323:..\FreeRTOS\Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 324:..\FreeRTOS\Source/queue.c **** 		}
 325:..\FreeRTOS\Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 326:..\FreeRTOS\Source/queue.c **** 
 327:..\FreeRTOS\Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 328:..\FreeRTOS\Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 329:..\FreeRTOS\Source/queue.c **** 		but is already set. */
 330:..\FreeRTOS\Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 331:..\FreeRTOS\Source/queue.c **** 
 332:..\FreeRTOS\Source/queue.c **** 		if( pxNewQueue != NULL )
 333:..\FreeRTOS\Source/queue.c **** 		{
 334:..\FreeRTOS\Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 335:..\FreeRTOS\Source/queue.c **** 			{
 336:..\FreeRTOS\Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 337:..\FreeRTOS\Source/queue.c **** 				note this queue was allocated statically in case the queue is
 338:..\FreeRTOS\Source/queue.c **** 				later deleted. */
 339:..\FreeRTOS\Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 340:..\FreeRTOS\Source/queue.c **** 			}
 341:..\FreeRTOS\Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 342:..\FreeRTOS\Source/queue.c **** 
 343:..\FreeRTOS\Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 344:..\FreeRTOS\Source/queue.c **** 		}
 345:..\FreeRTOS\Source/queue.c **** 		else
 346:..\FreeRTOS\Source/queue.c **** 		{
 347:..\FreeRTOS\Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 348:..\FreeRTOS\Source/queue.c **** 		}
 349:..\FreeRTOS\Source/queue.c **** 
 350:..\FreeRTOS\Source/queue.c **** 		return pxNewQueue;
 351:..\FreeRTOS\Source/queue.c **** 	}
 352:..\FreeRTOS\Source/queue.c **** 
 353:..\FreeRTOS\Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 354:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 355:..\FreeRTOS\Source/queue.c **** 
 356:..\FreeRTOS\Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 357:..\FreeRTOS\Source/queue.c **** 
 358:..\FreeRTOS\Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 359:..\FreeRTOS\Source/queue.c **** 	{
 360:..\FreeRTOS\Source/queue.c **** 	Queue_t *pxNewQueue;
 361:..\FreeRTOS\Source/queue.c **** 	size_t xQueueSizeInBytes;
 362:..\FreeRTOS\Source/queue.c **** 	uint8_t *pucQueueStorage;
 363:..\FreeRTOS\Source/queue.c **** 
 364:..\FreeRTOS\Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 365:..\FreeRTOS\Source/queue.c **** 
 366:..\FreeRTOS\Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 367:..\FreeRTOS\Source/queue.c **** 		{
 368:..\FreeRTOS\Source/queue.c **** 			/* There is not going to be a queue storage area. */
 369:..\FreeRTOS\Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 370:..\FreeRTOS\Source/queue.c **** 		}
 371:..\FreeRTOS\Source/queue.c **** 		else
 372:..\FreeRTOS\Source/queue.c **** 		{
 373:..\FreeRTOS\Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 8


 374:..\FreeRTOS\Source/queue.c **** 			can be in the queue at any time. */
 375:..\FreeRTOS\Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 376:..\FreeRTOS\Source/queue.c **** 		}
 377:..\FreeRTOS\Source/queue.c **** 
 378:..\FreeRTOS\Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 379:..\FreeRTOS\Source/queue.c **** 
 380:..\FreeRTOS\Source/queue.c **** 		if( pxNewQueue != NULL )
 381:..\FreeRTOS\Source/queue.c **** 		{
 382:..\FreeRTOS\Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 383:..\FreeRTOS\Source/queue.c **** 			storage area. */
 384:..\FreeRTOS\Source/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 385:..\FreeRTOS\Source/queue.c **** 
 386:..\FreeRTOS\Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 387:..\FreeRTOS\Source/queue.c **** 			{
 388:..\FreeRTOS\Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 389:..\FreeRTOS\Source/queue.c **** 				note this task was created dynamically in case it is later
 390:..\FreeRTOS\Source/queue.c **** 				deleted. */
 391:..\FreeRTOS\Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 392:..\FreeRTOS\Source/queue.c **** 			}
 393:..\FreeRTOS\Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 394:..\FreeRTOS\Source/queue.c **** 
 395:..\FreeRTOS\Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 396:..\FreeRTOS\Source/queue.c **** 		}
 397:..\FreeRTOS\Source/queue.c **** 		else
 398:..\FreeRTOS\Source/queue.c **** 		{
 399:..\FreeRTOS\Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 400:..\FreeRTOS\Source/queue.c **** 		}
 401:..\FreeRTOS\Source/queue.c **** 
 402:..\FreeRTOS\Source/queue.c **** 		return pxNewQueue;
 403:..\FreeRTOS\Source/queue.c **** 	}
 404:..\FreeRTOS\Source/queue.c **** 
 405:..\FreeRTOS\Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 406:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 407:..\FreeRTOS\Source/queue.c **** 
 408:..\FreeRTOS\Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 409:..\FreeRTOS\Source/queue.c **** {
 410:..\FreeRTOS\Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 411:..\FreeRTOS\Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 412:..\FreeRTOS\Source/queue.c **** 	( void ) ucQueueType;
 413:..\FreeRTOS\Source/queue.c **** 
 414:..\FreeRTOS\Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 415:..\FreeRTOS\Source/queue.c **** 	{
 416:..\FreeRTOS\Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 417:..\FreeRTOS\Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 418:..\FreeRTOS\Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 419:..\FreeRTOS\Source/queue.c **** 		value that is known to be within the memory map. */
 420:..\FreeRTOS\Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 421:..\FreeRTOS\Source/queue.c **** 	}
 422:..\FreeRTOS\Source/queue.c **** 	else
 423:..\FreeRTOS\Source/queue.c **** 	{
 424:..\FreeRTOS\Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 425:..\FreeRTOS\Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 426:..\FreeRTOS\Source/queue.c **** 	}
 427:..\FreeRTOS\Source/queue.c **** 
 428:..\FreeRTOS\Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 429:..\FreeRTOS\Source/queue.c **** 	defined. */
 430:..\FreeRTOS\Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 9


 431:..\FreeRTOS\Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 432:..\FreeRTOS\Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 433:..\FreeRTOS\Source/queue.c **** 
 434:..\FreeRTOS\Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 435:..\FreeRTOS\Source/queue.c **** 	{
 436:..\FreeRTOS\Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 437:..\FreeRTOS\Source/queue.c **** 	}
 438:..\FreeRTOS\Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 439:..\FreeRTOS\Source/queue.c **** 
 440:..\FreeRTOS\Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 441:..\FreeRTOS\Source/queue.c **** 	{
 442:..\FreeRTOS\Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 443:..\FreeRTOS\Source/queue.c **** 	}
 444:..\FreeRTOS\Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 445:..\FreeRTOS\Source/queue.c **** 
 446:..\FreeRTOS\Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 447:..\FreeRTOS\Source/queue.c **** }
 448:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 449:..\FreeRTOS\Source/queue.c **** 
 450:..\FreeRTOS\Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 451:..\FreeRTOS\Source/queue.c **** 
 452:..\FreeRTOS\Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 453:..\FreeRTOS\Source/queue.c **** 	{
 454:..\FreeRTOS\Source/queue.c **** 		if( pxNewQueue != NULL )
 455:..\FreeRTOS\Source/queue.c **** 		{
 456:..\FreeRTOS\Source/queue.c **** 			/* The queue create function will set all the queue structure members
 457:..\FreeRTOS\Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 458:..\FreeRTOS\Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 459:..\FreeRTOS\Source/queue.c **** 			in particular the information required for priority inheritance. */
 460:..\FreeRTOS\Source/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 461:..\FreeRTOS\Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 462:..\FreeRTOS\Source/queue.c **** 
 463:..\FreeRTOS\Source/queue.c **** 			/* In case this is a recursive mutex. */
 464:..\FreeRTOS\Source/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
 465:..\FreeRTOS\Source/queue.c **** 
 466:..\FreeRTOS\Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 467:..\FreeRTOS\Source/queue.c **** 
 468:..\FreeRTOS\Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 469:..\FreeRTOS\Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 470:..\FreeRTOS\Source/queue.c **** 		}
 471:..\FreeRTOS\Source/queue.c **** 		else
 472:..\FreeRTOS\Source/queue.c **** 		{
 473:..\FreeRTOS\Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 474:..\FreeRTOS\Source/queue.c **** 		}
 475:..\FreeRTOS\Source/queue.c **** 	}
 476:..\FreeRTOS\Source/queue.c **** 
 477:..\FreeRTOS\Source/queue.c **** #endif /* configUSE_MUTEXES */
 478:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 479:..\FreeRTOS\Source/queue.c **** 
 480:..\FreeRTOS\Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 481:..\FreeRTOS\Source/queue.c **** 
 482:..\FreeRTOS\Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 483:..\FreeRTOS\Source/queue.c **** 	{
 484:..\FreeRTOS\Source/queue.c **** 	Queue_t *pxNewQueue;
 485:..\FreeRTOS\Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 486:..\FreeRTOS\Source/queue.c **** 
 487:..\FreeRTOS\Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 10


 488:..\FreeRTOS\Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 489:..\FreeRTOS\Source/queue.c **** 
 490:..\FreeRTOS\Source/queue.c **** 		return pxNewQueue;
 491:..\FreeRTOS\Source/queue.c **** 	}
 492:..\FreeRTOS\Source/queue.c **** 
 493:..\FreeRTOS\Source/queue.c **** #endif /* configUSE_MUTEXES */
 494:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 495:..\FreeRTOS\Source/queue.c **** 
 496:..\FreeRTOS\Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 497:..\FreeRTOS\Source/queue.c **** 
 498:..\FreeRTOS\Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 499:..\FreeRTOS\Source/queue.c **** 	{
 500:..\FreeRTOS\Source/queue.c **** 	Queue_t *pxNewQueue;
 501:..\FreeRTOS\Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 502:..\FreeRTOS\Source/queue.c **** 
 503:..\FreeRTOS\Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 504:..\FreeRTOS\Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 505:..\FreeRTOS\Source/queue.c **** 		( void ) ucQueueType;
 506:..\FreeRTOS\Source/queue.c **** 
 507:..\FreeRTOS\Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 508:..\FreeRTOS\Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 509:..\FreeRTOS\Source/queue.c **** 
 510:..\FreeRTOS\Source/queue.c **** 		return pxNewQueue;
 511:..\FreeRTOS\Source/queue.c **** 	}
 512:..\FreeRTOS\Source/queue.c **** 
 513:..\FreeRTOS\Source/queue.c **** #endif /* configUSE_MUTEXES */
 514:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 515:..\FreeRTOS\Source/queue.c **** 
 516:..\FreeRTOS\Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 517:..\FreeRTOS\Source/queue.c **** 
 518:..\FreeRTOS\Source/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 519:..\FreeRTOS\Source/queue.c **** 	{
 520:..\FreeRTOS\Source/queue.c **** 	void *pxReturn;
 521:..\FreeRTOS\Source/queue.c **** 
 522:..\FreeRTOS\Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 523:..\FreeRTOS\Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 524:..\FreeRTOS\Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 525:..\FreeRTOS\Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 526:..\FreeRTOS\Source/queue.c **** 		following critical section exiting and the function returning. */
 527:..\FreeRTOS\Source/queue.c **** 		taskENTER_CRITICAL();
 528:..\FreeRTOS\Source/queue.c **** 		{
 529:..\FreeRTOS\Source/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 530:..\FreeRTOS\Source/queue.c **** 			{
 531:..\FreeRTOS\Source/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 532:..\FreeRTOS\Source/queue.c **** 			}
 533:..\FreeRTOS\Source/queue.c **** 			else
 534:..\FreeRTOS\Source/queue.c **** 			{
 535:..\FreeRTOS\Source/queue.c **** 				pxReturn = NULL;
 536:..\FreeRTOS\Source/queue.c **** 			}
 537:..\FreeRTOS\Source/queue.c **** 		}
 538:..\FreeRTOS\Source/queue.c **** 		taskEXIT_CRITICAL();
 539:..\FreeRTOS\Source/queue.c **** 
 540:..\FreeRTOS\Source/queue.c **** 		return pxReturn;
 541:..\FreeRTOS\Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 542:..\FreeRTOS\Source/queue.c **** 
 543:..\FreeRTOS\Source/queue.c **** #endif
 544:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 11


 545:..\FreeRTOS\Source/queue.c **** 
 546:..\FreeRTOS\Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 547:..\FreeRTOS\Source/queue.c **** 
 548:..\FreeRTOS\Source/queue.c **** 	void* xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 549:..\FreeRTOS\Source/queue.c **** 	{
 550:..\FreeRTOS\Source/queue.c **** 	void *pxReturn;
 551:..\FreeRTOS\Source/queue.c **** 
 552:..\FreeRTOS\Source/queue.c **** 		configASSERT( xSemaphore );
 553:..\FreeRTOS\Source/queue.c **** 
 554:..\FreeRTOS\Source/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 555:..\FreeRTOS\Source/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 556:..\FreeRTOS\Source/queue.c **** 		not required here. */
 557:..\FreeRTOS\Source/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 558:..\FreeRTOS\Source/queue.c **** 		{
 559:..\FreeRTOS\Source/queue.c **** 			pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 560:..\FreeRTOS\Source/queue.c **** 		}
 561:..\FreeRTOS\Source/queue.c **** 		else
 562:..\FreeRTOS\Source/queue.c **** 		{
 563:..\FreeRTOS\Source/queue.c **** 			pxReturn = NULL;
 564:..\FreeRTOS\Source/queue.c **** 		}
 565:..\FreeRTOS\Source/queue.c **** 
 566:..\FreeRTOS\Source/queue.c **** 		return pxReturn;
 567:..\FreeRTOS\Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 568:..\FreeRTOS\Source/queue.c **** 
 569:..\FreeRTOS\Source/queue.c **** #endif
 570:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 571:..\FreeRTOS\Source/queue.c **** 
 572:..\FreeRTOS\Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 573:..\FreeRTOS\Source/queue.c **** 
 574:..\FreeRTOS\Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 575:..\FreeRTOS\Source/queue.c **** 	{
 576:..\FreeRTOS\Source/queue.c **** 	BaseType_t xReturn;
 577:..\FreeRTOS\Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 578:..\FreeRTOS\Source/queue.c **** 
 579:..\FreeRTOS\Source/queue.c **** 		configASSERT( pxMutex );
 580:..\FreeRTOS\Source/queue.c **** 
 581:..\FreeRTOS\Source/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 582:..\FreeRTOS\Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 583:..\FreeRTOS\Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 584:..\FreeRTOS\Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 585:..\FreeRTOS\Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 586:..\FreeRTOS\Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 587:..\FreeRTOS\Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 588:..\FreeRTOS\Source/queue.c **** 		{
 589:..\FreeRTOS\Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 590:..\FreeRTOS\Source/queue.c **** 
 591:..\FreeRTOS\Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 592:..\FreeRTOS\Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 593:..\FreeRTOS\Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 594:..\FreeRTOS\Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 595:..\FreeRTOS\Source/queue.c **** 			uxRecursiveCallCount member. */
 596:..\FreeRTOS\Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 597:..\FreeRTOS\Source/queue.c **** 
 598:..\FreeRTOS\Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 599:..\FreeRTOS\Source/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 600:..\FreeRTOS\Source/queue.c **** 			{
 601:..\FreeRTOS\Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 12


 602:..\FreeRTOS\Source/queue.c **** 				task that might be waiting to access the mutex. */
 603:..\FreeRTOS\Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 604:..\FreeRTOS\Source/queue.c **** 			}
 605:..\FreeRTOS\Source/queue.c **** 			else
 606:..\FreeRTOS\Source/queue.c **** 			{
 607:..\FreeRTOS\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 608:..\FreeRTOS\Source/queue.c **** 			}
 609:..\FreeRTOS\Source/queue.c **** 
 610:..\FreeRTOS\Source/queue.c **** 			xReturn = pdPASS;
 611:..\FreeRTOS\Source/queue.c **** 		}
 612:..\FreeRTOS\Source/queue.c **** 		else
 613:..\FreeRTOS\Source/queue.c **** 		{
 614:..\FreeRTOS\Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 615:..\FreeRTOS\Source/queue.c **** 			holder. */
 616:..\FreeRTOS\Source/queue.c **** 			xReturn = pdFAIL;
 617:..\FreeRTOS\Source/queue.c **** 
 618:..\FreeRTOS\Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 619:..\FreeRTOS\Source/queue.c **** 		}
 620:..\FreeRTOS\Source/queue.c **** 
 621:..\FreeRTOS\Source/queue.c **** 		return xReturn;
 622:..\FreeRTOS\Source/queue.c **** 	}
 623:..\FreeRTOS\Source/queue.c **** 
 624:..\FreeRTOS\Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 625:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 626:..\FreeRTOS\Source/queue.c **** 
 627:..\FreeRTOS\Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 628:..\FreeRTOS\Source/queue.c **** 
 629:..\FreeRTOS\Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 630:..\FreeRTOS\Source/queue.c **** 	{
 631:..\FreeRTOS\Source/queue.c **** 	BaseType_t xReturn;
 632:..\FreeRTOS\Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 633:..\FreeRTOS\Source/queue.c **** 
 634:..\FreeRTOS\Source/queue.c **** 		configASSERT( pxMutex );
 635:..\FreeRTOS\Source/queue.c **** 
 636:..\FreeRTOS\Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 637:..\FreeRTOS\Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 638:..\FreeRTOS\Source/queue.c **** 
 639:..\FreeRTOS\Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 640:..\FreeRTOS\Source/queue.c **** 
 641:..\FreeRTOS\Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 642:..\FreeRTOS\Source/queue.c **** 		{
 643:..\FreeRTOS\Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 644:..\FreeRTOS\Source/queue.c **** 			xReturn = pdPASS;
 645:..\FreeRTOS\Source/queue.c **** 		}
 646:..\FreeRTOS\Source/queue.c **** 		else
 647:..\FreeRTOS\Source/queue.c **** 		{
 648:..\FreeRTOS\Source/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 649:..\FreeRTOS\Source/queue.c **** 
 650:..\FreeRTOS\Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 651:..\FreeRTOS\Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 652:..\FreeRTOS\Source/queue.c **** 			before reaching here. */
 653:..\FreeRTOS\Source/queue.c **** 			if( xReturn != pdFAIL )
 654:..\FreeRTOS\Source/queue.c **** 			{
 655:..\FreeRTOS\Source/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 656:..\FreeRTOS\Source/queue.c **** 			}
 657:..\FreeRTOS\Source/queue.c **** 			else
 658:..\FreeRTOS\Source/queue.c **** 			{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 13


 659:..\FreeRTOS\Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 660:..\FreeRTOS\Source/queue.c **** 			}
 661:..\FreeRTOS\Source/queue.c **** 		}
 662:..\FreeRTOS\Source/queue.c **** 
 663:..\FreeRTOS\Source/queue.c **** 		return xReturn;
 664:..\FreeRTOS\Source/queue.c **** 	}
 665:..\FreeRTOS\Source/queue.c **** 
 666:..\FreeRTOS\Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 667:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 668:..\FreeRTOS\Source/queue.c **** 
 669:..\FreeRTOS\Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 670:..\FreeRTOS\Source/queue.c **** 
 671:..\FreeRTOS\Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 672:..\FreeRTOS\Source/queue.c **** 	{
 673:..\FreeRTOS\Source/queue.c **** 	QueueHandle_t xHandle;
 674:..\FreeRTOS\Source/queue.c **** 
 675:..\FreeRTOS\Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 676:..\FreeRTOS\Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 677:..\FreeRTOS\Source/queue.c **** 
 678:..\FreeRTOS\Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 679:..\FreeRTOS\Source/queue.c **** 
 680:..\FreeRTOS\Source/queue.c **** 		if( xHandle != NULL )
 681:..\FreeRTOS\Source/queue.c **** 		{
 682:..\FreeRTOS\Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 683:..\FreeRTOS\Source/queue.c **** 
 684:..\FreeRTOS\Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 685:..\FreeRTOS\Source/queue.c **** 		}
 686:..\FreeRTOS\Source/queue.c **** 		else
 687:..\FreeRTOS\Source/queue.c **** 		{
 688:..\FreeRTOS\Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 689:..\FreeRTOS\Source/queue.c **** 		}
 690:..\FreeRTOS\Source/queue.c **** 
 691:..\FreeRTOS\Source/queue.c **** 		return xHandle;
 692:..\FreeRTOS\Source/queue.c **** 	}
 693:..\FreeRTOS\Source/queue.c **** 
 694:..\FreeRTOS\Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 695:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 696:..\FreeRTOS\Source/queue.c **** 
 697:..\FreeRTOS\Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 698:..\FreeRTOS\Source/queue.c **** 
 699:..\FreeRTOS\Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 700:..\FreeRTOS\Source/queue.c **** 	{
 701:..\FreeRTOS\Source/queue.c **** 	QueueHandle_t xHandle;
 702:..\FreeRTOS\Source/queue.c **** 
 703:..\FreeRTOS\Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 704:..\FreeRTOS\Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 705:..\FreeRTOS\Source/queue.c **** 
 706:..\FreeRTOS\Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 707:..\FreeRTOS\Source/queue.c **** 
 708:..\FreeRTOS\Source/queue.c **** 		if( xHandle != NULL )
 709:..\FreeRTOS\Source/queue.c **** 		{
 710:..\FreeRTOS\Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 711:..\FreeRTOS\Source/queue.c **** 
 712:..\FreeRTOS\Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 713:..\FreeRTOS\Source/queue.c **** 		}
 714:..\FreeRTOS\Source/queue.c **** 		else
 715:..\FreeRTOS\Source/queue.c **** 		{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 14


 716:..\FreeRTOS\Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 717:..\FreeRTOS\Source/queue.c **** 		}
 718:..\FreeRTOS\Source/queue.c **** 
 719:..\FreeRTOS\Source/queue.c **** 		return xHandle;
 720:..\FreeRTOS\Source/queue.c **** 	}
 721:..\FreeRTOS\Source/queue.c **** 
 722:..\FreeRTOS\Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 723:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 724:..\FreeRTOS\Source/queue.c **** 
 725:..\FreeRTOS\Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 726:..\FreeRTOS\Source/queue.c **** {
 727:..\FreeRTOS\Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 728:..\FreeRTOS\Source/queue.c **** TimeOut_t xTimeOut;
 729:..\FreeRTOS\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 730:..\FreeRTOS\Source/queue.c **** 
 731:..\FreeRTOS\Source/queue.c **** 	configASSERT( pxQueue );
 732:..\FreeRTOS\Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 733:..\FreeRTOS\Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 734:..\FreeRTOS\Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 735:..\FreeRTOS\Source/queue.c **** 	{
 736:..\FreeRTOS\Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 737:..\FreeRTOS\Source/queue.c **** 	}
 738:..\FreeRTOS\Source/queue.c **** 	#endif
 739:..\FreeRTOS\Source/queue.c **** 
 740:..\FreeRTOS\Source/queue.c **** 
 741:..\FreeRTOS\Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 742:..\FreeRTOS\Source/queue.c **** 	statements within the function itself.  This is done in the interest
 743:..\FreeRTOS\Source/queue.c **** 	of execution time efficiency. */
 744:..\FreeRTOS\Source/queue.c **** 	for( ;; )
 745:..\FreeRTOS\Source/queue.c **** 	{
 746:..\FreeRTOS\Source/queue.c **** 		taskENTER_CRITICAL();
 747:..\FreeRTOS\Source/queue.c **** 		{
 748:..\FreeRTOS\Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 749:..\FreeRTOS\Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 750:..\FreeRTOS\Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 751:..\FreeRTOS\Source/queue.c **** 			queue is full. */
 752:..\FreeRTOS\Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 753:..\FreeRTOS\Source/queue.c **** 			{
 754:..\FreeRTOS\Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 755:..\FreeRTOS\Source/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 756:..\FreeRTOS\Source/queue.c **** 
 757:..\FreeRTOS\Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 758:..\FreeRTOS\Source/queue.c **** 				{
 759:..\FreeRTOS\Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 760:..\FreeRTOS\Source/queue.c **** 					{
 761:..\FreeRTOS\Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 762:..\FreeRTOS\Source/queue.c **** 						{
 763:..\FreeRTOS\Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 764:..\FreeRTOS\Source/queue.c **** 							to the queue set caused a higher priority task to
 765:..\FreeRTOS\Source/queue.c **** 							unblock. A context switch is required. */
 766:..\FreeRTOS\Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 767:..\FreeRTOS\Source/queue.c **** 						}
 768:..\FreeRTOS\Source/queue.c **** 						else
 769:..\FreeRTOS\Source/queue.c **** 						{
 770:..\FreeRTOS\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 771:..\FreeRTOS\Source/queue.c **** 						}
 772:..\FreeRTOS\Source/queue.c **** 					}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 15


 773:..\FreeRTOS\Source/queue.c **** 					else
 774:..\FreeRTOS\Source/queue.c **** 					{
 775:..\FreeRTOS\Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 776:..\FreeRTOS\Source/queue.c **** 						queue then unblock it now. */
 777:..\FreeRTOS\Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 778:..\FreeRTOS\Source/queue.c **** 						{
 779:..\FreeRTOS\Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 780:..\FreeRTOS\Source/queue.c **** 							{
 781:..\FreeRTOS\Source/queue.c **** 								/* The unblocked task has a priority higher than
 782:..\FreeRTOS\Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 783:..\FreeRTOS\Source/queue.c **** 								do this from within the critical section - the
 784:..\FreeRTOS\Source/queue.c **** 								kernel takes care of that. */
 785:..\FreeRTOS\Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 786:..\FreeRTOS\Source/queue.c **** 							}
 787:..\FreeRTOS\Source/queue.c **** 							else
 788:..\FreeRTOS\Source/queue.c **** 							{
 789:..\FreeRTOS\Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 790:..\FreeRTOS\Source/queue.c **** 							}
 791:..\FreeRTOS\Source/queue.c **** 						}
 792:..\FreeRTOS\Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 793:..\FreeRTOS\Source/queue.c **** 						{
 794:..\FreeRTOS\Source/queue.c **** 							/* This path is a special case that will only get
 795:..\FreeRTOS\Source/queue.c **** 							executed if the task was holding multiple mutexes
 796:..\FreeRTOS\Source/queue.c **** 							and the mutexes were given back in an order that is
 797:..\FreeRTOS\Source/queue.c **** 							different to that in which they were taken. */
 798:..\FreeRTOS\Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 799:..\FreeRTOS\Source/queue.c **** 						}
 800:..\FreeRTOS\Source/queue.c **** 						else
 801:..\FreeRTOS\Source/queue.c **** 						{
 802:..\FreeRTOS\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 803:..\FreeRTOS\Source/queue.c **** 						}
 804:..\FreeRTOS\Source/queue.c **** 					}
 805:..\FreeRTOS\Source/queue.c **** 				}
 806:..\FreeRTOS\Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 807:..\FreeRTOS\Source/queue.c **** 				{
 808:..\FreeRTOS\Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 809:..\FreeRTOS\Source/queue.c **** 					queue then unblock it now. */
 810:..\FreeRTOS\Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 811:..\FreeRTOS\Source/queue.c **** 					{
 812:..\FreeRTOS\Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 813:..\FreeRTOS\Source/queue.c **** 						{
 814:..\FreeRTOS\Source/queue.c **** 							/* The unblocked task has a priority higher than
 815:..\FreeRTOS\Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 816:..\FreeRTOS\Source/queue.c **** 							this from within the critical section - the kernel
 817:..\FreeRTOS\Source/queue.c **** 							takes care of that. */
 818:..\FreeRTOS\Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 819:..\FreeRTOS\Source/queue.c **** 						}
 820:..\FreeRTOS\Source/queue.c **** 						else
 821:..\FreeRTOS\Source/queue.c **** 						{
 822:..\FreeRTOS\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 823:..\FreeRTOS\Source/queue.c **** 						}
 824:..\FreeRTOS\Source/queue.c **** 					}
 825:..\FreeRTOS\Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 826:..\FreeRTOS\Source/queue.c **** 					{
 827:..\FreeRTOS\Source/queue.c **** 						/* This path is a special case that will only get
 828:..\FreeRTOS\Source/queue.c **** 						executed if the task was holding multiple mutexes and
 829:..\FreeRTOS\Source/queue.c **** 						the mutexes were given back in an order that is
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 16


 830:..\FreeRTOS\Source/queue.c **** 						different to that in which they were taken. */
 831:..\FreeRTOS\Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 832:..\FreeRTOS\Source/queue.c **** 					}
 833:..\FreeRTOS\Source/queue.c **** 					else
 834:..\FreeRTOS\Source/queue.c **** 					{
 835:..\FreeRTOS\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 836:..\FreeRTOS\Source/queue.c **** 					}
 837:..\FreeRTOS\Source/queue.c **** 				}
 838:..\FreeRTOS\Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 839:..\FreeRTOS\Source/queue.c **** 
 840:..\FreeRTOS\Source/queue.c **** 				taskEXIT_CRITICAL();
 841:..\FreeRTOS\Source/queue.c **** 				return pdPASS;
 842:..\FreeRTOS\Source/queue.c **** 			}
 843:..\FreeRTOS\Source/queue.c **** 			else
 844:..\FreeRTOS\Source/queue.c **** 			{
 845:..\FreeRTOS\Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 846:..\FreeRTOS\Source/queue.c **** 				{
 847:..\FreeRTOS\Source/queue.c **** 					/* The queue was full and no block time is specified (or
 848:..\FreeRTOS\Source/queue.c **** 					the block time has expired) so leave now. */
 849:..\FreeRTOS\Source/queue.c **** 					taskEXIT_CRITICAL();
 850:..\FreeRTOS\Source/queue.c **** 
 851:..\FreeRTOS\Source/queue.c **** 					/* Return to the original privilege level before exiting
 852:..\FreeRTOS\Source/queue.c **** 					the function. */
 853:..\FreeRTOS\Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 854:..\FreeRTOS\Source/queue.c **** 					return errQUEUE_FULL;
 855:..\FreeRTOS\Source/queue.c **** 				}
 856:..\FreeRTOS\Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 857:..\FreeRTOS\Source/queue.c **** 				{
 858:..\FreeRTOS\Source/queue.c **** 					/* The queue was full and a block time was specified so
 859:..\FreeRTOS\Source/queue.c **** 					configure the timeout structure. */
 860:..\FreeRTOS\Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 861:..\FreeRTOS\Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 862:..\FreeRTOS\Source/queue.c **** 				}
 863:..\FreeRTOS\Source/queue.c **** 				else
 864:..\FreeRTOS\Source/queue.c **** 				{
 865:..\FreeRTOS\Source/queue.c **** 					/* Entry time was already set. */
 866:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 867:..\FreeRTOS\Source/queue.c **** 				}
 868:..\FreeRTOS\Source/queue.c **** 			}
 869:..\FreeRTOS\Source/queue.c **** 		}
 870:..\FreeRTOS\Source/queue.c **** 		taskEXIT_CRITICAL();
 871:..\FreeRTOS\Source/queue.c **** 
 872:..\FreeRTOS\Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 873:..\FreeRTOS\Source/queue.c **** 		now the critical section has been exited. */
 874:..\FreeRTOS\Source/queue.c **** 
 875:..\FreeRTOS\Source/queue.c **** 		vTaskSuspendAll();
 876:..\FreeRTOS\Source/queue.c **** 		prvLockQueue( pxQueue );
 877:..\FreeRTOS\Source/queue.c **** 
 878:..\FreeRTOS\Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 879:..\FreeRTOS\Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 880:..\FreeRTOS\Source/queue.c **** 		{
 881:..\FreeRTOS\Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 882:..\FreeRTOS\Source/queue.c **** 			{
 883:..\FreeRTOS\Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 884:..\FreeRTOS\Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 885:..\FreeRTOS\Source/queue.c **** 
 886:..\FreeRTOS\Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 17


 887:..\FreeRTOS\Source/queue.c **** 				event list.  It is possible that interrupts occurring now
 888:..\FreeRTOS\Source/queue.c **** 				remove this task from the event list again - but as the
 889:..\FreeRTOS\Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 890:..\FreeRTOS\Source/queue.c **** 				ready last instead of the actual ready list. */
 891:..\FreeRTOS\Source/queue.c **** 				prvUnlockQueue( pxQueue );
 892:..\FreeRTOS\Source/queue.c **** 
 893:..\FreeRTOS\Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 894:..\FreeRTOS\Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 895:..\FreeRTOS\Source/queue.c **** 				task is already in a ready list before it yields - in which
 896:..\FreeRTOS\Source/queue.c **** 				case the yield will not cause a context switch unless there
 897:..\FreeRTOS\Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 898:..\FreeRTOS\Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 899:..\FreeRTOS\Source/queue.c **** 				{
 900:..\FreeRTOS\Source/queue.c **** 					portYIELD_WITHIN_API();
 901:..\FreeRTOS\Source/queue.c **** 				}
 902:..\FreeRTOS\Source/queue.c **** 			}
 903:..\FreeRTOS\Source/queue.c **** 			else
 904:..\FreeRTOS\Source/queue.c **** 			{
 905:..\FreeRTOS\Source/queue.c **** 				/* Try again. */
 906:..\FreeRTOS\Source/queue.c **** 				prvUnlockQueue( pxQueue );
 907:..\FreeRTOS\Source/queue.c **** 				( void ) xTaskResumeAll();
 908:..\FreeRTOS\Source/queue.c **** 			}
 909:..\FreeRTOS\Source/queue.c **** 		}
 910:..\FreeRTOS\Source/queue.c **** 		else
 911:..\FreeRTOS\Source/queue.c **** 		{
 912:..\FreeRTOS\Source/queue.c **** 			/* The timeout has expired. */
 913:..\FreeRTOS\Source/queue.c **** 			prvUnlockQueue( pxQueue );
 914:..\FreeRTOS\Source/queue.c **** 			( void ) xTaskResumeAll();
 915:..\FreeRTOS\Source/queue.c **** 
 916:..\FreeRTOS\Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 917:..\FreeRTOS\Source/queue.c **** 			return errQUEUE_FULL;
 918:..\FreeRTOS\Source/queue.c **** 		}
 919:..\FreeRTOS\Source/queue.c **** 	}
 920:..\FreeRTOS\Source/queue.c **** }
 921:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 922:..\FreeRTOS\Source/queue.c **** 
 923:..\FreeRTOS\Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 924:..\FreeRTOS\Source/queue.c **** {
 925:..\FreeRTOS\Source/queue.c **** BaseType_t xReturn;
 926:..\FreeRTOS\Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 927:..\FreeRTOS\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 928:..\FreeRTOS\Source/queue.c **** 
 929:..\FreeRTOS\Source/queue.c **** 	configASSERT( pxQueue );
 930:..\FreeRTOS\Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 931:..\FreeRTOS\Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 932:..\FreeRTOS\Source/queue.c **** 
 933:..\FreeRTOS\Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 934:..\FreeRTOS\Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 935:..\FreeRTOS\Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 936:..\FreeRTOS\Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 937:..\FreeRTOS\Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 938:..\FreeRTOS\Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 939:..\FreeRTOS\Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 940:..\FreeRTOS\Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 941:..\FreeRTOS\Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 942:..\FreeRTOS\Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 943:..\FreeRTOS\Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 18


 944:..\FreeRTOS\Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 945:..\FreeRTOS\Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 946:..\FreeRTOS\Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 947:..\FreeRTOS\Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 948:..\FreeRTOS\Source/queue.c **** 
 949:..\FreeRTOS\Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 950:..\FreeRTOS\Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 951:..\FreeRTOS\Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 952:..\FreeRTOS\Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 953:..\FreeRTOS\Source/queue.c **** 	post). */
 954:..\FreeRTOS\Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 955:..\FreeRTOS\Source/queue.c **** 	{
 956:..\FreeRTOS\Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 957:..\FreeRTOS\Source/queue.c **** 		{
 958:..\FreeRTOS\Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 959:..\FreeRTOS\Source/queue.c **** 
 960:..\FreeRTOS\Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 961:..\FreeRTOS\Source/queue.c **** 
 962:..\FreeRTOS\Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 963:..\FreeRTOS\Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 964:..\FreeRTOS\Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 965:..\FreeRTOS\Source/queue.c **** 			called here even though the disinherit function does not check if
 966:..\FreeRTOS\Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 967:..\FreeRTOS\Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 968:..\FreeRTOS\Source/queue.c **** 
 969:..\FreeRTOS\Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 970:..\FreeRTOS\Source/queue.c **** 			be done when the queue is unlocked later. */
 971:..\FreeRTOS\Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 972:..\FreeRTOS\Source/queue.c **** 			{
 973:..\FreeRTOS\Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 974:..\FreeRTOS\Source/queue.c **** 				{
 975:..\FreeRTOS\Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 976:..\FreeRTOS\Source/queue.c **** 					{
 977:..\FreeRTOS\Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 978:..\FreeRTOS\Source/queue.c **** 						{
 979:..\FreeRTOS\Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 980:..\FreeRTOS\Source/queue.c **** 							to the queue set caused a higher priority task to
 981:..\FreeRTOS\Source/queue.c **** 							unblock.  A context switch is required. */
 982:..\FreeRTOS\Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 983:..\FreeRTOS\Source/queue.c **** 							{
 984:..\FreeRTOS\Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 985:..\FreeRTOS\Source/queue.c **** 							}
 986:..\FreeRTOS\Source/queue.c **** 							else
 987:..\FreeRTOS\Source/queue.c **** 							{
 988:..\FreeRTOS\Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 989:..\FreeRTOS\Source/queue.c **** 							}
 990:..\FreeRTOS\Source/queue.c **** 						}
 991:..\FreeRTOS\Source/queue.c **** 						else
 992:..\FreeRTOS\Source/queue.c **** 						{
 993:..\FreeRTOS\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 994:..\FreeRTOS\Source/queue.c **** 						}
 995:..\FreeRTOS\Source/queue.c **** 					}
 996:..\FreeRTOS\Source/queue.c **** 					else
 997:..\FreeRTOS\Source/queue.c **** 					{
 998:..\FreeRTOS\Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 999:..\FreeRTOS\Source/queue.c **** 						{
1000:..\FreeRTOS\Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 19


1001:..\FreeRTOS\Source/queue.c **** 							{
1002:..\FreeRTOS\Source/queue.c **** 								/* The task waiting has a higher priority so
1003:..\FreeRTOS\Source/queue.c **** 								record that a context switch is required. */
1004:..\FreeRTOS\Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1005:..\FreeRTOS\Source/queue.c **** 								{
1006:..\FreeRTOS\Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1007:..\FreeRTOS\Source/queue.c **** 								}
1008:..\FreeRTOS\Source/queue.c **** 								else
1009:..\FreeRTOS\Source/queue.c **** 								{
1010:..\FreeRTOS\Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1011:..\FreeRTOS\Source/queue.c **** 								}
1012:..\FreeRTOS\Source/queue.c **** 							}
1013:..\FreeRTOS\Source/queue.c **** 							else
1014:..\FreeRTOS\Source/queue.c **** 							{
1015:..\FreeRTOS\Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1016:..\FreeRTOS\Source/queue.c **** 							}
1017:..\FreeRTOS\Source/queue.c **** 						}
1018:..\FreeRTOS\Source/queue.c **** 						else
1019:..\FreeRTOS\Source/queue.c **** 						{
1020:..\FreeRTOS\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1021:..\FreeRTOS\Source/queue.c **** 						}
1022:..\FreeRTOS\Source/queue.c **** 					}
1023:..\FreeRTOS\Source/queue.c **** 				}
1024:..\FreeRTOS\Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1025:..\FreeRTOS\Source/queue.c **** 				{
1026:..\FreeRTOS\Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1027:..\FreeRTOS\Source/queue.c **** 					{
1028:..\FreeRTOS\Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1029:..\FreeRTOS\Source/queue.c **** 						{
1030:..\FreeRTOS\Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1031:..\FreeRTOS\Source/queue.c **** 							context	switch is required. */
1032:..\FreeRTOS\Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1033:..\FreeRTOS\Source/queue.c **** 							{
1034:..\FreeRTOS\Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1035:..\FreeRTOS\Source/queue.c **** 							}
1036:..\FreeRTOS\Source/queue.c **** 							else
1037:..\FreeRTOS\Source/queue.c **** 							{
1038:..\FreeRTOS\Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1039:..\FreeRTOS\Source/queue.c **** 							}
1040:..\FreeRTOS\Source/queue.c **** 						}
1041:..\FreeRTOS\Source/queue.c **** 						else
1042:..\FreeRTOS\Source/queue.c **** 						{
1043:..\FreeRTOS\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1044:..\FreeRTOS\Source/queue.c **** 						}
1045:..\FreeRTOS\Source/queue.c **** 					}
1046:..\FreeRTOS\Source/queue.c **** 					else
1047:..\FreeRTOS\Source/queue.c **** 					{
1048:..\FreeRTOS\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1049:..\FreeRTOS\Source/queue.c **** 					}
1050:..\FreeRTOS\Source/queue.c **** 				}
1051:..\FreeRTOS\Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1052:..\FreeRTOS\Source/queue.c **** 			}
1053:..\FreeRTOS\Source/queue.c **** 			else
1054:..\FreeRTOS\Source/queue.c **** 			{
1055:..\FreeRTOS\Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1056:..\FreeRTOS\Source/queue.c **** 				knows that data was posted while it was locked. */
1057:..\FreeRTOS\Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 20


1058:..\FreeRTOS\Source/queue.c **** 			}
1059:..\FreeRTOS\Source/queue.c **** 
1060:..\FreeRTOS\Source/queue.c **** 			xReturn = pdPASS;
1061:..\FreeRTOS\Source/queue.c **** 		}
1062:..\FreeRTOS\Source/queue.c **** 		else
1063:..\FreeRTOS\Source/queue.c **** 		{
1064:..\FreeRTOS\Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1065:..\FreeRTOS\Source/queue.c **** 			xReturn = errQUEUE_FULL;
1066:..\FreeRTOS\Source/queue.c **** 		}
1067:..\FreeRTOS\Source/queue.c **** 	}
1068:..\FreeRTOS\Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1069:..\FreeRTOS\Source/queue.c **** 
1070:..\FreeRTOS\Source/queue.c **** 	return xReturn;
1071:..\FreeRTOS\Source/queue.c **** }
1072:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
1073:..\FreeRTOS\Source/queue.c **** 
1074:..\FreeRTOS\Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1075:..\FreeRTOS\Source/queue.c **** {
1076:..\FreeRTOS\Source/queue.c **** BaseType_t xReturn;
1077:..\FreeRTOS\Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1078:..\FreeRTOS\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1079:..\FreeRTOS\Source/queue.c **** 
1080:..\FreeRTOS\Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1081:..\FreeRTOS\Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1082:..\FreeRTOS\Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1083:..\FreeRTOS\Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1084:..\FreeRTOS\Source/queue.c **** 	post). */
1085:..\FreeRTOS\Source/queue.c **** 
1086:..\FreeRTOS\Source/queue.c **** 	configASSERT( pxQueue );
1087:..\FreeRTOS\Source/queue.c **** 
1088:..\FreeRTOS\Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1089:..\FreeRTOS\Source/queue.c **** 	if the item size is not 0. */
1090:..\FreeRTOS\Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1091:..\FreeRTOS\Source/queue.c **** 
1092:..\FreeRTOS\Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1093:..\FreeRTOS\Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1094:..\FreeRTOS\Source/queue.c **** 	interrupts, only tasks. */
1095:..\FreeRTOS\Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1096:..\FreeRTOS\Source/queue.c **** 
1097:..\FreeRTOS\Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1098:..\FreeRTOS\Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1099:..\FreeRTOS\Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1100:..\FreeRTOS\Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1101:..\FreeRTOS\Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1102:..\FreeRTOS\Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1103:..\FreeRTOS\Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1104:..\FreeRTOS\Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1105:..\FreeRTOS\Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1106:..\FreeRTOS\Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1107:..\FreeRTOS\Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1108:..\FreeRTOS\Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1109:..\FreeRTOS\Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1110:..\FreeRTOS\Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1111:..\FreeRTOS\Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1112:..\FreeRTOS\Source/queue.c **** 
1113:..\FreeRTOS\Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1114:..\FreeRTOS\Source/queue.c **** 	{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 21


1115:..\FreeRTOS\Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1116:..\FreeRTOS\Source/queue.c **** 
1117:..\FreeRTOS\Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1118:..\FreeRTOS\Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1119:..\FreeRTOS\Source/queue.c **** 		space'. */
1120:..\FreeRTOS\Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1121:..\FreeRTOS\Source/queue.c **** 		{
1122:..\FreeRTOS\Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1123:..\FreeRTOS\Source/queue.c **** 
1124:..\FreeRTOS\Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1125:..\FreeRTOS\Source/queue.c **** 
1126:..\FreeRTOS\Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1127:..\FreeRTOS\Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1128:..\FreeRTOS\Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1129:..\FreeRTOS\Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1130:..\FreeRTOS\Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1131:..\FreeRTOS\Source/queue.c **** 			messages (semaphores) available. */
1132:..\FreeRTOS\Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1133:..\FreeRTOS\Source/queue.c **** 
1134:..\FreeRTOS\Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1135:..\FreeRTOS\Source/queue.c **** 			be done when the queue is unlocked later. */
1136:..\FreeRTOS\Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1137:..\FreeRTOS\Source/queue.c **** 			{
1138:..\FreeRTOS\Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1139:..\FreeRTOS\Source/queue.c **** 				{
1140:..\FreeRTOS\Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1141:..\FreeRTOS\Source/queue.c **** 					{
1142:..\FreeRTOS\Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1143:..\FreeRTOS\Source/queue.c **** 						{
1144:..\FreeRTOS\Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1145:..\FreeRTOS\Source/queue.c **** 							posting	to the queue set caused a higher priority
1146:..\FreeRTOS\Source/queue.c **** 							task to	unblock.  A context switch is required. */
1147:..\FreeRTOS\Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1148:..\FreeRTOS\Source/queue.c **** 							{
1149:..\FreeRTOS\Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1150:..\FreeRTOS\Source/queue.c **** 							}
1151:..\FreeRTOS\Source/queue.c **** 							else
1152:..\FreeRTOS\Source/queue.c **** 							{
1153:..\FreeRTOS\Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1154:..\FreeRTOS\Source/queue.c **** 							}
1155:..\FreeRTOS\Source/queue.c **** 						}
1156:..\FreeRTOS\Source/queue.c **** 						else
1157:..\FreeRTOS\Source/queue.c **** 						{
1158:..\FreeRTOS\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1159:..\FreeRTOS\Source/queue.c **** 						}
1160:..\FreeRTOS\Source/queue.c **** 					}
1161:..\FreeRTOS\Source/queue.c **** 					else
1162:..\FreeRTOS\Source/queue.c **** 					{
1163:..\FreeRTOS\Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1164:..\FreeRTOS\Source/queue.c **** 						{
1165:..\FreeRTOS\Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1166:..\FreeRTOS\Source/queue.c **** 							{
1167:..\FreeRTOS\Source/queue.c **** 								/* The task waiting has a higher priority so
1168:..\FreeRTOS\Source/queue.c **** 								record that a context switch is required. */
1169:..\FreeRTOS\Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1170:..\FreeRTOS\Source/queue.c **** 								{
1171:..\FreeRTOS\Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 22


1172:..\FreeRTOS\Source/queue.c **** 								}
1173:..\FreeRTOS\Source/queue.c **** 								else
1174:..\FreeRTOS\Source/queue.c **** 								{
1175:..\FreeRTOS\Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1176:..\FreeRTOS\Source/queue.c **** 								}
1177:..\FreeRTOS\Source/queue.c **** 							}
1178:..\FreeRTOS\Source/queue.c **** 							else
1179:..\FreeRTOS\Source/queue.c **** 							{
1180:..\FreeRTOS\Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1181:..\FreeRTOS\Source/queue.c **** 							}
1182:..\FreeRTOS\Source/queue.c **** 						}
1183:..\FreeRTOS\Source/queue.c **** 						else
1184:..\FreeRTOS\Source/queue.c **** 						{
1185:..\FreeRTOS\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1186:..\FreeRTOS\Source/queue.c **** 						}
1187:..\FreeRTOS\Source/queue.c **** 					}
1188:..\FreeRTOS\Source/queue.c **** 				}
1189:..\FreeRTOS\Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1190:..\FreeRTOS\Source/queue.c **** 				{
1191:..\FreeRTOS\Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1192:..\FreeRTOS\Source/queue.c **** 					{
1193:..\FreeRTOS\Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1194:..\FreeRTOS\Source/queue.c **** 						{
1195:..\FreeRTOS\Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1196:..\FreeRTOS\Source/queue.c **** 							context	switch is required. */
1197:..\FreeRTOS\Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1198:..\FreeRTOS\Source/queue.c **** 							{
1199:..\FreeRTOS\Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1200:..\FreeRTOS\Source/queue.c **** 							}
1201:..\FreeRTOS\Source/queue.c **** 							else
1202:..\FreeRTOS\Source/queue.c **** 							{
1203:..\FreeRTOS\Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1204:..\FreeRTOS\Source/queue.c **** 							}
1205:..\FreeRTOS\Source/queue.c **** 						}
1206:..\FreeRTOS\Source/queue.c **** 						else
1207:..\FreeRTOS\Source/queue.c **** 						{
1208:..\FreeRTOS\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1209:..\FreeRTOS\Source/queue.c **** 						}
1210:..\FreeRTOS\Source/queue.c **** 					}
1211:..\FreeRTOS\Source/queue.c **** 					else
1212:..\FreeRTOS\Source/queue.c **** 					{
1213:..\FreeRTOS\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1214:..\FreeRTOS\Source/queue.c **** 					}
1215:..\FreeRTOS\Source/queue.c **** 				}
1216:..\FreeRTOS\Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1217:..\FreeRTOS\Source/queue.c **** 			}
1218:..\FreeRTOS\Source/queue.c **** 			else
1219:..\FreeRTOS\Source/queue.c **** 			{
1220:..\FreeRTOS\Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1221:..\FreeRTOS\Source/queue.c **** 				knows that data was posted while it was locked. */
1222:..\FreeRTOS\Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1223:..\FreeRTOS\Source/queue.c **** 			}
1224:..\FreeRTOS\Source/queue.c **** 
1225:..\FreeRTOS\Source/queue.c **** 			xReturn = pdPASS;
1226:..\FreeRTOS\Source/queue.c **** 		}
1227:..\FreeRTOS\Source/queue.c **** 		else
1228:..\FreeRTOS\Source/queue.c **** 		{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 23


1229:..\FreeRTOS\Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1230:..\FreeRTOS\Source/queue.c **** 			xReturn = errQUEUE_FULL;
1231:..\FreeRTOS\Source/queue.c **** 		}
1232:..\FreeRTOS\Source/queue.c **** 	}
1233:..\FreeRTOS\Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1234:..\FreeRTOS\Source/queue.c **** 
1235:..\FreeRTOS\Source/queue.c **** 	return xReturn;
1236:..\FreeRTOS\Source/queue.c **** }
1237:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
1238:..\FreeRTOS\Source/queue.c **** 
1239:..\FreeRTOS\Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1240:..\FreeRTOS\Source/queue.c **** {
1241:..\FreeRTOS\Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1242:..\FreeRTOS\Source/queue.c **** TimeOut_t xTimeOut;
1243:..\FreeRTOS\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1244:..\FreeRTOS\Source/queue.c **** 
1245:..\FreeRTOS\Source/queue.c **** 	/* Check the pointer is not NULL. */
1246:..\FreeRTOS\Source/queue.c **** 	configASSERT( ( pxQueue ) );
1247:..\FreeRTOS\Source/queue.c **** 
1248:..\FreeRTOS\Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1249:..\FreeRTOS\Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1250:..\FreeRTOS\Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1251:..\FreeRTOS\Source/queue.c **** 
1252:..\FreeRTOS\Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1253:..\FreeRTOS\Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1254:..\FreeRTOS\Source/queue.c **** 	{
1255:..\FreeRTOS\Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1256:..\FreeRTOS\Source/queue.c **** 	}
1257:..\FreeRTOS\Source/queue.c **** 	#endif
1258:..\FreeRTOS\Source/queue.c **** 
1259:..\FreeRTOS\Source/queue.c **** 
1260:..\FreeRTOS\Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1261:..\FreeRTOS\Source/queue.c **** 	statements within the function itself.  This is done in the interest
1262:..\FreeRTOS\Source/queue.c **** 	of execution time efficiency. */
1263:..\FreeRTOS\Source/queue.c **** 
1264:..\FreeRTOS\Source/queue.c **** 	for( ;; )
1265:..\FreeRTOS\Source/queue.c **** 	{
1266:..\FreeRTOS\Source/queue.c **** 		taskENTER_CRITICAL();
1267:..\FreeRTOS\Source/queue.c **** 		{
1268:..\FreeRTOS\Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1269:..\FreeRTOS\Source/queue.c **** 
1270:..\FreeRTOS\Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1271:..\FreeRTOS\Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1272:..\FreeRTOS\Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1273:..\FreeRTOS\Source/queue.c **** 			{
1274:..\FreeRTOS\Source/queue.c **** 				/* Data available, remove one item. */
1275:..\FreeRTOS\Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1276:..\FreeRTOS\Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1277:..\FreeRTOS\Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1278:..\FreeRTOS\Source/queue.c **** 
1279:..\FreeRTOS\Source/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1280:..\FreeRTOS\Source/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1281:..\FreeRTOS\Source/queue.c **** 				task. */
1282:..\FreeRTOS\Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1283:..\FreeRTOS\Source/queue.c **** 				{
1284:..\FreeRTOS\Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1285:..\FreeRTOS\Source/queue.c **** 					{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 24


1286:..\FreeRTOS\Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1287:..\FreeRTOS\Source/queue.c **** 					}
1288:..\FreeRTOS\Source/queue.c **** 					else
1289:..\FreeRTOS\Source/queue.c **** 					{
1290:..\FreeRTOS\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1291:..\FreeRTOS\Source/queue.c **** 					}
1292:..\FreeRTOS\Source/queue.c **** 				}
1293:..\FreeRTOS\Source/queue.c **** 				else
1294:..\FreeRTOS\Source/queue.c **** 				{
1295:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1296:..\FreeRTOS\Source/queue.c **** 				}
1297:..\FreeRTOS\Source/queue.c **** 
1298:..\FreeRTOS\Source/queue.c **** 				taskEXIT_CRITICAL();
1299:..\FreeRTOS\Source/queue.c **** 				return pdPASS;
1300:..\FreeRTOS\Source/queue.c **** 			}
1301:..\FreeRTOS\Source/queue.c **** 			else
1302:..\FreeRTOS\Source/queue.c **** 			{
1303:..\FreeRTOS\Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1304:..\FreeRTOS\Source/queue.c **** 				{
1305:..\FreeRTOS\Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1306:..\FreeRTOS\Source/queue.c **** 					the block time has expired) so leave now. */
1307:..\FreeRTOS\Source/queue.c **** 					taskEXIT_CRITICAL();
1308:..\FreeRTOS\Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1309:..\FreeRTOS\Source/queue.c **** 					return errQUEUE_EMPTY;
1310:..\FreeRTOS\Source/queue.c **** 				}
1311:..\FreeRTOS\Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1312:..\FreeRTOS\Source/queue.c **** 				{
1313:..\FreeRTOS\Source/queue.c **** 					/* The queue was empty and a block time was specified so
1314:..\FreeRTOS\Source/queue.c **** 					configure the timeout structure. */
1315:..\FreeRTOS\Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1316:..\FreeRTOS\Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1317:..\FreeRTOS\Source/queue.c **** 				}
1318:..\FreeRTOS\Source/queue.c **** 				else
1319:..\FreeRTOS\Source/queue.c **** 				{
1320:..\FreeRTOS\Source/queue.c **** 					/* Entry time was already set. */
1321:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1322:..\FreeRTOS\Source/queue.c **** 				}
1323:..\FreeRTOS\Source/queue.c **** 			}
1324:..\FreeRTOS\Source/queue.c **** 		}
1325:..\FreeRTOS\Source/queue.c **** 		taskEXIT_CRITICAL();
1326:..\FreeRTOS\Source/queue.c **** 
1327:..\FreeRTOS\Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1328:..\FreeRTOS\Source/queue.c **** 		now the critical section has been exited. */
1329:..\FreeRTOS\Source/queue.c **** 
1330:..\FreeRTOS\Source/queue.c **** 		vTaskSuspendAll();
1331:..\FreeRTOS\Source/queue.c **** 		prvLockQueue( pxQueue );
1332:..\FreeRTOS\Source/queue.c **** 
1333:..\FreeRTOS\Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1334:..\FreeRTOS\Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1335:..\FreeRTOS\Source/queue.c **** 		{
1336:..\FreeRTOS\Source/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1337:..\FreeRTOS\Source/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1338:..\FreeRTOS\Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1339:..\FreeRTOS\Source/queue.c **** 			{
1340:..\FreeRTOS\Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1341:..\FreeRTOS\Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1342:..\FreeRTOS\Source/queue.c **** 				prvUnlockQueue( pxQueue );
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 25


1343:..\FreeRTOS\Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1344:..\FreeRTOS\Source/queue.c **** 				{
1345:..\FreeRTOS\Source/queue.c **** 					portYIELD_WITHIN_API();
1346:..\FreeRTOS\Source/queue.c **** 				}
1347:..\FreeRTOS\Source/queue.c **** 				else
1348:..\FreeRTOS\Source/queue.c **** 				{
1349:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1350:..\FreeRTOS\Source/queue.c **** 				}
1351:..\FreeRTOS\Source/queue.c **** 			}
1352:..\FreeRTOS\Source/queue.c **** 			else
1353:..\FreeRTOS\Source/queue.c **** 			{
1354:..\FreeRTOS\Source/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1355:..\FreeRTOS\Source/queue.c **** 				data. */
1356:..\FreeRTOS\Source/queue.c **** 				prvUnlockQueue( pxQueue );
1357:..\FreeRTOS\Source/queue.c **** 				( void ) xTaskResumeAll();
1358:..\FreeRTOS\Source/queue.c **** 			}
1359:..\FreeRTOS\Source/queue.c **** 		}
1360:..\FreeRTOS\Source/queue.c **** 		else
1361:..\FreeRTOS\Source/queue.c **** 		{
1362:..\FreeRTOS\Source/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1363:..\FreeRTOS\Source/queue.c **** 			back and attempt to read the data. */
1364:..\FreeRTOS\Source/queue.c **** 			prvUnlockQueue( pxQueue );
1365:..\FreeRTOS\Source/queue.c **** 			( void ) xTaskResumeAll();
1366:..\FreeRTOS\Source/queue.c **** 
1367:..\FreeRTOS\Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1368:..\FreeRTOS\Source/queue.c **** 			{
1369:..\FreeRTOS\Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1370:..\FreeRTOS\Source/queue.c **** 				return errQUEUE_EMPTY;
1371:..\FreeRTOS\Source/queue.c **** 			}
1372:..\FreeRTOS\Source/queue.c **** 			else
1373:..\FreeRTOS\Source/queue.c **** 			{
1374:..\FreeRTOS\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1375:..\FreeRTOS\Source/queue.c **** 			}
1376:..\FreeRTOS\Source/queue.c **** 		}
1377:..\FreeRTOS\Source/queue.c **** 	}
1378:..\FreeRTOS\Source/queue.c **** }
1379:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
1380:..\FreeRTOS\Source/queue.c **** 
1381:..\FreeRTOS\Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1382:..\FreeRTOS\Source/queue.c **** {
1383:..\FreeRTOS\Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1384:..\FreeRTOS\Source/queue.c **** TimeOut_t xTimeOut;
1385:..\FreeRTOS\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1386:..\FreeRTOS\Source/queue.c **** 
1387:..\FreeRTOS\Source/queue.c **** #if( configUSE_MUTEXES == 1 )
1388:..\FreeRTOS\Source/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1389:..\FreeRTOS\Source/queue.c **** #endif
1390:..\FreeRTOS\Source/queue.c **** 
1391:..\FreeRTOS\Source/queue.c **** 	/* Check the queue pointer is not NULL. */
1392:..\FreeRTOS\Source/queue.c **** 	configASSERT( ( pxQueue ) );
1393:..\FreeRTOS\Source/queue.c **** 
1394:..\FreeRTOS\Source/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1395:..\FreeRTOS\Source/queue.c **** 	0. */
1396:..\FreeRTOS\Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1397:..\FreeRTOS\Source/queue.c **** 
1398:..\FreeRTOS\Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1399:..\FreeRTOS\Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 26


1400:..\FreeRTOS\Source/queue.c **** 	{
1401:..\FreeRTOS\Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1402:..\FreeRTOS\Source/queue.c **** 	}
1403:..\FreeRTOS\Source/queue.c **** 	#endif
1404:..\FreeRTOS\Source/queue.c **** 
1405:..\FreeRTOS\Source/queue.c **** 
1406:..\FreeRTOS\Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1407:..\FreeRTOS\Source/queue.c **** 	statements within the function itself.  This is done in the interest
1408:..\FreeRTOS\Source/queue.c **** 	of execution time efficiency. */
1409:..\FreeRTOS\Source/queue.c **** 
1410:..\FreeRTOS\Source/queue.c **** 	for( ;; )
1411:..\FreeRTOS\Source/queue.c **** 	{
1412:..\FreeRTOS\Source/queue.c **** 		taskENTER_CRITICAL();
1413:..\FreeRTOS\Source/queue.c **** 		{
1414:..\FreeRTOS\Source/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1415:..\FreeRTOS\Source/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1416:..\FreeRTOS\Source/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1417:..\FreeRTOS\Source/queue.c **** 
1418:..\FreeRTOS\Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1419:..\FreeRTOS\Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1420:..\FreeRTOS\Source/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1421:..\FreeRTOS\Source/queue.c **** 			{
1422:..\FreeRTOS\Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1423:..\FreeRTOS\Source/queue.c **** 
1424:..\FreeRTOS\Source/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1425:..\FreeRTOS\Source/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1426:..\FreeRTOS\Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1427:..\FreeRTOS\Source/queue.c **** 
1428:..\FreeRTOS\Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1429:..\FreeRTOS\Source/queue.c **** 				{
1430:..\FreeRTOS\Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1431:..\FreeRTOS\Source/queue.c **** 					{
1432:..\FreeRTOS\Source/queue.c **** 						/* Record the information required to implement
1433:..\FreeRTOS\Source/queue.c **** 						priority inheritance should it become necessary. */
1434:..\FreeRTOS\Source/queue.c **** 						pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is n
1435:..\FreeRTOS\Source/queue.c **** 					}
1436:..\FreeRTOS\Source/queue.c **** 					else
1437:..\FreeRTOS\Source/queue.c **** 					{
1438:..\FreeRTOS\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1439:..\FreeRTOS\Source/queue.c **** 					}
1440:..\FreeRTOS\Source/queue.c **** 				}
1441:..\FreeRTOS\Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1442:..\FreeRTOS\Source/queue.c **** 
1443:..\FreeRTOS\Source/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1444:..\FreeRTOS\Source/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1445:..\FreeRTOS\Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1446:..\FreeRTOS\Source/queue.c **** 				{
1447:..\FreeRTOS\Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1448:..\FreeRTOS\Source/queue.c **** 					{
1449:..\FreeRTOS\Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1450:..\FreeRTOS\Source/queue.c **** 					}
1451:..\FreeRTOS\Source/queue.c **** 					else
1452:..\FreeRTOS\Source/queue.c **** 					{
1453:..\FreeRTOS\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1454:..\FreeRTOS\Source/queue.c **** 					}
1455:..\FreeRTOS\Source/queue.c **** 				}
1456:..\FreeRTOS\Source/queue.c **** 				else
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 27


1457:..\FreeRTOS\Source/queue.c **** 				{
1458:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1459:..\FreeRTOS\Source/queue.c **** 				}
1460:..\FreeRTOS\Source/queue.c **** 
1461:..\FreeRTOS\Source/queue.c **** 				taskEXIT_CRITICAL();
1462:..\FreeRTOS\Source/queue.c **** 				return pdPASS;
1463:..\FreeRTOS\Source/queue.c **** 			}
1464:..\FreeRTOS\Source/queue.c **** 			else
1465:..\FreeRTOS\Source/queue.c **** 			{
1466:..\FreeRTOS\Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1467:..\FreeRTOS\Source/queue.c **** 				{
1468:..\FreeRTOS\Source/queue.c **** 					/* For inheritance to have occurred there must have been an
1469:..\FreeRTOS\Source/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1470:..\FreeRTOS\Source/queue.c **** 					if it were 0 the function would have exited. */
1471:..\FreeRTOS\Source/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1472:..\FreeRTOS\Source/queue.c **** 					{
1473:..\FreeRTOS\Source/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1474:..\FreeRTOS\Source/queue.c **** 					}
1475:..\FreeRTOS\Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1476:..\FreeRTOS\Source/queue.c **** 
1477:..\FreeRTOS\Source/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1478:..\FreeRTOS\Source/queue.c **** 					(or the block time has expired) so exit now. */
1479:..\FreeRTOS\Source/queue.c **** 					taskEXIT_CRITICAL();
1480:..\FreeRTOS\Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1481:..\FreeRTOS\Source/queue.c **** 					return errQUEUE_EMPTY;
1482:..\FreeRTOS\Source/queue.c **** 				}
1483:..\FreeRTOS\Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1484:..\FreeRTOS\Source/queue.c **** 				{
1485:..\FreeRTOS\Source/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1486:..\FreeRTOS\Source/queue.c **** 					so configure the timeout structure ready to block. */
1487:..\FreeRTOS\Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1488:..\FreeRTOS\Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1489:..\FreeRTOS\Source/queue.c **** 				}
1490:..\FreeRTOS\Source/queue.c **** 				else
1491:..\FreeRTOS\Source/queue.c **** 				{
1492:..\FreeRTOS\Source/queue.c **** 					/* Entry time was already set. */
1493:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1494:..\FreeRTOS\Source/queue.c **** 				}
1495:..\FreeRTOS\Source/queue.c **** 			}
1496:..\FreeRTOS\Source/queue.c **** 		}
1497:..\FreeRTOS\Source/queue.c **** 		taskEXIT_CRITICAL();
1498:..\FreeRTOS\Source/queue.c **** 
1499:..\FreeRTOS\Source/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1500:..\FreeRTOS\Source/queue.c **** 		now the critical section has been exited. */
1501:..\FreeRTOS\Source/queue.c **** 
1502:..\FreeRTOS\Source/queue.c **** 		vTaskSuspendAll();
1503:..\FreeRTOS\Source/queue.c **** 		prvLockQueue( pxQueue );
1504:..\FreeRTOS\Source/queue.c **** 
1505:..\FreeRTOS\Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1506:..\FreeRTOS\Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1507:..\FreeRTOS\Source/queue.c **** 		{
1508:..\FreeRTOS\Source/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1509:..\FreeRTOS\Source/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1510:..\FreeRTOS\Source/queue.c **** 			become available.  As semaphores are implemented with queues the
1511:..\FreeRTOS\Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1512:..\FreeRTOS\Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1513:..\FreeRTOS\Source/queue.c **** 			{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 28


1514:..\FreeRTOS\Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1515:..\FreeRTOS\Source/queue.c **** 
1516:..\FreeRTOS\Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1517:..\FreeRTOS\Source/queue.c **** 				{
1518:..\FreeRTOS\Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1519:..\FreeRTOS\Source/queue.c **** 					{
1520:..\FreeRTOS\Source/queue.c **** 						taskENTER_CRITICAL();
1521:..\FreeRTOS\Source/queue.c **** 						{
1522:..\FreeRTOS\Source/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1523:..\FreeRTOS\Source/queue.c **** 						}
1524:..\FreeRTOS\Source/queue.c **** 						taskEXIT_CRITICAL();
1525:..\FreeRTOS\Source/queue.c **** 					}
1526:..\FreeRTOS\Source/queue.c **** 					else
1527:..\FreeRTOS\Source/queue.c **** 					{
1528:..\FreeRTOS\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1529:..\FreeRTOS\Source/queue.c **** 					}
1530:..\FreeRTOS\Source/queue.c **** 				}
1531:..\FreeRTOS\Source/queue.c **** 				#endif
1532:..\FreeRTOS\Source/queue.c **** 
1533:..\FreeRTOS\Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1534:..\FreeRTOS\Source/queue.c **** 				prvUnlockQueue( pxQueue );
1535:..\FreeRTOS\Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1536:..\FreeRTOS\Source/queue.c **** 				{
1537:..\FreeRTOS\Source/queue.c **** 					portYIELD_WITHIN_API();
1538:..\FreeRTOS\Source/queue.c **** 				}
1539:..\FreeRTOS\Source/queue.c **** 				else
1540:..\FreeRTOS\Source/queue.c **** 				{
1541:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1542:..\FreeRTOS\Source/queue.c **** 				}
1543:..\FreeRTOS\Source/queue.c **** 			}
1544:..\FreeRTOS\Source/queue.c **** 			else
1545:..\FreeRTOS\Source/queue.c **** 			{
1546:..\FreeRTOS\Source/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1547:..\FreeRTOS\Source/queue.c **** 				attempt to take the semaphore again. */
1548:..\FreeRTOS\Source/queue.c **** 				prvUnlockQueue( pxQueue );
1549:..\FreeRTOS\Source/queue.c **** 				( void ) xTaskResumeAll();
1550:..\FreeRTOS\Source/queue.c **** 			}
1551:..\FreeRTOS\Source/queue.c **** 		}
1552:..\FreeRTOS\Source/queue.c **** 		else
1553:..\FreeRTOS\Source/queue.c **** 		{
1554:..\FreeRTOS\Source/queue.c **** 			/* Timed out. */
1555:..\FreeRTOS\Source/queue.c **** 			prvUnlockQueue( pxQueue );
1556:..\FreeRTOS\Source/queue.c **** 			( void ) xTaskResumeAll();
1557:..\FreeRTOS\Source/queue.c **** 
1558:..\FreeRTOS\Source/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1559:..\FreeRTOS\Source/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1560:..\FreeRTOS\Source/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1561:..\FreeRTOS\Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1562:..\FreeRTOS\Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1563:..\FreeRTOS\Source/queue.c **** 			{
1564:..\FreeRTOS\Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1565:..\FreeRTOS\Source/queue.c **** 				{
1566:..\FreeRTOS\Source/queue.c **** 					/* xInheritanceOccurred could only have be set if
1567:..\FreeRTOS\Source/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1568:..\FreeRTOS\Source/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1569:..\FreeRTOS\Source/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
1570:..\FreeRTOS\Source/queue.c **** 					{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 29


1571:..\FreeRTOS\Source/queue.c **** 						taskENTER_CRITICAL();
1572:..\FreeRTOS\Source/queue.c **** 						{
1573:..\FreeRTOS\Source/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1574:..\FreeRTOS\Source/queue.c **** 
1575:..\FreeRTOS\Source/queue.c **** 							/* This task blocking on the mutex caused another
1576:..\FreeRTOS\Source/queue.c **** 							task to inherit this task's priority.  Now this task
1577:..\FreeRTOS\Source/queue.c **** 							has timed out the priority should be disinherited
1578:..\FreeRTOS\Source/queue.c **** 							again, but only as low as the next highest priority
1579:..\FreeRTOS\Source/queue.c **** 							task that is waiting for the same mutex. */
1580:..\FreeRTOS\Source/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1581:..\FreeRTOS\Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
1582:..\FreeRTOS\Source/queue.c **** 						}
1583:..\FreeRTOS\Source/queue.c **** 						taskEXIT_CRITICAL();
1584:..\FreeRTOS\Source/queue.c **** 					}
1585:..\FreeRTOS\Source/queue.c **** 				}
1586:..\FreeRTOS\Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1587:..\FreeRTOS\Source/queue.c **** 
1588:..\FreeRTOS\Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1589:..\FreeRTOS\Source/queue.c **** 				return errQUEUE_EMPTY;
1590:..\FreeRTOS\Source/queue.c **** 			}
1591:..\FreeRTOS\Source/queue.c **** 			else
1592:..\FreeRTOS\Source/queue.c **** 			{
1593:..\FreeRTOS\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1594:..\FreeRTOS\Source/queue.c **** 			}
1595:..\FreeRTOS\Source/queue.c **** 		}
1596:..\FreeRTOS\Source/queue.c **** 	}
1597:..\FreeRTOS\Source/queue.c **** }
1598:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
1599:..\FreeRTOS\Source/queue.c **** 
1600:..\FreeRTOS\Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1601:..\FreeRTOS\Source/queue.c **** {
1602:..\FreeRTOS\Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1603:..\FreeRTOS\Source/queue.c **** TimeOut_t xTimeOut;
1604:..\FreeRTOS\Source/queue.c **** int8_t *pcOriginalReadPosition;
1605:..\FreeRTOS\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1606:..\FreeRTOS\Source/queue.c **** 
1607:..\FreeRTOS\Source/queue.c **** 	/* Check the pointer is not NULL. */
1608:..\FreeRTOS\Source/queue.c **** 	configASSERT( ( pxQueue ) );
1609:..\FreeRTOS\Source/queue.c **** 
1610:..\FreeRTOS\Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1611:..\FreeRTOS\Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1612:..\FreeRTOS\Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1613:..\FreeRTOS\Source/queue.c **** 
1614:..\FreeRTOS\Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1615:..\FreeRTOS\Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1616:..\FreeRTOS\Source/queue.c **** 	{
1617:..\FreeRTOS\Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1618:..\FreeRTOS\Source/queue.c **** 	}
1619:..\FreeRTOS\Source/queue.c **** 	#endif
1620:..\FreeRTOS\Source/queue.c **** 
1621:..\FreeRTOS\Source/queue.c **** 
1622:..\FreeRTOS\Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1623:..\FreeRTOS\Source/queue.c **** 	statements within the function itself.  This is done in the interest
1624:..\FreeRTOS\Source/queue.c **** 	of execution time efficiency. */
1625:..\FreeRTOS\Source/queue.c **** 
1626:..\FreeRTOS\Source/queue.c **** 	for( ;; )
1627:..\FreeRTOS\Source/queue.c **** 	{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 30


1628:..\FreeRTOS\Source/queue.c **** 		taskENTER_CRITICAL();
1629:..\FreeRTOS\Source/queue.c **** 		{
1630:..\FreeRTOS\Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1631:..\FreeRTOS\Source/queue.c **** 
1632:..\FreeRTOS\Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1633:..\FreeRTOS\Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1634:..\FreeRTOS\Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1635:..\FreeRTOS\Source/queue.c **** 			{
1636:..\FreeRTOS\Source/queue.c **** 				/* Remember the read position so it can be reset after the data
1637:..\FreeRTOS\Source/queue.c **** 				is read from the queue as this function is only peeking the
1638:..\FreeRTOS\Source/queue.c **** 				data, not removing it. */
1639:..\FreeRTOS\Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1640:..\FreeRTOS\Source/queue.c **** 
1641:..\FreeRTOS\Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1642:..\FreeRTOS\Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1643:..\FreeRTOS\Source/queue.c **** 
1644:..\FreeRTOS\Source/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1645:..\FreeRTOS\Source/queue.c **** 				pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1646:..\FreeRTOS\Source/queue.c **** 
1647:..\FreeRTOS\Source/queue.c **** 				/* The data is being left in the queue, so see if there are
1648:..\FreeRTOS\Source/queue.c **** 				any other tasks waiting for the data. */
1649:..\FreeRTOS\Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1650:..\FreeRTOS\Source/queue.c **** 				{
1651:..\FreeRTOS\Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1652:..\FreeRTOS\Source/queue.c **** 					{
1653:..\FreeRTOS\Source/queue.c **** 						/* The task waiting has a higher priority than this task. */
1654:..\FreeRTOS\Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1655:..\FreeRTOS\Source/queue.c **** 					}
1656:..\FreeRTOS\Source/queue.c **** 					else
1657:..\FreeRTOS\Source/queue.c **** 					{
1658:..\FreeRTOS\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1659:..\FreeRTOS\Source/queue.c **** 					}
1660:..\FreeRTOS\Source/queue.c **** 				}
1661:..\FreeRTOS\Source/queue.c **** 				else
1662:..\FreeRTOS\Source/queue.c **** 				{
1663:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1664:..\FreeRTOS\Source/queue.c **** 				}
1665:..\FreeRTOS\Source/queue.c **** 
1666:..\FreeRTOS\Source/queue.c **** 				taskEXIT_CRITICAL();
1667:..\FreeRTOS\Source/queue.c **** 				return pdPASS;
1668:..\FreeRTOS\Source/queue.c **** 			}
1669:..\FreeRTOS\Source/queue.c **** 			else
1670:..\FreeRTOS\Source/queue.c **** 			{
1671:..\FreeRTOS\Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1672:..\FreeRTOS\Source/queue.c **** 				{
1673:..\FreeRTOS\Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1674:..\FreeRTOS\Source/queue.c **** 					the block time has expired) so leave now. */
1675:..\FreeRTOS\Source/queue.c **** 					taskEXIT_CRITICAL();
1676:..\FreeRTOS\Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1677:..\FreeRTOS\Source/queue.c **** 					return errQUEUE_EMPTY;
1678:..\FreeRTOS\Source/queue.c **** 				}
1679:..\FreeRTOS\Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1680:..\FreeRTOS\Source/queue.c **** 				{
1681:..\FreeRTOS\Source/queue.c **** 					/* The queue was empty and a block time was specified so
1682:..\FreeRTOS\Source/queue.c **** 					configure the timeout structure ready to enter the blocked
1683:..\FreeRTOS\Source/queue.c **** 					state. */
1684:..\FreeRTOS\Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 31


1685:..\FreeRTOS\Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1686:..\FreeRTOS\Source/queue.c **** 				}
1687:..\FreeRTOS\Source/queue.c **** 				else
1688:..\FreeRTOS\Source/queue.c **** 				{
1689:..\FreeRTOS\Source/queue.c **** 					/* Entry time was already set. */
1690:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1691:..\FreeRTOS\Source/queue.c **** 				}
1692:..\FreeRTOS\Source/queue.c **** 			}
1693:..\FreeRTOS\Source/queue.c **** 		}
1694:..\FreeRTOS\Source/queue.c **** 		taskEXIT_CRITICAL();
1695:..\FreeRTOS\Source/queue.c **** 
1696:..\FreeRTOS\Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1697:..\FreeRTOS\Source/queue.c **** 		now the critical section has been exited. */
1698:..\FreeRTOS\Source/queue.c **** 
1699:..\FreeRTOS\Source/queue.c **** 		vTaskSuspendAll();
1700:..\FreeRTOS\Source/queue.c **** 		prvLockQueue( pxQueue );
1701:..\FreeRTOS\Source/queue.c **** 
1702:..\FreeRTOS\Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1703:..\FreeRTOS\Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1704:..\FreeRTOS\Source/queue.c **** 		{
1705:..\FreeRTOS\Source/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1706:..\FreeRTOS\Source/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1707:..\FreeRTOS\Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1708:..\FreeRTOS\Source/queue.c **** 			{
1709:..\FreeRTOS\Source/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1710:..\FreeRTOS\Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1711:..\FreeRTOS\Source/queue.c **** 				prvUnlockQueue( pxQueue );
1712:..\FreeRTOS\Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1713:..\FreeRTOS\Source/queue.c **** 				{
1714:..\FreeRTOS\Source/queue.c **** 					portYIELD_WITHIN_API();
1715:..\FreeRTOS\Source/queue.c **** 				}
1716:..\FreeRTOS\Source/queue.c **** 				else
1717:..\FreeRTOS\Source/queue.c **** 				{
1718:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1719:..\FreeRTOS\Source/queue.c **** 				}
1720:..\FreeRTOS\Source/queue.c **** 			}
1721:..\FreeRTOS\Source/queue.c **** 			else
1722:..\FreeRTOS\Source/queue.c **** 			{
1723:..\FreeRTOS\Source/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1724:..\FreeRTOS\Source/queue.c **** 				state, instead return to try and obtain the data. */
1725:..\FreeRTOS\Source/queue.c **** 				prvUnlockQueue( pxQueue );
1726:..\FreeRTOS\Source/queue.c **** 				( void ) xTaskResumeAll();
1727:..\FreeRTOS\Source/queue.c **** 			}
1728:..\FreeRTOS\Source/queue.c **** 		}
1729:..\FreeRTOS\Source/queue.c **** 		else
1730:..\FreeRTOS\Source/queue.c **** 		{
1731:..\FreeRTOS\Source/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1732:..\FreeRTOS\Source/queue.c **** 			exit, otherwise go back and try to read the data again. */
1733:..\FreeRTOS\Source/queue.c **** 			prvUnlockQueue( pxQueue );
1734:..\FreeRTOS\Source/queue.c **** 			( void ) xTaskResumeAll();
1735:..\FreeRTOS\Source/queue.c **** 
1736:..\FreeRTOS\Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1737:..\FreeRTOS\Source/queue.c **** 			{
1738:..\FreeRTOS\Source/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1739:..\FreeRTOS\Source/queue.c **** 				return errQUEUE_EMPTY;
1740:..\FreeRTOS\Source/queue.c **** 			}
1741:..\FreeRTOS\Source/queue.c **** 			else
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 32


1742:..\FreeRTOS\Source/queue.c **** 			{
1743:..\FreeRTOS\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1744:..\FreeRTOS\Source/queue.c **** 			}
1745:..\FreeRTOS\Source/queue.c **** 		}
1746:..\FreeRTOS\Source/queue.c **** 	}
1747:..\FreeRTOS\Source/queue.c **** }
1748:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
1749:..\FreeRTOS\Source/queue.c **** 
1750:..\FreeRTOS\Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1751:..\FreeRTOS\Source/queue.c **** {
1752:..\FreeRTOS\Source/queue.c **** BaseType_t xReturn;
1753:..\FreeRTOS\Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1754:..\FreeRTOS\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1755:..\FreeRTOS\Source/queue.c **** 
1756:..\FreeRTOS\Source/queue.c **** 	configASSERT( pxQueue );
1757:..\FreeRTOS\Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1758:..\FreeRTOS\Source/queue.c **** 
1759:..\FreeRTOS\Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1760:..\FreeRTOS\Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1761:..\FreeRTOS\Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1762:..\FreeRTOS\Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1763:..\FreeRTOS\Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1764:..\FreeRTOS\Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1765:..\FreeRTOS\Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1766:..\FreeRTOS\Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1767:..\FreeRTOS\Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1768:..\FreeRTOS\Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1769:..\FreeRTOS\Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1770:..\FreeRTOS\Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1771:..\FreeRTOS\Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1772:..\FreeRTOS\Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1773:..\FreeRTOS\Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1774:..\FreeRTOS\Source/queue.c **** 
1775:..\FreeRTOS\Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1776:..\FreeRTOS\Source/queue.c **** 	{
1777:..\FreeRTOS\Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1778:..\FreeRTOS\Source/queue.c **** 
1779:..\FreeRTOS\Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1780:..\FreeRTOS\Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1781:..\FreeRTOS\Source/queue.c **** 		{
1782:..\FreeRTOS\Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1783:..\FreeRTOS\Source/queue.c **** 
1784:..\FreeRTOS\Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1785:..\FreeRTOS\Source/queue.c **** 
1786:..\FreeRTOS\Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1787:..\FreeRTOS\Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1788:..\FreeRTOS\Source/queue.c **** 
1789:..\FreeRTOS\Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1790:..\FreeRTOS\Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1791:..\FreeRTOS\Source/queue.c **** 			will know that an ISR has removed data while the queue was
1792:..\FreeRTOS\Source/queue.c **** 			locked. */
1793:..\FreeRTOS\Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1794:..\FreeRTOS\Source/queue.c **** 			{
1795:..\FreeRTOS\Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1796:..\FreeRTOS\Source/queue.c **** 				{
1797:..\FreeRTOS\Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1798:..\FreeRTOS\Source/queue.c **** 					{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 33


1799:..\FreeRTOS\Source/queue.c **** 						/* The task waiting has a higher priority than us so
1800:..\FreeRTOS\Source/queue.c **** 						force a context switch. */
1801:..\FreeRTOS\Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1802:..\FreeRTOS\Source/queue.c **** 						{
1803:..\FreeRTOS\Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1804:..\FreeRTOS\Source/queue.c **** 						}
1805:..\FreeRTOS\Source/queue.c **** 						else
1806:..\FreeRTOS\Source/queue.c **** 						{
1807:..\FreeRTOS\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1808:..\FreeRTOS\Source/queue.c **** 						}
1809:..\FreeRTOS\Source/queue.c **** 					}
1810:..\FreeRTOS\Source/queue.c **** 					else
1811:..\FreeRTOS\Source/queue.c **** 					{
1812:..\FreeRTOS\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1813:..\FreeRTOS\Source/queue.c **** 					}
1814:..\FreeRTOS\Source/queue.c **** 				}
1815:..\FreeRTOS\Source/queue.c **** 				else
1816:..\FreeRTOS\Source/queue.c **** 				{
1817:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1818:..\FreeRTOS\Source/queue.c **** 				}
1819:..\FreeRTOS\Source/queue.c **** 			}
1820:..\FreeRTOS\Source/queue.c **** 			else
1821:..\FreeRTOS\Source/queue.c **** 			{
1822:..\FreeRTOS\Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1823:..\FreeRTOS\Source/queue.c **** 				knows that data was removed while it was locked. */
1824:..\FreeRTOS\Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1825:..\FreeRTOS\Source/queue.c **** 			}
1826:..\FreeRTOS\Source/queue.c **** 
1827:..\FreeRTOS\Source/queue.c **** 			xReturn = pdPASS;
1828:..\FreeRTOS\Source/queue.c **** 		}
1829:..\FreeRTOS\Source/queue.c **** 		else
1830:..\FreeRTOS\Source/queue.c **** 		{
1831:..\FreeRTOS\Source/queue.c **** 			xReturn = pdFAIL;
1832:..\FreeRTOS\Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1833:..\FreeRTOS\Source/queue.c **** 		}
1834:..\FreeRTOS\Source/queue.c **** 	}
1835:..\FreeRTOS\Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1836:..\FreeRTOS\Source/queue.c **** 
1837:..\FreeRTOS\Source/queue.c **** 	return xReturn;
1838:..\FreeRTOS\Source/queue.c **** }
1839:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
1840:..\FreeRTOS\Source/queue.c **** 
1841:..\FreeRTOS\Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1842:..\FreeRTOS\Source/queue.c **** {
1843:..\FreeRTOS\Source/queue.c **** BaseType_t xReturn;
1844:..\FreeRTOS\Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1845:..\FreeRTOS\Source/queue.c **** int8_t *pcOriginalReadPosition;
1846:..\FreeRTOS\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1847:..\FreeRTOS\Source/queue.c **** 
1848:..\FreeRTOS\Source/queue.c **** 	configASSERT( pxQueue );
1849:..\FreeRTOS\Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1850:..\FreeRTOS\Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1851:..\FreeRTOS\Source/queue.c **** 
1852:..\FreeRTOS\Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1853:..\FreeRTOS\Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1854:..\FreeRTOS\Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1855:..\FreeRTOS\Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 34


1856:..\FreeRTOS\Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1857:..\FreeRTOS\Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1858:..\FreeRTOS\Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1859:..\FreeRTOS\Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1860:..\FreeRTOS\Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1861:..\FreeRTOS\Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1862:..\FreeRTOS\Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1863:..\FreeRTOS\Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1864:..\FreeRTOS\Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1865:..\FreeRTOS\Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1866:..\FreeRTOS\Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1867:..\FreeRTOS\Source/queue.c **** 
1868:..\FreeRTOS\Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1869:..\FreeRTOS\Source/queue.c **** 	{
1870:..\FreeRTOS\Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1871:..\FreeRTOS\Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1872:..\FreeRTOS\Source/queue.c **** 		{
1873:..\FreeRTOS\Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1874:..\FreeRTOS\Source/queue.c **** 
1875:..\FreeRTOS\Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1876:..\FreeRTOS\Source/queue.c **** 			actually being removed from the queue. */
1877:..\FreeRTOS\Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1878:..\FreeRTOS\Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1879:..\FreeRTOS\Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1880:..\FreeRTOS\Source/queue.c **** 
1881:..\FreeRTOS\Source/queue.c **** 			xReturn = pdPASS;
1882:..\FreeRTOS\Source/queue.c **** 		}
1883:..\FreeRTOS\Source/queue.c **** 		else
1884:..\FreeRTOS\Source/queue.c **** 		{
1885:..\FreeRTOS\Source/queue.c **** 			xReturn = pdFAIL;
1886:..\FreeRTOS\Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1887:..\FreeRTOS\Source/queue.c **** 		}
1888:..\FreeRTOS\Source/queue.c **** 	}
1889:..\FreeRTOS\Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1890:..\FreeRTOS\Source/queue.c **** 
1891:..\FreeRTOS\Source/queue.c **** 	return xReturn;
1892:..\FreeRTOS\Source/queue.c **** }
1893:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
1894:..\FreeRTOS\Source/queue.c **** 
1895:..\FreeRTOS\Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1896:..\FreeRTOS\Source/queue.c **** {
1897:..\FreeRTOS\Source/queue.c **** UBaseType_t uxReturn;
1898:..\FreeRTOS\Source/queue.c **** 
1899:..\FreeRTOS\Source/queue.c **** 	configASSERT( xQueue );
1900:..\FreeRTOS\Source/queue.c **** 
1901:..\FreeRTOS\Source/queue.c **** 	taskENTER_CRITICAL();
1902:..\FreeRTOS\Source/queue.c **** 	{
1903:..\FreeRTOS\Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1904:..\FreeRTOS\Source/queue.c **** 	}
1905:..\FreeRTOS\Source/queue.c **** 	taskEXIT_CRITICAL();
1906:..\FreeRTOS\Source/queue.c **** 
1907:..\FreeRTOS\Source/queue.c **** 	return uxReturn;
1908:..\FreeRTOS\Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1909:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
1910:..\FreeRTOS\Source/queue.c **** 
1911:..\FreeRTOS\Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1912:..\FreeRTOS\Source/queue.c **** {
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 35


1913:..\FreeRTOS\Source/queue.c **** UBaseType_t uxReturn;
1914:..\FreeRTOS\Source/queue.c **** Queue_t *pxQueue;
1915:..\FreeRTOS\Source/queue.c **** 
1916:..\FreeRTOS\Source/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
1917:..\FreeRTOS\Source/queue.c **** 	configASSERT( pxQueue );
1918:..\FreeRTOS\Source/queue.c **** 
1919:..\FreeRTOS\Source/queue.c **** 	taskENTER_CRITICAL();
1920:..\FreeRTOS\Source/queue.c **** 	{
1921:..\FreeRTOS\Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1922:..\FreeRTOS\Source/queue.c **** 	}
1923:..\FreeRTOS\Source/queue.c **** 	taskEXIT_CRITICAL();
1924:..\FreeRTOS\Source/queue.c **** 
1925:..\FreeRTOS\Source/queue.c **** 	return uxReturn;
1926:..\FreeRTOS\Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1927:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
1928:..\FreeRTOS\Source/queue.c **** 
1929:..\FreeRTOS\Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1930:..\FreeRTOS\Source/queue.c **** {
1931:..\FreeRTOS\Source/queue.c **** UBaseType_t uxReturn;
1932:..\FreeRTOS\Source/queue.c **** 
1933:..\FreeRTOS\Source/queue.c **** 	configASSERT( xQueue );
1934:..\FreeRTOS\Source/queue.c **** 
1935:..\FreeRTOS\Source/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1936:..\FreeRTOS\Source/queue.c **** 
1937:..\FreeRTOS\Source/queue.c **** 	return uxReturn;
1938:..\FreeRTOS\Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1939:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
1940:..\FreeRTOS\Source/queue.c **** 
1941:..\FreeRTOS\Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1942:..\FreeRTOS\Source/queue.c **** {
1943:..\FreeRTOS\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1944:..\FreeRTOS\Source/queue.c **** 
1945:..\FreeRTOS\Source/queue.c **** 	configASSERT( pxQueue );
1946:..\FreeRTOS\Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1947:..\FreeRTOS\Source/queue.c **** 
1948:..\FreeRTOS\Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1949:..\FreeRTOS\Source/queue.c **** 	{
1950:..\FreeRTOS\Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1951:..\FreeRTOS\Source/queue.c **** 	}
1952:..\FreeRTOS\Source/queue.c **** 	#endif
1953:..\FreeRTOS\Source/queue.c **** 
1954:..\FreeRTOS\Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1955:..\FreeRTOS\Source/queue.c **** 	{
1956:..\FreeRTOS\Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1957:..\FreeRTOS\Source/queue.c **** 		again. */
1958:..\FreeRTOS\Source/queue.c **** 		vPortFree( pxQueue );
1959:..\FreeRTOS\Source/queue.c **** 	}
1960:..\FreeRTOS\Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1961:..\FreeRTOS\Source/queue.c **** 	{
1962:..\FreeRTOS\Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1963:..\FreeRTOS\Source/queue.c **** 		check before attempting to free the memory. */
1964:..\FreeRTOS\Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1965:..\FreeRTOS\Source/queue.c **** 		{
1966:..\FreeRTOS\Source/queue.c **** 			vPortFree( pxQueue );
1967:..\FreeRTOS\Source/queue.c **** 		}
1968:..\FreeRTOS\Source/queue.c **** 		else
1969:..\FreeRTOS\Source/queue.c **** 		{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 36


1970:..\FreeRTOS\Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1971:..\FreeRTOS\Source/queue.c **** 		}
1972:..\FreeRTOS\Source/queue.c **** 	}
1973:..\FreeRTOS\Source/queue.c **** 	#else
1974:..\FreeRTOS\Source/queue.c **** 	{
1975:..\FreeRTOS\Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1976:..\FreeRTOS\Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1977:..\FreeRTOS\Source/queue.c **** 		( void ) pxQueue;
1978:..\FreeRTOS\Source/queue.c **** 	}
1979:..\FreeRTOS\Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1980:..\FreeRTOS\Source/queue.c **** }
1981:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
1982:..\FreeRTOS\Source/queue.c **** 
1983:..\FreeRTOS\Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1984:..\FreeRTOS\Source/queue.c **** 
1985:..\FreeRTOS\Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1986:..\FreeRTOS\Source/queue.c **** 	{
1987:..\FreeRTOS\Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1988:..\FreeRTOS\Source/queue.c **** 	}
1989:..\FreeRTOS\Source/queue.c **** 
1990:..\FreeRTOS\Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1991:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
1992:..\FreeRTOS\Source/queue.c **** 
1993:..\FreeRTOS\Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1994:..\FreeRTOS\Source/queue.c **** 
1995:..\FreeRTOS\Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1996:..\FreeRTOS\Source/queue.c **** 	{
1997:..\FreeRTOS\Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1998:..\FreeRTOS\Source/queue.c **** 	}
1999:..\FreeRTOS\Source/queue.c **** 
2000:..\FreeRTOS\Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2001:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
2002:..\FreeRTOS\Source/queue.c **** 
2003:..\FreeRTOS\Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2004:..\FreeRTOS\Source/queue.c **** 
2005:..\FreeRTOS\Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2006:..\FreeRTOS\Source/queue.c **** 	{
2007:..\FreeRTOS\Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2008:..\FreeRTOS\Source/queue.c **** 	}
2009:..\FreeRTOS\Source/queue.c **** 
2010:..\FreeRTOS\Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2011:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
2012:..\FreeRTOS\Source/queue.c **** 
2013:..\FreeRTOS\Source/queue.c **** #if( configUSE_MUTEXES == 1 )
2014:..\FreeRTOS\Source/queue.c **** 
2015:..\FreeRTOS\Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2016:..\FreeRTOS\Source/queue.c **** 	{
  27              		.loc 1 2016 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2017:..\FreeRTOS\Source/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2018:..\FreeRTOS\Source/queue.c **** 
2019:..\FreeRTOS\Source/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2020:..\FreeRTOS\Source/queue.c **** 		priority, but the waiting task times out, then the holder should
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 37


2021:..\FreeRTOS\Source/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2022:..\FreeRTOS\Source/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2023:..\FreeRTOS\Source/queue.c **** 		return the priority of the highest priority task that is waiting for the
2024:..\FreeRTOS\Source/queue.c **** 		mutex. */
2025:..\FreeRTOS\Source/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0 )
  33              		.loc 1 2025 0
  34 0000 436A     		ldr	r3, [r0, #36]
  35 0002 23B1     		cbz	r3, .L3
2026:..\FreeRTOS\Source/queue.c **** 		{
2027:..\FreeRTOS\Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = configMAX_PRIORITIES - listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( px
  36              		.loc 1 2027 0
  37 0004 036B     		ldr	r3, [r0, #48]
  38 0006 1868     		ldr	r0, [r3]
  39              	.LVL1:
  40 0008 C0F10500 		rsb	r0, r0, #5
  41              	.LVL2:
  42 000c 7047     		bx	lr
  43              	.LVL3:
  44              	.L3:
2028:..\FreeRTOS\Source/queue.c **** 		}
2029:..\FreeRTOS\Source/queue.c **** 		else
2030:..\FreeRTOS\Source/queue.c **** 		{
2031:..\FreeRTOS\Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
  45              		.loc 1 2031 0
  46 000e 0020     		movs	r0, #0
  47              	.LVL4:
2032:..\FreeRTOS\Source/queue.c **** 		}
2033:..\FreeRTOS\Source/queue.c **** 
2034:..\FreeRTOS\Source/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
2035:..\FreeRTOS\Source/queue.c **** 	}
  48              		.loc 1 2035 0
  49 0010 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE91:
  52              		.size	prvGetDisinheritPriorityAfterTimeout, .-prvGetDisinheritPriorityAfterTimeout
  53 0012 00BF     		.section	.text.prvIsQueueFull,"ax",%progbits
  54              		.align	2
  55              		.thumb
  56              		.thumb_func
  57              		.type	prvIsQueueFull, %function
  58              	prvIsQueueFull:
  59              	.LFB97:
2036:..\FreeRTOS\Source/queue.c **** 
2037:..\FreeRTOS\Source/queue.c **** #endif /* configUSE_MUTEXES */
2038:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
2039:..\FreeRTOS\Source/queue.c **** 
2040:..\FreeRTOS\Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2041:..\FreeRTOS\Source/queue.c **** {
2042:..\FreeRTOS\Source/queue.c **** BaseType_t xReturn = pdFALSE;
2043:..\FreeRTOS\Source/queue.c **** UBaseType_t uxMessagesWaiting;
2044:..\FreeRTOS\Source/queue.c **** 
2045:..\FreeRTOS\Source/queue.c **** 	/* This function is called from a critical section. */
2046:..\FreeRTOS\Source/queue.c **** 
2047:..\FreeRTOS\Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2048:..\FreeRTOS\Source/queue.c **** 
2049:..\FreeRTOS\Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2050:..\FreeRTOS\Source/queue.c **** 	{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 38


2051:..\FreeRTOS\Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2052:..\FreeRTOS\Source/queue.c **** 		{
2053:..\FreeRTOS\Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2054:..\FreeRTOS\Source/queue.c **** 			{
2055:..\FreeRTOS\Source/queue.c **** 				/* The mutex is no longer being held. */
2056:..\FreeRTOS\Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
2057:..\FreeRTOS\Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
2058:..\FreeRTOS\Source/queue.c **** 			}
2059:..\FreeRTOS\Source/queue.c **** 			else
2060:..\FreeRTOS\Source/queue.c **** 			{
2061:..\FreeRTOS\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2062:..\FreeRTOS\Source/queue.c **** 			}
2063:..\FreeRTOS\Source/queue.c **** 		}
2064:..\FreeRTOS\Source/queue.c **** 		#endif /* configUSE_MUTEXES */
2065:..\FreeRTOS\Source/queue.c **** 	}
2066:..\FreeRTOS\Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2067:..\FreeRTOS\Source/queue.c **** 	{
2068:..\FreeRTOS\Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2069:..\FreeRTOS\Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
2070:..\FreeRTOS\Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
2071:..\FreeRTOS\Source/queue.c **** 		{
2072:..\FreeRTOS\Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2073:..\FreeRTOS\Source/queue.c **** 		}
2074:..\FreeRTOS\Source/queue.c **** 		else
2075:..\FreeRTOS\Source/queue.c **** 		{
2076:..\FreeRTOS\Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2077:..\FreeRTOS\Source/queue.c **** 		}
2078:..\FreeRTOS\Source/queue.c **** 	}
2079:..\FreeRTOS\Source/queue.c **** 	else
2080:..\FreeRTOS\Source/queue.c **** 	{
2081:..\FreeRTOS\Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
2082:..\FreeRTOS\Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
2083:..\FreeRTOS\Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
2084:..\FreeRTOS\Source/queue.c **** 		{
2085:..\FreeRTOS\Source/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
2086:..\FreeRTOS\Source/queue.c **** 		}
2087:..\FreeRTOS\Source/queue.c **** 		else
2088:..\FreeRTOS\Source/queue.c **** 		{
2089:..\FreeRTOS\Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2090:..\FreeRTOS\Source/queue.c **** 		}
2091:..\FreeRTOS\Source/queue.c **** 
2092:..\FreeRTOS\Source/queue.c **** 		if( xPosition == queueOVERWRITE )
2093:..\FreeRTOS\Source/queue.c **** 		{
2094:..\FreeRTOS\Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2095:..\FreeRTOS\Source/queue.c **** 			{
2096:..\FreeRTOS\Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
2097:..\FreeRTOS\Source/queue.c **** 				one from the recorded number of items in the queue so when
2098:..\FreeRTOS\Source/queue.c **** 				one is added again below the number of recorded items remains
2099:..\FreeRTOS\Source/queue.c **** 				correct. */
2100:..\FreeRTOS\Source/queue.c **** 				--uxMessagesWaiting;
2101:..\FreeRTOS\Source/queue.c **** 			}
2102:..\FreeRTOS\Source/queue.c **** 			else
2103:..\FreeRTOS\Source/queue.c **** 			{
2104:..\FreeRTOS\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2105:..\FreeRTOS\Source/queue.c **** 			}
2106:..\FreeRTOS\Source/queue.c **** 		}
2107:..\FreeRTOS\Source/queue.c **** 		else
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 39


2108:..\FreeRTOS\Source/queue.c **** 		{
2109:..\FreeRTOS\Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2110:..\FreeRTOS\Source/queue.c **** 		}
2111:..\FreeRTOS\Source/queue.c **** 	}
2112:..\FreeRTOS\Source/queue.c **** 
2113:..\FreeRTOS\Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2114:..\FreeRTOS\Source/queue.c **** 
2115:..\FreeRTOS\Source/queue.c **** 	return xReturn;
2116:..\FreeRTOS\Source/queue.c **** }
2117:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
2118:..\FreeRTOS\Source/queue.c **** 
2119:..\FreeRTOS\Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2120:..\FreeRTOS\Source/queue.c **** {
2121:..\FreeRTOS\Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2122:..\FreeRTOS\Source/queue.c **** 	{
2123:..\FreeRTOS\Source/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2124:..\FreeRTOS\Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
2125:..\FreeRTOS\Source/queue.c **** 		{
2126:..\FreeRTOS\Source/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
2127:..\FreeRTOS\Source/queue.c **** 		}
2128:..\FreeRTOS\Source/queue.c **** 		else
2129:..\FreeRTOS\Source/queue.c **** 		{
2130:..\FreeRTOS\Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2131:..\FreeRTOS\Source/queue.c **** 		}
2132:..\FreeRTOS\Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
2133:..\FreeRTOS\Source/queue.c **** 	}
2134:..\FreeRTOS\Source/queue.c **** }
2135:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
2136:..\FreeRTOS\Source/queue.c **** 
2137:..\FreeRTOS\Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2138:..\FreeRTOS\Source/queue.c **** {
2139:..\FreeRTOS\Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2140:..\FreeRTOS\Source/queue.c **** 
2141:..\FreeRTOS\Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2142:..\FreeRTOS\Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2143:..\FreeRTOS\Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2144:..\FreeRTOS\Source/queue.c **** 	updated. */
2145:..\FreeRTOS\Source/queue.c **** 	taskENTER_CRITICAL();
2146:..\FreeRTOS\Source/queue.c **** 	{
2147:..\FreeRTOS\Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2148:..\FreeRTOS\Source/queue.c **** 
2149:..\FreeRTOS\Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
2150:..\FreeRTOS\Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2151:..\FreeRTOS\Source/queue.c **** 		{
2152:..\FreeRTOS\Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2153:..\FreeRTOS\Source/queue.c **** 			blocked waiting for data to become available? */
2154:..\FreeRTOS\Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2155:..\FreeRTOS\Source/queue.c **** 			{
2156:..\FreeRTOS\Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2157:..\FreeRTOS\Source/queue.c **** 				{
2158:..\FreeRTOS\Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
2159:..\FreeRTOS\Source/queue.c **** 					{
2160:..\FreeRTOS\Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
2161:..\FreeRTOS\Source/queue.c **** 						the queue set caused a higher priority task to unblock.
2162:..\FreeRTOS\Source/queue.c **** 						A context switch is required. */
2163:..\FreeRTOS\Source/queue.c **** 						vTaskMissedYield();
2164:..\FreeRTOS\Source/queue.c **** 					}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 40


2165:..\FreeRTOS\Source/queue.c **** 					else
2166:..\FreeRTOS\Source/queue.c **** 					{
2167:..\FreeRTOS\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2168:..\FreeRTOS\Source/queue.c **** 					}
2169:..\FreeRTOS\Source/queue.c **** 				}
2170:..\FreeRTOS\Source/queue.c **** 				else
2171:..\FreeRTOS\Source/queue.c **** 				{
2172:..\FreeRTOS\Source/queue.c **** 					/* Tasks that are removed from the event list will get
2173:..\FreeRTOS\Source/queue.c **** 					added to the pending ready list as the scheduler is still
2174:..\FreeRTOS\Source/queue.c **** 					suspended. */
2175:..\FreeRTOS\Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2176:..\FreeRTOS\Source/queue.c **** 					{
2177:..\FreeRTOS\Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2178:..\FreeRTOS\Source/queue.c **** 						{
2179:..\FreeRTOS\Source/queue.c **** 							/* The task waiting has a higher priority so record that a
2180:..\FreeRTOS\Source/queue.c **** 							context	switch is required. */
2181:..\FreeRTOS\Source/queue.c **** 							vTaskMissedYield();
2182:..\FreeRTOS\Source/queue.c **** 						}
2183:..\FreeRTOS\Source/queue.c **** 						else
2184:..\FreeRTOS\Source/queue.c **** 						{
2185:..\FreeRTOS\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2186:..\FreeRTOS\Source/queue.c **** 						}
2187:..\FreeRTOS\Source/queue.c **** 					}
2188:..\FreeRTOS\Source/queue.c **** 					else
2189:..\FreeRTOS\Source/queue.c **** 					{
2190:..\FreeRTOS\Source/queue.c **** 						break;
2191:..\FreeRTOS\Source/queue.c **** 					}
2192:..\FreeRTOS\Source/queue.c **** 				}
2193:..\FreeRTOS\Source/queue.c **** 			}
2194:..\FreeRTOS\Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2195:..\FreeRTOS\Source/queue.c **** 			{
2196:..\FreeRTOS\Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
2197:..\FreeRTOS\Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2198:..\FreeRTOS\Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2199:..\FreeRTOS\Source/queue.c **** 				{
2200:..\FreeRTOS\Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2201:..\FreeRTOS\Source/queue.c **** 					{
2202:..\FreeRTOS\Source/queue.c **** 						/* The task waiting has a higher priority so record that
2203:..\FreeRTOS\Source/queue.c **** 						a context switch is required. */
2204:..\FreeRTOS\Source/queue.c **** 						vTaskMissedYield();
2205:..\FreeRTOS\Source/queue.c **** 					}
2206:..\FreeRTOS\Source/queue.c **** 					else
2207:..\FreeRTOS\Source/queue.c **** 					{
2208:..\FreeRTOS\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2209:..\FreeRTOS\Source/queue.c **** 					}
2210:..\FreeRTOS\Source/queue.c **** 				}
2211:..\FreeRTOS\Source/queue.c **** 				else
2212:..\FreeRTOS\Source/queue.c **** 				{
2213:..\FreeRTOS\Source/queue.c **** 					break;
2214:..\FreeRTOS\Source/queue.c **** 				}
2215:..\FreeRTOS\Source/queue.c **** 			}
2216:..\FreeRTOS\Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2217:..\FreeRTOS\Source/queue.c **** 
2218:..\FreeRTOS\Source/queue.c **** 			--cTxLock;
2219:..\FreeRTOS\Source/queue.c **** 		}
2220:..\FreeRTOS\Source/queue.c **** 
2221:..\FreeRTOS\Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 41


2222:..\FreeRTOS\Source/queue.c **** 	}
2223:..\FreeRTOS\Source/queue.c **** 	taskEXIT_CRITICAL();
2224:..\FreeRTOS\Source/queue.c **** 
2225:..\FreeRTOS\Source/queue.c **** 	/* Do the same for the Rx lock. */
2226:..\FreeRTOS\Source/queue.c **** 	taskENTER_CRITICAL();
2227:..\FreeRTOS\Source/queue.c **** 	{
2228:..\FreeRTOS\Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2229:..\FreeRTOS\Source/queue.c **** 
2230:..\FreeRTOS\Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2231:..\FreeRTOS\Source/queue.c **** 		{
2232:..\FreeRTOS\Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2233:..\FreeRTOS\Source/queue.c **** 			{
2234:..\FreeRTOS\Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2235:..\FreeRTOS\Source/queue.c **** 				{
2236:..\FreeRTOS\Source/queue.c **** 					vTaskMissedYield();
2237:..\FreeRTOS\Source/queue.c **** 				}
2238:..\FreeRTOS\Source/queue.c **** 				else
2239:..\FreeRTOS\Source/queue.c **** 				{
2240:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2241:..\FreeRTOS\Source/queue.c **** 				}
2242:..\FreeRTOS\Source/queue.c **** 
2243:..\FreeRTOS\Source/queue.c **** 				--cRxLock;
2244:..\FreeRTOS\Source/queue.c **** 			}
2245:..\FreeRTOS\Source/queue.c **** 			else
2246:..\FreeRTOS\Source/queue.c **** 			{
2247:..\FreeRTOS\Source/queue.c **** 				break;
2248:..\FreeRTOS\Source/queue.c **** 			}
2249:..\FreeRTOS\Source/queue.c **** 		}
2250:..\FreeRTOS\Source/queue.c **** 
2251:..\FreeRTOS\Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2252:..\FreeRTOS\Source/queue.c **** 	}
2253:..\FreeRTOS\Source/queue.c **** 	taskEXIT_CRITICAL();
2254:..\FreeRTOS\Source/queue.c **** }
2255:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
2256:..\FreeRTOS\Source/queue.c **** 
2257:..\FreeRTOS\Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2258:..\FreeRTOS\Source/queue.c **** {
2259:..\FreeRTOS\Source/queue.c **** BaseType_t xReturn;
2260:..\FreeRTOS\Source/queue.c **** 
2261:..\FreeRTOS\Source/queue.c **** 	taskENTER_CRITICAL();
2262:..\FreeRTOS\Source/queue.c **** 	{
2263:..\FreeRTOS\Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2264:..\FreeRTOS\Source/queue.c **** 		{
2265:..\FreeRTOS\Source/queue.c **** 			xReturn = pdTRUE;
2266:..\FreeRTOS\Source/queue.c **** 		}
2267:..\FreeRTOS\Source/queue.c **** 		else
2268:..\FreeRTOS\Source/queue.c **** 		{
2269:..\FreeRTOS\Source/queue.c **** 			xReturn = pdFALSE;
2270:..\FreeRTOS\Source/queue.c **** 		}
2271:..\FreeRTOS\Source/queue.c **** 	}
2272:..\FreeRTOS\Source/queue.c **** 	taskEXIT_CRITICAL();
2273:..\FreeRTOS\Source/queue.c **** 
2274:..\FreeRTOS\Source/queue.c **** 	return xReturn;
2275:..\FreeRTOS\Source/queue.c **** }
2276:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
2277:..\FreeRTOS\Source/queue.c **** 
2278:..\FreeRTOS\Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 42


2279:..\FreeRTOS\Source/queue.c **** {
2280:..\FreeRTOS\Source/queue.c **** BaseType_t xReturn;
2281:..\FreeRTOS\Source/queue.c **** 
2282:..\FreeRTOS\Source/queue.c **** 	configASSERT( xQueue );
2283:..\FreeRTOS\Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
2284:..\FreeRTOS\Source/queue.c **** 	{
2285:..\FreeRTOS\Source/queue.c **** 		xReturn = pdTRUE;
2286:..\FreeRTOS\Source/queue.c **** 	}
2287:..\FreeRTOS\Source/queue.c **** 	else
2288:..\FreeRTOS\Source/queue.c **** 	{
2289:..\FreeRTOS\Source/queue.c **** 		xReturn = pdFALSE;
2290:..\FreeRTOS\Source/queue.c **** 	}
2291:..\FreeRTOS\Source/queue.c **** 
2292:..\FreeRTOS\Source/queue.c **** 	return xReturn;
2293:..\FreeRTOS\Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2294:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
2295:..\FreeRTOS\Source/queue.c **** 
2296:..\FreeRTOS\Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2297:..\FreeRTOS\Source/queue.c **** {
  60              		.loc 1 2297 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              	.LVL5:
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 0446     		mov	r4, r0
2298:..\FreeRTOS\Source/queue.c **** BaseType_t xReturn;
2299:..\FreeRTOS\Source/queue.c **** 
2300:..\FreeRTOS\Source/queue.c **** 	taskENTER_CRITICAL();
  70              		.loc 1 2300 0
  71 0004 FFF7FEFF 		bl	vPortEnterCritical
  72              	.LVL6:
2301:..\FreeRTOS\Source/queue.c **** 	{
2302:..\FreeRTOS\Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  73              		.loc 1 2302 0
  74 0008 A26B     		ldr	r2, [r4, #56]
  75 000a E36B     		ldr	r3, [r4, #60]
  76 000c 9A42     		cmp	r2, r3
  77 000e 01D1     		bne	.L6
2303:..\FreeRTOS\Source/queue.c **** 		{
2304:..\FreeRTOS\Source/queue.c **** 			xReturn = pdTRUE;
  78              		.loc 1 2304 0
  79 0010 0124     		movs	r4, #1
  80              	.LVL7:
  81 0012 00E0     		b	.L5
  82              	.LVL8:
  83              	.L6:
2305:..\FreeRTOS\Source/queue.c **** 		}
2306:..\FreeRTOS\Source/queue.c **** 		else
2307:..\FreeRTOS\Source/queue.c **** 		{
2308:..\FreeRTOS\Source/queue.c **** 			xReturn = pdFALSE;
  84              		.loc 1 2308 0
  85 0014 0024     		movs	r4, #0
  86              	.LVL9:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 43


  87              	.L5:
2309:..\FreeRTOS\Source/queue.c **** 		}
2310:..\FreeRTOS\Source/queue.c **** 	}
2311:..\FreeRTOS\Source/queue.c **** 	taskEXIT_CRITICAL();
  88              		.loc 1 2311 0
  89 0016 FFF7FEFF 		bl	vPortExitCritical
  90              	.LVL10:
2312:..\FreeRTOS\Source/queue.c **** 
2313:..\FreeRTOS\Source/queue.c **** 	return xReturn;
2314:..\FreeRTOS\Source/queue.c **** }
  91              		.loc 1 2314 0
  92 001a 2046     		mov	r0, r4
  93 001c 10BD     		pop	{r4, pc}
  94              		.cfi_endproc
  95              	.LFE97:
  96              		.size	prvIsQueueFull, .-prvIsQueueFull
  97 001e 00BF     		.section	.text.prvIsQueueEmpty,"ax",%progbits
  98              		.align	2
  99              		.thumb
 100              		.thumb_func
 101              		.type	prvIsQueueEmpty, %function
 102              	prvIsQueueEmpty:
 103              	.LFB95:
2258:..\FreeRTOS\Source/queue.c **** BaseType_t xReturn;
 104              		.loc 1 2258 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              	.LVL11:
 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 0446     		mov	r4, r0
2261:..\FreeRTOS\Source/queue.c **** 	{
 114              		.loc 1 2261 0
 115 0004 FFF7FEFF 		bl	vPortEnterCritical
 116              	.LVL12:
2263:..\FreeRTOS\Source/queue.c **** 		{
 117              		.loc 1 2263 0
 118 0008 A36B     		ldr	r3, [r4, #56]
 119 000a 0BB9     		cbnz	r3, .L10
2265:..\FreeRTOS\Source/queue.c **** 		}
 120              		.loc 1 2265 0
 121 000c 0124     		movs	r4, #1
 122              	.LVL13:
 123 000e 00E0     		b	.L9
 124              	.LVL14:
 125              	.L10:
2269:..\FreeRTOS\Source/queue.c **** 		}
 126              		.loc 1 2269 0
 127 0010 0024     		movs	r4, #0
 128              	.LVL15:
 129              	.L9:
2272:..\FreeRTOS\Source/queue.c **** 
 130              		.loc 1 2272 0
 131 0012 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 44


 132              	.LVL16:
2275:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 133              		.loc 1 2275 0
 134 0016 2046     		mov	r0, r4
 135 0018 10BD     		pop	{r4, pc}
 136              		.cfi_endproc
 137              	.LFE95:
 138              		.size	prvIsQueueEmpty, .-prvIsQueueEmpty
 139 001a 00BF     		.section	.text.prvCopyDataToQueue,"ax",%progbits
 140              		.align	2
 141              		.thumb
 142              		.thumb_func
 143              		.type	prvCopyDataToQueue, %function
 144              	prvCopyDataToQueue:
 145              	.LFB92:
2041:..\FreeRTOS\Source/queue.c **** BaseType_t xReturn = pdFALSE;
 146              		.loc 1 2041 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              	.LVL17:
 151 0000 70B5     		push	{r4, r5, r6, lr}
 152              		.cfi_def_cfa_offset 16
 153              		.cfi_offset 4, -16
 154              		.cfi_offset 5, -12
 155              		.cfi_offset 6, -8
 156              		.cfi_offset 14, -4
 157 0002 0446     		mov	r4, r0
 158 0004 1646     		mov	r6, r2
 159              	.LVL18:
2047:..\FreeRTOS\Source/queue.c **** 
 160              		.loc 1 2047 0
 161 0006 856B     		ldr	r5, [r0, #56]
 162              	.LVL19:
2049:..\FreeRTOS\Source/queue.c **** 	{
 163              		.loc 1 2049 0
 164 0008 026C     		ldr	r2, [r0, #64]
 165              	.LVL20:
 166 000a 3AB9     		cbnz	r2, .L13
2053:..\FreeRTOS\Source/queue.c **** 			{
 167              		.loc 1 2053 0
 168 000c 0368     		ldr	r3, [r0]
 169 000e 43BB     		cbnz	r3, .L17
2056:..\FreeRTOS\Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 170              		.loc 1 2056 0
 171 0010 4068     		ldr	r0, [r0, #4]
 172              	.LVL21:
 173 0012 FFF7FEFF 		bl	xTaskPriorityDisinherit
 174              	.LVL22:
2057:..\FreeRTOS\Source/queue.c **** 			}
 175              		.loc 1 2057 0
 176 0016 0023     		movs	r3, #0
 177 0018 6360     		str	r3, [r4, #4]
 178 001a 29E0     		b	.L14
 179              	.LVL23:
 180              	.L13:
2066:..\FreeRTOS\Source/queue.c **** 	{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 45


 181              		.loc 1 2066 0
 182 001c 6EB9     		cbnz	r6, .L15
2068:..\FreeRTOS\Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 183              		.loc 1 2068 0
 184 001e 8068     		ldr	r0, [r0, #8]
 185              	.LVL24:
 186 0020 FFF7FEFF 		bl	memcpy
 187              	.LVL25:
2069:..\FreeRTOS\Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 188              		.loc 1 2069 0
 189 0024 A268     		ldr	r2, [r4, #8]
 190 0026 236C     		ldr	r3, [r4, #64]
 191 0028 1344     		add	r3, r3, r2
 192 002a A360     		str	r3, [r4, #8]
2070:..\FreeRTOS\Source/queue.c **** 		{
 193              		.loc 1 2070 0
 194 002c 6268     		ldr	r2, [r4, #4]
 195 002e 9342     		cmp	r3, r2
 196 0030 19D3     		bcc	.L18
2072:..\FreeRTOS\Source/queue.c **** 		}
 197              		.loc 1 2072 0
 198 0032 2368     		ldr	r3, [r4]
 199 0034 A360     		str	r3, [r4, #8]
2042:..\FreeRTOS\Source/queue.c **** UBaseType_t uxMessagesWaiting;
 200              		.loc 1 2042 0
 201 0036 0020     		movs	r0, #0
 202 0038 1AE0     		b	.L14
 203              	.LVL26:
 204              	.L15:
2081:..\FreeRTOS\Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 205              		.loc 1 2081 0
 206 003a C068     		ldr	r0, [r0, #12]
 207              	.LVL27:
 208 003c FFF7FEFF 		bl	memcpy
 209              	.LVL28:
2082:..\FreeRTOS\Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 210              		.loc 1 2082 0
 211 0040 236C     		ldr	r3, [r4, #64]
 212 0042 5B42     		negs	r3, r3
 213 0044 E268     		ldr	r2, [r4, #12]
 214 0046 1A44     		add	r2, r2, r3
 215 0048 E260     		str	r2, [r4, #12]
2083:..\FreeRTOS\Source/queue.c **** 		{
 216              		.loc 1 2083 0
 217 004a 2168     		ldr	r1, [r4]
 218 004c 8A42     		cmp	r2, r1
 219 004e 02D2     		bcs	.L16
2085:..\FreeRTOS\Source/queue.c **** 		}
 220              		.loc 1 2085 0
 221 0050 6268     		ldr	r2, [r4, #4]
 222 0052 1344     		add	r3, r3, r2
 223 0054 E360     		str	r3, [r4, #12]
 224              	.L16:
2092:..\FreeRTOS\Source/queue.c **** 		{
 225              		.loc 1 2092 0
 226 0056 022E     		cmp	r6, #2
 227 0058 07D1     		bne	.L19
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 46


2094:..\FreeRTOS\Source/queue.c **** 			{
 228              		.loc 1 2094 0
 229 005a 45B1     		cbz	r5, .L20
2100:..\FreeRTOS\Source/queue.c **** 			}
 230              		.loc 1 2100 0
 231 005c 013D     		subs	r5, r5, #1
 232              	.LVL29:
2042:..\FreeRTOS\Source/queue.c **** UBaseType_t uxMessagesWaiting;
 233              		.loc 1 2042 0
 234 005e 0020     		movs	r0, #0
 235 0060 06E0     		b	.L14
 236              	.LVL30:
 237              	.L17:
 238 0062 0020     		movs	r0, #0
 239              	.LVL31:
 240 0064 04E0     		b	.L14
 241              	.LVL32:
 242              	.L18:
 243 0066 0020     		movs	r0, #0
 244 0068 02E0     		b	.L14
 245              	.L19:
 246 006a 0020     		movs	r0, #0
 247 006c 00E0     		b	.L14
 248              	.L20:
 249 006e 0020     		movs	r0, #0
 250              	.LVL33:
 251              	.L14:
2113:..\FreeRTOS\Source/queue.c **** 
 252              		.loc 1 2113 0
 253 0070 0135     		adds	r5, r5, #1
 254              	.LVL34:
 255 0072 A563     		str	r5, [r4, #56]
2116:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 256              		.loc 1 2116 0
 257 0074 70BD     		pop	{r4, r5, r6, pc}
 258              		.cfi_endproc
 259              	.LFE92:
 260              		.size	prvCopyDataToQueue, .-prvCopyDataToQueue
 261 0076 00BF     		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 262              		.align	2
 263              		.thumb
 264              		.thumb_func
 265              		.type	prvCopyDataFromQueue, %function
 266              	prvCopyDataFromQueue:
 267              	.LFB93:
2120:..\FreeRTOS\Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 268              		.loc 1 2120 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              	.LVL35:
2121:..\FreeRTOS\Source/queue.c **** 	{
 273              		.loc 1 2121 0
 274 0000 026C     		ldr	r2, [r0, #64]
 275 0002 72B1     		cbz	r2, .L26
2120:..\FreeRTOS\Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 276              		.loc 1 2120 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 47


 277 0004 10B5     		push	{r4, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 4, -8
 280              		.cfi_offset 14, -4
2123:..\FreeRTOS\Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 281              		.loc 1 2123 0
 282 0006 C368     		ldr	r3, [r0, #12]
 283 0008 1344     		add	r3, r3, r2
 284 000a C360     		str	r3, [r0, #12]
2124:..\FreeRTOS\Source/queue.c **** 		{
 285              		.loc 1 2124 0
 286 000c 4468     		ldr	r4, [r0, #4]
 287 000e A342     		cmp	r3, r4
 288 0010 01D3     		bcc	.L24
2126:..\FreeRTOS\Source/queue.c **** 		}
 289              		.loc 1 2126 0
 290 0012 0368     		ldr	r3, [r0]
 291 0014 C360     		str	r3, [r0, #12]
 292              	.L24:
 293 0016 0C46     		mov	r4, r1
2132:..\FreeRTOS\Source/queue.c **** 	}
 294              		.loc 1 2132 0
 295 0018 C168     		ldr	r1, [r0, #12]
 296              	.LVL36:
 297 001a 2046     		mov	r0, r4
 298              	.LVL37:
 299 001c FFF7FEFF 		bl	memcpy
 300              	.LVL38:
 301 0020 10BD     		pop	{r4, pc}
 302              	.LVL39:
 303              	.L26:
 304              		.cfi_def_cfa_offset 0
 305              		.cfi_restore 4
 306              		.cfi_restore 14
 307 0022 7047     		bx	lr
 308              		.cfi_endproc
 309              	.LFE93:
 310              		.size	prvCopyDataFromQueue, .-prvCopyDataFromQueue
 311              		.section	.text.prvUnlockQueue,"ax",%progbits
 312              		.align	2
 313              		.thumb
 314              		.thumb_func
 315              		.type	prvUnlockQueue, %function
 316              	prvUnlockQueue:
 317              	.LFB94:
2138:..\FreeRTOS\Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 318              		.loc 1 2138 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              	.LVL40:
 323 0000 38B5     		push	{r3, r4, r5, lr}
 324              		.cfi_def_cfa_offset 16
 325              		.cfi_offset 3, -16
 326              		.cfi_offset 4, -12
 327              		.cfi_offset 5, -8
 328              		.cfi_offset 14, -4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 48


 329 0002 0546     		mov	r5, r0
2145:..\FreeRTOS\Source/queue.c **** 	{
 330              		.loc 1 2145 0
 331 0004 FFF7FEFF 		bl	vPortEnterCritical
 332              	.LVL41:
 333              	.LBB23:
2147:..\FreeRTOS\Source/queue.c **** 
 334              		.loc 1 2147 0
 335 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 336 000c 64B2     		sxtb	r4, r4
 337              	.LVL42:
2150:..\FreeRTOS\Source/queue.c **** 		{
 338              		.loc 1 2150 0
 339 000e 0AE0     		b	.L28
 340              	.L31:
2198:..\FreeRTOS\Source/queue.c **** 				{
 341              		.loc 1 2198 0
 342 0010 6B6A     		ldr	r3, [r5, #36]
 343 0012 53B1     		cbz	r3, .L29
2200:..\FreeRTOS\Source/queue.c **** 					{
 344              		.loc 1 2200 0
 345 0014 05F12400 		add	r0, r5, #36
 346 0018 FFF7FEFF 		bl	xTaskRemoveFromEventList
 347              	.LVL43:
 348 001c 08B1     		cbz	r0, .L30
2204:..\FreeRTOS\Source/queue.c **** 					}
 349              		.loc 1 2204 0
 350 001e FFF7FEFF 		bl	vTaskMissedYield
 351              	.LVL44:
 352              	.L30:
2218:..\FreeRTOS\Source/queue.c **** 		}
 353              		.loc 1 2218 0
 354 0022 013C     		subs	r4, r4, #1
 355              	.LVL45:
 356 0024 64B2     		sxtb	r4, r4
 357              	.LVL46:
 358              	.L28:
2150:..\FreeRTOS\Source/queue.c **** 		{
 359              		.loc 1 2150 0
 360 0026 002C     		cmp	r4, #0
 361 0028 F2DC     		bgt	.L31
 362              	.L29:
2221:..\FreeRTOS\Source/queue.c **** 	}
 363              		.loc 1 2221 0
 364 002a FF23     		movs	r3, #255
 365 002c 85F84530 		strb	r3, [r5, #69]
 366              	.LBE23:
2223:..\FreeRTOS\Source/queue.c **** 
 367              		.loc 1 2223 0
 368 0030 FFF7FEFF 		bl	vPortExitCritical
 369              	.LVL47:
2226:..\FreeRTOS\Source/queue.c **** 	{
 370              		.loc 1 2226 0
 371 0034 FFF7FEFF 		bl	vPortEnterCritical
 372              	.LVL48:
 373              	.LBB24:
2228:..\FreeRTOS\Source/queue.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 49


 374              		.loc 1 2228 0
 375 0038 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 376              	.LVL49:
 377 003c 64B2     		sxtb	r4, r4
 378              	.LVL50:
2230:..\FreeRTOS\Source/queue.c **** 		{
 379              		.loc 1 2230 0
 380 003e 0AE0     		b	.L32
 381              	.L35:
2232:..\FreeRTOS\Source/queue.c **** 			{
 382              		.loc 1 2232 0
 383 0040 2B69     		ldr	r3, [r5, #16]
 384 0042 53B1     		cbz	r3, .L33
2234:..\FreeRTOS\Source/queue.c **** 				{
 385              		.loc 1 2234 0
 386 0044 05F11000 		add	r0, r5, #16
 387 0048 FFF7FEFF 		bl	xTaskRemoveFromEventList
 388              	.LVL51:
 389 004c 08B1     		cbz	r0, .L34
2236:..\FreeRTOS\Source/queue.c **** 				}
 390              		.loc 1 2236 0
 391 004e FFF7FEFF 		bl	vTaskMissedYield
 392              	.LVL52:
 393              	.L34:
2243:..\FreeRTOS\Source/queue.c **** 			}
 394              		.loc 1 2243 0
 395 0052 013C     		subs	r4, r4, #1
 396              	.LVL53:
 397 0054 64B2     		sxtb	r4, r4
 398              	.LVL54:
 399              	.L32:
2230:..\FreeRTOS\Source/queue.c **** 		{
 400              		.loc 1 2230 0
 401 0056 002C     		cmp	r4, #0
 402 0058 F2DC     		bgt	.L35
 403              	.L33:
2251:..\FreeRTOS\Source/queue.c **** 	}
 404              		.loc 1 2251 0
 405 005a FF23     		movs	r3, #255
 406 005c 85F84430 		strb	r3, [r5, #68]
 407              	.LBE24:
2253:..\FreeRTOS\Source/queue.c **** }
 408              		.loc 1 2253 0
 409 0060 FFF7FEFF 		bl	vPortExitCritical
 410              	.LVL55:
 411 0064 38BD     		pop	{r3, r4, r5, pc}
 412              		.cfi_endproc
 413              	.LFE94:
 414              		.size	prvUnlockQueue, .-prvUnlockQueue
 415 0066 00BF     		.section	.text.xQueueGenericReset,"ax",%progbits
 416              		.align	2
 417              		.global	xQueueGenericReset
 418              		.thumb
 419              		.thumb_func
 420              		.type	xQueueGenericReset, %function
 421              	xQueueGenericReset:
 422              	.LFB68:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 50


 248:..\FreeRTOS\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 423              		.loc 1 248 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              	.LVL56:
 428 0000 38B5     		push	{r3, r4, r5, lr}
 429              		.cfi_def_cfa_offset 16
 430              		.cfi_offset 3, -16
 431              		.cfi_offset 4, -12
 432              		.cfi_offset 5, -8
 433              		.cfi_offset 14, -4
 434 0002 0446     		mov	r4, r0
 435 0004 0D46     		mov	r5, r1
 436              	.LVL57:
 253:..\FreeRTOS\Source/queue.c **** 	{
 437              		.loc 1 253 0
 438 0006 FFF7FEFF 		bl	vPortEnterCritical
 439              	.LVL58:
 255:..\FreeRTOS\Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 440              		.loc 1 255 0
 441 000a 2168     		ldr	r1, [r4]
 442 000c E26B     		ldr	r2, [r4, #60]
 443 000e 236C     		ldr	r3, [r4, #64]
 444 0010 03FB0210 		mla	r0, r3, r2, r1
 445 0014 6060     		str	r0, [r4, #4]
 256:..\FreeRTOS\Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 446              		.loc 1 256 0
 447 0016 0020     		movs	r0, #0
 448 0018 A063     		str	r0, [r4, #56]
 257:..\FreeRTOS\Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 449              		.loc 1 257 0
 450 001a A160     		str	r1, [r4, #8]
 258:..\FreeRTOS\Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 451              		.loc 1 258 0
 452 001c 013A     		subs	r2, r2, #1
 453 001e 02FB0313 		mla	r3, r2, r3, r1
 454 0022 E360     		str	r3, [r4, #12]
 259:..\FreeRTOS\Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 455              		.loc 1 259 0
 456 0024 FF23     		movs	r3, #255
 457 0026 84F84430 		strb	r3, [r4, #68]
 260:..\FreeRTOS\Source/queue.c **** 
 458              		.loc 1 260 0
 459 002a 84F84530 		strb	r3, [r4, #69]
 262:..\FreeRTOS\Source/queue.c **** 		{
 460              		.loc 1 262 0
 461 002e 7DB9     		cbnz	r5, .L38
 269:..\FreeRTOS\Source/queue.c **** 			{
 462              		.loc 1 269 0
 463 0030 2369     		ldr	r3, [r4, #16]
 464 0032 ABB1     		cbz	r3, .L39
 271:..\FreeRTOS\Source/queue.c **** 				{
 465              		.loc 1 271 0
 466 0034 04F11000 		add	r0, r4, #16
 467 0038 FFF7FEFF 		bl	xTaskRemoveFromEventList
 468              	.LVL59:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 51


 469 003c 80B1     		cbz	r0, .L39
 273:..\FreeRTOS\Source/queue.c **** 				}
 470              		.loc 1 273 0
 471 003e 4FF08052 		mov	r2, #268435456
 472 0042 094B     		ldr	r3, .L41
 473 0044 1A60     		str	r2, [r3]
 474              		.syntax unified
 475              	@ 273 "..\FreeRTOS\Source\queue.c" 1
 476 0046 BFF34F8F 		dsb
 477              	@ 0 "" 2
 478              	@ 273 "..\FreeRTOS\Source\queue.c" 1
 479 004a BFF36F8F 		isb
 480              	@ 0 "" 2
 481              		.thumb
 482              		.syntax unified
 483 004e 07E0     		b	.L39
 484              	.L38:
 288:..\FreeRTOS\Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 485              		.loc 1 288 0
 486 0050 04F11000 		add	r0, r4, #16
 487 0054 FFF7FEFF 		bl	vListInitialise
 488              	.LVL60:
 289:..\FreeRTOS\Source/queue.c **** 		}
 489              		.loc 1 289 0
 490 0058 04F12400 		add	r0, r4, #36
 491 005c FFF7FEFF 		bl	vListInitialise
 492              	.LVL61:
 493              	.L39:
 292:..\FreeRTOS\Source/queue.c **** 
 494              		.loc 1 292 0
 495 0060 FFF7FEFF 		bl	vPortExitCritical
 496              	.LVL62:
 297:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 497              		.loc 1 297 0
 498 0064 0120     		movs	r0, #1
 499 0066 38BD     		pop	{r3, r4, r5, pc}
 500              	.LVL63:
 501              	.L42:
 502              		.align	2
 503              	.L41:
 504 0068 04ED00E0 		.word	-536810236
 505              		.cfi_endproc
 506              	.LFE68:
 507              		.size	xQueueGenericReset, .-xQueueGenericReset
 508              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 509              		.align	2
 510              		.thumb
 511              		.thumb_func
 512              		.type	prvInitialiseNewQueue, %function
 513              	prvInitialiseNewQueue:
 514              	.LFB70:
 409:..\FreeRTOS\Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 515              		.loc 1 409 0
 516              		.cfi_startproc
 517              		@ args = 4, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              	.LVL64:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 52


 520 0000 38B5     		push	{r3, r4, r5, lr}
 521              		.cfi_def_cfa_offset 16
 522              		.cfi_offset 3, -16
 523              		.cfi_offset 4, -12
 524              		.cfi_offset 5, -8
 525              		.cfi_offset 14, -4
 526 0002 1D46     		mov	r5, r3
 527 0004 049C     		ldr	r4, [sp, #16]
 414:..\FreeRTOS\Source/queue.c **** 	{
 528              		.loc 1 414 0
 529 0006 0B46     		mov	r3, r1
 530              	.LVL65:
 531 0008 09B9     		cbnz	r1, .L44
 420:..\FreeRTOS\Source/queue.c **** 	}
 532              		.loc 1 420 0
 533 000a 2460     		str	r4, [r4]
 534 000c 00E0     		b	.L45
 535              	.L44:
 425:..\FreeRTOS\Source/queue.c **** 	}
 536              		.loc 1 425 0
 537 000e 2260     		str	r2, [r4]
 538              	.L45:
 430:..\FreeRTOS\Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 539              		.loc 1 430 0
 540 0010 E063     		str	r0, [r4, #60]
 431:..\FreeRTOS\Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 541              		.loc 1 431 0
 542 0012 2364     		str	r3, [r4, #64]
 432:..\FreeRTOS\Source/queue.c **** 
 543              		.loc 1 432 0
 544 0014 0121     		movs	r1, #1
 545              	.LVL66:
 546 0016 2046     		mov	r0, r4
 547              	.LVL67:
 548 0018 FFF7FEFF 		bl	xQueueGenericReset
 549              	.LVL68:
 436:..\FreeRTOS\Source/queue.c **** 	}
 550              		.loc 1 436 0
 551 001c 84F84C50 		strb	r5, [r4, #76]
 552 0020 38BD     		pop	{r3, r4, r5, pc}
 553              		.cfi_endproc
 554              	.LFE70:
 555              		.size	prvInitialiseNewQueue, .-prvInitialiseNewQueue
 556 0022 00BF     		.section	.text.xQueueGenericCreate,"ax",%progbits
 557              		.align	2
 558              		.global	xQueueGenericCreate
 559              		.thumb
 560              		.thumb_func
 561              		.type	xQueueGenericCreate, %function
 562              	xQueueGenericCreate:
 563              	.LFB69:
 359:..\FreeRTOS\Source/queue.c **** 	Queue_t *pxNewQueue;
 564              		.loc 1 359 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              	.LVL69:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 53


 569 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 570              		.cfi_def_cfa_offset 20
 571              		.cfi_offset 4, -20
 572              		.cfi_offset 5, -16
 573              		.cfi_offset 6, -12
 574              		.cfi_offset 7, -8
 575              		.cfi_offset 14, -4
 576 0002 83B0     		sub	sp, sp, #12
 577              		.cfi_def_cfa_offset 32
 578 0004 0546     		mov	r5, r0
 579 0006 1746     		mov	r7, r2
 366:..\FreeRTOS\Source/queue.c **** 		{
 580              		.loc 1 366 0
 581 0008 0E46     		mov	r6, r1
 582 000a 11B1     		cbz	r1, .L50
 375:..\FreeRTOS\Source/queue.c **** 		}
 583              		.loc 1 375 0
 584 000c 00FB01F0 		mul	r0, r0, r1
 585              	.LVL70:
 586 0010 00E0     		b	.L48
 587              	.LVL71:
 588              	.L50:
 369:..\FreeRTOS\Source/queue.c **** 		}
 589              		.loc 1 369 0
 590 0012 0020     		movs	r0, #0
 591              	.LVL72:
 592              	.L48:
 378:..\FreeRTOS\Source/queue.c **** 
 593              		.loc 1 378 0
 594 0014 5030     		adds	r0, r0, #80
 595              	.LVL73:
 596 0016 FFF7FEFF 		bl	pvPortMalloc
 597              	.LVL74:
 380:..\FreeRTOS\Source/queue.c **** 		{
 598              		.loc 1 380 0
 599 001a 0446     		mov	r4, r0
 600 001c 38B1     		cbz	r0, .L49
 601              	.LVL75:
 395:..\FreeRTOS\Source/queue.c **** 		}
 602              		.loc 1 395 0
 603 001e 0090     		str	r0, [sp]
 604 0020 3B46     		mov	r3, r7
 605 0022 00F15002 		add	r2, r0, #80
 606              	.LVL76:
 607 0026 3146     		mov	r1, r6
 608 0028 2846     		mov	r0, r5
 609              	.LVL77:
 610 002a FFF7FEFF 		bl	prvInitialiseNewQueue
 611              	.LVL78:
 612              	.L49:
 403:..\FreeRTOS\Source/queue.c **** 
 613              		.loc 1 403 0
 614 002e 2046     		mov	r0, r4
 615 0030 03B0     		add	sp, sp, #12
 616              		.cfi_def_cfa_offset 20
 617              		@ sp needed
 618 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 54


 619              		.cfi_endproc
 620              	.LFE69:
 621              		.size	xQueueGenericCreate, .-xQueueGenericCreate
 622              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 623              		.align	2
 624              		.global	xQueueCreateCountingSemaphore
 625              		.thumb
 626              		.thumb_func
 627              		.type	xQueueCreateCountingSemaphore, %function
 628              	xQueueCreateCountingSemaphore:
 629              	.LFB75:
 700:..\FreeRTOS\Source/queue.c **** 	QueueHandle_t xHandle;
 630              		.loc 1 700 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              	.LVL79:
 635 0000 10B5     		push	{r4, lr}
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 4, -8
 638              		.cfi_offset 14, -4
 639 0002 0C46     		mov	r4, r1
 706:..\FreeRTOS\Source/queue.c **** 
 640              		.loc 1 706 0
 641 0004 0222     		movs	r2, #2
 642 0006 0021     		movs	r1, #0
 643              	.LVL80:
 644 0008 FFF7FEFF 		bl	xQueueGenericCreate
 645              	.LVL81:
 708:..\FreeRTOS\Source/queue.c **** 		{
 646              		.loc 1 708 0
 647 000c 0346     		mov	r3, r0
 648 000e 00B1     		cbz	r0, .L53
 710:..\FreeRTOS\Source/queue.c **** 
 649              		.loc 1 710 0
 650 0010 8463     		str	r4, [r0, #56]
 651              	.L53:
 720:..\FreeRTOS\Source/queue.c **** 
 652              		.loc 1 720 0
 653 0012 1846     		mov	r0, r3
 654              	.LVL82:
 655 0014 10BD     		pop	{r4, pc}
 656              		.cfi_endproc
 657              	.LFE75:
 658              		.size	xQueueCreateCountingSemaphore, .-xQueueCreateCountingSemaphore
 659 0016 00BF     		.section	.text.xQueueGenericSend,"ax",%progbits
 660              		.align	2
 661              		.global	xQueueGenericSend
 662              		.thumb
 663              		.thumb_func
 664              		.type	xQueueGenericSend, %function
 665              	xQueueGenericSend:
 666              	.LFB76:
 726:..\FreeRTOS\Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 667              		.loc 1 726 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 55


 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671              	.LVL83:
 672 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 673              		.cfi_def_cfa_offset 20
 674              		.cfi_offset 4, -20
 675              		.cfi_offset 5, -16
 676              		.cfi_offset 6, -12
 677              		.cfi_offset 7, -8
 678              		.cfi_offset 14, -4
 679 0002 85B0     		sub	sp, sp, #20
 680              		.cfi_def_cfa_offset 40
 681 0004 0446     		mov	r4, r0
 682 0006 0F46     		mov	r7, r1
 683 0008 0192     		str	r2, [sp, #4]
 684 000a 1E46     		mov	r6, r3
 685              	.LVL84:
 727:..\FreeRTOS\Source/queue.c **** TimeOut_t xTimeOut;
 686              		.loc 1 727 0
 687 000c 0025     		movs	r5, #0
 688              	.LVL85:
 689              	.L56:
 746:..\FreeRTOS\Source/queue.c **** 		{
 690              		.loc 1 746 0
 691 000e FFF7FEFF 		bl	vPortEnterCritical
 692              	.LVL86:
 752:..\FreeRTOS\Source/queue.c **** 			{
 693              		.loc 1 752 0
 694 0012 A26B     		ldr	r2, [r4, #56]
 695 0014 E36B     		ldr	r3, [r4, #60]
 696 0016 9A42     		cmp	r2, r3
 697 0018 01D3     		bcc	.L57
 752:..\FreeRTOS\Source/queue.c **** 			{
 698              		.loc 1 752 0 is_stmt 0 discriminator 1
 699 001a 022E     		cmp	r6, #2
 700 001c 21D1     		bne	.L58
 701              	.L57:
 755:..\FreeRTOS\Source/queue.c **** 
 702              		.loc 1 755 0 is_stmt 1
 703 001e 3246     		mov	r2, r6
 704 0020 3946     		mov	r1, r7
 705 0022 2046     		mov	r0, r4
 706 0024 FFF7FEFF 		bl	prvCopyDataToQueue
 707              	.LVL87:
 810:..\FreeRTOS\Source/queue.c **** 					{
 708              		.loc 1 810 0
 709 0028 636A     		ldr	r3, [r4, #36]
 710 002a 6BB1     		cbz	r3, .L59
 812:..\FreeRTOS\Source/queue.c **** 						{
 711              		.loc 1 812 0
 712 002c 04F12400 		add	r0, r4, #36
 713              	.LVL88:
 714 0030 FFF7FEFF 		bl	xTaskRemoveFromEventList
 715              	.LVL89:
 716 0034 88B1     		cbz	r0, .L60
 818:..\FreeRTOS\Source/queue.c **** 						}
 717              		.loc 1 818 0
 718 0036 4FF08052 		mov	r2, #268435456
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 56


 719 003a 324B     		ldr	r3, .L70
 720 003c 1A60     		str	r2, [r3]
 721              		.syntax unified
 722              	@ 818 "..\FreeRTOS\Source\queue.c" 1
 723 003e BFF34F8F 		dsb
 724              	@ 0 "" 2
 725              	@ 818 "..\FreeRTOS\Source\queue.c" 1
 726 0042 BFF36F8F 		isb
 727              	@ 0 "" 2
 728              		.thumb
 729              		.syntax unified
 730 0046 08E0     		b	.L60
 731              	.LVL90:
 732              	.L59:
 825:..\FreeRTOS\Source/queue.c **** 					{
 733              		.loc 1 825 0
 734 0048 38B1     		cbz	r0, .L60
 831:..\FreeRTOS\Source/queue.c **** 					}
 735              		.loc 1 831 0
 736 004a 4FF08052 		mov	r2, #268435456
 737 004e 2D4B     		ldr	r3, .L70
 738 0050 1A60     		str	r2, [r3]
 739              		.syntax unified
 740              	@ 831 "..\FreeRTOS\Source\queue.c" 1
 741 0052 BFF34F8F 		dsb
 742              	@ 0 "" 2
 743              	@ 831 "..\FreeRTOS\Source\queue.c" 1
 744 0056 BFF36F8F 		isb
 745              	@ 0 "" 2
 746              	.LVL91:
 747              		.thumb
 748              		.syntax unified
 749              	.L60:
 840:..\FreeRTOS\Source/queue.c **** 				return pdPASS;
 750              		.loc 1 840 0
 751 005a FFF7FEFF 		bl	vPortExitCritical
 752              	.LVL92:
 841:..\FreeRTOS\Source/queue.c **** 			}
 753              		.loc 1 841 0
 754 005e 0120     		movs	r0, #1
 755 0060 4EE0     		b	.L61
 756              	.L58:
 845:..\FreeRTOS\Source/queue.c **** 				{
 757              		.loc 1 845 0
 758 0062 019B     		ldr	r3, [sp, #4]
 759 0064 1BB9     		cbnz	r3, .L62
 849:..\FreeRTOS\Source/queue.c **** 
 760              		.loc 1 849 0
 761 0066 FFF7FEFF 		bl	vPortExitCritical
 762              	.LVL93:
 854:..\FreeRTOS\Source/queue.c **** 				}
 763              		.loc 1 854 0
 764 006a 0020     		movs	r0, #0
 765 006c 48E0     		b	.L61
 766              	.L62:
 856:..\FreeRTOS\Source/queue.c **** 				{
 767              		.loc 1 856 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 57


 768 006e 1DB9     		cbnz	r5, .L63
 860:..\FreeRTOS\Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 769              		.loc 1 860 0
 770 0070 02A8     		add	r0, sp, #8
 771 0072 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 772              	.LVL94:
 861:..\FreeRTOS\Source/queue.c **** 				}
 773              		.loc 1 861 0
 774 0076 0125     		movs	r5, #1
 775              	.LVL95:
 776              	.L63:
 870:..\FreeRTOS\Source/queue.c **** 
 777              		.loc 1 870 0
 778 0078 FFF7FEFF 		bl	vPortExitCritical
 779              	.LVL96:
 875:..\FreeRTOS\Source/queue.c **** 		prvLockQueue( pxQueue );
 780              		.loc 1 875 0
 781 007c FFF7FEFF 		bl	vTaskSuspendAll
 782              	.LVL97:
 876:..\FreeRTOS\Source/queue.c **** 
 783              		.loc 1 876 0
 784 0080 FFF7FEFF 		bl	vPortEnterCritical
 785              	.LVL98:
 786 0084 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 787 0088 5BB2     		sxtb	r3, r3
 788 008a B3F1FF3F 		cmp	r3, #-1
 789 008e 02D1     		bne	.L64
 876:..\FreeRTOS\Source/queue.c **** 
 790              		.loc 1 876 0 is_stmt 0 discriminator 1
 791 0090 0023     		movs	r3, #0
 792 0092 84F84430 		strb	r3, [r4, #68]
 793              	.L64:
 876:..\FreeRTOS\Source/queue.c **** 
 794              		.loc 1 876 0 discriminator 3
 795 0096 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 796 009a 5BB2     		sxtb	r3, r3
 797 009c B3F1FF3F 		cmp	r3, #-1
 798 00a0 02D1     		bne	.L65
 876:..\FreeRTOS\Source/queue.c **** 
 799              		.loc 1 876 0 discriminator 4
 800 00a2 0023     		movs	r3, #0
 801 00a4 84F84530 		strb	r3, [r4, #69]
 802              	.L65:
 876:..\FreeRTOS\Source/queue.c **** 
 803              		.loc 1 876 0 discriminator 6
 804 00a8 FFF7FEFF 		bl	vPortExitCritical
 805              	.LVL99:
 879:..\FreeRTOS\Source/queue.c **** 		{
 806              		.loc 1 879 0 is_stmt 1 discriminator 6
 807 00ac 01A9     		add	r1, sp, #4
 808              	.LVL100:
 809 00ae 02A8     		add	r0, sp, #8
 810 00b0 FFF7FEFF 		bl	xTaskCheckForTimeOut
 811              	.LVL101:
 812 00b4 F0B9     		cbnz	r0, .L66
 881:..\FreeRTOS\Source/queue.c **** 			{
 813              		.loc 1 881 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 58


 814 00b6 2046     		mov	r0, r4
 815 00b8 FFF7FEFF 		bl	prvIsQueueFull
 816              	.LVL102:
 817 00bc A0B1     		cbz	r0, .L67
 884:..\FreeRTOS\Source/queue.c **** 
 818              		.loc 1 884 0
 819 00be 0199     		ldr	r1, [sp, #4]
 820 00c0 04F11000 		add	r0, r4, #16
 821 00c4 FFF7FEFF 		bl	vTaskPlaceOnEventList
 822              	.LVL103:
 891:..\FreeRTOS\Source/queue.c **** 
 823              		.loc 1 891 0
 824 00c8 2046     		mov	r0, r4
 825 00ca FFF7FEFF 		bl	prvUnlockQueue
 826              	.LVL104:
 898:..\FreeRTOS\Source/queue.c **** 				{
 827              		.loc 1 898 0
 828 00ce FFF7FEFF 		bl	xTaskResumeAll
 829              	.LVL105:
 830 00d2 0028     		cmp	r0, #0
 831 00d4 9BD1     		bne	.L56
 900:..\FreeRTOS\Source/queue.c **** 				}
 832              		.loc 1 900 0
 833 00d6 4FF08052 		mov	r2, #268435456
 834 00da 0A4B     		ldr	r3, .L70
 835 00dc 1A60     		str	r2, [r3]
 836              		.syntax unified
 837              	@ 900 "..\FreeRTOS\Source\queue.c" 1
 838 00de BFF34F8F 		dsb
 839              	@ 0 "" 2
 840              	@ 900 "..\FreeRTOS\Source\queue.c" 1
 841 00e2 BFF36F8F 		isb
 842              	@ 0 "" 2
 843              		.thumb
 844              		.syntax unified
 845 00e6 92E7     		b	.L56
 846              	.L67:
 906:..\FreeRTOS\Source/queue.c **** 				( void ) xTaskResumeAll();
 847              		.loc 1 906 0
 848 00e8 2046     		mov	r0, r4
 849 00ea FFF7FEFF 		bl	prvUnlockQueue
 850              	.LVL106:
 907:..\FreeRTOS\Source/queue.c **** 			}
 851              		.loc 1 907 0
 852 00ee FFF7FEFF 		bl	xTaskResumeAll
 853              	.LVL107:
 854 00f2 8CE7     		b	.L56
 855              	.L66:
 913:..\FreeRTOS\Source/queue.c **** 			( void ) xTaskResumeAll();
 856              		.loc 1 913 0
 857 00f4 2046     		mov	r0, r4
 858 00f6 FFF7FEFF 		bl	prvUnlockQueue
 859              	.LVL108:
 914:..\FreeRTOS\Source/queue.c **** 
 860              		.loc 1 914 0
 861 00fa FFF7FEFF 		bl	xTaskResumeAll
 862              	.LVL109:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 59


 917:..\FreeRTOS\Source/queue.c **** 		}
 863              		.loc 1 917 0
 864 00fe 0020     		movs	r0, #0
 865              	.L61:
 920:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 866              		.loc 1 920 0
 867 0100 05B0     		add	sp, sp, #20
 868              		.cfi_def_cfa_offset 20
 869              		@ sp needed
 870 0102 F0BD     		pop	{r4, r5, r6, r7, pc}
 871              	.LVL110:
 872              	.L71:
 873              		.align	2
 874              	.L70:
 875 0104 04ED00E0 		.word	-536810236
 876              		.cfi_endproc
 877              	.LFE76:
 878              		.size	xQueueGenericSend, .-xQueueGenericSend
 879              		.section	.text.prvInitialiseMutex,"ax",%progbits
 880              		.align	2
 881              		.thumb
 882              		.thumb_func
 883              		.type	prvInitialiseMutex, %function
 884              	prvInitialiseMutex:
 885              	.LFB71:
 453:..\FreeRTOS\Source/queue.c **** 		if( pxNewQueue != NULL )
 886              		.loc 1 453 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              	.LVL111:
 454:..\FreeRTOS\Source/queue.c **** 		{
 891              		.loc 1 454 0
 892 0000 48B1     		cbz	r0, .L75
 453:..\FreeRTOS\Source/queue.c **** 		if( pxNewQueue != NULL )
 893              		.loc 1 453 0
 894 0002 08B5     		push	{r3, lr}
 895              		.cfi_def_cfa_offset 8
 896              		.cfi_offset 3, -8
 897              		.cfi_offset 14, -4
 460:..\FreeRTOS\Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 898              		.loc 1 460 0
 899 0004 0021     		movs	r1, #0
 900 0006 4160     		str	r1, [r0, #4]
 461:..\FreeRTOS\Source/queue.c **** 
 901              		.loc 1 461 0
 902 0008 0160     		str	r1, [r0]
 464:..\FreeRTOS\Source/queue.c **** 
 903              		.loc 1 464 0
 904 000a C160     		str	r1, [r0, #12]
 469:..\FreeRTOS\Source/queue.c **** 		}
 905              		.loc 1 469 0
 906 000c 0B46     		mov	r3, r1
 907 000e 0A46     		mov	r2, r1
 908 0010 FFF7FEFF 		bl	xQueueGenericSend
 909              	.LVL112:
 910 0014 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 60


 911              	.LVL113:
 912              	.L75:
 913              		.cfi_def_cfa_offset 0
 914              		.cfi_restore 3
 915              		.cfi_restore 14
 916 0016 7047     		bx	lr
 917              		.cfi_endproc
 918              	.LFE71:
 919              		.size	prvInitialiseMutex, .-prvInitialiseMutex
 920              		.section	.text.xQueueCreateMutex,"ax",%progbits
 921              		.align	2
 922              		.global	xQueueCreateMutex
 923              		.thumb
 924              		.thumb_func
 925              		.type	xQueueCreateMutex, %function
 926              	xQueueCreateMutex:
 927              	.LFB72:
 483:..\FreeRTOS\Source/queue.c **** 	Queue_t *pxNewQueue;
 928              		.loc 1 483 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932              	.LVL114:
 933 0000 10B5     		push	{r4, lr}
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 4, -8
 936              		.cfi_offset 14, -4
 937              	.LVL115:
 487:..\FreeRTOS\Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 938              		.loc 1 487 0
 939 0002 0246     		mov	r2, r0
 940 0004 0021     		movs	r1, #0
 941 0006 0120     		movs	r0, #1
 942              	.LVL116:
 943 0008 FFF7FEFF 		bl	xQueueGenericCreate
 944              	.LVL117:
 945 000c 0446     		mov	r4, r0
 946              	.LVL118:
 488:..\FreeRTOS\Source/queue.c **** 
 947              		.loc 1 488 0
 948 000e FFF7FEFF 		bl	prvInitialiseMutex
 949              	.LVL119:
 491:..\FreeRTOS\Source/queue.c **** 
 950              		.loc 1 491 0
 951 0012 2046     		mov	r0, r4
 952 0014 10BD     		pop	{r4, pc}
 953              		.cfi_endproc
 954              	.LFE72:
 955              		.size	xQueueCreateMutex, .-xQueueCreateMutex
 956 0016 00BF     		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 957              		.align	2
 958              		.global	xQueueGiveMutexRecursive
 959              		.thumb
 960              		.thumb_func
 961              		.type	xQueueGiveMutexRecursive, %function
 962              	xQueueGiveMutexRecursive:
 963              	.LFB73:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 61


 575:..\FreeRTOS\Source/queue.c **** 	BaseType_t xReturn;
 964              		.loc 1 575 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 0
 967              		@ frame_needed = 0, uses_anonymous_args = 0
 968              	.LVL120:
 969 0000 38B5     		push	{r3, r4, r5, lr}
 970              		.cfi_def_cfa_offset 16
 971              		.cfi_offset 3, -16
 972              		.cfi_offset 4, -12
 973              		.cfi_offset 5, -8
 974              		.cfi_offset 14, -4
 975 0002 0446     		mov	r4, r0
 976              	.LVL121:
 587:..\FreeRTOS\Source/queue.c **** 		{
 977              		.loc 1 587 0
 978 0004 4568     		ldr	r5, [r0, #4]
 979 0006 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 980              	.LVL122:
 981 000a 8542     		cmp	r5, r0
 982 000c 0AD1     		bne	.L80
 596:..\FreeRTOS\Source/queue.c **** 
 983              		.loc 1 596 0
 984 000e E368     		ldr	r3, [r4, #12]
 985 0010 013B     		subs	r3, r3, #1
 986 0012 E360     		str	r3, [r4, #12]
 599:..\FreeRTOS\Source/queue.c **** 			{
 987              		.loc 1 599 0
 988 0014 43B9     		cbnz	r3, .L81
 603:..\FreeRTOS\Source/queue.c **** 			}
 989              		.loc 1 603 0
 990 0016 1A46     		mov	r2, r3
 991 0018 1946     		mov	r1, r3
 992 001a 2046     		mov	r0, r4
 993 001c FFF7FEFF 		bl	xQueueGenericSend
 994              	.LVL123:
 610:..\FreeRTOS\Source/queue.c **** 		}
 995              		.loc 1 610 0
 996 0020 0120     		movs	r0, #1
 997 0022 38BD     		pop	{r3, r4, r5, pc}
 998              	.LVL124:
 999              	.L80:
 616:..\FreeRTOS\Source/queue.c **** 
 1000              		.loc 1 616 0
 1001 0024 0020     		movs	r0, #0
 1002 0026 38BD     		pop	{r3, r4, r5, pc}
 1003              	.LVL125:
 1004              	.L81:
 610:..\FreeRTOS\Source/queue.c **** 		}
 1005              		.loc 1 610 0
 1006 0028 0120     		movs	r0, #1
 1007              	.LVL126:
 622:..\FreeRTOS\Source/queue.c **** 
 1008              		.loc 1 622 0
 1009 002a 38BD     		pop	{r3, r4, r5, pc}
 1010              		.cfi_endproc
 1011              	.LFE73:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 62


 1012              		.size	xQueueGiveMutexRecursive, .-xQueueGiveMutexRecursive
 1013              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1014              		.align	2
 1015              		.global	xQueueGenericSendFromISR
 1016              		.thumb
 1017              		.thumb_func
 1018              		.type	xQueueGenericSendFromISR, %function
 1019              	xQueueGenericSendFromISR:
 1020              	.LFB77:
 924:..\FreeRTOS\Source/queue.c **** BaseType_t xReturn;
 1021              		.loc 1 924 0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 0
 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 1025              	.LVL127:
 1026 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1027              		.cfi_def_cfa_offset 24
 1028              		.cfi_offset 3, -24
 1029              		.cfi_offset 4, -20
 1030              		.cfi_offset 5, -16
 1031              		.cfi_offset 6, -12
 1032              		.cfi_offset 7, -8
 1033              		.cfi_offset 14, -4
 1034              	.LVL128:
 1035              	.LBB25:
 1036              	.LBB26:
 1037              		.file 2 "..\\FreeRTOS\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  15:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  22:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  25:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  27:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  28:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  29:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 63


  31:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  32:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  34:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  35:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  36:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  39:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  42:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  45:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  46:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  47:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  48:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  51:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  52:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  55:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #else
  63:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  66:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  70:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  72:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  81:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  84:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 64


  88:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
  89:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  90:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  96:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
  97:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 106:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 115:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 120:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 122:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 126:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 127:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 129:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 132:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 134:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 136:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 137:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 142:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 143:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 65


 145:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 147:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 149:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 151:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 153:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 155:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 159:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 160:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 162:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 163:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 165:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 171:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 174:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 177:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 179:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 181:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 182:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 183:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 185:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 186:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 187:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 188:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 189:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 193:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 195:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 196:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 197:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 66


 202:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	);
 203:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 204:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 205:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 206:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 207:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 209:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 211:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 1038              		.loc 2 211 0
 1039              		.syntax unified
 1040              	@ 211 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1041 0002 EFF31186 			mrs r6, basepri											
 1042 0006 4FF0A004 		mov r4, #160												
 1043 000a 84F31188 		msr basepri, r4											
 1044 000e BFF36F8F 		isb														
 1045 0012 BFF34F8F 		dsb														
 1046              	
 1047              	@ 0 "" 2
 1048              		.thumb
 1049              		.syntax unified
 1050              	.LBE26:
 1051              	.LBE25:
 956:..\FreeRTOS\Source/queue.c **** 		{
 1052              		.loc 1 956 0
 1053 0016 856B     		ldr	r5, [r0, #56]
 1054 0018 C46B     		ldr	r4, [r0, #60]
 1055 001a A542     		cmp	r5, r4
 1056 001c 01D3     		bcc	.L84
 956:..\FreeRTOS\Source/queue.c **** 		{
 1057              		.loc 1 956 0 is_stmt 0 discriminator 1
 1058 001e 022B     		cmp	r3, #2
 1059 0020 1BD1     		bne	.L87
 1060              	.L84:
 1061 0022 1746     		mov	r7, r2
 1062 0024 0546     		mov	r5, r0
 1063              	.LBB27:
 958:..\FreeRTOS\Source/queue.c **** 
 1064              		.loc 1 958 0 is_stmt 1
 1065 0026 90F84540 		ldrb	r4, [r0, #69]	@ zero_extendqisi2
 1066 002a 64B2     		sxtb	r4, r4
 1067              	.LVL129:
 967:..\FreeRTOS\Source/queue.c **** 
 1068              		.loc 1 967 0
 1069 002c 1A46     		mov	r2, r3
 1070              	.LVL130:
 1071 002e FFF7FEFF 		bl	prvCopyDataToQueue
 1072              	.LVL131:
 971:..\FreeRTOS\Source/queue.c **** 			{
 1073              		.loc 1 971 0
 1074 0032 B4F1FF3F 		cmp	r4, #-1
 1075 0036 0AD1     		bne	.L86
1026:..\FreeRTOS\Source/queue.c **** 					{
 1076              		.loc 1 1026 0
 1077 0038 6B6A     		ldr	r3, [r5, #36]
 1078 003a 83B1     		cbz	r3, .L88
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 67


1028:..\FreeRTOS\Source/queue.c **** 						{
 1079              		.loc 1 1028 0
 1080 003c 05F12400 		add	r0, r5, #36
 1081 0040 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1082              	.LVL132:
 1083 0044 68B1     		cbz	r0, .L89
1032:..\FreeRTOS\Source/queue.c **** 							{
 1084              		.loc 1 1032 0
 1085 0046 77B1     		cbz	r7, .L90
1034:..\FreeRTOS\Source/queue.c **** 							}
 1086              		.loc 1 1034 0
 1087 0048 0120     		movs	r0, #1
 1088 004a 3860     		str	r0, [r7]
 1089 004c 0CE0     		b	.L85
 1090              	.L86:
1057:..\FreeRTOS\Source/queue.c **** 			}
 1091              		.loc 1 1057 0
 1092 004e 0134     		adds	r4, r4, #1
 1093              	.LVL133:
 1094 0050 64B2     		sxtb	r4, r4
 1095              	.LVL134:
 1096 0052 85F84540 		strb	r4, [r5, #69]
1060:..\FreeRTOS\Source/queue.c **** 		}
 1097              		.loc 1 1060 0
 1098 0056 0120     		movs	r0, #1
 1099 0058 06E0     		b	.L85
 1100              	.LVL135:
 1101              	.L87:
 1102              	.LBE27:
1065:..\FreeRTOS\Source/queue.c **** 		}
 1103              		.loc 1 1065 0
 1104 005a 0020     		movs	r0, #0
 1105              	.LVL136:
 1106 005c 04E0     		b	.L85
 1107              	.LVL137:
 1108              	.L88:
 1109              	.LBB28:
1060:..\FreeRTOS\Source/queue.c **** 		}
 1110              		.loc 1 1060 0
 1111 005e 0120     		movs	r0, #1
 1112 0060 02E0     		b	.L85
 1113              	.L89:
 1114 0062 0120     		movs	r0, #1
 1115 0064 00E0     		b	.L85
 1116              	.L90:
 1117 0066 0120     		movs	r0, #1
 1118              	.LVL138:
 1119              	.L85:
 1120              	.LBE28:
 1121              	.LBB29:
 1122              	.LBB30:
 212:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 213:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 215:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 217:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 68


 218:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	);
 220:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 221:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	warnings. */
 223:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 224:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 225:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 226:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 227:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 229:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 1123              		.loc 2 229 0
 1124              		.syntax unified
 1125              	@ 229 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1126 0068 86F31188 			msr basepri, r6	
 1127              	@ 0 "" 2
 1128              	.LVL139:
 1129              		.thumb
 1130              		.syntax unified
 1131              	.LBE30:
 1132              	.LBE29:
1071:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 1133              		.loc 1 1071 0
 1134 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1135              		.cfi_endproc
 1136              	.LFE77:
 1137              		.size	xQueueGenericSendFromISR, .-xQueueGenericSendFromISR
 1138 006e 00BF     		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1139              		.align	2
 1140              		.global	xQueueGiveFromISR
 1141              		.thumb
 1142              		.thumb_func
 1143              		.type	xQueueGiveFromISR, %function
 1144              	xQueueGiveFromISR:
 1145              	.LFB78:
1075:..\FreeRTOS\Source/queue.c **** BaseType_t xReturn;
 1146              		.loc 1 1075 0
 1147              		.cfi_startproc
 1148              		@ args = 0, pretend = 0, frame = 0
 1149              		@ frame_needed = 0, uses_anonymous_args = 0
 1150              	.LVL140:
 1151 0000 38B5     		push	{r3, r4, r5, lr}
 1152              		.cfi_def_cfa_offset 16
 1153              		.cfi_offset 3, -16
 1154              		.cfi_offset 4, -12
 1155              		.cfi_offset 5, -8
 1156              		.cfi_offset 14, -4
 1157              	.LVL141:
 1158              	.LBB31:
 1159              	.LBB32:
 211:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1160              		.loc 2 211 0
 1161              		.syntax unified
 1162              	@ 211 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1163 0002 EFF31184 			mrs r4, basepri											
 1164 0006 4FF0A003 		mov r3, #160												
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 69


 1165 000a 83F31188 		msr basepri, r3											
 1166 000e BFF36F8F 		isb														
 1167 0012 BFF34F8F 		dsb														
 1168              	
 1169              	@ 0 "" 2
 1170              		.thumb
 1171              		.syntax unified
 1172              	.LBE32:
 1173              	.LBE31:
 1174              	.LBB33:
1115:..\FreeRTOS\Source/queue.c **** 
 1175              		.loc 1 1115 0
 1176 0016 826B     		ldr	r2, [r0, #56]
 1177              	.LVL142:
1120:..\FreeRTOS\Source/queue.c **** 		{
 1178              		.loc 1 1120 0
 1179 0018 C36B     		ldr	r3, [r0, #60]
 1180 001a 9A42     		cmp	r2, r3
 1181 001c 18D2     		bcs	.L95
 1182              	.LBB34:
1122:..\FreeRTOS\Source/queue.c **** 
 1183              		.loc 1 1122 0
 1184 001e 90F84530 		ldrb	r3, [r0, #69]	@ zero_extendqisi2
 1185 0022 5BB2     		sxtb	r3, r3
 1186              	.LVL143:
1132:..\FreeRTOS\Source/queue.c **** 
 1187              		.loc 1 1132 0
 1188 0024 0132     		adds	r2, r2, #1
 1189              	.LVL144:
 1190 0026 8263     		str	r2, [r0, #56]
1136:..\FreeRTOS\Source/queue.c **** 			{
 1191              		.loc 1 1136 0
 1192 0028 B3F1FF3F 		cmp	r3, #-1
 1193 002c 0AD1     		bne	.L94
1191:..\FreeRTOS\Source/queue.c **** 					{
 1194              		.loc 1 1191 0
 1195 002e 436A     		ldr	r3, [r0, #36]
 1196              	.LVL145:
 1197 0030 83B1     		cbz	r3, .L96
 1198 0032 0D46     		mov	r5, r1
1193:..\FreeRTOS\Source/queue.c **** 						{
 1199              		.loc 1 1193 0
 1200 0034 2430     		adds	r0, r0, #36
 1201              	.LVL146:
 1202 0036 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1203              	.LVL147:
 1204 003a 68B1     		cbz	r0, .L97
1197:..\FreeRTOS\Source/queue.c **** 							{
 1205              		.loc 1 1197 0
 1206 003c 75B1     		cbz	r5, .L98
1199:..\FreeRTOS\Source/queue.c **** 							}
 1207              		.loc 1 1199 0
 1208 003e 0120     		movs	r0, #1
 1209 0040 2860     		str	r0, [r5]
 1210 0042 0CE0     		b	.L93
 1211              	.LVL148:
 1212              	.L94:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 70


1222:..\FreeRTOS\Source/queue.c **** 			}
 1213              		.loc 1 1222 0
 1214 0044 0133     		adds	r3, r3, #1
 1215              	.LVL149:
 1216 0046 5BB2     		sxtb	r3, r3
 1217              	.LVL150:
 1218 0048 80F84530 		strb	r3, [r0, #69]
1225:..\FreeRTOS\Source/queue.c **** 		}
 1219              		.loc 1 1225 0
 1220 004c 0120     		movs	r0, #1
 1221              	.LVL151:
 1222 004e 06E0     		b	.L93
 1223              	.LVL152:
 1224              	.L95:
 1225              	.LBE34:
1230:..\FreeRTOS\Source/queue.c **** 		}
 1226              		.loc 1 1230 0
 1227 0050 0020     		movs	r0, #0
 1228              	.LVL153:
 1229 0052 04E0     		b	.L93
 1230              	.LVL154:
 1231              	.L96:
 1232              	.LBB35:
1225:..\FreeRTOS\Source/queue.c **** 		}
 1233              		.loc 1 1225 0
 1234 0054 0120     		movs	r0, #1
 1235              	.LVL155:
 1236 0056 02E0     		b	.L93
 1237              	.LVL156:
 1238              	.L97:
 1239 0058 0120     		movs	r0, #1
 1240 005a 00E0     		b	.L93
 1241              	.L98:
 1242 005c 0120     		movs	r0, #1
 1243              	.LVL157:
 1244              	.L93:
 1245              	.LBE35:
 1246              	.LBE33:
 1247              	.LBB36:
 1248              	.LBB37:
 1249              		.loc 2 229 0
 1250              		.syntax unified
 1251              	@ 229 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1252 005e 84F31188 			msr basepri, r4	
 1253              	@ 0 "" 2
 1254              	.LVL158:
 1255              		.thumb
 1256              		.syntax unified
 1257              	.LBE37:
 1258              	.LBE36:
1236:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 1259              		.loc 1 1236 0
 1260 0062 38BD     		pop	{r3, r4, r5, pc}
 1261              		.cfi_endproc
 1262              	.LFE78:
 1263              		.size	xQueueGiveFromISR, .-xQueueGiveFromISR
 1264              		.section	.text.xQueueReceive,"ax",%progbits
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 71


 1265              		.align	2
 1266              		.global	xQueueReceive
 1267              		.thumb
 1268              		.thumb_func
 1269              		.type	xQueueReceive, %function
 1270              	xQueueReceive:
 1271              	.LFB79:
1240:..\FreeRTOS\Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1272              		.loc 1 1240 0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 16
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
 1276              	.LVL159:
 1277 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1278              		.cfi_def_cfa_offset 20
 1279              		.cfi_offset 4, -20
 1280              		.cfi_offset 5, -16
 1281              		.cfi_offset 6, -12
 1282              		.cfi_offset 7, -8
 1283              		.cfi_offset 14, -4
 1284 0002 85B0     		sub	sp, sp, #20
 1285              		.cfi_def_cfa_offset 40
 1286 0004 0446     		mov	r4, r0
 1287 0006 0F46     		mov	r7, r1
 1288 0008 0192     		str	r2, [sp, #4]
 1289              	.LVL160:
1241:..\FreeRTOS\Source/queue.c **** TimeOut_t xTimeOut;
 1290              		.loc 1 1241 0
 1291 000a 0026     		movs	r6, #0
 1292              	.LVL161:
 1293              	.L101:
1266:..\FreeRTOS\Source/queue.c **** 		{
 1294              		.loc 1 1266 0
 1295 000c FFF7FEFF 		bl	vPortEnterCritical
 1296              	.LVL162:
 1297              	.LBB38:
1268:..\FreeRTOS\Source/queue.c **** 
 1298              		.loc 1 1268 0
 1299 0010 A56B     		ldr	r5, [r4, #56]
 1300              	.LVL163:
1272:..\FreeRTOS\Source/queue.c **** 			{
 1301              		.loc 1 1272 0
 1302 0012 C5B1     		cbz	r5, .L102
1275:..\FreeRTOS\Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 1303              		.loc 1 1275 0
 1304 0014 3946     		mov	r1, r7
 1305 0016 2046     		mov	r0, r4
 1306 0018 FFF7FEFF 		bl	prvCopyDataFromQueue
 1307              	.LVL164:
1277:..\FreeRTOS\Source/queue.c **** 
 1308              		.loc 1 1277 0
 1309 001c 013D     		subs	r5, r5, #1
 1310              	.LVL165:
 1311 001e A563     		str	r5, [r4, #56]
1282:..\FreeRTOS\Source/queue.c **** 				{
 1312              		.loc 1 1282 0
 1313 0020 2369     		ldr	r3, [r4, #16]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 72


 1314 0022 63B1     		cbz	r3, .L103
1284:..\FreeRTOS\Source/queue.c **** 					{
 1315              		.loc 1 1284 0
 1316 0024 04F11000 		add	r0, r4, #16
 1317 0028 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1318              	.LVL166:
 1319 002c 38B1     		cbz	r0, .L103
1286:..\FreeRTOS\Source/queue.c **** 					}
 1320              		.loc 1 1286 0
 1321 002e 4FF08052 		mov	r2, #268435456
 1322 0032 304B     		ldr	r3, .L113
 1323 0034 1A60     		str	r2, [r3]
 1324              		.syntax unified
 1325              	@ 1286 "..\FreeRTOS\Source\queue.c" 1
 1326 0036 BFF34F8F 		dsb
 1327              	@ 0 "" 2
 1328              	@ 1286 "..\FreeRTOS\Source\queue.c" 1
 1329 003a BFF36F8F 		isb
 1330              	@ 0 "" 2
 1331              		.thumb
 1332              		.syntax unified
 1333              	.L103:
1298:..\FreeRTOS\Source/queue.c **** 				return pdPASS;
 1334              		.loc 1 1298 0
 1335 003e FFF7FEFF 		bl	vPortExitCritical
 1336              	.LVL167:
1299:..\FreeRTOS\Source/queue.c **** 			}
 1337              		.loc 1 1299 0
 1338 0042 0120     		movs	r0, #1
 1339 0044 53E0     		b	.L104
 1340              	.LVL168:
 1341              	.L102:
1303:..\FreeRTOS\Source/queue.c **** 				{
 1342              		.loc 1 1303 0
 1343 0046 019B     		ldr	r3, [sp, #4]
 1344 0048 1BB9     		cbnz	r3, .L105
1307:..\FreeRTOS\Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1345              		.loc 1 1307 0
 1346 004a FFF7FEFF 		bl	vPortExitCritical
 1347              	.LVL169:
1309:..\FreeRTOS\Source/queue.c **** 				}
 1348              		.loc 1 1309 0
 1349 004e 0020     		movs	r0, #0
 1350 0050 4DE0     		b	.L104
 1351              	.L105:
1311:..\FreeRTOS\Source/queue.c **** 				{
 1352              		.loc 1 1311 0
 1353 0052 1EB9     		cbnz	r6, .L106
1315:..\FreeRTOS\Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1354              		.loc 1 1315 0
 1355 0054 02A8     		add	r0, sp, #8
 1356 0056 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1357              	.LVL170:
1316:..\FreeRTOS\Source/queue.c **** 				}
 1358              		.loc 1 1316 0
 1359 005a 0126     		movs	r6, #1
 1360              	.LVL171:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 73


 1361              	.L106:
 1362              	.LBE38:
1325:..\FreeRTOS\Source/queue.c **** 
 1363              		.loc 1 1325 0
 1364 005c FFF7FEFF 		bl	vPortExitCritical
 1365              	.LVL172:
1330:..\FreeRTOS\Source/queue.c **** 		prvLockQueue( pxQueue );
 1366              		.loc 1 1330 0
 1367 0060 FFF7FEFF 		bl	vTaskSuspendAll
 1368              	.LVL173:
1331:..\FreeRTOS\Source/queue.c **** 
 1369              		.loc 1 1331 0
 1370 0064 FFF7FEFF 		bl	vPortEnterCritical
 1371              	.LVL174:
 1372 0068 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1373 006c 5BB2     		sxtb	r3, r3
 1374 006e B3F1FF3F 		cmp	r3, #-1
 1375 0072 02D1     		bne	.L107
1331:..\FreeRTOS\Source/queue.c **** 
 1376              		.loc 1 1331 0 is_stmt 0 discriminator 1
 1377 0074 0023     		movs	r3, #0
 1378 0076 84F84430 		strb	r3, [r4, #68]
 1379              	.L107:
1331:..\FreeRTOS\Source/queue.c **** 
 1380              		.loc 1 1331 0 discriminator 3
 1381 007a 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1382 007e 5BB2     		sxtb	r3, r3
 1383 0080 B3F1FF3F 		cmp	r3, #-1
 1384 0084 02D1     		bne	.L108
1331:..\FreeRTOS\Source/queue.c **** 
 1385              		.loc 1 1331 0 discriminator 4
 1386 0086 0023     		movs	r3, #0
 1387 0088 84F84530 		strb	r3, [r4, #69]
 1388              	.L108:
1331:..\FreeRTOS\Source/queue.c **** 
 1389              		.loc 1 1331 0 discriminator 6
 1390 008c FFF7FEFF 		bl	vPortExitCritical
 1391              	.LVL175:
1334:..\FreeRTOS\Source/queue.c **** 		{
 1392              		.loc 1 1334 0 is_stmt 1 discriminator 6
 1393 0090 01A9     		add	r1, sp, #4
 1394              	.LVL176:
 1395 0092 02A8     		add	r0, sp, #8
 1396 0094 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1397              	.LVL177:
 1398 0098 F0B9     		cbnz	r0, .L109
1338:..\FreeRTOS\Source/queue.c **** 			{
 1399              		.loc 1 1338 0
 1400 009a 2046     		mov	r0, r4
 1401 009c FFF7FEFF 		bl	prvIsQueueEmpty
 1402              	.LVL178:
 1403 00a0 A0B1     		cbz	r0, .L110
1341:..\FreeRTOS\Source/queue.c **** 				prvUnlockQueue( pxQueue );
 1404              		.loc 1 1341 0
 1405 00a2 0199     		ldr	r1, [sp, #4]
 1406 00a4 04F12400 		add	r0, r4, #36
 1407 00a8 FFF7FEFF 		bl	vTaskPlaceOnEventList
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 74


 1408              	.LVL179:
1342:..\FreeRTOS\Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1409              		.loc 1 1342 0
 1410 00ac 2046     		mov	r0, r4
 1411 00ae FFF7FEFF 		bl	prvUnlockQueue
 1412              	.LVL180:
1343:..\FreeRTOS\Source/queue.c **** 				{
 1413              		.loc 1 1343 0
 1414 00b2 FFF7FEFF 		bl	xTaskResumeAll
 1415              	.LVL181:
 1416 00b6 0028     		cmp	r0, #0
 1417 00b8 A8D1     		bne	.L101
1345:..\FreeRTOS\Source/queue.c **** 				}
 1418              		.loc 1 1345 0
 1419 00ba 4FF08052 		mov	r2, #268435456
 1420 00be 0D4B     		ldr	r3, .L113
 1421 00c0 1A60     		str	r2, [r3]
 1422              		.syntax unified
 1423              	@ 1345 "..\FreeRTOS\Source\queue.c" 1
 1424 00c2 BFF34F8F 		dsb
 1425              	@ 0 "" 2
 1426              	@ 1345 "..\FreeRTOS\Source\queue.c" 1
 1427 00c6 BFF36F8F 		isb
 1428              	@ 0 "" 2
 1429              		.thumb
 1430              		.syntax unified
 1431 00ca 9FE7     		b	.L101
 1432              	.L110:
1356:..\FreeRTOS\Source/queue.c **** 				( void ) xTaskResumeAll();
 1433              		.loc 1 1356 0
 1434 00cc 2046     		mov	r0, r4
 1435 00ce FFF7FEFF 		bl	prvUnlockQueue
 1436              	.LVL182:
1357:..\FreeRTOS\Source/queue.c **** 			}
 1437              		.loc 1 1357 0
 1438 00d2 FFF7FEFF 		bl	xTaskResumeAll
 1439              	.LVL183:
 1440 00d6 99E7     		b	.L101
 1441              	.L109:
1364:..\FreeRTOS\Source/queue.c **** 			( void ) xTaskResumeAll();
 1442              		.loc 1 1364 0
 1443 00d8 2046     		mov	r0, r4
 1444 00da FFF7FEFF 		bl	prvUnlockQueue
 1445              	.LVL184:
1365:..\FreeRTOS\Source/queue.c **** 
 1446              		.loc 1 1365 0
 1447 00de FFF7FEFF 		bl	xTaskResumeAll
 1448              	.LVL185:
1367:..\FreeRTOS\Source/queue.c **** 			{
 1449              		.loc 1 1367 0
 1450 00e2 2046     		mov	r0, r4
 1451 00e4 FFF7FEFF 		bl	prvIsQueueEmpty
 1452              	.LVL186:
 1453 00e8 0028     		cmp	r0, #0
 1454 00ea 8FD0     		beq	.L101
1370:..\FreeRTOS\Source/queue.c **** 			}
 1455              		.loc 1 1370 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 75


 1456 00ec 0020     		movs	r0, #0
 1457              	.LVL187:
 1458              	.L104:
1378:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 1459              		.loc 1 1378 0
 1460 00ee 05B0     		add	sp, sp, #20
 1461              		.cfi_def_cfa_offset 20
 1462              		@ sp needed
 1463 00f0 F0BD     		pop	{r4, r5, r6, r7, pc}
 1464              	.LVL188:
 1465              	.L114:
 1466 00f2 00BF     		.align	2
 1467              	.L113:
 1468 00f4 04ED00E0 		.word	-536810236
 1469              		.cfi_endproc
 1470              	.LFE79:
 1471              		.size	xQueueReceive, .-xQueueReceive
 1472              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 1473              		.align	2
 1474              		.global	xQueueSemaphoreTake
 1475              		.thumb
 1476              		.thumb_func
 1477              		.type	xQueueSemaphoreTake, %function
 1478              	xQueueSemaphoreTake:
 1479              	.LFB80:
1382:..\FreeRTOS\Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1480              		.loc 1 1382 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 16
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
 1484              	.LVL189:
 1485 0000 70B5     		push	{r4, r5, r6, lr}
 1486              		.cfi_def_cfa_offset 16
 1487              		.cfi_offset 4, -16
 1488              		.cfi_offset 5, -12
 1489              		.cfi_offset 6, -8
 1490              		.cfi_offset 14, -4
 1491 0002 84B0     		sub	sp, sp, #16
 1492              		.cfi_def_cfa_offset 32
 1493 0004 0446     		mov	r4, r0
 1494 0006 0191     		str	r1, [sp, #4]
 1495              	.LVL190:
1388:..\FreeRTOS\Source/queue.c **** #endif
 1496              		.loc 1 1388 0
 1497 0008 0026     		movs	r6, #0
1383:..\FreeRTOS\Source/queue.c **** TimeOut_t xTimeOut;
 1498              		.loc 1 1383 0
 1499 000a 3546     		mov	r5, r6
 1500              	.LVL191:
 1501              	.L116:
1412:..\FreeRTOS\Source/queue.c **** 		{
 1502              		.loc 1 1412 0
 1503 000c FFF7FEFF 		bl	vPortEnterCritical
 1504              	.LVL192:
 1505              	.LBB39:
1416:..\FreeRTOS\Source/queue.c **** 
 1506              		.loc 1 1416 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 76


 1507 0010 A36B     		ldr	r3, [r4, #56]
 1508              	.LVL193:
1420:..\FreeRTOS\Source/queue.c **** 			{
 1509              		.loc 1 1420 0
 1510 0012 CBB1     		cbz	r3, .L117
1426:..\FreeRTOS\Source/queue.c **** 
 1511              		.loc 1 1426 0
 1512 0014 013B     		subs	r3, r3, #1
 1513              	.LVL194:
 1514 0016 A363     		str	r3, [r4, #56]
1430:..\FreeRTOS\Source/queue.c **** 					{
 1515              		.loc 1 1430 0
 1516 0018 2368     		ldr	r3, [r4]
 1517              	.LVL195:
 1518 001a 13B9     		cbnz	r3, .L118
1434:..\FreeRTOS\Source/queue.c **** 					}
 1519              		.loc 1 1434 0
 1520 001c FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 1521              	.LVL196:
 1522 0020 6060     		str	r0, [r4, #4]
 1523              	.L118:
1445:..\FreeRTOS\Source/queue.c **** 				{
 1524              		.loc 1 1445 0
 1525 0022 2369     		ldr	r3, [r4, #16]
 1526 0024 63B1     		cbz	r3, .L119
1447:..\FreeRTOS\Source/queue.c **** 					{
 1527              		.loc 1 1447 0
 1528 0026 04F11000 		add	r0, r4, #16
 1529 002a FFF7FEFF 		bl	xTaskRemoveFromEventList
 1530              	.LVL197:
 1531 002e 38B1     		cbz	r0, .L119
1449:..\FreeRTOS\Source/queue.c **** 					}
 1532              		.loc 1 1449 0
 1533 0030 4FF08052 		mov	r2, #268435456
 1534 0034 3B4B     		ldr	r3, .L131
 1535 0036 1A60     		str	r2, [r3]
 1536              		.syntax unified
 1537              	@ 1449 "..\FreeRTOS\Source\queue.c" 1
 1538 0038 BFF34F8F 		dsb
 1539              	@ 0 "" 2
 1540              	@ 1449 "..\FreeRTOS\Source\queue.c" 1
 1541 003c BFF36F8F 		isb
 1542              	@ 0 "" 2
 1543              		.thumb
 1544              		.syntax unified
 1545              	.L119:
1461:..\FreeRTOS\Source/queue.c **** 				return pdPASS;
 1546              		.loc 1 1461 0
 1547 0040 FFF7FEFF 		bl	vPortExitCritical
 1548              	.LVL198:
1462:..\FreeRTOS\Source/queue.c **** 			}
 1549              		.loc 1 1462 0
 1550 0044 0120     		movs	r0, #1
 1551 0046 6BE0     		b	.L120
 1552              	.LVL199:
 1553              	.L117:
1466:..\FreeRTOS\Source/queue.c **** 				{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 77


 1554              		.loc 1 1466 0
 1555 0048 019B     		ldr	r3, [sp, #4]
 1556              	.LVL200:
 1557 004a 1BB9     		cbnz	r3, .L121
1479:..\FreeRTOS\Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1558              		.loc 1 1479 0
 1559 004c FFF7FEFF 		bl	vPortExitCritical
 1560              	.LVL201:
1481:..\FreeRTOS\Source/queue.c **** 				}
 1561              		.loc 1 1481 0
 1562 0050 0020     		movs	r0, #0
 1563 0052 65E0     		b	.L120
 1564              	.L121:
1483:..\FreeRTOS\Source/queue.c **** 				{
 1565              		.loc 1 1483 0
 1566 0054 1DB9     		cbnz	r5, .L122
1487:..\FreeRTOS\Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1567              		.loc 1 1487 0
 1568 0056 02A8     		add	r0, sp, #8
 1569 0058 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1570              	.LVL202:
1488:..\FreeRTOS\Source/queue.c **** 				}
 1571              		.loc 1 1488 0
 1572 005c 0125     		movs	r5, #1
 1573              	.LVL203:
 1574              	.L122:
 1575              	.LBE39:
1497:..\FreeRTOS\Source/queue.c **** 
 1576              		.loc 1 1497 0
 1577 005e FFF7FEFF 		bl	vPortExitCritical
 1578              	.LVL204:
1502:..\FreeRTOS\Source/queue.c **** 		prvLockQueue( pxQueue );
 1579              		.loc 1 1502 0
 1580 0062 FFF7FEFF 		bl	vTaskSuspendAll
 1581              	.LVL205:
1503:..\FreeRTOS\Source/queue.c **** 
 1582              		.loc 1 1503 0
 1583 0066 FFF7FEFF 		bl	vPortEnterCritical
 1584              	.LVL206:
 1585 006a 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1586 006e 5BB2     		sxtb	r3, r3
 1587 0070 B3F1FF3F 		cmp	r3, #-1
 1588 0074 02D1     		bne	.L123
1503:..\FreeRTOS\Source/queue.c **** 
 1589              		.loc 1 1503 0 is_stmt 0 discriminator 1
 1590 0076 0023     		movs	r3, #0
 1591 0078 84F84430 		strb	r3, [r4, #68]
 1592              	.L123:
1503:..\FreeRTOS\Source/queue.c **** 
 1593              		.loc 1 1503 0 discriminator 3
 1594 007c 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1595 0080 5BB2     		sxtb	r3, r3
 1596 0082 B3F1FF3F 		cmp	r3, #-1
 1597 0086 02D1     		bne	.L124
1503:..\FreeRTOS\Source/queue.c **** 
 1598              		.loc 1 1503 0 discriminator 4
 1599 0088 0023     		movs	r3, #0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 78


 1600 008a 84F84530 		strb	r3, [r4, #69]
 1601              	.L124:
1503:..\FreeRTOS\Source/queue.c **** 
 1602              		.loc 1 1503 0 discriminator 6
 1603 008e FFF7FEFF 		bl	vPortExitCritical
 1604              	.LVL207:
1506:..\FreeRTOS\Source/queue.c **** 		{
 1605              		.loc 1 1506 0 is_stmt 1 discriminator 6
 1606 0092 01A9     		add	r1, sp, #4
 1607              	.LVL208:
 1608 0094 02A8     		add	r0, sp, #8
 1609 0096 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1610              	.LVL209:
 1611 009a 40BB     		cbnz	r0, .L125
1512:..\FreeRTOS\Source/queue.c **** 			{
 1612              		.loc 1 1512 0
 1613 009c 2046     		mov	r0, r4
 1614 009e FFF7FEFF 		bl	prvIsQueueEmpty
 1615              	.LVL210:
 1616 00a2 F0B1     		cbz	r0, .L126
1518:..\FreeRTOS\Source/queue.c **** 					{
 1617              		.loc 1 1518 0
 1618 00a4 2368     		ldr	r3, [r4]
 1619 00a6 3BB9     		cbnz	r3, .L127
1520:..\FreeRTOS\Source/queue.c **** 						{
 1620              		.loc 1 1520 0
 1621 00a8 FFF7FEFF 		bl	vPortEnterCritical
 1622              	.LVL211:
1522:..\FreeRTOS\Source/queue.c **** 						}
 1623              		.loc 1 1522 0
 1624 00ac 6068     		ldr	r0, [r4, #4]
 1625 00ae FFF7FEFF 		bl	xTaskPriorityInherit
 1626              	.LVL212:
 1627 00b2 0646     		mov	r6, r0
 1628              	.LVL213:
1524:..\FreeRTOS\Source/queue.c **** 					}
 1629              		.loc 1 1524 0
 1630 00b4 FFF7FEFF 		bl	vPortExitCritical
 1631              	.LVL214:
 1632              	.L127:
1533:..\FreeRTOS\Source/queue.c **** 				prvUnlockQueue( pxQueue );
 1633              		.loc 1 1533 0
 1634 00b8 0199     		ldr	r1, [sp, #4]
 1635 00ba 04F12400 		add	r0, r4, #36
 1636 00be FFF7FEFF 		bl	vTaskPlaceOnEventList
 1637              	.LVL215:
1534:..\FreeRTOS\Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1638              		.loc 1 1534 0
 1639 00c2 2046     		mov	r0, r4
 1640 00c4 FFF7FEFF 		bl	prvUnlockQueue
 1641              	.LVL216:
1535:..\FreeRTOS\Source/queue.c **** 				{
 1642              		.loc 1 1535 0
 1643 00c8 FFF7FEFF 		bl	xTaskResumeAll
 1644              	.LVL217:
 1645 00cc 0028     		cmp	r0, #0
 1646 00ce 9DD1     		bne	.L116
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 79


1537:..\FreeRTOS\Source/queue.c **** 				}
 1647              		.loc 1 1537 0
 1648 00d0 4FF08052 		mov	r2, #268435456
 1649 00d4 134B     		ldr	r3, .L131
 1650 00d6 1A60     		str	r2, [r3]
 1651              		.syntax unified
 1652              	@ 1537 "..\FreeRTOS\Source\queue.c" 1
 1653 00d8 BFF34F8F 		dsb
 1654              	@ 0 "" 2
 1655              	@ 1537 "..\FreeRTOS\Source\queue.c" 1
 1656 00dc BFF36F8F 		isb
 1657              	@ 0 "" 2
 1658              		.thumb
 1659              		.syntax unified
 1660 00e0 94E7     		b	.L116
 1661              	.L126:
1548:..\FreeRTOS\Source/queue.c **** 				( void ) xTaskResumeAll();
 1662              		.loc 1 1548 0
 1663 00e2 2046     		mov	r0, r4
 1664 00e4 FFF7FEFF 		bl	prvUnlockQueue
 1665              	.LVL218:
1549:..\FreeRTOS\Source/queue.c **** 			}
 1666              		.loc 1 1549 0
 1667 00e8 FFF7FEFF 		bl	xTaskResumeAll
 1668              	.LVL219:
 1669 00ec 8EE7     		b	.L116
 1670              	.L125:
1555:..\FreeRTOS\Source/queue.c **** 			( void ) xTaskResumeAll();
 1671              		.loc 1 1555 0
 1672 00ee 2046     		mov	r0, r4
 1673 00f0 FFF7FEFF 		bl	prvUnlockQueue
 1674              	.LVL220:
1556:..\FreeRTOS\Source/queue.c **** 
 1675              		.loc 1 1556 0
 1676 00f4 FFF7FEFF 		bl	xTaskResumeAll
 1677              	.LVL221:
1562:..\FreeRTOS\Source/queue.c **** 			{
 1678              		.loc 1 1562 0
 1679 00f8 2046     		mov	r0, r4
 1680 00fa FFF7FEFF 		bl	prvIsQueueEmpty
 1681              	.LVL222:
 1682 00fe 0028     		cmp	r0, #0
 1683 0100 84D0     		beq	.L116
1569:..\FreeRTOS\Source/queue.c **** 					{
 1684              		.loc 1 1569 0
 1685 0102 66B1     		cbz	r6, .L129
1571:..\FreeRTOS\Source/queue.c **** 						{
 1686              		.loc 1 1571 0
 1687 0104 FFF7FEFF 		bl	vPortEnterCritical
 1688              	.LVL223:
 1689              	.LBB40:
1580:..\FreeRTOS\Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
 1690              		.loc 1 1580 0
 1691 0108 2046     		mov	r0, r4
 1692 010a FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 1693              	.LVL224:
1581:..\FreeRTOS\Source/queue.c **** 						}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 80


 1694              		.loc 1 1581 0
 1695 010e 0146     		mov	r1, r0
 1696 0110 6068     		ldr	r0, [r4, #4]
 1697              	.LVL225:
 1698 0112 FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 1699              	.LVL226:
 1700              	.LBE40:
1583:..\FreeRTOS\Source/queue.c **** 					}
 1701              		.loc 1 1583 0
 1702 0116 FFF7FEFF 		bl	vPortExitCritical
 1703              	.LVL227:
1589:..\FreeRTOS\Source/queue.c **** 			}
 1704              		.loc 1 1589 0
 1705 011a 0020     		movs	r0, #0
 1706 011c 00E0     		b	.L120
 1707              	.L129:
 1708 011e 0020     		movs	r0, #0
 1709              	.L120:
1597:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 1710              		.loc 1 1597 0
 1711 0120 04B0     		add	sp, sp, #16
 1712              		.cfi_def_cfa_offset 16
 1713              		@ sp needed
 1714 0122 70BD     		pop	{r4, r5, r6, pc}
 1715              	.LVL228:
 1716              	.L132:
 1717              		.align	2
 1718              	.L131:
 1719 0124 04ED00E0 		.word	-536810236
 1720              		.cfi_endproc
 1721              	.LFE80:
 1722              		.size	xQueueSemaphoreTake, .-xQueueSemaphoreTake
 1723              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 1724              		.align	2
 1725              		.global	xQueueTakeMutexRecursive
 1726              		.thumb
 1727              		.thumb_func
 1728              		.type	xQueueTakeMutexRecursive, %function
 1729              	xQueueTakeMutexRecursive:
 1730              	.LFB74:
 630:..\FreeRTOS\Source/queue.c **** 	BaseType_t xReturn;
 1731              		.loc 1 630 0
 1732              		.cfi_startproc
 1733              		@ args = 0, pretend = 0, frame = 0
 1734              		@ frame_needed = 0, uses_anonymous_args = 0
 1735              	.LVL229:
 1736 0000 70B5     		push	{r4, r5, r6, lr}
 1737              		.cfi_def_cfa_offset 16
 1738              		.cfi_offset 4, -16
 1739              		.cfi_offset 5, -12
 1740              		.cfi_offset 6, -8
 1741              		.cfi_offset 14, -4
 1742 0002 0446     		mov	r4, r0
 1743 0004 0E46     		mov	r6, r1
 1744              	.LVL230:
 641:..\FreeRTOS\Source/queue.c **** 		{
 1745              		.loc 1 641 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 81


 1746 0006 4568     		ldr	r5, [r0, #4]
 1747 0008 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1748              	.LVL231:
 1749 000c 8542     		cmp	r5, r0
 1750 000e 04D1     		bne	.L134
 643:..\FreeRTOS\Source/queue.c **** 			xReturn = pdPASS;
 1751              		.loc 1 643 0
 1752 0010 E368     		ldr	r3, [r4, #12]
 1753 0012 0133     		adds	r3, r3, #1
 1754 0014 E360     		str	r3, [r4, #12]
 1755              	.LVL232:
 644:..\FreeRTOS\Source/queue.c **** 		}
 1756              		.loc 1 644 0
 1757 0016 0123     		movs	r3, #1
 1758 0018 08E0     		b	.L135
 1759              	.LVL233:
 1760              	.L134:
 648:..\FreeRTOS\Source/queue.c **** 
 1761              		.loc 1 648 0
 1762 001a 3146     		mov	r1, r6
 1763 001c 2046     		mov	r0, r4
 1764 001e FFF7FEFF 		bl	xQueueSemaphoreTake
 1765              	.LVL234:
 653:..\FreeRTOS\Source/queue.c **** 			{
 1766              		.loc 1 653 0
 1767 0022 0346     		mov	r3, r0
 1768 0024 10B1     		cbz	r0, .L135
 655:..\FreeRTOS\Source/queue.c **** 			}
 1769              		.loc 1 655 0
 1770 0026 E268     		ldr	r2, [r4, #12]
 1771 0028 0132     		adds	r2, r2, #1
 1772 002a E260     		str	r2, [r4, #12]
 1773              	.LVL235:
 1774              	.L135:
 664:..\FreeRTOS\Source/queue.c **** 
 1775              		.loc 1 664 0
 1776 002c 1846     		mov	r0, r3
 1777 002e 70BD     		pop	{r4, r5, r6, pc}
 1778              		.cfi_endproc
 1779              	.LFE74:
 1780              		.size	xQueueTakeMutexRecursive, .-xQueueTakeMutexRecursive
 1781              		.section	.text.xQueuePeek,"ax",%progbits
 1782              		.align	2
 1783              		.global	xQueuePeek
 1784              		.thumb
 1785              		.thumb_func
 1786              		.type	xQueuePeek, %function
 1787              	xQueuePeek:
 1788              	.LFB81:
1601:..\FreeRTOS\Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1789              		.loc 1 1601 0
 1790              		.cfi_startproc
 1791              		@ args = 0, pretend = 0, frame = 16
 1792              		@ frame_needed = 0, uses_anonymous_args = 0
 1793              	.LVL236:
 1794 0000 70B5     		push	{r4, r5, r6, lr}
 1795              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 82


 1796              		.cfi_offset 4, -16
 1797              		.cfi_offset 5, -12
 1798              		.cfi_offset 6, -8
 1799              		.cfi_offset 14, -4
 1800 0002 84B0     		sub	sp, sp, #16
 1801              		.cfi_def_cfa_offset 32
 1802 0004 0446     		mov	r4, r0
 1803 0006 0E46     		mov	r6, r1
 1804 0008 0192     		str	r2, [sp, #4]
 1805              	.LVL237:
1602:..\FreeRTOS\Source/queue.c **** TimeOut_t xTimeOut;
 1806              		.loc 1 1602 0
 1807 000a 0025     		movs	r5, #0
 1808              	.LVL238:
 1809              	.L138:
1628:..\FreeRTOS\Source/queue.c **** 		{
 1810              		.loc 1 1628 0
 1811 000c FFF7FEFF 		bl	vPortEnterCritical
 1812              	.LVL239:
 1813              	.LBB41:
1630:..\FreeRTOS\Source/queue.c **** 
 1814              		.loc 1 1630 0
 1815 0010 A36B     		ldr	r3, [r4, #56]
 1816              	.LVL240:
1634:..\FreeRTOS\Source/queue.c **** 			{
 1817              		.loc 1 1634 0
 1818 0012 C3B1     		cbz	r3, .L139
1639:..\FreeRTOS\Source/queue.c **** 
 1819              		.loc 1 1639 0
 1820 0014 E568     		ldr	r5, [r4, #12]
 1821              	.LVL241:
1641:..\FreeRTOS\Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 1822              		.loc 1 1641 0
 1823 0016 3146     		mov	r1, r6
 1824 0018 2046     		mov	r0, r4
 1825 001a FFF7FEFF 		bl	prvCopyDataFromQueue
 1826              	.LVL242:
1645:..\FreeRTOS\Source/queue.c **** 
 1827              		.loc 1 1645 0
 1828 001e E560     		str	r5, [r4, #12]
1649:..\FreeRTOS\Source/queue.c **** 				{
 1829              		.loc 1 1649 0
 1830 0020 636A     		ldr	r3, [r4, #36]
 1831 0022 63B1     		cbz	r3, .L140
1651:..\FreeRTOS\Source/queue.c **** 					{
 1832              		.loc 1 1651 0
 1833 0024 04F12400 		add	r0, r4, #36
 1834 0028 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1835              	.LVL243:
 1836 002c 38B1     		cbz	r0, .L140
1654:..\FreeRTOS\Source/queue.c **** 					}
 1837              		.loc 1 1654 0
 1838 002e 4FF08052 		mov	r2, #268435456
 1839 0032 304B     		ldr	r3, .L150
 1840 0034 1A60     		str	r2, [r3]
 1841              		.syntax unified
 1842              	@ 1654 "..\FreeRTOS\Source\queue.c" 1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 83


 1843 0036 BFF34F8F 		dsb
 1844              	@ 0 "" 2
 1845              	@ 1654 "..\FreeRTOS\Source\queue.c" 1
 1846 003a BFF36F8F 		isb
 1847              	@ 0 "" 2
 1848              		.thumb
 1849              		.syntax unified
 1850              	.L140:
1666:..\FreeRTOS\Source/queue.c **** 				return pdPASS;
 1851              		.loc 1 1666 0
 1852 003e FFF7FEFF 		bl	vPortExitCritical
 1853              	.LVL244:
1667:..\FreeRTOS\Source/queue.c **** 			}
 1854              		.loc 1 1667 0
 1855 0042 0120     		movs	r0, #1
 1856 0044 53E0     		b	.L141
 1857              	.LVL245:
 1858              	.L139:
1671:..\FreeRTOS\Source/queue.c **** 				{
 1859              		.loc 1 1671 0
 1860 0046 019B     		ldr	r3, [sp, #4]
 1861              	.LVL246:
 1862 0048 1BB9     		cbnz	r3, .L142
1675:..\FreeRTOS\Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 1863              		.loc 1 1675 0
 1864 004a FFF7FEFF 		bl	vPortExitCritical
 1865              	.LVL247:
1677:..\FreeRTOS\Source/queue.c **** 				}
 1866              		.loc 1 1677 0
 1867 004e 0020     		movs	r0, #0
 1868 0050 4DE0     		b	.L141
 1869              	.L142:
1679:..\FreeRTOS\Source/queue.c **** 				{
 1870              		.loc 1 1679 0
 1871 0052 1DB9     		cbnz	r5, .L143
1684:..\FreeRTOS\Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1872              		.loc 1 1684 0
 1873 0054 02A8     		add	r0, sp, #8
 1874 0056 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1875              	.LVL248:
1685:..\FreeRTOS\Source/queue.c **** 				}
 1876              		.loc 1 1685 0
 1877 005a 0125     		movs	r5, #1
 1878              	.LVL249:
 1879              	.L143:
 1880              	.LBE41:
1694:..\FreeRTOS\Source/queue.c **** 
 1881              		.loc 1 1694 0
 1882 005c FFF7FEFF 		bl	vPortExitCritical
 1883              	.LVL250:
1699:..\FreeRTOS\Source/queue.c **** 		prvLockQueue( pxQueue );
 1884              		.loc 1 1699 0
 1885 0060 FFF7FEFF 		bl	vTaskSuspendAll
 1886              	.LVL251:
1700:..\FreeRTOS\Source/queue.c **** 
 1887              		.loc 1 1700 0
 1888 0064 FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 84


 1889              	.LVL252:
 1890 0068 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1891 006c 5BB2     		sxtb	r3, r3
 1892 006e B3F1FF3F 		cmp	r3, #-1
 1893 0072 02D1     		bne	.L144
1700:..\FreeRTOS\Source/queue.c **** 
 1894              		.loc 1 1700 0 is_stmt 0 discriminator 1
 1895 0074 0023     		movs	r3, #0
 1896 0076 84F84430 		strb	r3, [r4, #68]
 1897              	.L144:
1700:..\FreeRTOS\Source/queue.c **** 
 1898              		.loc 1 1700 0 discriminator 3
 1899 007a 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1900 007e 5BB2     		sxtb	r3, r3
 1901 0080 B3F1FF3F 		cmp	r3, #-1
 1902 0084 02D1     		bne	.L145
1700:..\FreeRTOS\Source/queue.c **** 
 1903              		.loc 1 1700 0 discriminator 4
 1904 0086 0023     		movs	r3, #0
 1905 0088 84F84530 		strb	r3, [r4, #69]
 1906              	.L145:
1700:..\FreeRTOS\Source/queue.c **** 
 1907              		.loc 1 1700 0 discriminator 6
 1908 008c FFF7FEFF 		bl	vPortExitCritical
 1909              	.LVL253:
1703:..\FreeRTOS\Source/queue.c **** 		{
 1910              		.loc 1 1703 0 is_stmt 1 discriminator 6
 1911 0090 01A9     		add	r1, sp, #4
 1912              	.LVL254:
 1913 0092 02A8     		add	r0, sp, #8
 1914 0094 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1915              	.LVL255:
 1916 0098 F0B9     		cbnz	r0, .L146
1707:..\FreeRTOS\Source/queue.c **** 			{
 1917              		.loc 1 1707 0
 1918 009a 2046     		mov	r0, r4
 1919 009c FFF7FEFF 		bl	prvIsQueueEmpty
 1920              	.LVL256:
 1921 00a0 A0B1     		cbz	r0, .L147
1710:..\FreeRTOS\Source/queue.c **** 				prvUnlockQueue( pxQueue );
 1922              		.loc 1 1710 0
 1923 00a2 0199     		ldr	r1, [sp, #4]
 1924 00a4 04F12400 		add	r0, r4, #36
 1925 00a8 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1926              	.LVL257:
1711:..\FreeRTOS\Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1927              		.loc 1 1711 0
 1928 00ac 2046     		mov	r0, r4
 1929 00ae FFF7FEFF 		bl	prvUnlockQueue
 1930              	.LVL258:
1712:..\FreeRTOS\Source/queue.c **** 				{
 1931              		.loc 1 1712 0
 1932 00b2 FFF7FEFF 		bl	xTaskResumeAll
 1933              	.LVL259:
 1934 00b6 0028     		cmp	r0, #0
 1935 00b8 A8D1     		bne	.L138
1714:..\FreeRTOS\Source/queue.c **** 				}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 85


 1936              		.loc 1 1714 0
 1937 00ba 4FF08052 		mov	r2, #268435456
 1938 00be 0D4B     		ldr	r3, .L150
 1939 00c0 1A60     		str	r2, [r3]
 1940              		.syntax unified
 1941              	@ 1714 "..\FreeRTOS\Source\queue.c" 1
 1942 00c2 BFF34F8F 		dsb
 1943              	@ 0 "" 2
 1944              	@ 1714 "..\FreeRTOS\Source\queue.c" 1
 1945 00c6 BFF36F8F 		isb
 1946              	@ 0 "" 2
 1947              		.thumb
 1948              		.syntax unified
 1949 00ca 9FE7     		b	.L138
 1950              	.L147:
1725:..\FreeRTOS\Source/queue.c **** 				( void ) xTaskResumeAll();
 1951              		.loc 1 1725 0
 1952 00cc 2046     		mov	r0, r4
 1953 00ce FFF7FEFF 		bl	prvUnlockQueue
 1954              	.LVL260:
1726:..\FreeRTOS\Source/queue.c **** 			}
 1955              		.loc 1 1726 0
 1956 00d2 FFF7FEFF 		bl	xTaskResumeAll
 1957              	.LVL261:
 1958 00d6 99E7     		b	.L138
 1959              	.L146:
1733:..\FreeRTOS\Source/queue.c **** 			( void ) xTaskResumeAll();
 1960              		.loc 1 1733 0
 1961 00d8 2046     		mov	r0, r4
 1962 00da FFF7FEFF 		bl	prvUnlockQueue
 1963              	.LVL262:
1734:..\FreeRTOS\Source/queue.c **** 
 1964              		.loc 1 1734 0
 1965 00de FFF7FEFF 		bl	xTaskResumeAll
 1966              	.LVL263:
1736:..\FreeRTOS\Source/queue.c **** 			{
 1967              		.loc 1 1736 0
 1968 00e2 2046     		mov	r0, r4
 1969 00e4 FFF7FEFF 		bl	prvIsQueueEmpty
 1970              	.LVL264:
 1971 00e8 0028     		cmp	r0, #0
 1972 00ea 8FD0     		beq	.L138
1739:..\FreeRTOS\Source/queue.c **** 			}
 1973              		.loc 1 1739 0
 1974 00ec 0020     		movs	r0, #0
 1975              	.LVL265:
 1976              	.L141:
1747:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 1977              		.loc 1 1747 0
 1978 00ee 04B0     		add	sp, sp, #16
 1979              		.cfi_def_cfa_offset 16
 1980              		@ sp needed
 1981 00f0 70BD     		pop	{r4, r5, r6, pc}
 1982              	.LVL266:
 1983              	.L151:
 1984 00f2 00BF     		.align	2
 1985              	.L150:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 86


 1986 00f4 04ED00E0 		.word	-536810236
 1987              		.cfi_endproc
 1988              	.LFE81:
 1989              		.size	xQueuePeek, .-xQueuePeek
 1990              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 1991              		.align	2
 1992              		.global	xQueueReceiveFromISR
 1993              		.thumb
 1994              		.thumb_func
 1995              		.type	xQueueReceiveFromISR, %function
 1996              	xQueueReceiveFromISR:
 1997              	.LFB82:
1751:..\FreeRTOS\Source/queue.c **** BaseType_t xReturn;
 1998              		.loc 1 1751 0
 1999              		.cfi_startproc
 2000              		@ args = 0, pretend = 0, frame = 0
 2001              		@ frame_needed = 0, uses_anonymous_args = 0
 2002              	.LVL267:
 2003 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2004              		.cfi_def_cfa_offset 24
 2005              		.cfi_offset 4, -24
 2006              		.cfi_offset 5, -20
 2007              		.cfi_offset 6, -16
 2008              		.cfi_offset 7, -12
 2009              		.cfi_offset 8, -8
 2010              		.cfi_offset 14, -4
 2011              	.LVL268:
 2012              	.LBB42:
 2013              	.LBB43:
 211:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 2014              		.loc 2 211 0
 2015              		.syntax unified
 2016              	@ 211 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 2017 0004 EFF31186 			mrs r6, basepri											
 2018 0008 4FF0A003 		mov r3, #160												
 2019 000c 83F31188 		msr basepri, r3											
 2020 0010 BFF36F8F 		isb														
 2021 0014 BFF34F8F 		dsb														
 2022              	
 2023              	@ 0 "" 2
 2024              		.thumb
 2025              		.syntax unified
 2026              	.LBE43:
 2027              	.LBE42:
 2028              	.LBB44:
1777:..\FreeRTOS\Source/queue.c **** 
 2029              		.loc 1 1777 0
 2030 0018 846B     		ldr	r4, [r0, #56]
 2031              	.LVL269:
1780:..\FreeRTOS\Source/queue.c **** 		{
 2032              		.loc 1 1780 0
 2033 001a FCB1     		cbz	r4, .L155
 2034 001c 9046     		mov	r8, r2
 2035 001e 0746     		mov	r7, r0
 2036              	.LBB45:
1782:..\FreeRTOS\Source/queue.c **** 
 2037              		.loc 1 1782 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 87


 2038 0020 90F84450 		ldrb	r5, [r0, #68]	@ zero_extendqisi2
 2039 0024 6DB2     		sxtb	r5, r5
 2040              	.LVL270:
1786:..\FreeRTOS\Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 2041              		.loc 1 1786 0
 2042 0026 FFF7FEFF 		bl	prvCopyDataFromQueue
 2043              	.LVL271:
1787:..\FreeRTOS\Source/queue.c **** 
 2044              		.loc 1 1787 0
 2045 002a 013C     		subs	r4, r4, #1
 2046              	.LVL272:
 2047 002c BC63     		str	r4, [r7, #56]
1793:..\FreeRTOS\Source/queue.c **** 			{
 2048              		.loc 1 1793 0
 2049 002e B5F1FF3F 		cmp	r5, #-1
 2050 0032 0DD1     		bne	.L154
1795:..\FreeRTOS\Source/queue.c **** 				{
 2051              		.loc 1 1795 0
 2052 0034 3B69     		ldr	r3, [r7, #16]
 2053 0036 9BB1     		cbz	r3, .L156
1797:..\FreeRTOS\Source/queue.c **** 					{
 2054              		.loc 1 1797 0
 2055 0038 07F11000 		add	r0, r7, #16
 2056 003c FFF7FEFF 		bl	xTaskRemoveFromEventList
 2057              	.LVL273:
 2058 0040 80B1     		cbz	r0, .L157
1801:..\FreeRTOS\Source/queue.c **** 						{
 2059              		.loc 1 1801 0
 2060 0042 B8F1000F 		cmp	r8, #0
 2061 0046 0FD0     		beq	.L158
1803:..\FreeRTOS\Source/queue.c **** 						}
 2062              		.loc 1 1803 0
 2063 0048 0120     		movs	r0, #1
 2064 004a C8F80000 		str	r0, [r8]
 2065 004e 0CE0     		b	.L153
 2066              	.L154:
1824:..\FreeRTOS\Source/queue.c **** 			}
 2067              		.loc 1 1824 0
 2068 0050 0135     		adds	r5, r5, #1
 2069              	.LVL274:
 2070 0052 6DB2     		sxtb	r5, r5
 2071              	.LVL275:
 2072 0054 87F84450 		strb	r5, [r7, #68]
1827:..\FreeRTOS\Source/queue.c **** 		}
 2073              		.loc 1 1827 0
 2074 0058 0120     		movs	r0, #1
 2075 005a 06E0     		b	.L153
 2076              	.LVL276:
 2077              	.L155:
 2078              	.LBE45:
1831:..\FreeRTOS\Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 2079              		.loc 1 1831 0
 2080 005c 0020     		movs	r0, #0
 2081              	.LVL277:
 2082 005e 04E0     		b	.L153
 2083              	.LVL278:
 2084              	.L156:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 88


 2085              	.LBB46:
1827:..\FreeRTOS\Source/queue.c **** 		}
 2086              		.loc 1 1827 0
 2087 0060 0120     		movs	r0, #1
 2088 0062 02E0     		b	.L153
 2089              	.L157:
 2090 0064 0120     		movs	r0, #1
 2091 0066 00E0     		b	.L153
 2092              	.L158:
 2093 0068 0120     		movs	r0, #1
 2094              	.LVL279:
 2095              	.L153:
 2096              	.LBE46:
 2097              	.LBE44:
 2098              	.LBB47:
 2099              	.LBB48:
 2100              		.loc 2 229 0
 2101              		.syntax unified
 2102              	@ 229 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 2103 006a 86F31188 			msr basepri, r6	
 2104              	@ 0 "" 2
 2105              	.LVL280:
 2106              		.thumb
 2107              		.syntax unified
 2108              	.LBE48:
 2109              	.LBE47:
1838:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 2110              		.loc 1 1838 0
 2111 006e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2112              		.cfi_endproc
 2113              	.LFE82:
 2114              		.size	xQueueReceiveFromISR, .-xQueueReceiveFromISR
 2115 0072 00BF     		.section	.text.xQueuePeekFromISR,"ax",%progbits
 2116              		.align	2
 2117              		.global	xQueuePeekFromISR
 2118              		.thumb
 2119              		.thumb_func
 2120              		.type	xQueuePeekFromISR, %function
 2121              	xQueuePeekFromISR:
 2122              	.LFB83:
1842:..\FreeRTOS\Source/queue.c **** BaseType_t xReturn;
 2123              		.loc 1 1842 0
 2124              		.cfi_startproc
 2125              		@ args = 0, pretend = 0, frame = 0
 2126              		@ frame_needed = 0, uses_anonymous_args = 0
 2127              	.LVL281:
 2128 0000 70B5     		push	{r4, r5, r6, lr}
 2129              		.cfi_def_cfa_offset 16
 2130              		.cfi_offset 4, -16
 2131              		.cfi_offset 5, -12
 2132              		.cfi_offset 6, -8
 2133              		.cfi_offset 14, -4
 2134              	.LVL282:
 2135              	.LBB49:
 2136              	.LBB50:
 211:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 2137              		.loc 2 211 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 89


 2138              		.syntax unified
 2139              	@ 211 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 2140 0002 EFF31185 			mrs r5, basepri											
 2141 0006 4FF0A003 		mov r3, #160												
 2142 000a 83F31188 		msr basepri, r3											
 2143 000e BFF36F8F 		isb														
 2144 0012 BFF34F8F 		dsb														
 2145              	
 2146              	@ 0 "" 2
 2147              		.thumb
 2148              		.syntax unified
 2149              	.LBE50:
 2150              	.LBE49:
1871:..\FreeRTOS\Source/queue.c **** 		{
 2151              		.loc 1 1871 0
 2152 0016 836B     		ldr	r3, [r0, #56]
 2153 0018 33B1     		cbz	r3, .L162
 2154 001a 0446     		mov	r4, r0
1877:..\FreeRTOS\Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2155              		.loc 1 1877 0
 2156 001c C668     		ldr	r6, [r0, #12]
 2157              	.LVL283:
1878:..\FreeRTOS\Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 2158              		.loc 1 1878 0
 2159 001e FFF7FEFF 		bl	prvCopyDataFromQueue
 2160              	.LVL284:
1879:..\FreeRTOS\Source/queue.c **** 
 2161              		.loc 1 1879 0
 2162 0022 E660     		str	r6, [r4, #12]
 2163              	.LVL285:
1881:..\FreeRTOS\Source/queue.c **** 		}
 2164              		.loc 1 1881 0
 2165 0024 0120     		movs	r0, #1
 2166 0026 00E0     		b	.L161
 2167              	.LVL286:
 2168              	.L162:
1885:..\FreeRTOS\Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 2169              		.loc 1 1885 0
 2170 0028 0020     		movs	r0, #0
 2171              	.LVL287:
 2172              	.L161:
 2173              	.LBB51:
 2174              	.LBB52:
 2175              		.loc 2 229 0
 2176              		.syntax unified
 2177              	@ 229 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 2178 002a 85F31188 			msr basepri, r5	
 2179              	@ 0 "" 2
 2180              	.LVL288:
 2181              		.thumb
 2182              		.syntax unified
 2183              	.LBE52:
 2184              	.LBE51:
1892:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 2185              		.loc 1 1892 0
 2186 002e 70BD     		pop	{r4, r5, r6, pc}
 2187              		.cfi_endproc
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 90


 2188              	.LFE83:
 2189              		.size	xQueuePeekFromISR, .-xQueuePeekFromISR
 2190              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 2191              		.align	2
 2192              		.global	uxQueueMessagesWaiting
 2193              		.thumb
 2194              		.thumb_func
 2195              		.type	uxQueueMessagesWaiting, %function
 2196              	uxQueueMessagesWaiting:
 2197              	.LFB84:
1896:..\FreeRTOS\Source/queue.c **** UBaseType_t uxReturn;
 2198              		.loc 1 1896 0
 2199              		.cfi_startproc
 2200              		@ args = 0, pretend = 0, frame = 0
 2201              		@ frame_needed = 0, uses_anonymous_args = 0
 2202              	.LVL289:
 2203 0000 10B5     		push	{r4, lr}
 2204              		.cfi_def_cfa_offset 8
 2205              		.cfi_offset 4, -8
 2206              		.cfi_offset 14, -4
 2207 0002 0446     		mov	r4, r0
1901:..\FreeRTOS\Source/queue.c **** 	{
 2208              		.loc 1 1901 0
 2209 0004 FFF7FEFF 		bl	vPortEnterCritical
 2210              	.LVL290:
1903:..\FreeRTOS\Source/queue.c **** 	}
 2211              		.loc 1 1903 0
 2212 0008 A46B     		ldr	r4, [r4, #56]
 2213              	.LVL291:
1905:..\FreeRTOS\Source/queue.c **** 
 2214              		.loc 1 1905 0
 2215 000a FFF7FEFF 		bl	vPortExitCritical
 2216              	.LVL292:
1908:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 2217              		.loc 1 1908 0
 2218 000e 2046     		mov	r0, r4
 2219 0010 10BD     		pop	{r4, pc}
 2220              		.cfi_endproc
 2221              	.LFE84:
 2222              		.size	uxQueueMessagesWaiting, .-uxQueueMessagesWaiting
 2223 0012 00BF     		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 2224              		.align	2
 2225              		.global	uxQueueSpacesAvailable
 2226              		.thumb
 2227              		.thumb_func
 2228              		.type	uxQueueSpacesAvailable, %function
 2229              	uxQueueSpacesAvailable:
 2230              	.LFB85:
1912:..\FreeRTOS\Source/queue.c **** UBaseType_t uxReturn;
 2231              		.loc 1 1912 0
 2232              		.cfi_startproc
 2233              		@ args = 0, pretend = 0, frame = 0
 2234              		@ frame_needed = 0, uses_anonymous_args = 0
 2235              	.LVL293:
 2236 0000 10B5     		push	{r4, lr}
 2237              		.cfi_def_cfa_offset 8
 2238              		.cfi_offset 4, -8
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 91


 2239              		.cfi_offset 14, -4
 2240 0002 0446     		mov	r4, r0
 2241              	.LVL294:
1919:..\FreeRTOS\Source/queue.c **** 	{
 2242              		.loc 1 1919 0
 2243 0004 FFF7FEFF 		bl	vPortEnterCritical
 2244              	.LVL295:
1921:..\FreeRTOS\Source/queue.c **** 	}
 2245              		.loc 1 1921 0
 2246 0008 E36B     		ldr	r3, [r4, #60]
 2247 000a A46B     		ldr	r4, [r4, #56]
 2248              	.LVL296:
 2249 000c 1C1B     		subs	r4, r3, r4
 2250              	.LVL297:
1923:..\FreeRTOS\Source/queue.c **** 
 2251              		.loc 1 1923 0
 2252 000e FFF7FEFF 		bl	vPortExitCritical
 2253              	.LVL298:
1926:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 2254              		.loc 1 1926 0
 2255 0012 2046     		mov	r0, r4
 2256 0014 10BD     		pop	{r4, pc}
 2257              		.cfi_endproc
 2258              	.LFE85:
 2259              		.size	uxQueueSpacesAvailable, .-uxQueueSpacesAvailable
 2260 0016 00BF     		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 2261              		.align	2
 2262              		.global	uxQueueMessagesWaitingFromISR
 2263              		.thumb
 2264              		.thumb_func
 2265              		.type	uxQueueMessagesWaitingFromISR, %function
 2266              	uxQueueMessagesWaitingFromISR:
 2267              	.LFB86:
1930:..\FreeRTOS\Source/queue.c **** UBaseType_t uxReturn;
 2268              		.loc 1 1930 0
 2269              		.cfi_startproc
 2270              		@ args = 0, pretend = 0, frame = 0
 2271              		@ frame_needed = 0, uses_anonymous_args = 0
 2272              		@ link register save eliminated.
 2273              	.LVL299:
1935:..\FreeRTOS\Source/queue.c **** 
 2274              		.loc 1 1935 0
 2275 0000 806B     		ldr	r0, [r0, #56]
 2276              	.LVL300:
1938:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 2277              		.loc 1 1938 0
 2278 0002 7047     		bx	lr
 2279              		.cfi_endproc
 2280              	.LFE86:
 2281              		.size	uxQueueMessagesWaitingFromISR, .-uxQueueMessagesWaitingFromISR
 2282              		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 2283              		.align	2
 2284              		.global	uxQueueGetQueueNumber
 2285              		.thumb
 2286              		.thumb_func
 2287              		.type	uxQueueGetQueueNumber, %function
 2288              	uxQueueGetQueueNumber:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 92


 2289              	.LFB88:
1986:..\FreeRTOS\Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
 2290              		.loc 1 1986 0
 2291              		.cfi_startproc
 2292              		@ args = 0, pretend = 0, frame = 0
 2293              		@ frame_needed = 0, uses_anonymous_args = 0
 2294              		@ link register save eliminated.
 2295              	.LVL301:
1988:..\FreeRTOS\Source/queue.c **** 
 2296              		.loc 1 1988 0
 2297 0000 806C     		ldr	r0, [r0, #72]
 2298              	.LVL302:
 2299 0002 7047     		bx	lr
 2300              		.cfi_endproc
 2301              	.LFE88:
 2302              		.size	uxQueueGetQueueNumber, .-uxQueueGetQueueNumber
 2303              		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 2304              		.align	2
 2305              		.global	vQueueSetQueueNumber
 2306              		.thumb
 2307              		.thumb_func
 2308              		.type	vQueueSetQueueNumber, %function
 2309              	vQueueSetQueueNumber:
 2310              	.LFB89:
1996:..\FreeRTOS\Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
 2311              		.loc 1 1996 0
 2312              		.cfi_startproc
 2313              		@ args = 0, pretend = 0, frame = 0
 2314              		@ frame_needed = 0, uses_anonymous_args = 0
 2315              		@ link register save eliminated.
 2316              	.LVL303:
1997:..\FreeRTOS\Source/queue.c **** 	}
 2317              		.loc 1 1997 0
 2318 0000 8164     		str	r1, [r0, #72]
 2319 0002 7047     		bx	lr
 2320              		.cfi_endproc
 2321              	.LFE89:
 2322              		.size	vQueueSetQueueNumber, .-vQueueSetQueueNumber
 2323              		.section	.text.ucQueueGetQueueType,"ax",%progbits
 2324              		.align	2
 2325              		.global	ucQueueGetQueueType
 2326              		.thumb
 2327              		.thumb_func
 2328              		.type	ucQueueGetQueueType, %function
 2329              	ucQueueGetQueueType:
 2330              	.LFB90:
2006:..\FreeRTOS\Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
 2331              		.loc 1 2006 0
 2332              		.cfi_startproc
 2333              		@ args = 0, pretend = 0, frame = 0
 2334              		@ frame_needed = 0, uses_anonymous_args = 0
 2335              		@ link register save eliminated.
 2336              	.LVL304:
2008:..\FreeRTOS\Source/queue.c **** 
 2337              		.loc 1 2008 0
 2338 0000 90F84C00 		ldrb	r0, [r0, #76]	@ zero_extendqisi2
 2339              	.LVL305:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 93


 2340 0004 7047     		bx	lr
 2341              		.cfi_endproc
 2342              	.LFE90:
 2343              		.size	ucQueueGetQueueType, .-ucQueueGetQueueType
 2344 0006 00BF     		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2345              		.align	2
 2346              		.global	xQueueIsQueueEmptyFromISR
 2347              		.thumb
 2348              		.thumb_func
 2349              		.type	xQueueIsQueueEmptyFromISR, %function
 2350              	xQueueIsQueueEmptyFromISR:
 2351              	.LFB96:
2279:..\FreeRTOS\Source/queue.c **** BaseType_t xReturn;
 2352              		.loc 1 2279 0
 2353              		.cfi_startproc
 2354              		@ args = 0, pretend = 0, frame = 0
 2355              		@ frame_needed = 0, uses_anonymous_args = 0
 2356              		@ link register save eliminated.
 2357              	.LVL306:
2283:..\FreeRTOS\Source/queue.c **** 	{
 2358              		.loc 1 2283 0
 2359 0000 836B     		ldr	r3, [r0, #56]
 2360 0002 0BB9     		cbnz	r3, .L174
2285:..\FreeRTOS\Source/queue.c **** 	}
 2361              		.loc 1 2285 0
 2362 0004 0120     		movs	r0, #1
 2363              	.LVL307:
 2364 0006 7047     		bx	lr
 2365              	.LVL308:
 2366              	.L174:
2289:..\FreeRTOS\Source/queue.c **** 	}
 2367              		.loc 1 2289 0
 2368 0008 0020     		movs	r0, #0
 2369              	.LVL309:
2293:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
 2370              		.loc 1 2293 0
 2371 000a 7047     		bx	lr
 2372              		.cfi_endproc
 2373              	.LFE96:
 2374              		.size	xQueueIsQueueEmptyFromISR, .-xQueueIsQueueEmptyFromISR
 2375              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2376              		.align	2
 2377              		.global	xQueueIsQueueFullFromISR
 2378              		.thumb
 2379              		.thumb_func
 2380              		.type	xQueueIsQueueFullFromISR, %function
 2381              	xQueueIsQueueFullFromISR:
 2382              	.LFB98:
2315:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
2316:..\FreeRTOS\Source/queue.c **** 
2317:..\FreeRTOS\Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2318:..\FreeRTOS\Source/queue.c **** {
 2383              		.loc 1 2318 0
 2384              		.cfi_startproc
 2385              		@ args = 0, pretend = 0, frame = 0
 2386              		@ frame_needed = 0, uses_anonymous_args = 0
 2387              		@ link register save eliminated.
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 94


 2388              	.LVL310:
2319:..\FreeRTOS\Source/queue.c **** BaseType_t xReturn;
2320:..\FreeRTOS\Source/queue.c **** 
2321:..\FreeRTOS\Source/queue.c **** 	configASSERT( xQueue );
2322:..\FreeRTOS\Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 2389              		.loc 1 2322 0
 2390 0000 826B     		ldr	r2, [r0, #56]
 2391 0002 C36B     		ldr	r3, [r0, #60]
 2392 0004 9A42     		cmp	r2, r3
 2393 0006 01D1     		bne	.L177
2323:..\FreeRTOS\Source/queue.c **** 	{
2324:..\FreeRTOS\Source/queue.c **** 		xReturn = pdTRUE;
 2394              		.loc 1 2324 0
 2395 0008 0120     		movs	r0, #1
 2396              	.LVL311:
 2397 000a 7047     		bx	lr
 2398              	.LVL312:
 2399              	.L177:
2325:..\FreeRTOS\Source/queue.c **** 	}
2326:..\FreeRTOS\Source/queue.c **** 	else
2327:..\FreeRTOS\Source/queue.c **** 	{
2328:..\FreeRTOS\Source/queue.c **** 		xReturn = pdFALSE;
 2400              		.loc 1 2328 0
 2401 000c 0020     		movs	r0, #0
 2402              	.LVL313:
2329:..\FreeRTOS\Source/queue.c **** 	}
2330:..\FreeRTOS\Source/queue.c **** 
2331:..\FreeRTOS\Source/queue.c **** 	return xReturn;
2332:..\FreeRTOS\Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2403              		.loc 1 2332 0
 2404 000e 7047     		bx	lr
 2405              		.cfi_endproc
 2406              	.LFE98:
 2407              		.size	xQueueIsQueueFullFromISR, .-xQueueIsQueueFullFromISR
 2408              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 2409              		.align	2
 2410              		.global	vQueueAddToRegistry
 2411              		.thumb
 2412              		.thumb_func
 2413              		.type	vQueueAddToRegistry, %function
 2414              	vQueueAddToRegistry:
 2415              	.LFB99:
2333:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
2334:..\FreeRTOS\Source/queue.c **** 
2335:..\FreeRTOS\Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2336:..\FreeRTOS\Source/queue.c **** 
2337:..\FreeRTOS\Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2338:..\FreeRTOS\Source/queue.c **** 	{
2339:..\FreeRTOS\Source/queue.c **** 	BaseType_t xReturn;
2340:..\FreeRTOS\Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2341:..\FreeRTOS\Source/queue.c **** 
2342:..\FreeRTOS\Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2343:..\FreeRTOS\Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2344:..\FreeRTOS\Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2345:..\FreeRTOS\Source/queue.c **** 		portDISABLE_INTERRUPTS();
2346:..\FreeRTOS\Source/queue.c **** 		{
2347:..\FreeRTOS\Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 95


2348:..\FreeRTOS\Source/queue.c **** 			{
2349:..\FreeRTOS\Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2350:..\FreeRTOS\Source/queue.c **** 				posting? */
2351:..\FreeRTOS\Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2352:..\FreeRTOS\Source/queue.c **** 				{
2353:..\FreeRTOS\Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2354:..\FreeRTOS\Source/queue.c **** 					return indicating that we need to block. */
2355:..\FreeRTOS\Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2356:..\FreeRTOS\Source/queue.c **** 					portENABLE_INTERRUPTS();
2357:..\FreeRTOS\Source/queue.c **** 					return errQUEUE_BLOCKED;
2358:..\FreeRTOS\Source/queue.c **** 				}
2359:..\FreeRTOS\Source/queue.c **** 				else
2360:..\FreeRTOS\Source/queue.c **** 				{
2361:..\FreeRTOS\Source/queue.c **** 					portENABLE_INTERRUPTS();
2362:..\FreeRTOS\Source/queue.c **** 					return errQUEUE_FULL;
2363:..\FreeRTOS\Source/queue.c **** 				}
2364:..\FreeRTOS\Source/queue.c **** 			}
2365:..\FreeRTOS\Source/queue.c **** 		}
2366:..\FreeRTOS\Source/queue.c **** 		portENABLE_INTERRUPTS();
2367:..\FreeRTOS\Source/queue.c **** 
2368:..\FreeRTOS\Source/queue.c **** 		portDISABLE_INTERRUPTS();
2369:..\FreeRTOS\Source/queue.c **** 		{
2370:..\FreeRTOS\Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2371:..\FreeRTOS\Source/queue.c **** 			{
2372:..\FreeRTOS\Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2373:..\FreeRTOS\Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2374:..\FreeRTOS\Source/queue.c **** 				xReturn = pdPASS;
2375:..\FreeRTOS\Source/queue.c **** 
2376:..\FreeRTOS\Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2377:..\FreeRTOS\Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2378:..\FreeRTOS\Source/queue.c **** 				{
2379:..\FreeRTOS\Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2380:..\FreeRTOS\Source/queue.c **** 					into the ready list as we are within a critical section.
2381:..\FreeRTOS\Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2382:..\FreeRTOS\Source/queue.c **** 					the event were caused from within an interrupt. */
2383:..\FreeRTOS\Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2384:..\FreeRTOS\Source/queue.c **** 					{
2385:..\FreeRTOS\Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2386:..\FreeRTOS\Source/queue.c **** 						that a yield might be appropriate. */
2387:..\FreeRTOS\Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2388:..\FreeRTOS\Source/queue.c **** 					}
2389:..\FreeRTOS\Source/queue.c **** 					else
2390:..\FreeRTOS\Source/queue.c **** 					{
2391:..\FreeRTOS\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2392:..\FreeRTOS\Source/queue.c **** 					}
2393:..\FreeRTOS\Source/queue.c **** 				}
2394:..\FreeRTOS\Source/queue.c **** 				else
2395:..\FreeRTOS\Source/queue.c **** 				{
2396:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2397:..\FreeRTOS\Source/queue.c **** 				}
2398:..\FreeRTOS\Source/queue.c **** 			}
2399:..\FreeRTOS\Source/queue.c **** 			else
2400:..\FreeRTOS\Source/queue.c **** 			{
2401:..\FreeRTOS\Source/queue.c **** 				xReturn = errQUEUE_FULL;
2402:..\FreeRTOS\Source/queue.c **** 			}
2403:..\FreeRTOS\Source/queue.c **** 		}
2404:..\FreeRTOS\Source/queue.c **** 		portENABLE_INTERRUPTS();
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 96


2405:..\FreeRTOS\Source/queue.c **** 
2406:..\FreeRTOS\Source/queue.c **** 		return xReturn;
2407:..\FreeRTOS\Source/queue.c **** 	}
2408:..\FreeRTOS\Source/queue.c **** 
2409:..\FreeRTOS\Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2410:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
2411:..\FreeRTOS\Source/queue.c **** 
2412:..\FreeRTOS\Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2413:..\FreeRTOS\Source/queue.c **** 
2414:..\FreeRTOS\Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2415:..\FreeRTOS\Source/queue.c **** 	{
2416:..\FreeRTOS\Source/queue.c **** 	BaseType_t xReturn;
2417:..\FreeRTOS\Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2418:..\FreeRTOS\Source/queue.c **** 
2419:..\FreeRTOS\Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2420:..\FreeRTOS\Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2421:..\FreeRTOS\Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2422:..\FreeRTOS\Source/queue.c **** 		portDISABLE_INTERRUPTS();
2423:..\FreeRTOS\Source/queue.c **** 		{
2424:..\FreeRTOS\Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2425:..\FreeRTOS\Source/queue.c **** 			{
2426:..\FreeRTOS\Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2427:..\FreeRTOS\Source/queue.c **** 				leave with nothing? */
2428:..\FreeRTOS\Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2429:..\FreeRTOS\Source/queue.c **** 				{
2430:..\FreeRTOS\Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2431:..\FreeRTOS\Source/queue.c **** 					indicating that we need to block. */
2432:..\FreeRTOS\Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2433:..\FreeRTOS\Source/queue.c **** 					portENABLE_INTERRUPTS();
2434:..\FreeRTOS\Source/queue.c **** 					return errQUEUE_BLOCKED;
2435:..\FreeRTOS\Source/queue.c **** 				}
2436:..\FreeRTOS\Source/queue.c **** 				else
2437:..\FreeRTOS\Source/queue.c **** 				{
2438:..\FreeRTOS\Source/queue.c **** 					portENABLE_INTERRUPTS();
2439:..\FreeRTOS\Source/queue.c **** 					return errQUEUE_FULL;
2440:..\FreeRTOS\Source/queue.c **** 				}
2441:..\FreeRTOS\Source/queue.c **** 			}
2442:..\FreeRTOS\Source/queue.c **** 			else
2443:..\FreeRTOS\Source/queue.c **** 			{
2444:..\FreeRTOS\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2445:..\FreeRTOS\Source/queue.c **** 			}
2446:..\FreeRTOS\Source/queue.c **** 		}
2447:..\FreeRTOS\Source/queue.c **** 		portENABLE_INTERRUPTS();
2448:..\FreeRTOS\Source/queue.c **** 
2449:..\FreeRTOS\Source/queue.c **** 		portDISABLE_INTERRUPTS();
2450:..\FreeRTOS\Source/queue.c **** 		{
2451:..\FreeRTOS\Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2452:..\FreeRTOS\Source/queue.c **** 			{
2453:..\FreeRTOS\Source/queue.c **** 				/* Data is available from the queue. */
2454:..\FreeRTOS\Source/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2455:..\FreeRTOS\Source/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2456:..\FreeRTOS\Source/queue.c **** 				{
2457:..\FreeRTOS\Source/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2458:..\FreeRTOS\Source/queue.c **** 				}
2459:..\FreeRTOS\Source/queue.c **** 				else
2460:..\FreeRTOS\Source/queue.c **** 				{
2461:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 97


2462:..\FreeRTOS\Source/queue.c **** 				}
2463:..\FreeRTOS\Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2464:..\FreeRTOS\Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2465:..\FreeRTOS\Source/queue.c **** 
2466:..\FreeRTOS\Source/queue.c **** 				xReturn = pdPASS;
2467:..\FreeRTOS\Source/queue.c **** 
2468:..\FreeRTOS\Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2469:..\FreeRTOS\Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2470:..\FreeRTOS\Source/queue.c **** 				{
2471:..\FreeRTOS\Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2472:..\FreeRTOS\Source/queue.c **** 					into the ready list as we are within a critical section.
2473:..\FreeRTOS\Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2474:..\FreeRTOS\Source/queue.c **** 					the event were caused from within an interrupt. */
2475:..\FreeRTOS\Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2476:..\FreeRTOS\Source/queue.c **** 					{
2477:..\FreeRTOS\Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2478:..\FreeRTOS\Source/queue.c **** 					}
2479:..\FreeRTOS\Source/queue.c **** 					else
2480:..\FreeRTOS\Source/queue.c **** 					{
2481:..\FreeRTOS\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2482:..\FreeRTOS\Source/queue.c **** 					}
2483:..\FreeRTOS\Source/queue.c **** 				}
2484:..\FreeRTOS\Source/queue.c **** 				else
2485:..\FreeRTOS\Source/queue.c **** 				{
2486:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2487:..\FreeRTOS\Source/queue.c **** 				}
2488:..\FreeRTOS\Source/queue.c **** 			}
2489:..\FreeRTOS\Source/queue.c **** 			else
2490:..\FreeRTOS\Source/queue.c **** 			{
2491:..\FreeRTOS\Source/queue.c **** 				xReturn = pdFAIL;
2492:..\FreeRTOS\Source/queue.c **** 			}
2493:..\FreeRTOS\Source/queue.c **** 		}
2494:..\FreeRTOS\Source/queue.c **** 		portENABLE_INTERRUPTS();
2495:..\FreeRTOS\Source/queue.c **** 
2496:..\FreeRTOS\Source/queue.c **** 		return xReturn;
2497:..\FreeRTOS\Source/queue.c **** 	}
2498:..\FreeRTOS\Source/queue.c **** 
2499:..\FreeRTOS\Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2500:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
2501:..\FreeRTOS\Source/queue.c **** 
2502:..\FreeRTOS\Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2503:..\FreeRTOS\Source/queue.c **** 
2504:..\FreeRTOS\Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2505:..\FreeRTOS\Source/queue.c **** 	{
2506:..\FreeRTOS\Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2507:..\FreeRTOS\Source/queue.c **** 
2508:..\FreeRTOS\Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2509:..\FreeRTOS\Source/queue.c **** 		exit without doing anything. */
2510:..\FreeRTOS\Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2511:..\FreeRTOS\Source/queue.c **** 		{
2512:..\FreeRTOS\Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2513:..\FreeRTOS\Source/queue.c **** 
2514:..\FreeRTOS\Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2515:..\FreeRTOS\Source/queue.c **** 			co-routine has not already been woken. */
2516:..\FreeRTOS\Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2517:..\FreeRTOS\Source/queue.c **** 			{
2518:..\FreeRTOS\Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 98


2519:..\FreeRTOS\Source/queue.c **** 				{
2520:..\FreeRTOS\Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2521:..\FreeRTOS\Source/queue.c **** 					{
2522:..\FreeRTOS\Source/queue.c **** 						return pdTRUE;
2523:..\FreeRTOS\Source/queue.c **** 					}
2524:..\FreeRTOS\Source/queue.c **** 					else
2525:..\FreeRTOS\Source/queue.c **** 					{
2526:..\FreeRTOS\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2527:..\FreeRTOS\Source/queue.c **** 					}
2528:..\FreeRTOS\Source/queue.c **** 				}
2529:..\FreeRTOS\Source/queue.c **** 				else
2530:..\FreeRTOS\Source/queue.c **** 				{
2531:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2532:..\FreeRTOS\Source/queue.c **** 				}
2533:..\FreeRTOS\Source/queue.c **** 			}
2534:..\FreeRTOS\Source/queue.c **** 			else
2535:..\FreeRTOS\Source/queue.c **** 			{
2536:..\FreeRTOS\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2537:..\FreeRTOS\Source/queue.c **** 			}
2538:..\FreeRTOS\Source/queue.c **** 		}
2539:..\FreeRTOS\Source/queue.c **** 		else
2540:..\FreeRTOS\Source/queue.c **** 		{
2541:..\FreeRTOS\Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2542:..\FreeRTOS\Source/queue.c **** 		}
2543:..\FreeRTOS\Source/queue.c **** 
2544:..\FreeRTOS\Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2545:..\FreeRTOS\Source/queue.c **** 	}
2546:..\FreeRTOS\Source/queue.c **** 
2547:..\FreeRTOS\Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2548:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
2549:..\FreeRTOS\Source/queue.c **** 
2550:..\FreeRTOS\Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2551:..\FreeRTOS\Source/queue.c **** 
2552:..\FreeRTOS\Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2553:..\FreeRTOS\Source/queue.c **** 	{
2554:..\FreeRTOS\Source/queue.c **** 	BaseType_t xReturn;
2555:..\FreeRTOS\Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2556:..\FreeRTOS\Source/queue.c **** 
2557:..\FreeRTOS\Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2558:..\FreeRTOS\Source/queue.c **** 		not then just leave without doing anything. */
2559:..\FreeRTOS\Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2560:..\FreeRTOS\Source/queue.c **** 		{
2561:..\FreeRTOS\Source/queue.c **** 			/* Copy the data from the queue. */
2562:..\FreeRTOS\Source/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2563:..\FreeRTOS\Source/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2564:..\FreeRTOS\Source/queue.c **** 			{
2565:..\FreeRTOS\Source/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2566:..\FreeRTOS\Source/queue.c **** 			}
2567:..\FreeRTOS\Source/queue.c **** 			else
2568:..\FreeRTOS\Source/queue.c **** 			{
2569:..\FreeRTOS\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2570:..\FreeRTOS\Source/queue.c **** 			}
2571:..\FreeRTOS\Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2572:..\FreeRTOS\Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2573:..\FreeRTOS\Source/queue.c **** 
2574:..\FreeRTOS\Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2575:..\FreeRTOS\Source/queue.c **** 			{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 99


2576:..\FreeRTOS\Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2577:..\FreeRTOS\Source/queue.c **** 				{
2578:..\FreeRTOS\Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2579:..\FreeRTOS\Source/queue.c **** 					{
2580:..\FreeRTOS\Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2581:..\FreeRTOS\Source/queue.c **** 					}
2582:..\FreeRTOS\Source/queue.c **** 					else
2583:..\FreeRTOS\Source/queue.c **** 					{
2584:..\FreeRTOS\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2585:..\FreeRTOS\Source/queue.c **** 					}
2586:..\FreeRTOS\Source/queue.c **** 				}
2587:..\FreeRTOS\Source/queue.c **** 				else
2588:..\FreeRTOS\Source/queue.c **** 				{
2589:..\FreeRTOS\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2590:..\FreeRTOS\Source/queue.c **** 				}
2591:..\FreeRTOS\Source/queue.c **** 			}
2592:..\FreeRTOS\Source/queue.c **** 			else
2593:..\FreeRTOS\Source/queue.c **** 			{
2594:..\FreeRTOS\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2595:..\FreeRTOS\Source/queue.c **** 			}
2596:..\FreeRTOS\Source/queue.c **** 
2597:..\FreeRTOS\Source/queue.c **** 			xReturn = pdPASS;
2598:..\FreeRTOS\Source/queue.c **** 		}
2599:..\FreeRTOS\Source/queue.c **** 		else
2600:..\FreeRTOS\Source/queue.c **** 		{
2601:..\FreeRTOS\Source/queue.c **** 			xReturn = pdFAIL;
2602:..\FreeRTOS\Source/queue.c **** 		}
2603:..\FreeRTOS\Source/queue.c **** 
2604:..\FreeRTOS\Source/queue.c **** 		return xReturn;
2605:..\FreeRTOS\Source/queue.c **** 	}
2606:..\FreeRTOS\Source/queue.c **** 
2607:..\FreeRTOS\Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2608:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
2609:..\FreeRTOS\Source/queue.c **** 
2610:..\FreeRTOS\Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2611:..\FreeRTOS\Source/queue.c **** 
2612:..\FreeRTOS\Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2613:..\FreeRTOS\Source/queue.c **** 	{
 2416              		.loc 1 2613 0
 2417              		.cfi_startproc
 2418              		@ args = 0, pretend = 0, frame = 0
 2419              		@ frame_needed = 0, uses_anonymous_args = 0
 2420              		@ link register save eliminated.
 2421              	.LVL314:
2614:..\FreeRTOS\Source/queue.c **** 	UBaseType_t ux;
2615:..\FreeRTOS\Source/queue.c **** 
2616:..\FreeRTOS\Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2617:..\FreeRTOS\Source/queue.c **** 		a free slot. */
2618:..\FreeRTOS\Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2422              		.loc 1 2618 0
 2423 0000 0023     		movs	r3, #0
 2424 0002 0BE0     		b	.L179
 2425              	.LVL315:
 2426              	.L182:
2619:..\FreeRTOS\Source/queue.c **** 		{
2620:..\FreeRTOS\Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 2427              		.loc 1 2620 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 100


 2428 0004 074A     		ldr	r2, .L183
 2429 0006 52F83320 		ldr	r2, [r2, r3, lsl #3]
 2430 000a 32B9     		cbnz	r2, .L180
2621:..\FreeRTOS\Source/queue.c **** 			{
2622:..\FreeRTOS\Source/queue.c **** 				/* Store the information on this queue. */
2623:..\FreeRTOS\Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 2431              		.loc 1 2623 0
 2432 000c 054A     		ldr	r2, .L183
 2433 000e 42F83310 		str	r1, [r2, r3, lsl #3]
2624:..\FreeRTOS\Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 2434              		.loc 1 2624 0
 2435 0012 02EBC303 		add	r3, r2, r3, lsl #3
 2436              	.LVL316:
 2437 0016 5860     		str	r0, [r3, #4]
2625:..\FreeRTOS\Source/queue.c **** 
2626:..\FreeRTOS\Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2627:..\FreeRTOS\Source/queue.c **** 				break;
 2438              		.loc 1 2627 0
 2439 0018 7047     		bx	lr
 2440              	.LVL317:
 2441              	.L180:
2618:..\FreeRTOS\Source/queue.c **** 		{
 2442              		.loc 1 2618 0 discriminator 2
 2443 001a 0133     		adds	r3, r3, #1
 2444              	.LVL318:
 2445              	.L179:
2618:..\FreeRTOS\Source/queue.c **** 		{
 2446              		.loc 1 2618 0 is_stmt 0 discriminator 1
 2447 001c 092B     		cmp	r3, #9
 2448 001e F1D9     		bls	.L182
 2449 0020 7047     		bx	lr
 2450              	.L184:
 2451 0022 00BF     		.align	2
 2452              	.L183:
 2453 0024 00000000 		.word	xQueueRegistry
 2454              		.cfi_endproc
 2455              	.LFE99:
 2456              		.size	vQueueAddToRegistry, .-vQueueAddToRegistry
 2457              		.section	.text.pcQueueGetName,"ax",%progbits
 2458              		.align	2
 2459              		.global	pcQueueGetName
 2460              		.thumb
 2461              		.thumb_func
 2462              		.type	pcQueueGetName, %function
 2463              	pcQueueGetName:
 2464              	.LFB100:
2628:..\FreeRTOS\Source/queue.c **** 			}
2629:..\FreeRTOS\Source/queue.c **** 			else
2630:..\FreeRTOS\Source/queue.c **** 			{
2631:..\FreeRTOS\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2632:..\FreeRTOS\Source/queue.c **** 			}
2633:..\FreeRTOS\Source/queue.c **** 		}
2634:..\FreeRTOS\Source/queue.c **** 	}
2635:..\FreeRTOS\Source/queue.c **** 
2636:..\FreeRTOS\Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2637:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
2638:..\FreeRTOS\Source/queue.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 101


2639:..\FreeRTOS\Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2640:..\FreeRTOS\Source/queue.c **** 
2641:..\FreeRTOS\Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2642:..\FreeRTOS\Source/queue.c **** 	{
 2465              		.loc 1 2642 0 is_stmt 1
 2466              		.cfi_startproc
 2467              		@ args = 0, pretend = 0, frame = 0
 2468              		@ frame_needed = 0, uses_anonymous_args = 0
 2469              		@ link register save eliminated.
 2470              	.LVL319:
2643:..\FreeRTOS\Source/queue.c **** 	UBaseType_t ux;
2644:..\FreeRTOS\Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2645:..\FreeRTOS\Source/queue.c **** 
2646:..\FreeRTOS\Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2647:..\FreeRTOS\Source/queue.c **** 		removing entries from the registry while it is being searched. */
2648:..\FreeRTOS\Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2471              		.loc 1 2648 0
 2472 0000 0023     		movs	r3, #0
 2473 0002 0AE0     		b	.L186
 2474              	.LVL320:
 2475              	.L189:
2649:..\FreeRTOS\Source/queue.c **** 		{
2650:..\FreeRTOS\Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2476              		.loc 1 2650 0
 2477 0004 074A     		ldr	r2, .L190
 2478 0006 02EBC302 		add	r2, r2, r3, lsl #3
 2479 000a 5268     		ldr	r2, [r2, #4]
 2480 000c 8242     		cmp	r2, r0
 2481 000e 03D1     		bne	.L187
2651:..\FreeRTOS\Source/queue.c **** 			{
2652:..\FreeRTOS\Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 2482              		.loc 1 2652 0
 2483 0010 044A     		ldr	r2, .L190
 2484 0012 52F83300 		ldr	r0, [r2, r3, lsl #3]
 2485              	.LVL321:
2653:..\FreeRTOS\Source/queue.c **** 				break;
 2486              		.loc 1 2653 0
 2487 0016 7047     		bx	lr
 2488              	.LVL322:
 2489              	.L187:
2648:..\FreeRTOS\Source/queue.c **** 		{
 2490              		.loc 1 2648 0 discriminator 2
 2491 0018 0133     		adds	r3, r3, #1
 2492              	.LVL323:
 2493              	.L186:
2648:..\FreeRTOS\Source/queue.c **** 		{
 2494              		.loc 1 2648 0 is_stmt 0 discriminator 1
 2495 001a 092B     		cmp	r3, #9
 2496 001c F2D9     		bls	.L189
2644:..\FreeRTOS\Source/queue.c **** 
 2497              		.loc 1 2644 0 is_stmt 1
 2498 001e 0020     		movs	r0, #0
 2499              	.LVL324:
2654:..\FreeRTOS\Source/queue.c **** 			}
2655:..\FreeRTOS\Source/queue.c **** 			else
2656:..\FreeRTOS\Source/queue.c **** 			{
2657:..\FreeRTOS\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 102


2658:..\FreeRTOS\Source/queue.c **** 			}
2659:..\FreeRTOS\Source/queue.c **** 		}
2660:..\FreeRTOS\Source/queue.c **** 
2661:..\FreeRTOS\Source/queue.c **** 		return pcReturn;
2662:..\FreeRTOS\Source/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 2500              		.loc 1 2662 0
 2501 0020 7047     		bx	lr
 2502              	.L191:
 2503 0022 00BF     		.align	2
 2504              	.L190:
 2505 0024 00000000 		.word	xQueueRegistry
 2506              		.cfi_endproc
 2507              	.LFE100:
 2508              		.size	pcQueueGetName, .-pcQueueGetName
 2509              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 2510              		.align	2
 2511              		.global	vQueueUnregisterQueue
 2512              		.thumb
 2513              		.thumb_func
 2514              		.type	vQueueUnregisterQueue, %function
 2515              	vQueueUnregisterQueue:
 2516              	.LFB101:
2663:..\FreeRTOS\Source/queue.c **** 
2664:..\FreeRTOS\Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2665:..\FreeRTOS\Source/queue.c **** /*-----------------------------------------------------------*/
2666:..\FreeRTOS\Source/queue.c **** 
2667:..\FreeRTOS\Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2668:..\FreeRTOS\Source/queue.c **** 
2669:..\FreeRTOS\Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2670:..\FreeRTOS\Source/queue.c **** 	{
 2517              		.loc 1 2670 0
 2518              		.cfi_startproc
 2519              		@ args = 0, pretend = 0, frame = 0
 2520              		@ frame_needed = 0, uses_anonymous_args = 0
 2521              		@ link register save eliminated.
 2522              	.LVL325:
2671:..\FreeRTOS\Source/queue.c **** 	UBaseType_t ux;
2672:..\FreeRTOS\Source/queue.c **** 
2673:..\FreeRTOS\Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2674:..\FreeRTOS\Source/queue.c **** 		registry. */
2675:..\FreeRTOS\Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2523              		.loc 1 2675 0
 2524 0000 0023     		movs	r3, #0
 2525 0002 0EE0     		b	.L193
 2526              	.LVL326:
 2527              	.L196:
2676:..\FreeRTOS\Source/queue.c **** 		{
2677:..\FreeRTOS\Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2528              		.loc 1 2677 0
 2529 0004 084A     		ldr	r2, .L197
 2530 0006 02EBC302 		add	r2, r2, r3, lsl #3
 2531 000a 5268     		ldr	r2, [r2, #4]
 2532 000c 8242     		cmp	r2, r0
 2533 000e 07D1     		bne	.L194
2678:..\FreeRTOS\Source/queue.c **** 			{
2679:..\FreeRTOS\Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2680:..\FreeRTOS\Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 103


 2534              		.loc 1 2680 0
 2535 0010 054A     		ldr	r2, .L197
 2536 0012 0021     		movs	r1, #0
 2537 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2681:..\FreeRTOS\Source/queue.c **** 
2682:..\FreeRTOS\Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2683:..\FreeRTOS\Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2684:..\FreeRTOS\Source/queue.c **** 				added again. */
2685:..\FreeRTOS\Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 2538              		.loc 1 2685 0
 2539 0018 02EBC303 		add	r3, r2, r3, lsl #3
 2540              	.LVL327:
 2541 001c 5960     		str	r1, [r3, #4]
2686:..\FreeRTOS\Source/queue.c **** 				break;
 2542              		.loc 1 2686 0
 2543 001e 7047     		bx	lr
 2544              	.LVL328:
 2545              	.L194:
2675:..\FreeRTOS\Source/queue.c **** 		{
 2546              		.loc 1 2675 0 discriminator 2
 2547 0020 0133     		adds	r3, r3, #1
 2548              	.LVL329:
 2549              	.L193:
2675:..\FreeRTOS\Source/queue.c **** 		{
 2550              		.loc 1 2675 0 is_stmt 0 discriminator 1
 2551 0022 092B     		cmp	r3, #9
 2552 0024 EED9     		bls	.L196
 2553 0026 7047     		bx	lr
 2554              	.L198:
 2555              		.align	2
 2556              	.L197:
 2557 0028 00000000 		.word	xQueueRegistry
 2558              		.cfi_endproc
 2559              	.LFE101:
 2560              		.size	vQueueUnregisterQueue, .-vQueueUnregisterQueue
 2561              		.section	.text.vQueueDelete,"ax",%progbits
 2562              		.align	2
 2563              		.global	vQueueDelete
 2564              		.thumb
 2565              		.thumb_func
 2566              		.type	vQueueDelete, %function
 2567              	vQueueDelete:
 2568              	.LFB87:
1942:..\FreeRTOS\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2569              		.loc 1 1942 0 is_stmt 1
 2570              		.cfi_startproc
 2571              		@ args = 0, pretend = 0, frame = 0
 2572              		@ frame_needed = 0, uses_anonymous_args = 0
 2573              	.LVL330:
 2574 0000 10B5     		push	{r4, lr}
 2575              		.cfi_def_cfa_offset 8
 2576              		.cfi_offset 4, -8
 2577              		.cfi_offset 14, -4
 2578 0002 0446     		mov	r4, r0
 2579              	.LVL331:
1950:..\FreeRTOS\Source/queue.c **** 	}
 2580              		.loc 1 1950 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 104


 2581 0004 FFF7FEFF 		bl	vQueueUnregisterQueue
 2582              	.LVL332:
1958:..\FreeRTOS\Source/queue.c **** 	}
 2583              		.loc 1 1958 0
 2584 0008 2046     		mov	r0, r4
 2585 000a FFF7FEFF 		bl	vPortFree
 2586              	.LVL333:
 2587 000e 10BD     		pop	{r4, pc}
 2588              		.cfi_endproc
 2589              	.LFE87:
 2590              		.size	vQueueDelete, .-vQueueDelete
 2591              		.comm	xQueueRegistry,80,4
 2592              		.text
 2593              	.Letext0:
 2594              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2595              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2596              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2597              		.file 6 "..\\FreeRTOS\\Source\\include/list.h"
 2598              		.file 7 "..\\FreeRTOS\\Source\\include/task.h"
 2599              		.file 8 "..\\FreeRTOS\\Source\\include/queue.h"
 2600              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 2601              		.file 10 "..\\FreeRTOS\\Source\\include/portable.h"
 2602              		.section	.debug_info,"",%progbits
 2603              	.Ldebug_info0:
 2604 0000 4D190000 		.4byte	0x194d
 2605 0004 0400     		.2byte	0x4
 2606 0006 00000000 		.4byte	.Ldebug_abbrev0
 2607 000a 04       		.byte	0x4
 2608 000b 01       		.uleb128 0x1
 2609 000c E6020000 		.4byte	.LASF153
 2610 0010 0C       		.byte	0xc
 2611 0011 96080000 		.4byte	.LASF154
 2612 0015 E5040000 		.4byte	.LASF155
 2613 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 2614 001d 00000000 		.4byte	0
 2615 0021 00000000 		.4byte	.Ldebug_line0
 2616 0025 02       		.uleb128 0x2
 2617 0026 82030000 		.4byte	.LASF3
 2618 002a 03       		.byte	0x3
 2619 002b D8       		.byte	0xd8
 2620 002c 30000000 		.4byte	0x30
 2621 0030 03       		.uleb128 0x3
 2622 0031 04       		.byte	0x4
 2623 0032 07       		.byte	0x7
 2624 0033 92000000 		.4byte	.LASF0
 2625 0037 04       		.uleb128 0x4
 2626 0038 04       		.byte	0x4
 2627 0039 05       		.byte	0x5
 2628 003a 696E7400 		.ascii	"int\000"
 2629 003e 03       		.uleb128 0x3
 2630 003f 08       		.byte	0x8
 2631 0040 05       		.byte	0x5
 2632 0041 A4050000 		.4byte	.LASF1
 2633 0045 03       		.uleb128 0x3
 2634 0046 08       		.byte	0x8
 2635 0047 04       		.byte	0x4
 2636 0048 0E070000 		.4byte	.LASF2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 105


 2637 004c 02       		.uleb128 0x2
 2638 004d E1060000 		.4byte	.LASF4
 2639 0051 04       		.byte	0x4
 2640 0052 1B       		.byte	0x1b
 2641 0053 57000000 		.4byte	0x57
 2642 0057 03       		.uleb128 0x3
 2643 0058 01       		.byte	0x1
 2644 0059 06       		.byte	0x6
 2645 005a C9090000 		.4byte	.LASF5
 2646 005e 02       		.uleb128 0x2
 2647 005f 33080000 		.4byte	.LASF6
 2648 0063 04       		.byte	0x4
 2649 0064 1D       		.byte	0x1d
 2650 0065 69000000 		.4byte	0x69
 2651 0069 03       		.uleb128 0x3
 2652 006a 01       		.byte	0x1
 2653 006b 08       		.byte	0x8
 2654 006c DC080000 		.4byte	.LASF7
 2655 0070 03       		.uleb128 0x3
 2656 0071 02       		.byte	0x2
 2657 0072 05       		.byte	0x5
 2658 0073 83070000 		.4byte	.LASF8
 2659 0077 03       		.uleb128 0x3
 2660 0078 02       		.byte	0x2
 2661 0079 07       		.byte	0x7
 2662 007a D5090000 		.4byte	.LASF9
 2663 007e 02       		.uleb128 0x2
 2664 007f BC000000 		.4byte	.LASF10
 2665 0083 04       		.byte	0x4
 2666 0084 3F       		.byte	0x3f
 2667 0085 89000000 		.4byte	0x89
 2668 0089 03       		.uleb128 0x3
 2669 008a 04       		.byte	0x4
 2670 008b 05       		.byte	0x5
 2671 008c 98070000 		.4byte	.LASF11
 2672 0090 02       		.uleb128 0x2
 2673 0091 EA080000 		.4byte	.LASF12
 2674 0095 04       		.byte	0x4
 2675 0096 41       		.byte	0x41
 2676 0097 9B000000 		.4byte	0x9b
 2677 009b 03       		.uleb128 0x3
 2678 009c 04       		.byte	0x4
 2679 009d 07       		.byte	0x7
 2680 009e 67080000 		.4byte	.LASF13
 2681 00a2 03       		.uleb128 0x3
 2682 00a3 08       		.byte	0x8
 2683 00a4 07       		.byte	0x7
 2684 00a5 4C020000 		.4byte	.LASF14
 2685 00a9 03       		.uleb128 0x3
 2686 00aa 04       		.byte	0x4
 2687 00ab 07       		.byte	0x7
 2688 00ac 4D080000 		.4byte	.LASF15
 2689 00b0 05       		.uleb128 0x5
 2690 00b1 04       		.byte	0x4
 2691 00b2 03       		.uleb128 0x3
 2692 00b3 01       		.byte	0x1
 2693 00b4 08       		.byte	0x8
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 106


 2694 00b5 7E040000 		.4byte	.LASF16
 2695 00b9 06       		.uleb128 0x6
 2696 00ba 04       		.byte	0x4
 2697 00bb BF000000 		.4byte	0xbf
 2698 00bf 07       		.uleb128 0x7
 2699 00c0 B2000000 		.4byte	0xb2
 2700 00c4 06       		.uleb128 0x6
 2701 00c5 04       		.byte	0x4
 2702 00c6 CA000000 		.4byte	0xca
 2703 00ca 08       		.uleb128 0x8
 2704 00cb 02       		.uleb128 0x2
 2705 00cc FB010000 		.4byte	.LASF17
 2706 00d0 05       		.byte	0x5
 2707 00d1 14       		.byte	0x14
 2708 00d2 4C000000 		.4byte	0x4c
 2709 00d6 02       		.uleb128 0x2
 2710 00d7 50050000 		.4byte	.LASF18
 2711 00db 05       		.byte	0x5
 2712 00dc 18       		.byte	0x18
 2713 00dd 5E000000 		.4byte	0x5e
 2714 00e1 02       		.uleb128 0x2
 2715 00e2 8E080000 		.4byte	.LASF19
 2716 00e6 05       		.byte	0x5
 2717 00e7 2C       		.byte	0x2c
 2718 00e8 7E000000 		.4byte	0x7e
 2719 00ec 02       		.uleb128 0x2
 2720 00ed F2010000 		.4byte	.LASF20
 2721 00f1 05       		.byte	0x5
 2722 00f2 30       		.byte	0x30
 2723 00f3 90000000 		.4byte	0x90
 2724 00f7 03       		.uleb128 0x3
 2725 00f8 04       		.byte	0x4
 2726 00f9 04       		.byte	0x4
 2727 00fa 36020000 		.4byte	.LASF21
 2728 00fe 03       		.uleb128 0x3
 2729 00ff 08       		.byte	0x8
 2730 0100 04       		.byte	0x4
 2731 0101 F6090000 		.4byte	.LASF22
 2732 0105 02       		.uleb128 0x2
 2733 0106 C5050000 		.4byte	.LASF23
 2734 010a 02       		.byte	0x2
 2735 010b 38       		.byte	0x38
 2736 010c 89000000 		.4byte	0x89
 2737 0110 02       		.uleb128 0x2
 2738 0111 AA040000 		.4byte	.LASF24
 2739 0115 02       		.byte	0x2
 2740 0116 39       		.byte	0x39
 2741 0117 9B000000 		.4byte	0x9b
 2742 011b 02       		.uleb128 0x2
 2743 011c D6060000 		.4byte	.LASF25
 2744 0120 02       		.byte	0x2
 2745 0121 3F       		.byte	0x3f
 2746 0122 EC000000 		.4byte	0xec
 2747 0126 06       		.uleb128 0x6
 2748 0127 04       		.byte	0x4
 2749 0128 D6000000 		.4byte	0xd6
 2750 012c 09       		.uleb128 0x9
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 107


 2751 012d C6000000 		.4byte	.LASF32
 2752 0131 14       		.byte	0x14
 2753 0132 06       		.byte	0x6
 2754 0133 8B       		.byte	0x8b
 2755 0134 75010000 		.4byte	0x175
 2756 0138 0A       		.uleb128 0xa
 2757 0139 8D070000 		.4byte	.LASF26
 2758 013d 06       		.byte	0x6
 2759 013e 8E       		.byte	0x8e
 2760 013f 1B010000 		.4byte	0x11b
 2761 0143 00       		.byte	0
 2762 0144 0A       		.uleb128 0xa
 2763 0145 1F060000 		.4byte	.LASF27
 2764 0149 06       		.byte	0x6
 2765 014a 8F       		.byte	0x8f
 2766 014b 75010000 		.4byte	0x175
 2767 014f 04       		.byte	0x4
 2768 0150 0A       		.uleb128 0xa
 2769 0151 A1020000 		.4byte	.LASF28
 2770 0155 06       		.byte	0x6
 2771 0156 90       		.byte	0x90
 2772 0157 75010000 		.4byte	0x175
 2773 015b 08       		.byte	0x8
 2774 015c 0A       		.uleb128 0xa
 2775 015d 4B090000 		.4byte	.LASF29
 2776 0161 06       		.byte	0x6
 2777 0162 91       		.byte	0x91
 2778 0163 B0000000 		.4byte	0xb0
 2779 0167 0C       		.byte	0xc
 2780 0168 0A       		.uleb128 0xa
 2781 0169 48070000 		.4byte	.LASF30
 2782 016d 06       		.byte	0x6
 2783 016e 92       		.byte	0x92
 2784 016f B0000000 		.4byte	0xb0
 2785 0173 10       		.byte	0x10
 2786 0174 00       		.byte	0
 2787 0175 06       		.uleb128 0x6
 2788 0176 04       		.byte	0x4
 2789 0177 2C010000 		.4byte	0x12c
 2790 017b 02       		.uleb128 0x2
 2791 017c 83040000 		.4byte	.LASF31
 2792 0180 06       		.byte	0x6
 2793 0181 95       		.byte	0x95
 2794 0182 2C010000 		.4byte	0x12c
 2795 0186 09       		.uleb128 0x9
 2796 0187 A6030000 		.4byte	.LASF33
 2797 018b 0C       		.byte	0xc
 2798 018c 06       		.byte	0x6
 2799 018d 97       		.byte	0x97
 2800 018e B7010000 		.4byte	0x1b7
 2801 0192 0A       		.uleb128 0xa
 2802 0193 8D070000 		.4byte	.LASF26
 2803 0197 06       		.byte	0x6
 2804 0198 9A       		.byte	0x9a
 2805 0199 1B010000 		.4byte	0x11b
 2806 019d 00       		.byte	0
 2807 019e 0A       		.uleb128 0xa
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 108


 2808 019f 1F060000 		.4byte	.LASF27
 2809 01a3 06       		.byte	0x6
 2810 01a4 9B       		.byte	0x9b
 2811 01a5 75010000 		.4byte	0x175
 2812 01a9 04       		.byte	0x4
 2813 01aa 0A       		.uleb128 0xa
 2814 01ab A1020000 		.4byte	.LASF28
 2815 01af 06       		.byte	0x6
 2816 01b0 9C       		.byte	0x9c
 2817 01b1 75010000 		.4byte	0x175
 2818 01b5 08       		.byte	0x8
 2819 01b6 00       		.byte	0
 2820 01b7 02       		.uleb128 0x2
 2821 01b8 41050000 		.4byte	.LASF34
 2822 01bc 06       		.byte	0x6
 2823 01bd 9E       		.byte	0x9e
 2824 01be 86010000 		.4byte	0x186
 2825 01c2 09       		.uleb128 0x9
 2826 01c3 B6030000 		.4byte	.LASF35
 2827 01c7 14       		.byte	0x14
 2828 01c8 06       		.byte	0x6
 2829 01c9 A3       		.byte	0xa3
 2830 01ca F3010000 		.4byte	0x1f3
 2831 01ce 0A       		.uleb128 0xa
 2832 01cf 00000000 		.4byte	.LASF36
 2833 01d3 06       		.byte	0x6
 2834 01d4 A6       		.byte	0xa6
 2835 01d5 F3010000 		.4byte	0x1f3
 2836 01d9 00       		.byte	0
 2837 01da 0A       		.uleb128 0xa
 2838 01db 9F000000 		.4byte	.LASF37
 2839 01df 06       		.byte	0x6
 2840 01e0 A7       		.byte	0xa7
 2841 01e1 F8010000 		.4byte	0x1f8
 2842 01e5 04       		.byte	0x4
 2843 01e6 0A       		.uleb128 0xa
 2844 01e7 1A050000 		.4byte	.LASF38
 2845 01eb 06       		.byte	0x6
 2846 01ec A8       		.byte	0xa8
 2847 01ed B7010000 		.4byte	0x1b7
 2848 01f1 08       		.byte	0x8
 2849 01f2 00       		.byte	0
 2850 01f3 0B       		.uleb128 0xb
 2851 01f4 10010000 		.4byte	0x110
 2852 01f8 06       		.uleb128 0x6
 2853 01f9 04       		.byte	0x4
 2854 01fa 7B010000 		.4byte	0x17b
 2855 01fe 02       		.uleb128 0x2
 2856 01ff B4060000 		.4byte	.LASF39
 2857 0203 06       		.byte	0x6
 2858 0204 AA       		.byte	0xaa
 2859 0205 C2010000 		.4byte	0x1c2
 2860 0209 09       		.uleb128 0x9
 2861 020a A7000000 		.4byte	.LASF40
 2862 020e 08       		.byte	0x8
 2863 020f 07       		.byte	0x7
 2864 0210 5D       		.byte	0x5d
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 109


 2865 0211 2E020000 		.4byte	0x22e
 2866 0215 0A       		.uleb128 0xa
 2867 0216 2D010000 		.4byte	.LASF41
 2868 021a 07       		.byte	0x7
 2869 021b 5F       		.byte	0x5f
 2870 021c 05010000 		.4byte	0x105
 2871 0220 00       		.byte	0
 2872 0221 0A       		.uleb128 0xa
 2873 0222 E7050000 		.4byte	.LASF42
 2874 0226 07       		.byte	0x7
 2875 0227 60       		.byte	0x60
 2876 0228 1B010000 		.4byte	0x11b
 2877 022c 04       		.byte	0x4
 2878 022d 00       		.byte	0
 2879 022e 02       		.uleb128 0x2
 2880 022f 3B060000 		.4byte	.LASF43
 2881 0233 07       		.byte	0x7
 2882 0234 61       		.byte	0x61
 2883 0235 09020000 		.4byte	0x209
 2884 0239 02       		.uleb128 0x2
 2885 023a D7040000 		.4byte	.LASF44
 2886 023e 08       		.byte	0x8
 2887 023f 2E       		.byte	0x2e
 2888 0240 B0000000 		.4byte	0xb0
 2889 0244 0C       		.uleb128 0xc
 2890 0245 04       		.byte	0x4
 2891 0246 01       		.byte	0x1
 2892 0247 5E       		.byte	0x5e
 2893 0248 63020000 		.4byte	0x263
 2894 024c 0D       		.uleb128 0xd
 2895 024d A4010000 		.4byte	.LASF45
 2896 0251 01       		.byte	0x1
 2897 0252 60       		.byte	0x60
 2898 0253 63020000 		.4byte	0x263
 2899 0257 0D       		.uleb128 0xd
 2900 0258 4F010000 		.4byte	.LASF46
 2901 025c 01       		.byte	0x1
 2902 025d 61       		.byte	0x61
 2903 025e 10010000 		.4byte	0x110
 2904 0262 00       		.byte	0
 2905 0263 06       		.uleb128 0x6
 2906 0264 04       		.byte	0x4
 2907 0265 CB000000 		.4byte	0xcb
 2908 0269 09       		.uleb128 0x9
 2909 026a 3C020000 		.4byte	.LASF47
 2910 026e 50       		.byte	0x50
 2911 026f 01       		.byte	0x1
 2912 0270 58       		.byte	0x58
 2913 0271 10030000 		.4byte	0x310
 2914 0275 0A       		.uleb128 0xa
 2915 0276 6D090000 		.4byte	.LASF48
 2916 027a 01       		.byte	0x1
 2917 027b 5A       		.byte	0x5a
 2918 027c 63020000 		.4byte	0x263
 2919 0280 00       		.byte	0
 2920 0281 0A       		.uleb128 0xa
 2921 0282 2C080000 		.4byte	.LASF49
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 110


 2922 0286 01       		.byte	0x1
 2923 0287 5B       		.byte	0x5b
 2924 0288 63020000 		.4byte	0x263
 2925 028c 04       		.byte	0x4
 2926 028d 0A       		.uleb128 0xa
 2927 028e CC060000 		.4byte	.LASF50
 2928 0292 01       		.byte	0x1
 2929 0293 5C       		.byte	0x5c
 2930 0294 63020000 		.4byte	0x263
 2931 0298 08       		.byte	0x8
 2932 0299 0E       		.uleb128 0xe
 2933 029a 7500     		.ascii	"u\000"
 2934 029c 01       		.byte	0x1
 2935 029d 62       		.byte	0x62
 2936 029e 44020000 		.4byte	0x244
 2937 02a2 0C       		.byte	0xc
 2938 02a3 0A       		.uleb128 0xa
 2939 02a4 FA000000 		.4byte	.LASF51
 2940 02a8 01       		.byte	0x1
 2941 02a9 64       		.byte	0x64
 2942 02aa FE010000 		.4byte	0x1fe
 2943 02ae 10       		.byte	0x10
 2944 02af 0A       		.uleb128 0xa
 2945 02b0 45000000 		.4byte	.LASF52
 2946 02b4 01       		.byte	0x1
 2947 02b5 65       		.byte	0x65
 2948 02b6 FE010000 		.4byte	0x1fe
 2949 02ba 24       		.byte	0x24
 2950 02bb 0A       		.uleb128 0xa
 2951 02bc AC020000 		.4byte	.LASF53
 2952 02c0 01       		.byte	0x1
 2953 02c1 67       		.byte	0x67
 2954 02c2 F3010000 		.4byte	0x1f3
 2955 02c6 38       		.byte	0x38
 2956 02c7 0A       		.uleb128 0xa
 2957 02c8 6C070000 		.4byte	.LASF54
 2958 02cc 01       		.byte	0x1
 2959 02cd 68       		.byte	0x68
 2960 02ce 10010000 		.4byte	0x110
 2961 02d2 3C       		.byte	0x3c
 2962 02d3 0A       		.uleb128 0xa
 2963 02d4 3E040000 		.4byte	.LASF55
 2964 02d8 01       		.byte	0x1
 2965 02d9 69       		.byte	0x69
 2966 02da 10010000 		.4byte	0x110
 2967 02de 40       		.byte	0x40
 2968 02df 0A       		.uleb128 0xa
 2969 02e0 070A0000 		.4byte	.LASF56
 2970 02e4 01       		.byte	0x1
 2971 02e5 6B       		.byte	0x6b
 2972 02e6 10030000 		.4byte	0x310
 2973 02ea 44       		.byte	0x44
 2974 02eb 0A       		.uleb128 0xa
 2975 02ec 25010000 		.4byte	.LASF57
 2976 02f0 01       		.byte	0x1
 2977 02f1 6C       		.byte	0x6c
 2978 02f2 10030000 		.4byte	0x310
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 111


 2979 02f6 45       		.byte	0x45
 2980 02f7 0A       		.uleb128 0xa
 2981 02f8 75070000 		.4byte	.LASF58
 2982 02fc 01       		.byte	0x1
 2983 02fd 77       		.byte	0x77
 2984 02fe 10010000 		.4byte	0x110
 2985 0302 48       		.byte	0x48
 2986 0303 0A       		.uleb128 0xa
 2987 0304 A8060000 		.4byte	.LASF59
 2988 0308 01       		.byte	0x1
 2989 0309 78       		.byte	0x78
 2990 030a D6000000 		.4byte	0xd6
 2991 030e 4C       		.byte	0x4c
 2992 030f 00       		.byte	0
 2993 0310 0B       		.uleb128 0xb
 2994 0311 CB000000 		.4byte	0xcb
 2995 0315 02       		.uleb128 0x2
 2996 0316 EF090000 		.4byte	.LASF60
 2997 031a 01       		.byte	0x1
 2998 031b 7B       		.byte	0x7b
 2999 031c 69020000 		.4byte	0x269
 3000 0320 02       		.uleb128 0x2
 3001 0321 64010000 		.4byte	.LASF61
 3002 0325 01       		.byte	0x1
 3003 0326 7F       		.byte	0x7f
 3004 0327 15030000 		.4byte	0x315
 3005 032b 09       		.uleb128 0x9
 3006 032c D1000000 		.4byte	.LASF62
 3007 0330 08       		.byte	0x8
 3008 0331 01       		.byte	0x1
 3009 0332 8C       		.byte	0x8c
 3010 0333 50030000 		.4byte	0x350
 3011 0337 0A       		.uleb128 0xa
 3012 0338 9A030000 		.4byte	.LASF63
 3013 033c 01       		.byte	0x1
 3014 033d 8E       		.byte	0x8e
 3015 033e B9000000 		.4byte	0xb9
 3016 0342 00       		.byte	0
 3017 0343 0A       		.uleb128 0xa
 3018 0344 92030000 		.4byte	.LASF64
 3019 0348 01       		.byte	0x1
 3020 0349 8F       		.byte	0x8f
 3021 034a 39020000 		.4byte	0x239
 3022 034e 04       		.byte	0x4
 3023 034f 00       		.byte	0
 3024 0350 02       		.uleb128 0x2
 3025 0351 58050000 		.4byte	.LASF65
 3026 0355 01       		.byte	0x1
 3027 0356 90       		.byte	0x90
 3028 0357 2B030000 		.4byte	0x32b
 3029 035b 02       		.uleb128 0x2
 3030 035c 83010000 		.4byte	.LASF66
 3031 0360 01       		.byte	0x1
 3032 0361 95       		.byte	0x95
 3033 0362 50030000 		.4byte	0x350
 3034 0366 0F       		.uleb128 0xf
 3035 0367 91050000 		.4byte	.LASF156
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 112


 3036 036b 02       		.byte	0x2
 3037 036c CF       		.byte	0xcf
 3038 036d EC000000 		.4byte	0xec
 3039 0371 03       		.byte	0x3
 3040 0372 8D030000 		.4byte	0x38d
 3041 0376 10       		.uleb128 0x10
 3042 0377 1D020000 		.4byte	.LASF67
 3043 037b 02       		.byte	0x2
 3044 037c D1       		.byte	0xd1
 3045 037d EC000000 		.4byte	0xec
 3046 0381 10       		.uleb128 0x10
 3047 0382 9D040000 		.4byte	.LASF68
 3048 0386 02       		.byte	0x2
 3049 0387 D1       		.byte	0xd1
 3050 0388 EC000000 		.4byte	0xec
 3051 038c 00       		.byte	0
 3052 038d 11       		.uleb128 0x11
 3053 038e D5030000 		.4byte	.LASF157
 3054 0392 02       		.byte	0x2
 3055 0393 E3       		.byte	0xe3
 3056 0394 03       		.byte	0x3
 3057 0395 A5030000 		.4byte	0x3a5
 3058 0399 12       		.uleb128 0x12
 3059 039a 99060000 		.4byte	.LASF158
 3060 039e 02       		.byte	0x2
 3061 039f E3       		.byte	0xe3
 3062 03a0 EC000000 		.4byte	0xec
 3063 03a4 00       		.byte	0
 3064 03a5 13       		.uleb128 0x13
 3065 03a6 7C020000 		.4byte	.LASF69
 3066 03aa 01       		.byte	0x1
 3067 03ab DF07     		.2byte	0x7df
 3068 03ad 10010000 		.4byte	0x110
 3069 03b1 00000000 		.4byte	.LFB91
 3070 03b5 12000000 		.4byte	.LFE91-.LFB91
 3071 03b9 01       		.uleb128 0x1
 3072 03ba 9C       		.byte	0x9c
 3073 03bb E0030000 		.4byte	0x3e0
 3074 03bf 14       		.uleb128 0x14
 3075 03c0 3D080000 		.4byte	.LASF71
 3076 03c4 01       		.byte	0x1
 3077 03c5 DF07     		.2byte	0x7df
 3078 03c7 EB030000 		.4byte	0x3eb
 3079 03cb 00000000 		.4byte	.LLST0
 3080 03cf 15       		.uleb128 0x15
 3081 03d0 79060000 		.4byte	.LASF72
 3082 03d4 01       		.byte	0x1
 3083 03d5 E107     		.2byte	0x7e1
 3084 03d7 10010000 		.4byte	0x110
 3085 03db 3A000000 		.4byte	.LLST1
 3086 03df 00       		.byte	0
 3087 03e0 06       		.uleb128 0x6
 3088 03e1 04       		.byte	0x4
 3089 03e2 E6030000 		.4byte	0x3e6
 3090 03e6 07       		.uleb128 0x7
 3091 03e7 20030000 		.4byte	0x320
 3092 03eb 07       		.uleb128 0x7
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 113


 3093 03ec E0030000 		.4byte	0x3e0
 3094 03f0 13       		.uleb128 0x13
 3095 03f1 8E040000 		.4byte	.LASF70
 3096 03f5 01       		.byte	0x1
 3097 03f6 F808     		.2byte	0x8f8
 3098 03f8 05010000 		.4byte	0x105
 3099 03fc 00000000 		.4byte	.LFB97
 3100 0400 1E000000 		.4byte	.LFE97-.LFB97
 3101 0404 01       		.uleb128 0x1
 3102 0405 9C       		.byte	0x9c
 3103 0406 3B040000 		.4byte	0x43b
 3104 040a 14       		.uleb128 0x14
 3105 040b 3D080000 		.4byte	.LASF71
 3106 040f 01       		.byte	0x1
 3107 0410 F808     		.2byte	0x8f8
 3108 0412 E0030000 		.4byte	0x3e0
 3109 0416 58000000 		.4byte	.LLST2
 3110 041a 16       		.uleb128 0x16
 3111 041b 45080000 		.4byte	.LASF73
 3112 041f 01       		.byte	0x1
 3113 0420 FA08     		.2byte	0x8fa
 3114 0422 05010000 		.4byte	0x105
 3115 0426 01       		.uleb128 0x1
 3116 0427 54       		.byte	0x54
 3117 0428 17       		.uleb128 0x17
 3118 0429 08000000 		.4byte	.LVL6
 3119 042d 7F180000 		.4byte	0x187f
 3120 0431 17       		.uleb128 0x17
 3121 0432 1A000000 		.4byte	.LVL10
 3122 0436 8A180000 		.4byte	0x188a
 3123 043a 00       		.byte	0
 3124 043b 13       		.uleb128 0x13
 3125 043c 63020000 		.4byte	.LASF74
 3126 0440 01       		.byte	0x1
 3127 0441 D108     		.2byte	0x8d1
 3128 0443 05010000 		.4byte	0x105
 3129 0447 00000000 		.4byte	.LFB95
 3130 044b 1A000000 		.4byte	.LFE95-.LFB95
 3131 044f 01       		.uleb128 0x1
 3132 0450 9C       		.byte	0x9c
 3133 0451 86040000 		.4byte	0x486
 3134 0455 14       		.uleb128 0x14
 3135 0456 3D080000 		.4byte	.LASF71
 3136 045a 01       		.byte	0x1
 3137 045b D108     		.2byte	0x8d1
 3138 045d E0030000 		.4byte	0x3e0
 3139 0461 9D000000 		.4byte	.LLST3
 3140 0465 16       		.uleb128 0x16
 3141 0466 45080000 		.4byte	.LASF73
 3142 046a 01       		.byte	0x1
 3143 046b D308     		.2byte	0x8d3
 3144 046d 05010000 		.4byte	0x105
 3145 0471 01       		.uleb128 0x1
 3146 0472 54       		.byte	0x54
 3147 0473 17       		.uleb128 0x17
 3148 0474 08000000 		.4byte	.LVL12
 3149 0478 7F180000 		.4byte	0x187f
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 114


 3150 047c 17       		.uleb128 0x17
 3151 047d 16000000 		.4byte	.LVL16
 3152 0481 8A180000 		.4byte	0x188a
 3153 0485 00       		.byte	0
 3154 0486 13       		.uleb128 0x13
 3155 0487 E5030000 		.4byte	.LASF75
 3156 048b 01       		.byte	0x1
 3157 048c F807     		.2byte	0x7f8
 3158 048e 05010000 		.4byte	0x105
 3159 0492 00000000 		.4byte	.LFB92
 3160 0496 76000000 		.4byte	.LFE92-.LFB92
 3161 049a 01       		.uleb128 0x1
 3162 049b 9C       		.byte	0x9c
 3163 049c 0C050000 		.4byte	0x50c
 3164 04a0 14       		.uleb128 0x14
 3165 04a1 3D080000 		.4byte	.LASF71
 3166 04a5 01       		.byte	0x1
 3167 04a6 F807     		.2byte	0x7f8
 3168 04a8 12050000 		.4byte	0x512
 3169 04ac E2000000 		.4byte	.LLST4
 3170 04b0 14       		.uleb128 0x14
 3171 04b1 CF070000 		.4byte	.LASF76
 3172 04b5 01       		.byte	0x1
 3173 04b6 F807     		.2byte	0x7f8
 3174 04b8 C4000000 		.4byte	0xc4
 3175 04bc 42010000 		.4byte	.LLST5
 3176 04c0 14       		.uleb128 0x14
 3177 04c1 FD090000 		.4byte	.LASF77
 3178 04c5 01       		.byte	0x1
 3179 04c6 F807     		.2byte	0x7f8
 3180 04c8 17050000 		.4byte	0x517
 3181 04cc AE010000 		.4byte	.LLST6
 3182 04d0 15       		.uleb128 0x15
 3183 04d1 45080000 		.4byte	.LASF73
 3184 04d5 01       		.byte	0x1
 3185 04d6 FA07     		.2byte	0x7fa
 3186 04d8 05010000 		.4byte	0x105
 3187 04dc CC010000 		.4byte	.LLST7
 3188 04e0 15       		.uleb128 0x15
 3189 04e1 AC020000 		.4byte	.LASF53
 3190 04e5 01       		.byte	0x1
 3191 04e6 FB07     		.2byte	0x7fb
 3192 04e8 10010000 		.4byte	0x110
 3193 04ec 02020000 		.4byte	.LLST8
 3194 04f0 17       		.uleb128 0x17
 3195 04f1 16000000 		.4byte	.LVL22
 3196 04f5 95180000 		.4byte	0x1895
 3197 04f9 17       		.uleb128 0x17
 3198 04fa 24000000 		.4byte	.LVL25
 3199 04fe A1180000 		.4byte	0x18a1
 3200 0502 17       		.uleb128 0x17
 3201 0503 40000000 		.4byte	.LVL28
 3202 0507 A1180000 		.4byte	0x18a1
 3203 050b 00       		.byte	0
 3204 050c 06       		.uleb128 0x6
 3205 050d 04       		.byte	0x4
 3206 050e 20030000 		.4byte	0x320
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 115


 3207 0512 07       		.uleb128 0x7
 3208 0513 0C050000 		.4byte	0x50c
 3209 0517 07       		.uleb128 0x7
 3210 0518 05010000 		.4byte	0x105
 3211 051c 18       		.uleb128 0x18
 3212 051d 05090000 		.4byte	.LASF79
 3213 0521 01       		.byte	0x1
 3214 0522 4708     		.2byte	0x847
 3215 0524 00000000 		.4byte	.LFB93
 3216 0528 24000000 		.4byte	.LFE93-.LFB93
 3217 052c 01       		.uleb128 0x1
 3218 052d 9C       		.byte	0x9c
 3219 052e 63050000 		.4byte	0x563
 3220 0532 14       		.uleb128 0x14
 3221 0533 3D080000 		.4byte	.LASF71
 3222 0537 01       		.byte	0x1
 3223 0538 4708     		.2byte	0x847
 3224 053a 12050000 		.4byte	0x512
 3225 053e 22020000 		.4byte	.LLST9
 3226 0542 14       		.uleb128 0x14
 3227 0543 73020000 		.4byte	.LASF78
 3228 0547 01       		.byte	0x1
 3229 0548 4708     		.2byte	0x847
 3230 054a 63050000 		.4byte	0x563
 3231 054e 4E020000 		.4byte	.LLST10
 3232 0552 19       		.uleb128 0x19
 3233 0553 20000000 		.4byte	.LVL38
 3234 0557 A1180000 		.4byte	0x18a1
 3235 055b 1A       		.uleb128 0x1a
 3236 055c 01       		.uleb128 0x1
 3237 055d 50       		.byte	0x50
 3238 055e 02       		.uleb128 0x2
 3239 055f 74       		.byte	0x74
 3240 0560 00       		.sleb128 0
 3241 0561 00       		.byte	0
 3242 0562 00       		.byte	0
 3243 0563 07       		.uleb128 0x7
 3244 0564 B0000000 		.4byte	0xb0
 3245 0568 18       		.uleb128 0x18
 3246 0569 8D090000 		.4byte	.LASF80
 3247 056d 01       		.byte	0x1
 3248 056e 5908     		.2byte	0x859
 3249 0570 00000000 		.4byte	.LFB94
 3250 0574 66000000 		.4byte	.LFE94-.LFB94
 3251 0578 01       		.uleb128 0x1
 3252 0579 9C       		.byte	0x9c
 3253 057a 29060000 		.4byte	0x629
 3254 057e 14       		.uleb128 0x14
 3255 057f 3D080000 		.4byte	.LASF71
 3256 0583 01       		.byte	0x1
 3257 0584 5908     		.2byte	0x859
 3258 0586 12050000 		.4byte	0x512
 3259 058a 77020000 		.4byte	.LLST11
 3260 058e 1B       		.uleb128 0x1b
 3261 058f 08000000 		.4byte	.LBB23
 3262 0593 28000000 		.4byte	.LBE23-.LBB23
 3263 0597 C9050000 		.4byte	0x5c9
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 116


 3264 059b 15       		.uleb128 0x15
 3265 059c 25010000 		.4byte	.LASF57
 3266 05a0 01       		.byte	0x1
 3267 05a1 6308     		.2byte	0x863
 3268 05a3 CB000000 		.4byte	0xcb
 3269 05a7 95020000 		.4byte	.LLST12
 3270 05ab 1C       		.uleb128 0x1c
 3271 05ac 1C000000 		.4byte	.LVL43
 3272 05b0 AA180000 		.4byte	0x18aa
 3273 05b4 BF050000 		.4byte	0x5bf
 3274 05b8 1A       		.uleb128 0x1a
 3275 05b9 01       		.uleb128 0x1
 3276 05ba 50       		.byte	0x50
 3277 05bb 02       		.uleb128 0x2
 3278 05bc 75       		.byte	0x75
 3279 05bd 24       		.sleb128 36
 3280 05be 00       		.byte	0
 3281 05bf 17       		.uleb128 0x17
 3282 05c0 22000000 		.4byte	.LVL44
 3283 05c4 B6180000 		.4byte	0x18b6
 3284 05c8 00       		.byte	0
 3285 05c9 1B       		.uleb128 0x1b
 3286 05ca 38000000 		.4byte	.LBB24
 3287 05ce 28000000 		.4byte	.LBE24-.LBB24
 3288 05d2 04060000 		.4byte	0x604
 3289 05d6 15       		.uleb128 0x15
 3290 05d7 070A0000 		.4byte	.LASF56
 3291 05db 01       		.byte	0x1
 3292 05dc B408     		.2byte	0x8b4
 3293 05de CB000000 		.4byte	0xcb
 3294 05e2 B3020000 		.4byte	.LLST13
 3295 05e6 1C       		.uleb128 0x1c
 3296 05e7 4C000000 		.4byte	.LVL51
 3297 05eb AA180000 		.4byte	0x18aa
 3298 05ef FA050000 		.4byte	0x5fa
 3299 05f3 1A       		.uleb128 0x1a
 3300 05f4 01       		.uleb128 0x1
 3301 05f5 50       		.byte	0x50
 3302 05f6 02       		.uleb128 0x2
 3303 05f7 75       		.byte	0x75
 3304 05f8 10       		.sleb128 16
 3305 05f9 00       		.byte	0
 3306 05fa 17       		.uleb128 0x17
 3307 05fb 52000000 		.4byte	.LVL52
 3308 05ff B6180000 		.4byte	0x18b6
 3309 0603 00       		.byte	0
 3310 0604 17       		.uleb128 0x17
 3311 0605 08000000 		.4byte	.LVL41
 3312 0609 7F180000 		.4byte	0x187f
 3313 060d 17       		.uleb128 0x17
 3314 060e 34000000 		.4byte	.LVL47
 3315 0612 8A180000 		.4byte	0x188a
 3316 0616 17       		.uleb128 0x17
 3317 0617 38000000 		.4byte	.LVL48
 3318 061b 7F180000 		.4byte	0x187f
 3319 061f 17       		.uleb128 0x17
 3320 0620 64000000 		.4byte	.LVL55
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 117


 3321 0624 8A180000 		.4byte	0x188a
 3322 0628 00       		.byte	0
 3323 0629 1D       		.uleb128 0x1d
 3324 062a 9C090000 		.4byte	.LASF87
 3325 062e 01       		.byte	0x1
 3326 062f F7       		.byte	0xf7
 3327 0630 05010000 		.4byte	0x105
 3328 0634 00000000 		.4byte	.LFB68
 3329 0638 6C000000 		.4byte	.LFE68-.LFB68
 3330 063c 01       		.uleb128 0x1
 3331 063d 9C       		.byte	0x9c
 3332 063e BE060000 		.4byte	0x6be
 3333 0642 1E       		.uleb128 0x1e
 3334 0643 2F020000 		.4byte	.LASF81
 3335 0647 01       		.byte	0x1
 3336 0648 F7       		.byte	0xf7
 3337 0649 39020000 		.4byte	0x239
 3338 064d D1020000 		.4byte	.LLST14
 3339 0651 1E       		.uleb128 0x1e
 3340 0652 26060000 		.4byte	.LASF82
 3341 0656 01       		.byte	0x1
 3342 0657 F7       		.byte	0xf7
 3343 0658 05010000 		.4byte	0x105
 3344 065c FD020000 		.4byte	.LLST15
 3345 0660 1F       		.uleb128 0x1f
 3346 0661 3D080000 		.4byte	.LASF71
 3347 0665 01       		.byte	0x1
 3348 0666 F9       		.byte	0xf9
 3349 0667 12050000 		.4byte	0x512
 3350 066b 29030000 		.4byte	.LLST16
 3351 066f 17       		.uleb128 0x17
 3352 0670 0A000000 		.4byte	.LVL58
 3353 0674 7F180000 		.4byte	0x187f
 3354 0678 1C       		.uleb128 0x1c
 3355 0679 3C000000 		.4byte	.LVL59
 3356 067d AA180000 		.4byte	0x18aa
 3357 0681 8C060000 		.4byte	0x68c
 3358 0685 1A       		.uleb128 0x1a
 3359 0686 01       		.uleb128 0x1
 3360 0687 50       		.byte	0x50
 3361 0688 02       		.uleb128 0x2
 3362 0689 74       		.byte	0x74
 3363 068a 10       		.sleb128 16
 3364 068b 00       		.byte	0
 3365 068c 1C       		.uleb128 0x1c
 3366 068d 58000000 		.4byte	.LVL60
 3367 0691 C2180000 		.4byte	0x18c2
 3368 0695 A0060000 		.4byte	0x6a0
 3369 0699 1A       		.uleb128 0x1a
 3370 069a 01       		.uleb128 0x1
 3371 069b 50       		.byte	0x50
 3372 069c 02       		.uleb128 0x2
 3373 069d 74       		.byte	0x74
 3374 069e 10       		.sleb128 16
 3375 069f 00       		.byte	0
 3376 06a0 1C       		.uleb128 0x1c
 3377 06a1 60000000 		.4byte	.LVL61
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 118


 3378 06a5 C2180000 		.4byte	0x18c2
 3379 06a9 B4060000 		.4byte	0x6b4
 3380 06ad 1A       		.uleb128 0x1a
 3381 06ae 01       		.uleb128 0x1
 3382 06af 50       		.byte	0x50
 3383 06b0 02       		.uleb128 0x2
 3384 06b1 74       		.byte	0x74
 3385 06b2 24       		.sleb128 36
 3386 06b3 00       		.byte	0
 3387 06b4 17       		.uleb128 0x17
 3388 06b5 64000000 		.4byte	.LVL62
 3389 06b9 8A180000 		.4byte	0x188a
 3390 06bd 00       		.byte	0
 3391 06be 18       		.uleb128 0x18
 3392 06bf DC010000 		.4byte	.LASF83
 3393 06c3 01       		.byte	0x1
 3394 06c4 9801     		.2byte	0x198
 3395 06c6 00000000 		.4byte	.LFB70
 3396 06ca 22000000 		.4byte	.LFE70-.LFB70
 3397 06ce 01       		.uleb128 0x1
 3398 06cf 9C       		.byte	0x9c
 3399 06d0 39070000 		.4byte	0x739
 3400 06d4 14       		.uleb128 0x14
 3401 06d5 00070000 		.4byte	.LASF84
 3402 06d9 01       		.byte	0x1
 3403 06da 9801     		.2byte	0x198
 3404 06dc 39070000 		.4byte	0x739
 3405 06e0 55030000 		.4byte	.LLST17
 3406 06e4 14       		.uleb128 0x14
 3407 06e5 3E040000 		.4byte	.LASF55
 3408 06e9 01       		.byte	0x1
 3409 06ea 9801     		.2byte	0x198
 3410 06ec 39070000 		.4byte	0x739
 3411 06f0 82030000 		.4byte	.LLST18
 3412 06f4 14       		.uleb128 0x14
 3413 06f5 D0050000 		.4byte	.LASF85
 3414 06f9 01       		.byte	0x1
 3415 06fa 9801     		.2byte	0x198
 3416 06fc 26010000 		.4byte	0x126
 3417 0700 AE030000 		.4byte	.LLST19
 3418 0704 14       		.uleb128 0x14
 3419 0705 A8060000 		.4byte	.LASF59
 3420 0709 01       		.byte	0x1
 3421 070a 9801     		.2byte	0x198
 3422 070c 3E070000 		.4byte	0x73e
 3423 0710 CF030000 		.4byte	.LLST20
 3424 0714 20       		.uleb128 0x20
 3425 0715 B1000000 		.4byte	.LASF86
 3426 0719 01       		.byte	0x1
 3427 071a 9801     		.2byte	0x198
 3428 071c 0C050000 		.4byte	0x50c
 3429 0720 02       		.uleb128 0x2
 3430 0721 91       		.byte	0x91
 3431 0722 00       		.sleb128 0
 3432 0723 19       		.uleb128 0x19
 3433 0724 1C000000 		.4byte	.LVL68
 3434 0728 29060000 		.4byte	0x629
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 119


 3435 072c 1A       		.uleb128 0x1a
 3436 072d 01       		.uleb128 0x1
 3437 072e 50       		.byte	0x50
 3438 072f 02       		.uleb128 0x2
 3439 0730 74       		.byte	0x74
 3440 0731 00       		.sleb128 0
 3441 0732 1A       		.uleb128 0x1a
 3442 0733 01       		.uleb128 0x1
 3443 0734 51       		.byte	0x51
 3444 0735 01       		.uleb128 0x1
 3445 0736 31       		.byte	0x31
 3446 0737 00       		.byte	0
 3447 0738 00       		.byte	0
 3448 0739 07       		.uleb128 0x7
 3449 073a 10010000 		.4byte	0x110
 3450 073e 07       		.uleb128 0x7
 3451 073f D6000000 		.4byte	0xd6
 3452 0743 21       		.uleb128 0x21
 3453 0744 6B050000 		.4byte	.LASF88
 3454 0748 01       		.byte	0x1
 3455 0749 6601     		.2byte	0x166
 3456 074b 39020000 		.4byte	0x239
 3457 074f 00000000 		.4byte	.LFB69
 3458 0753 34000000 		.4byte	.LFE69-.LFB69
 3459 0757 01       		.uleb128 0x1
 3460 0758 9C       		.byte	0x9c
 3461 0759 F1070000 		.4byte	0x7f1
 3462 075d 14       		.uleb128 0x14
 3463 075e 00070000 		.4byte	.LASF84
 3464 0762 01       		.byte	0x1
 3465 0763 6601     		.2byte	0x166
 3466 0765 39070000 		.4byte	0x739
 3467 0769 F0030000 		.4byte	.LLST21
 3468 076d 14       		.uleb128 0x14
 3469 076e 3E040000 		.4byte	.LASF55
 3470 0772 01       		.byte	0x1
 3471 0773 6601     		.2byte	0x166
 3472 0775 39070000 		.4byte	0x739
 3473 0779 24040000 		.4byte	.LLST22
 3474 077d 14       		.uleb128 0x14
 3475 077e A8060000 		.4byte	.LASF59
 3476 0782 01       		.byte	0x1
 3477 0783 6601     		.2byte	0x166
 3478 0785 3E070000 		.4byte	0x73e
 3479 0789 42040000 		.4byte	.LLST23
 3480 078d 15       		.uleb128 0x15
 3481 078e B1000000 		.4byte	.LASF86
 3482 0792 01       		.byte	0x1
 3483 0793 6801     		.2byte	0x168
 3484 0795 0C050000 		.4byte	0x50c
 3485 0799 63040000 		.4byte	.LLST24
 3486 079d 15       		.uleb128 0x15
 3487 079e AE070000 		.4byte	.LASF89
 3488 07a2 01       		.byte	0x1
 3489 07a3 6901     		.2byte	0x169
 3490 07a5 25000000 		.4byte	0x25
 3491 07a9 81040000 		.4byte	.LLST25
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 120


 3492 07ad 15       		.uleb128 0x15
 3493 07ae D0050000 		.4byte	.LASF85
 3494 07b2 01       		.byte	0x1
 3495 07b3 6A01     		.2byte	0x16a
 3496 07b5 26010000 		.4byte	0x126
 3497 07b9 AD040000 		.4byte	.LLST26
 3498 07bd 17       		.uleb128 0x17
 3499 07be 1A000000 		.4byte	.LVL74
 3500 07c2 CE180000 		.4byte	0x18ce
 3501 07c6 19       		.uleb128 0x19
 3502 07c7 2E000000 		.4byte	.LVL78
 3503 07cb BE060000 		.4byte	0x6be
 3504 07cf 1A       		.uleb128 0x1a
 3505 07d0 01       		.uleb128 0x1
 3506 07d1 50       		.byte	0x50
 3507 07d2 02       		.uleb128 0x2
 3508 07d3 75       		.byte	0x75
 3509 07d4 00       		.sleb128 0
 3510 07d5 1A       		.uleb128 0x1a
 3511 07d6 01       		.uleb128 0x1
 3512 07d7 51       		.byte	0x51
 3513 07d8 02       		.uleb128 0x2
 3514 07d9 76       		.byte	0x76
 3515 07da 00       		.sleb128 0
 3516 07db 1A       		.uleb128 0x1a
 3517 07dc 01       		.uleb128 0x1
 3518 07dd 52       		.byte	0x52
 3519 07de 03       		.uleb128 0x3
 3520 07df 74       		.byte	0x74
 3521 07e0 D000     		.sleb128 80
 3522 07e2 1A       		.uleb128 0x1a
 3523 07e3 01       		.uleb128 0x1
 3524 07e4 53       		.byte	0x53
 3525 07e5 02       		.uleb128 0x2
 3526 07e6 77       		.byte	0x77
 3527 07e7 00       		.sleb128 0
 3528 07e8 1A       		.uleb128 0x1a
 3529 07e9 02       		.uleb128 0x2
 3530 07ea 7D       		.byte	0x7d
 3531 07eb 00       		.sleb128 0
 3532 07ec 02       		.uleb128 0x2
 3533 07ed 74       		.byte	0x74
 3534 07ee 00       		.sleb128 0
 3535 07ef 00       		.byte	0
 3536 07f0 00       		.byte	0
 3537 07f1 21       		.uleb128 0x21
 3538 07f2 280A0000 		.4byte	.LASF90
 3539 07f6 01       		.byte	0x1
 3540 07f7 BB02     		.2byte	0x2bb
 3541 07f9 39020000 		.4byte	0x239
 3542 07fd 00000000 		.4byte	.LFB75
 3543 0801 16000000 		.4byte	.LFE75-.LFB75
 3544 0805 01       		.uleb128 0x1
 3545 0806 9C       		.byte	0x9c
 3546 0807 57080000 		.4byte	0x857
 3547 080b 14       		.uleb128 0x14
 3548 080c 30060000 		.4byte	.LASF91
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 121


 3549 0810 01       		.byte	0x1
 3550 0811 BB02     		.2byte	0x2bb
 3551 0813 39070000 		.4byte	0x739
 3552 0817 DC040000 		.4byte	.LLST27
 3553 081b 14       		.uleb128 0x14
 3554 081c 49040000 		.4byte	.LASF92
 3555 0820 01       		.byte	0x1
 3556 0821 BB02     		.2byte	0x2bb
 3557 0823 39070000 		.4byte	0x739
 3558 0827 FD040000 		.4byte	.LLST28
 3559 082b 15       		.uleb128 0x15
 3560 082c 92030000 		.4byte	.LASF64
 3561 0830 01       		.byte	0x1
 3562 0831 BD02     		.2byte	0x2bd
 3563 0833 39020000 		.4byte	0x239
 3564 0837 1B050000 		.4byte	.LLST29
 3565 083b 19       		.uleb128 0x19
 3566 083c 0C000000 		.4byte	.LVL81
 3567 0840 43070000 		.4byte	0x743
 3568 0844 1A       		.uleb128 0x1a
 3569 0845 01       		.uleb128 0x1
 3570 0846 50       		.byte	0x50
 3571 0847 03       		.uleb128 0x3
 3572 0848 F3       		.byte	0xf3
 3573 0849 01       		.uleb128 0x1
 3574 084a 50       		.byte	0x50
 3575 084b 1A       		.uleb128 0x1a
 3576 084c 01       		.uleb128 0x1
 3577 084d 51       		.byte	0x51
 3578 084e 01       		.uleb128 0x1
 3579 084f 30       		.byte	0x30
 3580 0850 1A       		.uleb128 0x1a
 3581 0851 01       		.uleb128 0x1
 3582 0852 52       		.byte	0x52
 3583 0853 01       		.uleb128 0x1
 3584 0854 32       		.byte	0x32
 3585 0855 00       		.byte	0
 3586 0856 00       		.byte	0
 3587 0857 21       		.uleb128 0x21
 3588 0858 F8030000 		.4byte	.LASF93
 3589 085c 01       		.byte	0x1
 3590 085d D502     		.2byte	0x2d5
 3591 085f 05010000 		.4byte	0x105
 3592 0863 00000000 		.4byte	.LFB76
 3593 0867 08010000 		.4byte	.LFE76-.LFB76
 3594 086b 01       		.uleb128 0x1
 3595 086c 9C       		.byte	0x9c
 3596 086d 110A0000 		.4byte	0xa11
 3597 0871 14       		.uleb128 0x14
 3598 0872 2F020000 		.4byte	.LASF81
 3599 0876 01       		.byte	0x1
 3600 0877 D502     		.2byte	0x2d5
 3601 0879 39020000 		.4byte	0x239
 3602 087d 39050000 		.4byte	.LLST30
 3603 0881 14       		.uleb128 0x14
 3604 0882 CF070000 		.4byte	.LASF76
 3605 0886 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 122


 3606 0887 D502     		.2byte	0x2d5
 3607 0889 110A0000 		.4byte	0xa11
 3608 088d 65050000 		.4byte	.LLST31
 3609 0891 14       		.uleb128 0x14
 3610 0892 3E090000 		.4byte	.LASF94
 3611 0896 01       		.byte	0x1
 3612 0897 D502     		.2byte	0x2d5
 3613 0899 1B010000 		.4byte	0x11b
 3614 089d 91050000 		.4byte	.LLST32
 3615 08a1 14       		.uleb128 0x14
 3616 08a2 6C010000 		.4byte	.LASF95
 3617 08a6 01       		.byte	0x1
 3618 08a7 D502     		.2byte	0x2d5
 3619 08a9 17050000 		.4byte	0x517
 3620 08ad D4050000 		.4byte	.LLST33
 3621 08b1 15       		.uleb128 0x15
 3622 08b2 74030000 		.4byte	.LASF96
 3623 08b6 01       		.byte	0x1
 3624 08b7 D702     		.2byte	0x2d7
 3625 08b9 05010000 		.4byte	0x105
 3626 08bd 00060000 		.4byte	.LLST34
 3627 08c1 15       		.uleb128 0x15
 3628 08c2 0E020000 		.4byte	.LASF97
 3629 08c6 01       		.byte	0x1
 3630 08c7 D702     		.2byte	0x2d7
 3631 08c9 05010000 		.4byte	0x105
 3632 08cd 36060000 		.4byte	.LLST35
 3633 08d1 16       		.uleb128 0x16
 3634 08d2 89030000 		.4byte	.LASF98
 3635 08d6 01       		.byte	0x1
 3636 08d7 D802     		.2byte	0x2d8
 3637 08d9 2E020000 		.4byte	0x22e
 3638 08dd 02       		.uleb128 0x2
 3639 08de 91       		.byte	0x91
 3640 08df 60       		.sleb128 -32
 3641 08e0 15       		.uleb128 0x15
 3642 08e1 3D080000 		.4byte	.LASF71
 3643 08e5 01       		.byte	0x1
 3644 08e6 D902     		.2byte	0x2d9
 3645 08e8 12050000 		.4byte	0x512
 3646 08ec 54060000 		.4byte	.LLST36
 3647 08f0 17       		.uleb128 0x17
 3648 08f1 12000000 		.4byte	.LVL86
 3649 08f5 7F180000 		.4byte	0x187f
 3650 08f9 1C       		.uleb128 0x1c
 3651 08fa 28000000 		.4byte	.LVL87
 3652 08fe 86040000 		.4byte	0x486
 3653 0902 19090000 		.4byte	0x919
 3654 0906 1A       		.uleb128 0x1a
 3655 0907 01       		.uleb128 0x1
 3656 0908 50       		.byte	0x50
 3657 0909 02       		.uleb128 0x2
 3658 090a 74       		.byte	0x74
 3659 090b 00       		.sleb128 0
 3660 090c 1A       		.uleb128 0x1a
 3661 090d 01       		.uleb128 0x1
 3662 090e 51       		.byte	0x51
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 123


 3663 090f 02       		.uleb128 0x2
 3664 0910 77       		.byte	0x77
 3665 0911 00       		.sleb128 0
 3666 0912 1A       		.uleb128 0x1a
 3667 0913 01       		.uleb128 0x1
 3668 0914 52       		.byte	0x52
 3669 0915 02       		.uleb128 0x2
 3670 0916 76       		.byte	0x76
 3671 0917 00       		.sleb128 0
 3672 0918 00       		.byte	0
 3673 0919 1C       		.uleb128 0x1c
 3674 091a 34000000 		.4byte	.LVL89
 3675 091e AA180000 		.4byte	0x18aa
 3676 0922 2D090000 		.4byte	0x92d
 3677 0926 1A       		.uleb128 0x1a
 3678 0927 01       		.uleb128 0x1
 3679 0928 50       		.byte	0x50
 3680 0929 02       		.uleb128 0x2
 3681 092a 74       		.byte	0x74
 3682 092b 24       		.sleb128 36
 3683 092c 00       		.byte	0
 3684 092d 17       		.uleb128 0x17
 3685 092e 5E000000 		.4byte	.LVL92
 3686 0932 8A180000 		.4byte	0x188a
 3687 0936 17       		.uleb128 0x17
 3688 0937 6A000000 		.4byte	.LVL93
 3689 093b 8A180000 		.4byte	0x188a
 3690 093f 1C       		.uleb128 0x1c
 3691 0940 76000000 		.4byte	.LVL94
 3692 0944 D9180000 		.4byte	0x18d9
 3693 0948 53090000 		.4byte	0x953
 3694 094c 1A       		.uleb128 0x1a
 3695 094d 01       		.uleb128 0x1
 3696 094e 50       		.byte	0x50
 3697 094f 02       		.uleb128 0x2
 3698 0950 91       		.byte	0x91
 3699 0951 60       		.sleb128 -32
 3700 0952 00       		.byte	0
 3701 0953 17       		.uleb128 0x17
 3702 0954 7C000000 		.4byte	.LVL96
 3703 0958 8A180000 		.4byte	0x188a
 3704 095c 17       		.uleb128 0x17
 3705 095d 80000000 		.4byte	.LVL97
 3706 0961 E5180000 		.4byte	0x18e5
 3707 0965 17       		.uleb128 0x17
 3708 0966 84000000 		.4byte	.LVL98
 3709 096a 7F180000 		.4byte	0x187f
 3710 096e 17       		.uleb128 0x17
 3711 096f AC000000 		.4byte	.LVL99
 3712 0973 8A180000 		.4byte	0x188a
 3713 0977 1C       		.uleb128 0x1c
 3714 0978 B4000000 		.4byte	.LVL101
 3715 097c F1180000 		.4byte	0x18f1
 3716 0980 91090000 		.4byte	0x991
 3717 0984 1A       		.uleb128 0x1a
 3718 0985 01       		.uleb128 0x1
 3719 0986 50       		.byte	0x50
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 124


 3720 0987 02       		.uleb128 0x2
 3721 0988 91       		.byte	0x91
 3722 0989 60       		.sleb128 -32
 3723 098a 1A       		.uleb128 0x1a
 3724 098b 01       		.uleb128 0x1
 3725 098c 51       		.byte	0x51
 3726 098d 02       		.uleb128 0x2
 3727 098e 91       		.byte	0x91
 3728 098f 5C       		.sleb128 -36
 3729 0990 00       		.byte	0
 3730 0991 1C       		.uleb128 0x1c
 3731 0992 BC000000 		.4byte	.LVL102
 3732 0996 F0030000 		.4byte	0x3f0
 3733 099a A5090000 		.4byte	0x9a5
 3734 099e 1A       		.uleb128 0x1a
 3735 099f 01       		.uleb128 0x1
 3736 09a0 50       		.byte	0x50
 3737 09a1 02       		.uleb128 0x2
 3738 09a2 74       		.byte	0x74
 3739 09a3 00       		.sleb128 0
 3740 09a4 00       		.byte	0
 3741 09a5 1C       		.uleb128 0x1c
 3742 09a6 C8000000 		.4byte	.LVL103
 3743 09aa FD180000 		.4byte	0x18fd
 3744 09ae B9090000 		.4byte	0x9b9
 3745 09b2 1A       		.uleb128 0x1a
 3746 09b3 01       		.uleb128 0x1
 3747 09b4 50       		.byte	0x50
 3748 09b5 02       		.uleb128 0x2
 3749 09b6 74       		.byte	0x74
 3750 09b7 10       		.sleb128 16
 3751 09b8 00       		.byte	0
 3752 09b9 1C       		.uleb128 0x1c
 3753 09ba CE000000 		.4byte	.LVL104
 3754 09be 68050000 		.4byte	0x568
 3755 09c2 CD090000 		.4byte	0x9cd
 3756 09c6 1A       		.uleb128 0x1a
 3757 09c7 01       		.uleb128 0x1
 3758 09c8 50       		.byte	0x50
 3759 09c9 02       		.uleb128 0x2
 3760 09ca 74       		.byte	0x74
 3761 09cb 00       		.sleb128 0
 3762 09cc 00       		.byte	0
 3763 09cd 17       		.uleb128 0x17
 3764 09ce D2000000 		.4byte	.LVL105
 3765 09d2 09190000 		.4byte	0x1909
 3766 09d6 1C       		.uleb128 0x1c
 3767 09d7 EE000000 		.4byte	.LVL106
 3768 09db 68050000 		.4byte	0x568
 3769 09df EA090000 		.4byte	0x9ea
 3770 09e3 1A       		.uleb128 0x1a
 3771 09e4 01       		.uleb128 0x1
 3772 09e5 50       		.byte	0x50
 3773 09e6 02       		.uleb128 0x2
 3774 09e7 74       		.byte	0x74
 3775 09e8 00       		.sleb128 0
 3776 09e9 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 125


 3777 09ea 17       		.uleb128 0x17
 3778 09eb F2000000 		.4byte	.LVL107
 3779 09ef 09190000 		.4byte	0x1909
 3780 09f3 1C       		.uleb128 0x1c
 3781 09f4 FA000000 		.4byte	.LVL108
 3782 09f8 68050000 		.4byte	0x568
 3783 09fc 070A0000 		.4byte	0xa07
 3784 0a00 1A       		.uleb128 0x1a
 3785 0a01 01       		.uleb128 0x1
 3786 0a02 50       		.byte	0x50
 3787 0a03 02       		.uleb128 0x2
 3788 0a04 74       		.byte	0x74
 3789 0a05 00       		.sleb128 0
 3790 0a06 00       		.byte	0
 3791 0a07 17       		.uleb128 0x17
 3792 0a08 FE000000 		.4byte	.LVL109
 3793 0a0c 09190000 		.4byte	0x1909
 3794 0a10 00       		.byte	0
 3795 0a11 07       		.uleb128 0x7
 3796 0a12 C4000000 		.4byte	0xc4
 3797 0a16 18       		.uleb128 0x18
 3798 0a17 B2050000 		.4byte	.LASF99
 3799 0a1b 01       		.byte	0x1
 3800 0a1c C401     		.2byte	0x1c4
 3801 0a1e 00000000 		.4byte	.LFB71
 3802 0a22 18000000 		.4byte	.LFE71-.LFB71
 3803 0a26 01       		.uleb128 0x1
 3804 0a27 9C       		.byte	0x9c
 3805 0a28 5D0A0000 		.4byte	0xa5d
 3806 0a2c 14       		.uleb128 0x14
 3807 0a2d B1000000 		.4byte	.LASF86
 3808 0a31 01       		.byte	0x1
 3809 0a32 C401     		.2byte	0x1c4
 3810 0a34 0C050000 		.4byte	0x50c
 3811 0a38 80060000 		.4byte	.LLST37
 3812 0a3c 19       		.uleb128 0x19
 3813 0a3d 14000000 		.4byte	.LVL112
 3814 0a41 57080000 		.4byte	0x857
 3815 0a45 1A       		.uleb128 0x1a
 3816 0a46 01       		.uleb128 0x1
 3817 0a47 50       		.byte	0x50
 3818 0a48 03       		.uleb128 0x3
 3819 0a49 F3       		.byte	0xf3
 3820 0a4a 01       		.uleb128 0x1
 3821 0a4b 50       		.byte	0x50
 3822 0a4c 1A       		.uleb128 0x1a
 3823 0a4d 01       		.uleb128 0x1
 3824 0a4e 51       		.byte	0x51
 3825 0a4f 01       		.uleb128 0x1
 3826 0a50 30       		.byte	0x30
 3827 0a51 1A       		.uleb128 0x1a
 3828 0a52 01       		.uleb128 0x1
 3829 0a53 52       		.byte	0x52
 3830 0a54 01       		.uleb128 0x1
 3831 0a55 30       		.byte	0x30
 3832 0a56 1A       		.uleb128 0x1a
 3833 0a57 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 126


 3834 0a58 53       		.byte	0x53
 3835 0a59 01       		.uleb128 0x1
 3836 0a5a 30       		.byte	0x30
 3837 0a5b 00       		.byte	0
 3838 0a5c 00       		.byte	0
 3839 0a5d 21       		.uleb128 0x21
 3840 0a5e 7F050000 		.4byte	.LASF100
 3841 0a62 01       		.byte	0x1
 3842 0a63 E201     		.2byte	0x1e2
 3843 0a65 39020000 		.4byte	0x239
 3844 0a69 00000000 		.4byte	.LFB72
 3845 0a6d 16000000 		.4byte	.LFE72-.LFB72
 3846 0a71 01       		.uleb128 0x1
 3847 0a72 9C       		.byte	0x9c
 3848 0a73 DA0A0000 		.4byte	0xada
 3849 0a77 14       		.uleb128 0x14
 3850 0a78 A8060000 		.4byte	.LASF59
 3851 0a7c 01       		.byte	0x1
 3852 0a7d E201     		.2byte	0x1e2
 3853 0a7f 3E070000 		.4byte	0x73e
 3854 0a83 AC060000 		.4byte	.LLST38
 3855 0a87 15       		.uleb128 0x15
 3856 0a88 B1000000 		.4byte	.LASF86
 3857 0a8c 01       		.byte	0x1
 3858 0a8d E401     		.2byte	0x1e4
 3859 0a8f 0C050000 		.4byte	0x50c
 3860 0a93 CD060000 		.4byte	.LLST39
 3861 0a97 22       		.uleb128 0x22
 3862 0a98 70040000 		.4byte	.LASF101
 3863 0a9c 01       		.byte	0x1
 3864 0a9d E501     		.2byte	0x1e5
 3865 0a9f 39070000 		.4byte	0x739
 3866 0aa3 01       		.byte	0x1
 3867 0aa4 22       		.uleb128 0x22
 3868 0aa5 02020000 		.4byte	.LASF102
 3869 0aa9 01       		.byte	0x1
 3870 0aaa E501     		.2byte	0x1e5
 3871 0aac 39070000 		.4byte	0x739
 3872 0ab0 00       		.byte	0
 3873 0ab1 1C       		.uleb128 0x1c
 3874 0ab2 0C000000 		.4byte	.LVL117
 3875 0ab6 43070000 		.4byte	0x743
 3876 0aba C90A0000 		.4byte	0xac9
 3877 0abe 1A       		.uleb128 0x1a
 3878 0abf 01       		.uleb128 0x1
 3879 0ac0 50       		.byte	0x50
 3880 0ac1 01       		.uleb128 0x1
 3881 0ac2 31       		.byte	0x31
 3882 0ac3 1A       		.uleb128 0x1a
 3883 0ac4 01       		.uleb128 0x1
 3884 0ac5 51       		.byte	0x51
 3885 0ac6 01       		.uleb128 0x1
 3886 0ac7 30       		.byte	0x30
 3887 0ac8 00       		.byte	0
 3888 0ac9 19       		.uleb128 0x19
 3889 0aca 12000000 		.4byte	.LVL119
 3890 0ace 160A0000 		.4byte	0xa16
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 127


 3891 0ad2 1A       		.uleb128 0x1a
 3892 0ad3 01       		.uleb128 0x1
 3893 0ad4 50       		.byte	0x50
 3894 0ad5 02       		.uleb128 0x2
 3895 0ad6 74       		.byte	0x74
 3896 0ad7 00       		.sleb128 0
 3897 0ad8 00       		.byte	0
 3898 0ad9 00       		.byte	0
 3899 0ada 21       		.uleb128 0x21
 3900 0adb 74090000 		.4byte	.LASF103
 3901 0adf 01       		.byte	0x1
 3902 0ae0 3E02     		.2byte	0x23e
 3903 0ae2 05010000 		.4byte	0x105
 3904 0ae6 00000000 		.4byte	.LFB73
 3905 0aea 2C000000 		.4byte	.LFE73-.LFB73
 3906 0aee 01       		.uleb128 0x1
 3907 0aef 9C       		.byte	0x9c
 3908 0af0 3C0B0000 		.4byte	0xb3c
 3909 0af4 14       		.uleb128 0x14
 3910 0af5 E0050000 		.4byte	.LASF104
 3911 0af9 01       		.byte	0x1
 3912 0afa 3E02     		.2byte	0x23e
 3913 0afc 39020000 		.4byte	0x239
 3914 0b00 EB060000 		.4byte	.LLST40
 3915 0b04 16       		.uleb128 0x16
 3916 0b05 45080000 		.4byte	.LASF73
 3917 0b09 01       		.byte	0x1
 3918 0b0a 4002     		.2byte	0x240
 3919 0b0c 05010000 		.4byte	0x105
 3920 0b10 01       		.uleb128 0x1
 3921 0b11 50       		.byte	0x50
 3922 0b12 15       		.uleb128 0x15
 3923 0b13 76000000 		.4byte	.LASF105
 3924 0b17 01       		.byte	0x1
 3925 0b18 4102     		.2byte	0x241
 3926 0b1a 12050000 		.4byte	0x512
 3927 0b1e 09070000 		.4byte	.LLST41
 3928 0b22 17       		.uleb128 0x17
 3929 0b23 0A000000 		.4byte	.LVL122
 3930 0b27 15190000 		.4byte	0x1915
 3931 0b2b 19       		.uleb128 0x19
 3932 0b2c 20000000 		.4byte	.LVL123
 3933 0b30 57080000 		.4byte	0x857
 3934 0b34 1A       		.uleb128 0x1a
 3935 0b35 01       		.uleb128 0x1
 3936 0b36 50       		.byte	0x50
 3937 0b37 02       		.uleb128 0x2
 3938 0b38 74       		.byte	0x74
 3939 0b39 00       		.sleb128 0
 3940 0b3a 00       		.byte	0
 3941 0b3b 00       		.byte	0
 3942 0b3c 21       		.uleb128 0x21
 3943 0b3d BC030000 		.4byte	.LASF106
 3944 0b41 01       		.byte	0x1
 3945 0b42 9B03     		.2byte	0x39b
 3946 0b44 05010000 		.4byte	0x105
 3947 0b48 00000000 		.4byte	.LFB77
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 128


 3948 0b4c 6E000000 		.4byte	.LFE77-.LFB77
 3949 0b50 01       		.uleb128 0x1
 3950 0b51 9C       		.byte	0x9c
 3951 0b52 490C0000 		.4byte	0xc49
 3952 0b56 14       		.uleb128 0x14
 3953 0b57 2F020000 		.4byte	.LASF81
 3954 0b5b 01       		.byte	0x1
 3955 0b5c 9B03     		.2byte	0x39b
 3956 0b5e 39020000 		.4byte	0x239
 3957 0b62 27070000 		.4byte	.LLST42
 3958 0b66 14       		.uleb128 0x14
 3959 0b67 CF070000 		.4byte	.LASF76
 3960 0b6b 01       		.byte	0x1
 3961 0b6c 9B03     		.2byte	0x39b
 3962 0b6e 110A0000 		.4byte	0xa11
 3963 0b72 77070000 		.4byte	.LLST43
 3964 0b76 14       		.uleb128 0x14
 3965 0b77 5C000000 		.4byte	.LASF107
 3966 0b7b 01       		.byte	0x1
 3967 0b7c 9B03     		.2byte	0x39b
 3968 0b7e 4F0C0000 		.4byte	0xc4f
 3969 0b82 B1070000 		.4byte	.LLST44
 3970 0b86 14       		.uleb128 0x14
 3971 0b87 6C010000 		.4byte	.LASF95
 3972 0b8b 01       		.byte	0x1
 3973 0b8c 9B03     		.2byte	0x39b
 3974 0b8e 17050000 		.4byte	0x517
 3975 0b92 F3070000 		.4byte	.LLST45
 3976 0b96 16       		.uleb128 0x16
 3977 0b97 45080000 		.4byte	.LASF73
 3978 0b9b 01       		.byte	0x1
 3979 0b9c 9D03     		.2byte	0x39d
 3980 0b9e 05010000 		.4byte	0x105
 3981 0ba2 01       		.uleb128 0x1
 3982 0ba3 50       		.byte	0x50
 3983 0ba4 23       		.uleb128 0x23
 3984 0ba5 C5010000 		.4byte	.LASF108
 3985 0ba9 01       		.byte	0x1
 3986 0baa 9E03     		.2byte	0x39e
 3987 0bac 10010000 		.4byte	0x110
 3988 0bb0 15       		.uleb128 0x15
 3989 0bb1 3D080000 		.4byte	.LASF71
 3990 0bb5 01       		.byte	0x1
 3991 0bb6 9F03     		.2byte	0x39f
 3992 0bb8 12050000 		.4byte	0x512
 3993 0bbc 2D080000 		.4byte	.LLST46
 3994 0bc0 24       		.uleb128 0x24
 3995 0bc1 66030000 		.4byte	0x366
 3996 0bc5 02000000 		.4byte	.LBB25
 3997 0bc9 14000000 		.4byte	.LBE25-.LBB25
 3998 0bcd 01       		.byte	0x1
 3999 0bce BA03     		.2byte	0x3ba
 4000 0bd0 E90B0000 		.4byte	0xbe9
 4001 0bd4 25       		.uleb128 0x25
 4002 0bd5 02000000 		.4byte	.LBB26
 4003 0bd9 14000000 		.4byte	.LBE26-.LBB26
 4004 0bdd 26       		.uleb128 0x26
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 129


 4005 0bde 76030000 		.4byte	0x376
 4006 0be2 26       		.uleb128 0x26
 4007 0be3 81030000 		.4byte	0x381
 4008 0be7 00       		.byte	0
 4009 0be8 00       		.byte	0
 4010 0be9 27       		.uleb128 0x27
 4011 0bea 00000000 		.4byte	.Ldebug_ranges0+0
 4012 0bee 2E0C0000 		.4byte	0xc2e
 4013 0bf2 15       		.uleb128 0x15
 4014 0bf3 25010000 		.4byte	.LASF57
 4015 0bf7 01       		.byte	0x1
 4016 0bf8 BE03     		.2byte	0x3be
 4017 0bfa 540C0000 		.4byte	0xc54
 4018 0bfe 7D080000 		.4byte	.LLST47
 4019 0c02 1C       		.uleb128 0x1c
 4020 0c03 32000000 		.4byte	.LVL131
 4021 0c07 86040000 		.4byte	0x486
 4022 0c0b 1D0C0000 		.4byte	0xc1d
 4023 0c0f 1A       		.uleb128 0x1a
 4024 0c10 01       		.uleb128 0x1
 4025 0c11 50       		.byte	0x50
 4026 0c12 02       		.uleb128 0x2
 4027 0c13 75       		.byte	0x75
 4028 0c14 00       		.sleb128 0
 4029 0c15 1A       		.uleb128 0x1a
 4030 0c16 01       		.uleb128 0x1
 4031 0c17 52       		.byte	0x52
 4032 0c18 03       		.uleb128 0x3
 4033 0c19 F3       		.byte	0xf3
 4034 0c1a 01       		.uleb128 0x1
 4035 0c1b 53       		.byte	0x53
 4036 0c1c 00       		.byte	0
 4037 0c1d 19       		.uleb128 0x19
 4038 0c1e 44000000 		.4byte	.LVL132
 4039 0c22 AA180000 		.4byte	0x18aa
 4040 0c26 1A       		.uleb128 0x1a
 4041 0c27 01       		.uleb128 0x1
 4042 0c28 50       		.byte	0x50
 4043 0c29 02       		.uleb128 0x2
 4044 0c2a 75       		.byte	0x75
 4045 0c2b 24       		.sleb128 36
 4046 0c2c 00       		.byte	0
 4047 0c2d 00       		.byte	0
 4048 0c2e 28       		.uleb128 0x28
 4049 0c2f 8D030000 		.4byte	0x38d
 4050 0c33 68000000 		.4byte	.LBB29
 4051 0c37 04000000 		.4byte	.LBE29-.LBB29
 4052 0c3b 01       		.byte	0x1
 4053 0c3c 2C04     		.2byte	0x42c
 4054 0c3e 29       		.uleb128 0x29
 4055 0c3f 99030000 		.4byte	0x399
 4056 0c43 A8080000 		.4byte	.LLST48
 4057 0c47 00       		.byte	0
 4058 0c48 00       		.byte	0
 4059 0c49 06       		.uleb128 0x6
 4060 0c4a 04       		.byte	0x4
 4061 0c4b 05010000 		.4byte	0x105
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 130


 4062 0c4f 07       		.uleb128 0x7
 4063 0c50 490C0000 		.4byte	0xc49
 4064 0c54 07       		.uleb128 0x7
 4065 0c55 CB000000 		.4byte	0xcb
 4066 0c59 21       		.uleb128 0x21
 4067 0c5a B6040000 		.4byte	.LASF109
 4068 0c5e 01       		.byte	0x1
 4069 0c5f 3204     		.2byte	0x432
 4070 0c61 05010000 		.4byte	0x105
 4071 0c65 00000000 		.4byte	.LFB78
 4072 0c69 64000000 		.4byte	.LFE78-.LFB78
 4073 0c6d 01       		.uleb128 0x1
 4074 0c6e 9C       		.byte	0x9c
 4075 0c6f 480D0000 		.4byte	0xd48
 4076 0c73 14       		.uleb128 0x14
 4077 0c74 2F020000 		.4byte	.LASF81
 4078 0c78 01       		.byte	0x1
 4079 0c79 3204     		.2byte	0x432
 4080 0c7b 39020000 		.4byte	0x239
 4081 0c7f BB080000 		.4byte	.LLST49
 4082 0c83 14       		.uleb128 0x14
 4083 0c84 5C000000 		.4byte	.LASF107
 4084 0c88 01       		.byte	0x1
 4085 0c89 3204     		.2byte	0x432
 4086 0c8b 4F0C0000 		.4byte	0xc4f
 4087 0c8f 34090000 		.4byte	.LLST50
 4088 0c93 16       		.uleb128 0x16
 4089 0c94 45080000 		.4byte	.LASF73
 4090 0c98 01       		.byte	0x1
 4091 0c99 3404     		.2byte	0x434
 4092 0c9b 05010000 		.4byte	0x105
 4093 0c9f 01       		.uleb128 0x1
 4094 0ca0 50       		.byte	0x50
 4095 0ca1 23       		.uleb128 0x23
 4096 0ca2 C5010000 		.4byte	.LASF108
 4097 0ca6 01       		.byte	0x1
 4098 0ca7 3504     		.2byte	0x435
 4099 0ca9 10010000 		.4byte	0x110
 4100 0cad 15       		.uleb128 0x15
 4101 0cae 3D080000 		.4byte	.LASF71
 4102 0cb2 01       		.byte	0x1
 4103 0cb3 3604     		.2byte	0x436
 4104 0cb5 12050000 		.4byte	0x512
 4105 0cb9 76090000 		.4byte	.LLST51
 4106 0cbd 24       		.uleb128 0x24
 4107 0cbe 66030000 		.4byte	0x366
 4108 0cc2 02000000 		.4byte	.LBB31
 4109 0cc6 14000000 		.4byte	.LBE31-.LBB31
 4110 0cca 01       		.byte	0x1
 4111 0ccb 5904     		.2byte	0x459
 4112 0ccd E60C0000 		.4byte	0xce6
 4113 0cd1 25       		.uleb128 0x25
 4114 0cd2 02000000 		.4byte	.LBB32
 4115 0cd6 14000000 		.4byte	.LBE32-.LBB32
 4116 0cda 26       		.uleb128 0x26
 4117 0cdb 76030000 		.4byte	0x376
 4118 0cdf 26       		.uleb128 0x26
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 131


 4119 0ce0 81030000 		.4byte	0x381
 4120 0ce4 00       		.byte	0
 4121 0ce5 00       		.byte	0
 4122 0ce6 1B       		.uleb128 0x1b
 4123 0ce7 16000000 		.4byte	.LBB33
 4124 0ceb 48000000 		.4byte	.LBE33-.LBB33
 4125 0cef 2D0D0000 		.4byte	0xd2d
 4126 0cf3 15       		.uleb128 0x15
 4127 0cf4 AC020000 		.4byte	.LASF53
 4128 0cf8 01       		.byte	0x1
 4129 0cf9 5B04     		.2byte	0x45b
 4130 0cfb 39070000 		.4byte	0x739
 4131 0cff EF090000 		.4byte	.LLST52
 4132 0d03 2A       		.uleb128 0x2a
 4133 0d04 18000000 		.4byte	.Ldebug_ranges0+0x18
 4134 0d08 15       		.uleb128 0x15
 4135 0d09 25010000 		.4byte	.LASF57
 4136 0d0d 01       		.byte	0x1
 4137 0d0e 6204     		.2byte	0x462
 4138 0d10 540C0000 		.4byte	0xc54
 4139 0d14 340A0000 		.4byte	.LLST53
 4140 0d18 19       		.uleb128 0x19
 4141 0d19 3A000000 		.4byte	.LVL147
 4142 0d1d AA180000 		.4byte	0x18aa
 4143 0d21 1A       		.uleb128 0x1a
 4144 0d22 01       		.uleb128 0x1
 4145 0d23 50       		.byte	0x50
 4146 0d24 05       		.uleb128 0x5
 4147 0d25 F3       		.byte	0xf3
 4148 0d26 01       		.uleb128 0x1
 4149 0d27 50       		.byte	0x50
 4150 0d28 23       		.byte	0x23
 4151 0d29 24       		.uleb128 0x24
 4152 0d2a 00       		.byte	0
 4153 0d2b 00       		.byte	0
 4154 0d2c 00       		.byte	0
 4155 0d2d 28       		.uleb128 0x28
 4156 0d2e 8D030000 		.4byte	0x38d
 4157 0d32 5E000000 		.4byte	.LBB36
 4158 0d36 04000000 		.4byte	.LBE36-.LBB36
 4159 0d3a 01       		.byte	0x1
 4160 0d3b D104     		.2byte	0x4d1
 4161 0d3d 29       		.uleb128 0x29
 4162 0d3e 99030000 		.4byte	0x399
 4163 0d42 5F0A0000 		.4byte	.LLST54
 4164 0d46 00       		.byte	0
 4165 0d47 00       		.byte	0
 4166 0d48 21       		.uleb128 0x21
 4167 0d49 22000000 		.4byte	.LASF110
 4168 0d4d 01       		.byte	0x1
 4169 0d4e D704     		.2byte	0x4d7
 4170 0d50 05010000 		.4byte	0x105
 4171 0d54 00000000 		.4byte	.LFB79
 4172 0d58 F8000000 		.4byte	.LFE79-.LFB79
 4173 0d5c 01       		.uleb128 0x1
 4174 0d5d 9C       		.byte	0x9c
 4175 0d5e 060F0000 		.4byte	0xf06
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 132


 4176 0d62 14       		.uleb128 0x14
 4177 0d63 2F020000 		.4byte	.LASF81
 4178 0d67 01       		.byte	0x1
 4179 0d68 D704     		.2byte	0x4d7
 4180 0d6a 39020000 		.4byte	0x239
 4181 0d6e 720A0000 		.4byte	.LLST55
 4182 0d72 14       		.uleb128 0x14
 4183 0d73 73020000 		.4byte	.LASF78
 4184 0d77 01       		.byte	0x1
 4185 0d78 D704     		.2byte	0x4d7
 4186 0d7a 63050000 		.4byte	0x563
 4187 0d7e 9E0A0000 		.4byte	.LLST56
 4188 0d82 14       		.uleb128 0x14
 4189 0d83 3E090000 		.4byte	.LASF94
 4190 0d87 01       		.byte	0x1
 4191 0d88 D704     		.2byte	0x4d7
 4192 0d8a 1B010000 		.4byte	0x11b
 4193 0d8e CA0A0000 		.4byte	.LLST57
 4194 0d92 15       		.uleb128 0x15
 4195 0d93 74030000 		.4byte	.LASF96
 4196 0d97 01       		.byte	0x1
 4197 0d98 D904     		.2byte	0x4d9
 4198 0d9a 05010000 		.4byte	0x105
 4199 0d9e 0D0B0000 		.4byte	.LLST58
 4200 0da2 16       		.uleb128 0x16
 4201 0da3 89030000 		.4byte	.LASF98
 4202 0da7 01       		.byte	0x1
 4203 0da8 DA04     		.2byte	0x4da
 4204 0daa 2E020000 		.4byte	0x22e
 4205 0dae 02       		.uleb128 0x2
 4206 0daf 91       		.byte	0x91
 4207 0db0 60       		.sleb128 -32
 4208 0db1 15       		.uleb128 0x15
 4209 0db2 3D080000 		.4byte	.LASF71
 4210 0db6 01       		.byte	0x1
 4211 0db7 DB04     		.2byte	0x4db
 4212 0db9 12050000 		.4byte	0x512
 4213 0dbd 430B0000 		.4byte	.LLST59
 4214 0dc1 1B       		.uleb128 0x1b
 4215 0dc2 10000000 		.4byte	.LBB38
 4216 0dc6 4C000000 		.4byte	.LBE38-.LBB38
 4217 0dca 2F0E0000 		.4byte	0xe2f
 4218 0dce 15       		.uleb128 0x15
 4219 0dcf AC020000 		.4byte	.LASF53
 4220 0dd3 01       		.byte	0x1
 4221 0dd4 F404     		.2byte	0x4f4
 4222 0dd6 39070000 		.4byte	0x739
 4223 0dda 6F0B0000 		.4byte	.LLST60
 4224 0dde 1C       		.uleb128 0x1c
 4225 0ddf 1C000000 		.4byte	.LVL164
 4226 0de3 1C050000 		.4byte	0x51c
 4227 0de7 F80D0000 		.4byte	0xdf8
 4228 0deb 1A       		.uleb128 0x1a
 4229 0dec 01       		.uleb128 0x1
 4230 0ded 50       		.byte	0x50
 4231 0dee 02       		.uleb128 0x2
 4232 0def 74       		.byte	0x74
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 133


 4233 0df0 00       		.sleb128 0
 4234 0df1 1A       		.uleb128 0x1a
 4235 0df2 01       		.uleb128 0x1
 4236 0df3 51       		.byte	0x51
 4237 0df4 02       		.uleb128 0x2
 4238 0df5 77       		.byte	0x77
 4239 0df6 00       		.sleb128 0
 4240 0df7 00       		.byte	0
 4241 0df8 1C       		.uleb128 0x1c
 4242 0df9 2C000000 		.4byte	.LVL166
 4243 0dfd AA180000 		.4byte	0x18aa
 4244 0e01 0C0E0000 		.4byte	0xe0c
 4245 0e05 1A       		.uleb128 0x1a
 4246 0e06 01       		.uleb128 0x1
 4247 0e07 50       		.byte	0x50
 4248 0e08 02       		.uleb128 0x2
 4249 0e09 74       		.byte	0x74
 4250 0e0a 10       		.sleb128 16
 4251 0e0b 00       		.byte	0
 4252 0e0c 17       		.uleb128 0x17
 4253 0e0d 42000000 		.4byte	.LVL167
 4254 0e11 8A180000 		.4byte	0x188a
 4255 0e15 17       		.uleb128 0x17
 4256 0e16 4E000000 		.4byte	.LVL169
 4257 0e1a 8A180000 		.4byte	0x188a
 4258 0e1e 19       		.uleb128 0x19
 4259 0e1f 5A000000 		.4byte	.LVL170
 4260 0e23 D9180000 		.4byte	0x18d9
 4261 0e27 1A       		.uleb128 0x1a
 4262 0e28 01       		.uleb128 0x1
 4263 0e29 50       		.byte	0x50
 4264 0e2a 02       		.uleb128 0x2
 4265 0e2b 91       		.byte	0x91
 4266 0e2c 60       		.sleb128 -32
 4267 0e2d 00       		.byte	0
 4268 0e2e 00       		.byte	0
 4269 0e2f 17       		.uleb128 0x17
 4270 0e30 10000000 		.4byte	.LVL162
 4271 0e34 7F180000 		.4byte	0x187f
 4272 0e38 17       		.uleb128 0x17
 4273 0e39 60000000 		.4byte	.LVL172
 4274 0e3d 8A180000 		.4byte	0x188a
 4275 0e41 17       		.uleb128 0x17
 4276 0e42 64000000 		.4byte	.LVL173
 4277 0e46 E5180000 		.4byte	0x18e5
 4278 0e4a 17       		.uleb128 0x17
 4279 0e4b 68000000 		.4byte	.LVL174
 4280 0e4f 7F180000 		.4byte	0x187f
 4281 0e53 17       		.uleb128 0x17
 4282 0e54 90000000 		.4byte	.LVL175
 4283 0e58 8A180000 		.4byte	0x188a
 4284 0e5c 1C       		.uleb128 0x1c
 4285 0e5d 98000000 		.4byte	.LVL177
 4286 0e61 F1180000 		.4byte	0x18f1
 4287 0e65 760E0000 		.4byte	0xe76
 4288 0e69 1A       		.uleb128 0x1a
 4289 0e6a 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 134


 4290 0e6b 50       		.byte	0x50
 4291 0e6c 02       		.uleb128 0x2
 4292 0e6d 91       		.byte	0x91
 4293 0e6e 60       		.sleb128 -32
 4294 0e6f 1A       		.uleb128 0x1a
 4295 0e70 01       		.uleb128 0x1
 4296 0e71 51       		.byte	0x51
 4297 0e72 02       		.uleb128 0x2
 4298 0e73 91       		.byte	0x91
 4299 0e74 5C       		.sleb128 -36
 4300 0e75 00       		.byte	0
 4301 0e76 1C       		.uleb128 0x1c
 4302 0e77 A0000000 		.4byte	.LVL178
 4303 0e7b 3B040000 		.4byte	0x43b
 4304 0e7f 8A0E0000 		.4byte	0xe8a
 4305 0e83 1A       		.uleb128 0x1a
 4306 0e84 01       		.uleb128 0x1
 4307 0e85 50       		.byte	0x50
 4308 0e86 02       		.uleb128 0x2
 4309 0e87 74       		.byte	0x74
 4310 0e88 00       		.sleb128 0
 4311 0e89 00       		.byte	0
 4312 0e8a 1C       		.uleb128 0x1c
 4313 0e8b AC000000 		.4byte	.LVL179
 4314 0e8f FD180000 		.4byte	0x18fd
 4315 0e93 9E0E0000 		.4byte	0xe9e
 4316 0e97 1A       		.uleb128 0x1a
 4317 0e98 01       		.uleb128 0x1
 4318 0e99 50       		.byte	0x50
 4319 0e9a 02       		.uleb128 0x2
 4320 0e9b 74       		.byte	0x74
 4321 0e9c 24       		.sleb128 36
 4322 0e9d 00       		.byte	0
 4323 0e9e 1C       		.uleb128 0x1c
 4324 0e9f B2000000 		.4byte	.LVL180
 4325 0ea3 68050000 		.4byte	0x568
 4326 0ea7 B20E0000 		.4byte	0xeb2
 4327 0eab 1A       		.uleb128 0x1a
 4328 0eac 01       		.uleb128 0x1
 4329 0ead 50       		.byte	0x50
 4330 0eae 02       		.uleb128 0x2
 4331 0eaf 74       		.byte	0x74
 4332 0eb0 00       		.sleb128 0
 4333 0eb1 00       		.byte	0
 4334 0eb2 17       		.uleb128 0x17
 4335 0eb3 B6000000 		.4byte	.LVL181
 4336 0eb7 09190000 		.4byte	0x1909
 4337 0ebb 1C       		.uleb128 0x1c
 4338 0ebc D2000000 		.4byte	.LVL182
 4339 0ec0 68050000 		.4byte	0x568
 4340 0ec4 CF0E0000 		.4byte	0xecf
 4341 0ec8 1A       		.uleb128 0x1a
 4342 0ec9 01       		.uleb128 0x1
 4343 0eca 50       		.byte	0x50
 4344 0ecb 02       		.uleb128 0x2
 4345 0ecc 74       		.byte	0x74
 4346 0ecd 00       		.sleb128 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 135


 4347 0ece 00       		.byte	0
 4348 0ecf 17       		.uleb128 0x17
 4349 0ed0 D6000000 		.4byte	.LVL183
 4350 0ed4 09190000 		.4byte	0x1909
 4351 0ed8 1C       		.uleb128 0x1c
 4352 0ed9 DE000000 		.4byte	.LVL184
 4353 0edd 68050000 		.4byte	0x568
 4354 0ee1 EC0E0000 		.4byte	0xeec
 4355 0ee5 1A       		.uleb128 0x1a
 4356 0ee6 01       		.uleb128 0x1
 4357 0ee7 50       		.byte	0x50
 4358 0ee8 02       		.uleb128 0x2
 4359 0ee9 74       		.byte	0x74
 4360 0eea 00       		.sleb128 0
 4361 0eeb 00       		.byte	0
 4362 0eec 17       		.uleb128 0x17
 4363 0eed E2000000 		.4byte	.LVL185
 4364 0ef1 09190000 		.4byte	0x1909
 4365 0ef5 19       		.uleb128 0x19
 4366 0ef6 E8000000 		.4byte	.LVL186
 4367 0efa 3B040000 		.4byte	0x43b
 4368 0efe 1A       		.uleb128 0x1a
 4369 0eff 01       		.uleb128 0x1
 4370 0f00 50       		.byte	0x50
 4371 0f01 02       		.uleb128 0x2
 4372 0f02 74       		.byte	0x74
 4373 0f03 00       		.sleb128 0
 4374 0f04 00       		.byte	0
 4375 0f05 00       		.byte	0
 4376 0f06 21       		.uleb128 0x21
 4377 0f07 7E000000 		.4byte	.LASF111
 4378 0f0b 01       		.byte	0x1
 4379 0f0c 6505     		.2byte	0x565
 4380 0f0e 05010000 		.4byte	0x105
 4381 0f12 00000000 		.4byte	.LFB80
 4382 0f16 28010000 		.4byte	.LFE80-.LFB80
 4383 0f1a 01       		.uleb128 0x1
 4384 0f1b 9C       		.byte	0x9c
 4385 0f1c 1F110000 		.4byte	0x111f
 4386 0f20 14       		.uleb128 0x14
 4387 0f21 2F020000 		.4byte	.LASF81
 4388 0f25 01       		.byte	0x1
 4389 0f26 6505     		.2byte	0x565
 4390 0f28 39020000 		.4byte	0x239
 4391 0f2c 9A0B0000 		.4byte	.LLST61
 4392 0f30 14       		.uleb128 0x14
 4393 0f31 3E090000 		.4byte	.LASF94
 4394 0f35 01       		.byte	0x1
 4395 0f36 6505     		.2byte	0x565
 4396 0f38 1B010000 		.4byte	0x11b
 4397 0f3c C60B0000 		.4byte	.LLST62
 4398 0f40 15       		.uleb128 0x15
 4399 0f41 74030000 		.4byte	.LASF96
 4400 0f45 01       		.byte	0x1
 4401 0f46 6705     		.2byte	0x567
 4402 0f48 05010000 		.4byte	0x105
 4403 0f4c 090C0000 		.4byte	.LLST63
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 136


 4404 0f50 16       		.uleb128 0x16
 4405 0f51 89030000 		.4byte	.LASF98
 4406 0f55 01       		.byte	0x1
 4407 0f56 6805     		.2byte	0x568
 4408 0f58 2E020000 		.4byte	0x22e
 4409 0f5c 02       		.uleb128 0x2
 4410 0f5d 91       		.byte	0x91
 4411 0f5e 68       		.sleb128 -24
 4412 0f5f 15       		.uleb128 0x15
 4413 0f60 3D080000 		.4byte	.LASF71
 4414 0f64 01       		.byte	0x1
 4415 0f65 6905     		.2byte	0x569
 4416 0f67 12050000 		.4byte	0x512
 4417 0f6b 3F0C0000 		.4byte	.LLST64
 4418 0f6f 15       		.uleb128 0x15
 4419 0f70 1A070000 		.4byte	.LASF112
 4420 0f74 01       		.byte	0x1
 4421 0f75 6C05     		.2byte	0x56c
 4422 0f77 05010000 		.4byte	0x105
 4423 0f7b 6B0C0000 		.4byte	.LLST65
 4424 0f7f 1B       		.uleb128 0x1b
 4425 0f80 10000000 		.4byte	.LBB39
 4426 0f84 4E000000 		.4byte	.LBE39-.LBB39
 4427 0f88 DC0F0000 		.4byte	0xfdc
 4428 0f8c 15       		.uleb128 0x15
 4429 0f8d BB060000 		.4byte	.LASF113
 4430 0f91 01       		.byte	0x1
 4431 0f92 8805     		.2byte	0x588
 4432 0f94 39070000 		.4byte	0x739
 4433 0f98 A00C0000 		.4byte	.LLST66
 4434 0f9c 17       		.uleb128 0x17
 4435 0f9d 20000000 		.4byte	.LVL196
 4436 0fa1 21190000 		.4byte	0x1921
 4437 0fa5 1C       		.uleb128 0x1c
 4438 0fa6 2E000000 		.4byte	.LVL197
 4439 0faa AA180000 		.4byte	0x18aa
 4440 0fae B90F0000 		.4byte	0xfb9
 4441 0fb2 1A       		.uleb128 0x1a
 4442 0fb3 01       		.uleb128 0x1
 4443 0fb4 50       		.byte	0x50
 4444 0fb5 02       		.uleb128 0x2
 4445 0fb6 74       		.byte	0x74
 4446 0fb7 10       		.sleb128 16
 4447 0fb8 00       		.byte	0
 4448 0fb9 17       		.uleb128 0x17
 4449 0fba 44000000 		.4byte	.LVL198
 4450 0fbe 8A180000 		.4byte	0x188a
 4451 0fc2 17       		.uleb128 0x17
 4452 0fc3 50000000 		.4byte	.LVL201
 4453 0fc7 8A180000 		.4byte	0x188a
 4454 0fcb 19       		.uleb128 0x19
 4455 0fcc 5C000000 		.4byte	.LVL202
 4456 0fd0 D9180000 		.4byte	0x18d9
 4457 0fd4 1A       		.uleb128 0x1a
 4458 0fd5 01       		.uleb128 0x1
 4459 0fd6 50       		.byte	0x50
 4460 0fd7 02       		.uleb128 0x2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 137


 4461 0fd8 91       		.byte	0x91
 4462 0fd9 68       		.sleb128 -24
 4463 0fda 00       		.byte	0
 4464 0fdb 00       		.byte	0
 4465 0fdc 1B       		.uleb128 0x1b
 4466 0fdd 08010000 		.4byte	.LBB40
 4467 0fe1 0E000000 		.4byte	.LBE40-.LBB40
 4468 0fe5 17100000 		.4byte	0x1017
 4469 0fe9 15       		.uleb128 0x15
 4470 0fea C3080000 		.4byte	.LASF114
 4471 0fee 01       		.byte	0x1
 4472 0fef 2506     		.2byte	0x625
 4473 0ff1 10010000 		.4byte	0x110
 4474 0ff5 DB0C0000 		.4byte	.LLST67
 4475 0ff9 1C       		.uleb128 0x1c
 4476 0ffa 0E010000 		.4byte	.LVL224
 4477 0ffe A5030000 		.4byte	0x3a5
 4478 1002 0D100000 		.4byte	0x100d
 4479 1006 1A       		.uleb128 0x1a
 4480 1007 01       		.uleb128 0x1
 4481 1008 50       		.byte	0x50
 4482 1009 02       		.uleb128 0x2
 4483 100a 74       		.byte	0x74
 4484 100b 00       		.sleb128 0
 4485 100c 00       		.byte	0
 4486 100d 17       		.uleb128 0x17
 4487 100e 16010000 		.4byte	.LVL226
 4488 1012 2D190000 		.4byte	0x192d
 4489 1016 00       		.byte	0
 4490 1017 17       		.uleb128 0x17
 4491 1018 10000000 		.4byte	.LVL192
 4492 101c 7F180000 		.4byte	0x187f
 4493 1020 17       		.uleb128 0x17
 4494 1021 62000000 		.4byte	.LVL204
 4495 1025 8A180000 		.4byte	0x188a
 4496 1029 17       		.uleb128 0x17
 4497 102a 66000000 		.4byte	.LVL205
 4498 102e E5180000 		.4byte	0x18e5
 4499 1032 17       		.uleb128 0x17
 4500 1033 6A000000 		.4byte	.LVL206
 4501 1037 7F180000 		.4byte	0x187f
 4502 103b 17       		.uleb128 0x17
 4503 103c 92000000 		.4byte	.LVL207
 4504 1040 8A180000 		.4byte	0x188a
 4505 1044 1C       		.uleb128 0x1c
 4506 1045 9A000000 		.4byte	.LVL209
 4507 1049 F1180000 		.4byte	0x18f1
 4508 104d 5E100000 		.4byte	0x105e
 4509 1051 1A       		.uleb128 0x1a
 4510 1052 01       		.uleb128 0x1
 4511 1053 50       		.byte	0x50
 4512 1054 02       		.uleb128 0x2
 4513 1055 91       		.byte	0x91
 4514 1056 68       		.sleb128 -24
 4515 1057 1A       		.uleb128 0x1a
 4516 1058 01       		.uleb128 0x1
 4517 1059 51       		.byte	0x51
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 138


 4518 105a 02       		.uleb128 0x2
 4519 105b 91       		.byte	0x91
 4520 105c 64       		.sleb128 -28
 4521 105d 00       		.byte	0
 4522 105e 1C       		.uleb128 0x1c
 4523 105f A2000000 		.4byte	.LVL210
 4524 1063 3B040000 		.4byte	0x43b
 4525 1067 72100000 		.4byte	0x1072
 4526 106b 1A       		.uleb128 0x1a
 4527 106c 01       		.uleb128 0x1
 4528 106d 50       		.byte	0x50
 4529 106e 02       		.uleb128 0x2
 4530 106f 74       		.byte	0x74
 4531 1070 00       		.sleb128 0
 4532 1071 00       		.byte	0
 4533 1072 17       		.uleb128 0x17
 4534 1073 AC000000 		.4byte	.LVL211
 4535 1077 7F180000 		.4byte	0x187f
 4536 107b 17       		.uleb128 0x17
 4537 107c B2000000 		.4byte	.LVL212
 4538 1080 39190000 		.4byte	0x1939
 4539 1084 17       		.uleb128 0x17
 4540 1085 B8000000 		.4byte	.LVL214
 4541 1089 8A180000 		.4byte	0x188a
 4542 108d 1C       		.uleb128 0x1c
 4543 108e C2000000 		.4byte	.LVL215
 4544 1092 FD180000 		.4byte	0x18fd
 4545 1096 A1100000 		.4byte	0x10a1
 4546 109a 1A       		.uleb128 0x1a
 4547 109b 01       		.uleb128 0x1
 4548 109c 50       		.byte	0x50
 4549 109d 02       		.uleb128 0x2
 4550 109e 74       		.byte	0x74
 4551 109f 24       		.sleb128 36
 4552 10a0 00       		.byte	0
 4553 10a1 1C       		.uleb128 0x1c
 4554 10a2 C8000000 		.4byte	.LVL216
 4555 10a6 68050000 		.4byte	0x568
 4556 10aa B5100000 		.4byte	0x10b5
 4557 10ae 1A       		.uleb128 0x1a
 4558 10af 01       		.uleb128 0x1
 4559 10b0 50       		.byte	0x50
 4560 10b1 02       		.uleb128 0x2
 4561 10b2 74       		.byte	0x74
 4562 10b3 00       		.sleb128 0
 4563 10b4 00       		.byte	0
 4564 10b5 17       		.uleb128 0x17
 4565 10b6 CC000000 		.4byte	.LVL217
 4566 10ba 09190000 		.4byte	0x1909
 4567 10be 1C       		.uleb128 0x1c
 4568 10bf E8000000 		.4byte	.LVL218
 4569 10c3 68050000 		.4byte	0x568
 4570 10c7 D2100000 		.4byte	0x10d2
 4571 10cb 1A       		.uleb128 0x1a
 4572 10cc 01       		.uleb128 0x1
 4573 10cd 50       		.byte	0x50
 4574 10ce 02       		.uleb128 0x2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 139


 4575 10cf 74       		.byte	0x74
 4576 10d0 00       		.sleb128 0
 4577 10d1 00       		.byte	0
 4578 10d2 17       		.uleb128 0x17
 4579 10d3 EC000000 		.4byte	.LVL219
 4580 10d7 09190000 		.4byte	0x1909
 4581 10db 1C       		.uleb128 0x1c
 4582 10dc F4000000 		.4byte	.LVL220
 4583 10e0 68050000 		.4byte	0x568
 4584 10e4 EF100000 		.4byte	0x10ef
 4585 10e8 1A       		.uleb128 0x1a
 4586 10e9 01       		.uleb128 0x1
 4587 10ea 50       		.byte	0x50
 4588 10eb 02       		.uleb128 0x2
 4589 10ec 74       		.byte	0x74
 4590 10ed 00       		.sleb128 0
 4591 10ee 00       		.byte	0
 4592 10ef 17       		.uleb128 0x17
 4593 10f0 F8000000 		.4byte	.LVL221
 4594 10f4 09190000 		.4byte	0x1909
 4595 10f8 1C       		.uleb128 0x1c
 4596 10f9 FE000000 		.4byte	.LVL222
 4597 10fd 3B040000 		.4byte	0x43b
 4598 1101 0C110000 		.4byte	0x110c
 4599 1105 1A       		.uleb128 0x1a
 4600 1106 01       		.uleb128 0x1
 4601 1107 50       		.byte	0x50
 4602 1108 02       		.uleb128 0x2
 4603 1109 74       		.byte	0x74
 4604 110a 00       		.sleb128 0
 4605 110b 00       		.byte	0
 4606 110c 17       		.uleb128 0x17
 4607 110d 08010000 		.4byte	.LVL223
 4608 1111 7F180000 		.4byte	0x187f
 4609 1115 17       		.uleb128 0x17
 4610 1116 1A010000 		.4byte	.LVL227
 4611 111a 8A180000 		.4byte	0x188a
 4612 111e 00       		.byte	0
 4613 111f 21       		.uleb128 0x21
 4614 1120 2F070000 		.4byte	.LASF115
 4615 1124 01       		.byte	0x1
 4616 1125 7502     		.2byte	0x275
 4617 1127 05010000 		.4byte	0x105
 4618 112b 00000000 		.4byte	.LFB74
 4619 112f 30000000 		.4byte	.LFE74-.LFB74
 4620 1133 01       		.uleb128 0x1
 4621 1134 9C       		.byte	0x9c
 4622 1135 99110000 		.4byte	0x1199
 4623 1139 14       		.uleb128 0x14
 4624 113a E0050000 		.4byte	.LASF104
 4625 113e 01       		.byte	0x1
 4626 113f 7502     		.2byte	0x275
 4627 1141 39020000 		.4byte	0x239
 4628 1145 F90C0000 		.4byte	.LLST68
 4629 1149 14       		.uleb128 0x14
 4630 114a 3E090000 		.4byte	.LASF94
 4631 114e 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 140


 4632 114f 7502     		.2byte	0x275
 4633 1151 1B010000 		.4byte	0x11b
 4634 1155 170D0000 		.4byte	.LLST69
 4635 1159 15       		.uleb128 0x15
 4636 115a 45080000 		.4byte	.LASF73
 4637 115e 01       		.byte	0x1
 4638 115f 7702     		.2byte	0x277
 4639 1161 05010000 		.4byte	0x105
 4640 1165 350D0000 		.4byte	.LLST70
 4641 1169 15       		.uleb128 0x15
 4642 116a 76000000 		.4byte	.LASF105
 4643 116e 01       		.byte	0x1
 4644 116f 7802     		.2byte	0x278
 4645 1171 12050000 		.4byte	0x512
 4646 1175 5F0D0000 		.4byte	.LLST71
 4647 1179 17       		.uleb128 0x17
 4648 117a 0C000000 		.4byte	.LVL231
 4649 117e 15190000 		.4byte	0x1915
 4650 1182 19       		.uleb128 0x19
 4651 1183 22000000 		.4byte	.LVL234
 4652 1187 060F0000 		.4byte	0xf06
 4653 118b 1A       		.uleb128 0x1a
 4654 118c 01       		.uleb128 0x1
 4655 118d 50       		.byte	0x50
 4656 118e 02       		.uleb128 0x2
 4657 118f 74       		.byte	0x74
 4658 1190 00       		.sleb128 0
 4659 1191 1A       		.uleb128 0x1a
 4660 1192 01       		.uleb128 0x1
 4661 1193 51       		.byte	0x51
 4662 1194 02       		.uleb128 0x2
 4663 1195 76       		.byte	0x76
 4664 1196 00       		.sleb128 0
 4665 1197 00       		.byte	0
 4666 1198 00       		.byte	0
 4667 1199 21       		.uleb128 0x21
 4668 119a DB020000 		.4byte	.LASF116
 4669 119e 01       		.byte	0x1
 4670 119f 4006     		.2byte	0x640
 4671 11a1 05010000 		.4byte	0x105
 4672 11a5 00000000 		.4byte	.LFB81
 4673 11a9 F8000000 		.4byte	.LFE81-.LFB81
 4674 11ad 01       		.uleb128 0x1
 4675 11ae 9C       		.byte	0x9c
 4676 11af 67130000 		.4byte	0x1367
 4677 11b3 14       		.uleb128 0x14
 4678 11b4 2F020000 		.4byte	.LASF81
 4679 11b8 01       		.byte	0x1
 4680 11b9 4006     		.2byte	0x640
 4681 11bb 39020000 		.4byte	0x239
 4682 11bf 7D0D0000 		.4byte	.LLST72
 4683 11c3 14       		.uleb128 0x14
 4684 11c4 73020000 		.4byte	.LASF78
 4685 11c8 01       		.byte	0x1
 4686 11c9 4006     		.2byte	0x640
 4687 11cb 63050000 		.4byte	0x563
 4688 11cf A90D0000 		.4byte	.LLST73
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 141


 4689 11d3 14       		.uleb128 0x14
 4690 11d4 3E090000 		.4byte	.LASF94
 4691 11d8 01       		.byte	0x1
 4692 11d9 4006     		.2byte	0x640
 4693 11db 1B010000 		.4byte	0x11b
 4694 11df D50D0000 		.4byte	.LLST74
 4695 11e3 15       		.uleb128 0x15
 4696 11e4 74030000 		.4byte	.LASF96
 4697 11e8 01       		.byte	0x1
 4698 11e9 4206     		.2byte	0x642
 4699 11eb 05010000 		.4byte	0x105
 4700 11ef 180E0000 		.4byte	.LLST75
 4701 11f3 16       		.uleb128 0x16
 4702 11f4 89030000 		.4byte	.LASF98
 4703 11f8 01       		.byte	0x1
 4704 11f9 4306     		.2byte	0x643
 4705 11fb 2E020000 		.4byte	0x22e
 4706 11ff 02       		.uleb128 0x2
 4707 1200 91       		.byte	0x91
 4708 1201 68       		.sleb128 -24
 4709 1202 15       		.uleb128 0x15
 4710 1203 62060000 		.4byte	.LASF117
 4711 1207 01       		.byte	0x1
 4712 1208 4406     		.2byte	0x644
 4713 120a 63020000 		.4byte	0x263
 4714 120e 590E0000 		.4byte	.LLST76
 4715 1212 15       		.uleb128 0x15
 4716 1213 3D080000 		.4byte	.LASF71
 4717 1217 01       		.byte	0x1
 4718 1218 4506     		.2byte	0x645
 4719 121a 12050000 		.4byte	0x512
 4720 121e 6C0E0000 		.4byte	.LLST77
 4721 1222 1B       		.uleb128 0x1b
 4722 1223 10000000 		.4byte	.LBB41
 4723 1227 4C000000 		.4byte	.LBE41-.LBB41
 4724 122b 90120000 		.4byte	0x1290
 4725 122f 15       		.uleb128 0x15
 4726 1230 AC020000 		.4byte	.LASF53
 4727 1234 01       		.byte	0x1
 4728 1235 5E06     		.2byte	0x65e
 4729 1237 39070000 		.4byte	0x739
 4730 123b 980E0000 		.4byte	.LLST78
 4731 123f 1C       		.uleb128 0x1c
 4732 1240 1E000000 		.4byte	.LVL242
 4733 1244 1C050000 		.4byte	0x51c
 4734 1248 59120000 		.4byte	0x1259
 4735 124c 1A       		.uleb128 0x1a
 4736 124d 01       		.uleb128 0x1
 4737 124e 50       		.byte	0x50
 4738 124f 02       		.uleb128 0x2
 4739 1250 74       		.byte	0x74
 4740 1251 00       		.sleb128 0
 4741 1252 1A       		.uleb128 0x1a
 4742 1253 01       		.uleb128 0x1
 4743 1254 51       		.byte	0x51
 4744 1255 02       		.uleb128 0x2
 4745 1256 76       		.byte	0x76
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 142


 4746 1257 00       		.sleb128 0
 4747 1258 00       		.byte	0
 4748 1259 1C       		.uleb128 0x1c
 4749 125a 2C000000 		.4byte	.LVL243
 4750 125e AA180000 		.4byte	0x18aa
 4751 1262 6D120000 		.4byte	0x126d
 4752 1266 1A       		.uleb128 0x1a
 4753 1267 01       		.uleb128 0x1
 4754 1268 50       		.byte	0x50
 4755 1269 02       		.uleb128 0x2
 4756 126a 74       		.byte	0x74
 4757 126b 24       		.sleb128 36
 4758 126c 00       		.byte	0
 4759 126d 17       		.uleb128 0x17
 4760 126e 42000000 		.4byte	.LVL244
 4761 1272 8A180000 		.4byte	0x188a
 4762 1276 17       		.uleb128 0x17
 4763 1277 4E000000 		.4byte	.LVL247
 4764 127b 8A180000 		.4byte	0x188a
 4765 127f 19       		.uleb128 0x19
 4766 1280 5A000000 		.4byte	.LVL248
 4767 1284 D9180000 		.4byte	0x18d9
 4768 1288 1A       		.uleb128 0x1a
 4769 1289 01       		.uleb128 0x1
 4770 128a 50       		.byte	0x50
 4771 128b 02       		.uleb128 0x2
 4772 128c 91       		.byte	0x91
 4773 128d 68       		.sleb128 -24
 4774 128e 00       		.byte	0
 4775 128f 00       		.byte	0
 4776 1290 17       		.uleb128 0x17
 4777 1291 10000000 		.4byte	.LVL239
 4778 1295 7F180000 		.4byte	0x187f
 4779 1299 17       		.uleb128 0x17
 4780 129a 60000000 		.4byte	.LVL250
 4781 129e 8A180000 		.4byte	0x188a
 4782 12a2 17       		.uleb128 0x17
 4783 12a3 64000000 		.4byte	.LVL251
 4784 12a7 E5180000 		.4byte	0x18e5
 4785 12ab 17       		.uleb128 0x17
 4786 12ac 68000000 		.4byte	.LVL252
 4787 12b0 7F180000 		.4byte	0x187f
 4788 12b4 17       		.uleb128 0x17
 4789 12b5 90000000 		.4byte	.LVL253
 4790 12b9 8A180000 		.4byte	0x188a
 4791 12bd 1C       		.uleb128 0x1c
 4792 12be 98000000 		.4byte	.LVL255
 4793 12c2 F1180000 		.4byte	0x18f1
 4794 12c6 D7120000 		.4byte	0x12d7
 4795 12ca 1A       		.uleb128 0x1a
 4796 12cb 01       		.uleb128 0x1
 4797 12cc 50       		.byte	0x50
 4798 12cd 02       		.uleb128 0x2
 4799 12ce 91       		.byte	0x91
 4800 12cf 68       		.sleb128 -24
 4801 12d0 1A       		.uleb128 0x1a
 4802 12d1 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 143


 4803 12d2 51       		.byte	0x51
 4804 12d3 02       		.uleb128 0x2
 4805 12d4 91       		.byte	0x91
 4806 12d5 64       		.sleb128 -28
 4807 12d6 00       		.byte	0
 4808 12d7 1C       		.uleb128 0x1c
 4809 12d8 A0000000 		.4byte	.LVL256
 4810 12dc 3B040000 		.4byte	0x43b
 4811 12e0 EB120000 		.4byte	0x12eb
 4812 12e4 1A       		.uleb128 0x1a
 4813 12e5 01       		.uleb128 0x1
 4814 12e6 50       		.byte	0x50
 4815 12e7 02       		.uleb128 0x2
 4816 12e8 74       		.byte	0x74
 4817 12e9 00       		.sleb128 0
 4818 12ea 00       		.byte	0
 4819 12eb 1C       		.uleb128 0x1c
 4820 12ec AC000000 		.4byte	.LVL257
 4821 12f0 FD180000 		.4byte	0x18fd
 4822 12f4 FF120000 		.4byte	0x12ff
 4823 12f8 1A       		.uleb128 0x1a
 4824 12f9 01       		.uleb128 0x1
 4825 12fa 50       		.byte	0x50
 4826 12fb 02       		.uleb128 0x2
 4827 12fc 74       		.byte	0x74
 4828 12fd 24       		.sleb128 36
 4829 12fe 00       		.byte	0
 4830 12ff 1C       		.uleb128 0x1c
 4831 1300 B2000000 		.4byte	.LVL258
 4832 1304 68050000 		.4byte	0x568
 4833 1308 13130000 		.4byte	0x1313
 4834 130c 1A       		.uleb128 0x1a
 4835 130d 01       		.uleb128 0x1
 4836 130e 50       		.byte	0x50
 4837 130f 02       		.uleb128 0x2
 4838 1310 74       		.byte	0x74
 4839 1311 00       		.sleb128 0
 4840 1312 00       		.byte	0
 4841 1313 17       		.uleb128 0x17
 4842 1314 B6000000 		.4byte	.LVL259
 4843 1318 09190000 		.4byte	0x1909
 4844 131c 1C       		.uleb128 0x1c
 4845 131d D2000000 		.4byte	.LVL260
 4846 1321 68050000 		.4byte	0x568
 4847 1325 30130000 		.4byte	0x1330
 4848 1329 1A       		.uleb128 0x1a
 4849 132a 01       		.uleb128 0x1
 4850 132b 50       		.byte	0x50
 4851 132c 02       		.uleb128 0x2
 4852 132d 74       		.byte	0x74
 4853 132e 00       		.sleb128 0
 4854 132f 00       		.byte	0
 4855 1330 17       		.uleb128 0x17
 4856 1331 D6000000 		.4byte	.LVL261
 4857 1335 09190000 		.4byte	0x1909
 4858 1339 1C       		.uleb128 0x1c
 4859 133a DE000000 		.4byte	.LVL262
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 144


 4860 133e 68050000 		.4byte	0x568
 4861 1342 4D130000 		.4byte	0x134d
 4862 1346 1A       		.uleb128 0x1a
 4863 1347 01       		.uleb128 0x1
 4864 1348 50       		.byte	0x50
 4865 1349 02       		.uleb128 0x2
 4866 134a 74       		.byte	0x74
 4867 134b 00       		.sleb128 0
 4868 134c 00       		.byte	0
 4869 134d 17       		.uleb128 0x17
 4870 134e E2000000 		.4byte	.LVL263
 4871 1352 09190000 		.4byte	0x1909
 4872 1356 19       		.uleb128 0x19
 4873 1357 E8000000 		.4byte	.LVL264
 4874 135b 3B040000 		.4byte	0x43b
 4875 135f 1A       		.uleb128 0x1a
 4876 1360 01       		.uleb128 0x1
 4877 1361 50       		.byte	0x50
 4878 1362 02       		.uleb128 0x2
 4879 1363 74       		.byte	0x74
 4880 1364 00       		.sleb128 0
 4881 1365 00       		.byte	0
 4882 1366 00       		.byte	0
 4883 1367 21       		.uleb128 0x21
 4884 1368 30000000 		.4byte	.LASF118
 4885 136c 01       		.byte	0x1
 4886 136d D606     		.2byte	0x6d6
 4887 136f 05010000 		.4byte	0x105
 4888 1373 00000000 		.4byte	.LFB82
 4889 1377 72000000 		.4byte	.LFE82-.LFB82
 4890 137b 01       		.uleb128 0x1
 4891 137c 9C       		.byte	0x9c
 4892 137d 7E140000 		.4byte	0x147e
 4893 1381 14       		.uleb128 0x14
 4894 1382 2F020000 		.4byte	.LASF81
 4895 1386 01       		.byte	0x1
 4896 1387 D606     		.2byte	0x6d6
 4897 1389 39020000 		.4byte	0x239
 4898 138d B60E0000 		.4byte	.LLST79
 4899 1391 14       		.uleb128 0x14
 4900 1392 73020000 		.4byte	.LASF78
 4901 1396 01       		.byte	0x1
 4902 1397 D606     		.2byte	0x6d6
 4903 1399 63050000 		.4byte	0x563
 4904 139d 060F0000 		.4byte	.LLST80
 4905 13a1 14       		.uleb128 0x14
 4906 13a2 5C000000 		.4byte	.LASF107
 4907 13a6 01       		.byte	0x1
 4908 13a7 D606     		.2byte	0x6d6
 4909 13a9 4F0C0000 		.4byte	0xc4f
 4910 13ad 400F0000 		.4byte	.LLST81
 4911 13b1 16       		.uleb128 0x16
 4912 13b2 45080000 		.4byte	.LASF73
 4913 13b6 01       		.byte	0x1
 4914 13b7 D806     		.2byte	0x6d8
 4915 13b9 05010000 		.4byte	0x105
 4916 13bd 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 145


 4917 13be 50       		.byte	0x50
 4918 13bf 23       		.uleb128 0x23
 4919 13c0 C5010000 		.4byte	.LASF108
 4920 13c4 01       		.byte	0x1
 4921 13c5 D906     		.2byte	0x6d9
 4922 13c7 10010000 		.4byte	0x110
 4923 13cb 15       		.uleb128 0x15
 4924 13cc 3D080000 		.4byte	.LASF71
 4925 13d0 01       		.byte	0x1
 4926 13d1 DA06     		.2byte	0x6da
 4927 13d3 12050000 		.4byte	0x512
 4928 13d7 820F0000 		.4byte	.LLST82
 4929 13db 24       		.uleb128 0x24
 4930 13dc 66030000 		.4byte	0x366
 4931 13e0 04000000 		.4byte	.LBB42
 4932 13e4 14000000 		.4byte	.LBE42-.LBB42
 4933 13e8 01       		.byte	0x1
 4934 13e9 EF06     		.2byte	0x6ef
 4935 13eb 04140000 		.4byte	0x1404
 4936 13ef 25       		.uleb128 0x25
 4937 13f0 04000000 		.4byte	.LBB43
 4938 13f4 14000000 		.4byte	.LBE43-.LBB43
 4939 13f8 26       		.uleb128 0x26
 4940 13f9 76030000 		.4byte	0x376
 4941 13fd 26       		.uleb128 0x26
 4942 13fe 81030000 		.4byte	0x381
 4943 1402 00       		.byte	0
 4944 1403 00       		.byte	0
 4945 1404 1B       		.uleb128 0x1b
 4946 1405 18000000 		.4byte	.LBB44
 4947 1409 52000000 		.4byte	.LBE44-.LBB44
 4948 140d 63140000 		.4byte	0x1463
 4949 1411 15       		.uleb128 0x15
 4950 1412 AC020000 		.4byte	.LASF53
 4951 1416 01       		.byte	0x1
 4952 1417 F106     		.2byte	0x6f1
 4953 1419 39070000 		.4byte	0x739
 4954 141d D20F0000 		.4byte	.LLST83
 4955 1421 2A       		.uleb128 0x2a
 4956 1422 30000000 		.4byte	.Ldebug_ranges0+0x30
 4957 1426 15       		.uleb128 0x15
 4958 1427 070A0000 		.4byte	.LASF56
 4959 142b 01       		.byte	0x1
 4960 142c F606     		.2byte	0x6f6
 4961 142e 540C0000 		.4byte	0xc54
 4962 1432 0A100000 		.4byte	.LLST84
 4963 1436 1C       		.uleb128 0x1c
 4964 1437 2A000000 		.4byte	.LVL271
 4965 143b 1C050000 		.4byte	0x51c
 4966 143f 51140000 		.4byte	0x1451
 4967 1443 1A       		.uleb128 0x1a
 4968 1444 01       		.uleb128 0x1
 4969 1445 50       		.byte	0x50
 4970 1446 02       		.uleb128 0x2
 4971 1447 77       		.byte	0x77
 4972 1448 00       		.sleb128 0
 4973 1449 1A       		.uleb128 0x1a
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 146


 4974 144a 01       		.uleb128 0x1
 4975 144b 51       		.byte	0x51
 4976 144c 03       		.uleb128 0x3
 4977 144d F3       		.byte	0xf3
 4978 144e 01       		.uleb128 0x1
 4979 144f 51       		.byte	0x51
 4980 1450 00       		.byte	0
 4981 1451 19       		.uleb128 0x19
 4982 1452 40000000 		.4byte	.LVL273
 4983 1456 AA180000 		.4byte	0x18aa
 4984 145a 1A       		.uleb128 0x1a
 4985 145b 01       		.uleb128 0x1
 4986 145c 50       		.byte	0x50
 4987 145d 02       		.uleb128 0x2
 4988 145e 77       		.byte	0x77
 4989 145f 10       		.sleb128 16
 4990 1460 00       		.byte	0
 4991 1461 00       		.byte	0
 4992 1462 00       		.byte	0
 4993 1463 28       		.uleb128 0x28
 4994 1464 8D030000 		.4byte	0x38d
 4995 1468 6A000000 		.4byte	.LBB47
 4996 146c 04000000 		.4byte	.LBE47-.LBB47
 4997 1470 01       		.byte	0x1
 4998 1471 2B07     		.2byte	0x72b
 4999 1473 29       		.uleb128 0x29
 5000 1474 99030000 		.4byte	0x399
 5001 1478 35100000 		.4byte	.LLST85
 5002 147c 00       		.byte	0
 5003 147d 00       		.byte	0
 5004 147e 21       		.uleb128 0x21
 5005 147f B1080000 		.4byte	.LASF119
 5006 1483 01       		.byte	0x1
 5007 1484 3107     		.2byte	0x731
 5008 1486 05010000 		.4byte	0x105
 5009 148a 00000000 		.4byte	.LFB83
 5010 148e 30000000 		.4byte	.LFE83-.LFB83
 5011 1492 01       		.uleb128 0x1
 5012 1493 9C       		.byte	0x9c
 5013 1494 53150000 		.4byte	0x1553
 5014 1498 14       		.uleb128 0x14
 5015 1499 2F020000 		.4byte	.LASF81
 5016 149d 01       		.byte	0x1
 5017 149e 3107     		.2byte	0x731
 5018 14a0 39020000 		.4byte	0x239
 5019 14a4 48100000 		.4byte	.LLST86
 5020 14a8 14       		.uleb128 0x14
 5021 14a9 73020000 		.4byte	.LASF78
 5022 14ad 01       		.byte	0x1
 5023 14ae 3107     		.2byte	0x731
 5024 14b0 63050000 		.4byte	0x563
 5025 14b4 7F100000 		.4byte	.LLST87
 5026 14b8 15       		.uleb128 0x15
 5027 14b9 45080000 		.4byte	.LASF73
 5028 14bd 01       		.byte	0x1
 5029 14be 3307     		.2byte	0x733
 5030 14c0 05010000 		.4byte	0x105
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 147


 5031 14c4 B9100000 		.4byte	.LLST88
 5032 14c8 23       		.uleb128 0x23
 5033 14c9 C5010000 		.4byte	.LASF108
 5034 14cd 01       		.byte	0x1
 5035 14ce 3407     		.2byte	0x734
 5036 14d0 10010000 		.4byte	0x110
 5037 14d4 15       		.uleb128 0x15
 5038 14d5 62060000 		.4byte	.LASF117
 5039 14d9 01       		.byte	0x1
 5040 14da 3507     		.2byte	0x735
 5041 14dc 63020000 		.4byte	0x263
 5042 14e0 D8100000 		.4byte	.LLST89
 5043 14e4 15       		.uleb128 0x15
 5044 14e5 3D080000 		.4byte	.LASF71
 5045 14e9 01       		.byte	0x1
 5046 14ea 3607     		.2byte	0x736
 5047 14ec 12050000 		.4byte	0x512
 5048 14f0 EB100000 		.4byte	.LLST90
 5049 14f4 24       		.uleb128 0x24
 5050 14f5 66030000 		.4byte	0x366
 5051 14f9 02000000 		.4byte	.LBB49
 5052 14fd 14000000 		.4byte	.LBE49-.LBB49
 5053 1501 01       		.byte	0x1
 5054 1502 4C07     		.2byte	0x74c
 5055 1504 1D150000 		.4byte	0x151d
 5056 1508 25       		.uleb128 0x25
 5057 1509 02000000 		.4byte	.LBB50
 5058 150d 14000000 		.4byte	.LBE50-.LBB50
 5059 1511 26       		.uleb128 0x26
 5060 1512 76030000 		.4byte	0x376
 5061 1516 26       		.uleb128 0x26
 5062 1517 81030000 		.4byte	0x381
 5063 151b 00       		.byte	0
 5064 151c 00       		.byte	0
 5065 151d 24       		.uleb128 0x24
 5066 151e 8D030000 		.4byte	0x38d
 5067 1522 2A000000 		.4byte	.LBB51
 5068 1526 04000000 		.4byte	.LBE51-.LBB51
 5069 152a 01       		.byte	0x1
 5070 152b 6107     		.2byte	0x761
 5071 152d 3B150000 		.4byte	0x153b
 5072 1531 29       		.uleb128 0x29
 5073 1532 99030000 		.4byte	0x399
 5074 1536 22110000 		.4byte	.LLST91
 5075 153a 00       		.byte	0
 5076 153b 19       		.uleb128 0x19
 5077 153c 22000000 		.4byte	.LVL284
 5078 1540 1C050000 		.4byte	0x51c
 5079 1544 1A       		.uleb128 0x1a
 5080 1545 01       		.uleb128 0x1
 5081 1546 50       		.byte	0x50
 5082 1547 02       		.uleb128 0x2
 5083 1548 74       		.byte	0x74
 5084 1549 00       		.sleb128 0
 5085 154a 1A       		.uleb128 0x1a
 5086 154b 01       		.uleb128 0x1
 5087 154c 51       		.byte	0x51
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 148


 5088 154d 03       		.uleb128 0x3
 5089 154e F3       		.byte	0xf3
 5090 154f 01       		.uleb128 0x1
 5091 1550 51       		.byte	0x51
 5092 1551 00       		.byte	0
 5093 1552 00       		.byte	0
 5094 1553 21       		.uleb128 0x21
 5095 1554 15080000 		.4byte	.LASF120
 5096 1558 01       		.byte	0x1
 5097 1559 6707     		.2byte	0x767
 5098 155b 10010000 		.4byte	0x110
 5099 155f 00000000 		.4byte	.LFB84
 5100 1563 12000000 		.4byte	.LFE84-.LFB84
 5101 1567 01       		.uleb128 0x1
 5102 1568 9C       		.byte	0x9c
 5103 1569 9E150000 		.4byte	0x159e
 5104 156d 14       		.uleb128 0x14
 5105 156e 2F020000 		.4byte	.LASF81
 5106 1572 01       		.byte	0x1
 5107 1573 6707     		.2byte	0x767
 5108 1575 9E150000 		.4byte	0x159e
 5109 1579 35110000 		.4byte	.LLST92
 5110 157d 16       		.uleb128 0x16
 5111 157e 7A010000 		.4byte	.LASF121
 5112 1582 01       		.byte	0x1
 5113 1583 6907     		.2byte	0x769
 5114 1585 10010000 		.4byte	0x110
 5115 1589 01       		.uleb128 0x1
 5116 158a 54       		.byte	0x54
 5117 158b 17       		.uleb128 0x17
 5118 158c 08000000 		.4byte	.LVL290
 5119 1590 7F180000 		.4byte	0x187f
 5120 1594 17       		.uleb128 0x17
 5121 1595 0E000000 		.4byte	.LVL292
 5122 1599 8A180000 		.4byte	0x188a
 5123 159d 00       		.byte	0
 5124 159e 07       		.uleb128 0x7
 5125 159f 39020000 		.4byte	0x239
 5126 15a3 21       		.uleb128 0x21
 5127 15a4 0E010000 		.4byte	.LASF122
 5128 15a8 01       		.byte	0x1
 5129 15a9 7707     		.2byte	0x777
 5130 15ab 10010000 		.4byte	0x110
 5131 15af 00000000 		.4byte	.LFB85
 5132 15b3 16000000 		.4byte	.LFE85-.LFB85
 5133 15b7 01       		.uleb128 0x1
 5134 15b8 9C       		.byte	0x9c
 5135 15b9 FE150000 		.4byte	0x15fe
 5136 15bd 14       		.uleb128 0x14
 5137 15be 2F020000 		.4byte	.LASF81
 5138 15c2 01       		.byte	0x1
 5139 15c3 7707     		.2byte	0x777
 5140 15c5 9E150000 		.4byte	0x159e
 5141 15c9 61110000 		.4byte	.LLST93
 5142 15cd 16       		.uleb128 0x16
 5143 15ce 7A010000 		.4byte	.LASF121
 5144 15d2 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 149


 5145 15d3 7907     		.2byte	0x779
 5146 15d5 10010000 		.4byte	0x110
 5147 15d9 01       		.uleb128 0x1
 5148 15da 54       		.byte	0x54
 5149 15db 15       		.uleb128 0x15
 5150 15dc 3D080000 		.4byte	.LASF71
 5151 15e0 01       		.byte	0x1
 5152 15e1 7A07     		.2byte	0x77a
 5153 15e3 0C050000 		.4byte	0x50c
 5154 15e7 8D110000 		.4byte	.LLST94
 5155 15eb 17       		.uleb128 0x17
 5156 15ec 08000000 		.4byte	.LVL295
 5157 15f0 7F180000 		.4byte	0x187f
 5158 15f4 17       		.uleb128 0x17
 5159 15f5 12000000 		.4byte	.LVL298
 5160 15f9 8A180000 		.4byte	0x188a
 5161 15fd 00       		.byte	0
 5162 15fe 21       		.uleb128 0x21
 5163 15ff 23050000 		.4byte	.LASF123
 5164 1603 01       		.byte	0x1
 5165 1604 8907     		.2byte	0x789
 5166 1606 10010000 		.4byte	0x110
 5167 160a 00000000 		.4byte	.LFB86
 5168 160e 04000000 		.4byte	.LFE86-.LFB86
 5169 1612 01       		.uleb128 0x1
 5170 1613 9C       		.byte	0x9c
 5171 1614 37160000 		.4byte	0x1637
 5172 1618 14       		.uleb128 0x14
 5173 1619 2F020000 		.4byte	.LASF81
 5174 161d 01       		.byte	0x1
 5175 161e 8907     		.2byte	0x789
 5176 1620 9E150000 		.4byte	0x159e
 5177 1624 B9110000 		.4byte	.LLST95
 5178 1628 16       		.uleb128 0x16
 5179 1629 7A010000 		.4byte	.LASF121
 5180 162d 01       		.byte	0x1
 5181 162e 8B07     		.2byte	0x78b
 5182 1630 10010000 		.4byte	0x110
 5183 1634 01       		.uleb128 0x1
 5184 1635 50       		.byte	0x50
 5185 1636 00       		.byte	0
 5186 1637 21       		.uleb128 0x21
 5187 1638 EA060000 		.4byte	.LASF124
 5188 163c 01       		.byte	0x1
 5189 163d C107     		.2byte	0x7c1
 5190 163f 10010000 		.4byte	0x110
 5191 1643 00000000 		.4byte	.LFB88
 5192 1647 04000000 		.4byte	.LFE88-.LFB88
 5193 164b 01       		.uleb128 0x1
 5194 164c 9C       		.byte	0x9c
 5195 164d 62160000 		.4byte	0x1662
 5196 1651 14       		.uleb128 0x14
 5197 1652 2F020000 		.4byte	.LASF81
 5198 1656 01       		.byte	0x1
 5199 1657 C107     		.2byte	0x7c1
 5200 1659 39020000 		.4byte	0x239
 5201 165d DA110000 		.4byte	.LLST96
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 150


 5202 1661 00       		.byte	0
 5203 1662 2B       		.uleb128 0x2b
 5204 1663 E5000000 		.4byte	.LASF128
 5205 1667 01       		.byte	0x1
 5206 1668 CB07     		.2byte	0x7cb
 5207 166a 00000000 		.4byte	.LFB89
 5208 166e 04000000 		.4byte	.LFE89-.LFB89
 5209 1672 01       		.uleb128 0x1
 5210 1673 9C       		.byte	0x9c
 5211 1674 95160000 		.4byte	0x1695
 5212 1678 20       		.uleb128 0x20
 5213 1679 2F020000 		.4byte	.LASF81
 5214 167d 01       		.byte	0x1
 5215 167e CB07     		.2byte	0x7cb
 5216 1680 39020000 		.4byte	0x239
 5217 1684 01       		.uleb128 0x1
 5218 1685 50       		.byte	0x50
 5219 1686 20       		.uleb128 0x20
 5220 1687 75070000 		.4byte	.LASF58
 5221 168b 01       		.byte	0x1
 5222 168c CB07     		.2byte	0x7cb
 5223 168e 10010000 		.4byte	0x110
 5224 1692 01       		.uleb128 0x1
 5225 1693 51       		.byte	0x51
 5226 1694 00       		.byte	0
 5227 1695 21       		.uleb128 0x21
 5228 1696 0B060000 		.4byte	.LASF125
 5229 169a 01       		.byte	0x1
 5230 169b D507     		.2byte	0x7d5
 5231 169d D6000000 		.4byte	0xd6
 5232 16a1 00000000 		.4byte	.LFB90
 5233 16a5 06000000 		.4byte	.LFE90-.LFB90
 5234 16a9 01       		.uleb128 0x1
 5235 16aa 9C       		.byte	0x9c
 5236 16ab C0160000 		.4byte	0x16c0
 5237 16af 14       		.uleb128 0x14
 5238 16b0 2F020000 		.4byte	.LASF81
 5239 16b4 01       		.byte	0x1
 5240 16b5 D507     		.2byte	0x7d5
 5241 16b7 39020000 		.4byte	0x239
 5242 16bb FB110000 		.4byte	.LLST97
 5243 16bf 00       		.byte	0
 5244 16c0 21       		.uleb128 0x21
 5245 16c1 AF090000 		.4byte	.LASF126
 5246 16c5 01       		.byte	0x1
 5247 16c6 E608     		.2byte	0x8e6
 5248 16c8 05010000 		.4byte	0x105
 5249 16cc 00000000 		.4byte	.LFB96
 5250 16d0 0C000000 		.4byte	.LFE96-.LFB96
 5251 16d4 01       		.uleb128 0x1
 5252 16d5 9C       		.byte	0x9c
 5253 16d6 F9160000 		.4byte	0x16f9
 5254 16da 14       		.uleb128 0x14
 5255 16db 2F020000 		.4byte	.LASF81
 5256 16df 01       		.byte	0x1
 5257 16e0 E608     		.2byte	0x8e6
 5258 16e2 9E150000 		.4byte	0x159e
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 151


 5259 16e6 1C120000 		.4byte	.LLST98
 5260 16ea 16       		.uleb128 0x16
 5261 16eb 45080000 		.4byte	.LASF73
 5262 16ef 01       		.byte	0x1
 5263 16f0 E808     		.2byte	0x8e8
 5264 16f2 05010000 		.4byte	0x105
 5265 16f6 01       		.uleb128 0x1
 5266 16f7 50       		.byte	0x50
 5267 16f8 00       		.byte	0
 5268 16f9 21       		.uleb128 0x21
 5269 16fa FC070000 		.4byte	.LASF127
 5270 16fe 01       		.byte	0x1
 5271 16ff 0D09     		.2byte	0x90d
 5272 1701 05010000 		.4byte	0x105
 5273 1705 00000000 		.4byte	.LFB98
 5274 1709 10000000 		.4byte	.LFE98-.LFB98
 5275 170d 01       		.uleb128 0x1
 5276 170e 9C       		.byte	0x9c
 5277 170f 32170000 		.4byte	0x1732
 5278 1713 14       		.uleb128 0x14
 5279 1714 2F020000 		.4byte	.LASF81
 5280 1718 01       		.byte	0x1
 5281 1719 0D09     		.2byte	0x90d
 5282 171b 9E150000 		.4byte	0x159e
 5283 171f 56120000 		.4byte	.LLST99
 5284 1723 16       		.uleb128 0x16
 5285 1724 45080000 		.4byte	.LASF73
 5286 1728 01       		.byte	0x1
 5287 1729 0F09     		.2byte	0x90f
 5288 172b 05010000 		.4byte	0x105
 5289 172f 01       		.uleb128 0x1
 5290 1730 50       		.byte	0x50
 5291 1731 00       		.byte	0
 5292 1732 2B       		.uleb128 0x2b
 5293 1733 F7050000 		.4byte	.LASF129
 5294 1737 01       		.byte	0x1
 5295 1738 340A     		.2byte	0xa34
 5296 173a 00000000 		.4byte	.LFB99
 5297 173e 28000000 		.4byte	.LFE99-.LFB99
 5298 1742 01       		.uleb128 0x1
 5299 1743 9C       		.byte	0x9c
 5300 1744 74170000 		.4byte	0x1774
 5301 1748 20       		.uleb128 0x20
 5302 1749 2F020000 		.4byte	.LASF81
 5303 174d 01       		.byte	0x1
 5304 174e 340A     		.2byte	0xa34
 5305 1750 39020000 		.4byte	0x239
 5306 1754 01       		.uleb128 0x1
 5307 1755 50       		.byte	0x50
 5308 1756 20       		.uleb128 0x20
 5309 1757 9A030000 		.4byte	.LASF63
 5310 175b 01       		.byte	0x1
 5311 175c 340A     		.2byte	0xa34
 5312 175e B9000000 		.4byte	0xb9
 5313 1762 01       		.uleb128 0x1
 5314 1763 51       		.byte	0x51
 5315 1764 2C       		.uleb128 0x2c
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 152


 5316 1765 757800   		.ascii	"ux\000"
 5317 1768 01       		.byte	0x1
 5318 1769 360A     		.2byte	0xa36
 5319 176b 10010000 		.4byte	0x110
 5320 176f 90120000 		.4byte	.LLST100
 5321 1773 00       		.byte	0
 5322 1774 21       		.uleb128 0x21
 5323 1775 54070000 		.4byte	.LASF130
 5324 1779 01       		.byte	0x1
 5325 177a 510A     		.2byte	0xa51
 5326 177c B9000000 		.4byte	0xb9
 5327 1780 00000000 		.4byte	.LFB100
 5328 1784 28000000 		.4byte	.LFE100-.LFB100
 5329 1788 01       		.uleb128 0x1
 5330 1789 9C       		.byte	0x9c
 5331 178a BE170000 		.4byte	0x17be
 5332 178e 14       		.uleb128 0x14
 5333 178f 2F020000 		.4byte	.LASF81
 5334 1793 01       		.byte	0x1
 5335 1794 510A     		.2byte	0xa51
 5336 1796 39020000 		.4byte	0x239
 5337 179a BA120000 		.4byte	.LLST101
 5338 179e 2C       		.uleb128 0x2c
 5339 179f 757800   		.ascii	"ux\000"
 5340 17a2 01       		.byte	0x1
 5341 17a3 530A     		.2byte	0xa53
 5342 17a5 10010000 		.4byte	0x110
 5343 17a9 F4120000 		.4byte	.LLST102
 5344 17ad 15       		.uleb128 0x15
 5345 17ae 63070000 		.4byte	.LASF131
 5346 17b2 01       		.byte	0x1
 5347 17b3 540A     		.2byte	0xa54
 5348 17b5 B9000000 		.4byte	0xb9
 5349 17b9 13130000 		.4byte	.LLST103
 5350 17bd 00       		.byte	0
 5351 17be 2B       		.uleb128 0x2b
 5352 17bf AF010000 		.4byte	.LASF132
 5353 17c3 01       		.byte	0x1
 5354 17c4 6D0A     		.2byte	0xa6d
 5355 17c6 00000000 		.4byte	.LFB101
 5356 17ca 2C000000 		.4byte	.LFE101-.LFB101
 5357 17ce 01       		.uleb128 0x1
 5358 17cf 9C       		.byte	0x9c
 5359 17d0 F2170000 		.4byte	0x17f2
 5360 17d4 20       		.uleb128 0x20
 5361 17d5 2F020000 		.4byte	.LASF81
 5362 17d9 01       		.byte	0x1
 5363 17da 6D0A     		.2byte	0xa6d
 5364 17dc 39020000 		.4byte	0x239
 5365 17e0 01       		.uleb128 0x1
 5366 17e1 50       		.byte	0x50
 5367 17e2 2C       		.uleb128 0x2c
 5368 17e3 757800   		.ascii	"ux\000"
 5369 17e6 01       		.byte	0x1
 5370 17e7 6F0A     		.2byte	0xa6f
 5371 17e9 10010000 		.4byte	0x110
 5372 17ed 49130000 		.4byte	.LLST104
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 153


 5373 17f1 00       		.byte	0
 5374 17f2 2B       		.uleb128 0x2b
 5375 17f3 97010000 		.4byte	.LASF133
 5376 17f7 01       		.byte	0x1
 5377 17f8 9507     		.2byte	0x795
 5378 17fa 00000000 		.4byte	.LFB87
 5379 17fe 10000000 		.4byte	.LFE87-.LFB87
 5380 1802 01       		.uleb128 0x1
 5381 1803 9C       		.byte	0x9c
 5382 1804 4D180000 		.4byte	0x184d
 5383 1808 14       		.uleb128 0x14
 5384 1809 2F020000 		.4byte	.LASF81
 5385 180d 01       		.byte	0x1
 5386 180e 9507     		.2byte	0x795
 5387 1810 39020000 		.4byte	0x239
 5388 1814 73130000 		.4byte	.LLST105
 5389 1818 15       		.uleb128 0x15
 5390 1819 3D080000 		.4byte	.LASF71
 5391 181d 01       		.byte	0x1
 5392 181e 9707     		.2byte	0x797
 5393 1820 12050000 		.4byte	0x512
 5394 1824 91130000 		.4byte	.LLST106
 5395 1828 1C       		.uleb128 0x1c
 5396 1829 08000000 		.4byte	.LVL332
 5397 182d BE170000 		.4byte	0x17be
 5398 1831 3C180000 		.4byte	0x183c
 5399 1835 1A       		.uleb128 0x1a
 5400 1836 01       		.uleb128 0x1
 5401 1837 50       		.byte	0x50
 5402 1838 02       		.uleb128 0x2
 5403 1839 74       		.byte	0x74
 5404 183a 00       		.sleb128 0
 5405 183b 00       		.byte	0
 5406 183c 19       		.uleb128 0x19
 5407 183d 0E000000 		.4byte	.LVL333
 5408 1841 45190000 		.4byte	0x1945
 5409 1845 1A       		.uleb128 0x1a
 5410 1846 01       		.uleb128 0x1
 5411 1847 50       		.byte	0x50
 5412 1848 02       		.uleb128 0x2
 5413 1849 74       		.byte	0x74
 5414 184a 00       		.sleb128 0
 5415 184b 00       		.byte	0
 5416 184c 00       		.byte	0
 5417 184d 2D       		.uleb128 0x2d
 5418 184e A1070000 		.4byte	.LASF134
 5419 1852 09       		.byte	0x9
 5420 1853 1207     		.2byte	0x712
 5421 1855 59180000 		.4byte	0x1859
 5422 1859 0B       		.uleb128 0xb
 5423 185a E1000000 		.4byte	0xe1
 5424 185e 2E       		.uleb128 0x2e
 5425 185f 5B030000 		.4byte	0x35b
 5426 1863 6E180000 		.4byte	0x186e
 5427 1867 2F       		.uleb128 0x2f
 5428 1868 A9000000 		.4byte	0xa9
 5429 186c 09       		.byte	0x9
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 154


 5430 186d 00       		.byte	0
 5431 186e 30       		.uleb128 0x30
 5432 186f C8040000 		.4byte	.LASF135
 5433 1873 01       		.byte	0x1
 5434 1874 9A       		.byte	0x9a
 5435 1875 5E180000 		.4byte	0x185e
 5436 1879 05       		.uleb128 0x5
 5437 187a 03       		.byte	0x3
 5438 187b 00000000 		.4byte	xQueueRegistry
 5439 187f 31       		.uleb128 0x31
 5440 1880 3C010000 		.4byte	.LASF136
 5441 1884 3C010000 		.4byte	.LASF136
 5442 1888 02       		.byte	0x2
 5443 1889 61       		.byte	0x61
 5444 188a 31       		.uleb128 0x31
 5445 188b 10000000 		.4byte	.LASF137
 5446 188f 10000000 		.4byte	.LASF137
 5447 1893 02       		.byte	0x2
 5448 1894 62       		.byte	0x62
 5449 1895 32       		.uleb128 0x32
 5450 1896 58040000 		.4byte	.LASF138
 5451 189a 58040000 		.4byte	.LASF138
 5452 189e 07       		.byte	0x7
 5453 189f DE08     		.2byte	0x8de
 5454 18a1 33       		.uleb128 0x33
 5455 18a2 E8090000 		.4byte	.LASF159
 5456 18a6 E8090000 		.4byte	.LASF159
 5457 18aa 32       		.uleb128 0x32
 5458 18ab 0F0A0000 		.4byte	.LASF139
 5459 18af 0F0A0000 		.4byte	.LASF139
 5460 18b3 07       		.byte	0x7
 5461 18b4 A508     		.2byte	0x8a5
 5462 18b6 32       		.uleb128 0x32
 5463 18b7 56080000 		.4byte	.LASF140
 5464 18bb 56080000 		.4byte	.LASF140
 5465 18bf 07       		.byte	0x7
 5466 18c0 CC08     		.2byte	0x8cc
 5467 18c2 32       		.uleb128 0x32
 5468 18c3 F5080000 		.4byte	.LASF141
 5469 18c7 F5080000 		.4byte	.LASF141
 5470 18cb 06       		.byte	0x6
 5471 18cc 5801     		.2byte	0x158
 5472 18ce 31       		.uleb128 0x31
 5473 18cf BE020000 		.4byte	.LASF142
 5474 18d3 BE020000 		.4byte	.LASF142
 5475 18d7 0A       		.byte	0xa
 5476 18d8 81       		.byte	0x81
 5477 18d9 32       		.uleb128 0x32
 5478 18da 45060000 		.4byte	.LASF143
 5479 18de 45060000 		.4byte	.LASF143
 5480 18e2 07       		.byte	0x7
 5481 18e3 1909     		.2byte	0x919
 5482 18e5 32       		.uleb128 0x32
 5483 18e6 CB020000 		.4byte	.LASF144
 5484 18ea CB020000 		.4byte	.LASF144
 5485 18ee 07       		.byte	0x7
 5486 18ef F904     		.2byte	0x4f9
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 155


 5487 18f1 32       		.uleb128 0x32
 5488 18f2 DD070000 		.4byte	.LASF145
 5489 18f6 DD070000 		.4byte	.LASF145
 5490 18fa 07       		.byte	0x7
 5491 18fb C608     		.2byte	0x8c6
 5492 18fd 32       		.uleb128 0x32
 5493 18fe 0A040000 		.4byte	.LASF146
 5494 1902 0A040000 		.4byte	.LASF146
 5495 1906 07       		.byte	0x7
 5496 1907 7D08     		.2byte	0x87d
 5497 1909 32       		.uleb128 0x32
 5498 190a C0070000 		.4byte	.LASF147
 5499 190e C0070000 		.4byte	.LASF147
 5500 1912 07       		.byte	0x7
 5501 1913 2F05     		.2byte	0x52f
 5502 1915 32       		.uleb128 0x32
 5503 1916 53090000 		.4byte	.LASF148
 5504 191a 53090000 		.4byte	.LASF148
 5505 191e 07       		.byte	0x7
 5506 191f BB08     		.2byte	0x8bb
 5507 1921 32       		.uleb128 0x32
 5508 1922 20040000 		.4byte	.LASF149
 5509 1926 20040000 		.4byte	.LASF149
 5510 192a 07       		.byte	0x7
 5511 192b 1309     		.2byte	0x913
 5512 192d 32       		.uleb128 0x32
 5513 192e 1A090000 		.4byte	.LASF150
 5514 1932 1A090000 		.4byte	.LASF150
 5515 1936 07       		.byte	0x7
 5516 1937 E808     		.2byte	0x8e8
 5517 1939 32       		.uleb128 0x32
 5518 193a 79080000 		.4byte	.LASF151
 5519 193e 79080000 		.4byte	.LASF151
 5520 1942 07       		.byte	0x7
 5521 1943 D808     		.2byte	0x8d8
 5522 1945 31       		.uleb128 0x31
 5523 1946 F2070000 		.4byte	.LASF152
 5524 194a F2070000 		.4byte	.LASF152
 5525 194e 0A       		.byte	0xa
 5526 194f 82       		.byte	0x82
 5527 1950 00       		.byte	0
 5528              		.section	.debug_abbrev,"",%progbits
 5529              	.Ldebug_abbrev0:
 5530 0000 01       		.uleb128 0x1
 5531 0001 11       		.uleb128 0x11
 5532 0002 01       		.byte	0x1
 5533 0003 25       		.uleb128 0x25
 5534 0004 0E       		.uleb128 0xe
 5535 0005 13       		.uleb128 0x13
 5536 0006 0B       		.uleb128 0xb
 5537 0007 03       		.uleb128 0x3
 5538 0008 0E       		.uleb128 0xe
 5539 0009 1B       		.uleb128 0x1b
 5540 000a 0E       		.uleb128 0xe
 5541 000b 55       		.uleb128 0x55
 5542 000c 17       		.uleb128 0x17
 5543 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 156


 5544 000e 01       		.uleb128 0x1
 5545 000f 10       		.uleb128 0x10
 5546 0010 17       		.uleb128 0x17
 5547 0011 00       		.byte	0
 5548 0012 00       		.byte	0
 5549 0013 02       		.uleb128 0x2
 5550 0014 16       		.uleb128 0x16
 5551 0015 00       		.byte	0
 5552 0016 03       		.uleb128 0x3
 5553 0017 0E       		.uleb128 0xe
 5554 0018 3A       		.uleb128 0x3a
 5555 0019 0B       		.uleb128 0xb
 5556 001a 3B       		.uleb128 0x3b
 5557 001b 0B       		.uleb128 0xb
 5558 001c 49       		.uleb128 0x49
 5559 001d 13       		.uleb128 0x13
 5560 001e 00       		.byte	0
 5561 001f 00       		.byte	0
 5562 0020 03       		.uleb128 0x3
 5563 0021 24       		.uleb128 0x24
 5564 0022 00       		.byte	0
 5565 0023 0B       		.uleb128 0xb
 5566 0024 0B       		.uleb128 0xb
 5567 0025 3E       		.uleb128 0x3e
 5568 0026 0B       		.uleb128 0xb
 5569 0027 03       		.uleb128 0x3
 5570 0028 0E       		.uleb128 0xe
 5571 0029 00       		.byte	0
 5572 002a 00       		.byte	0
 5573 002b 04       		.uleb128 0x4
 5574 002c 24       		.uleb128 0x24
 5575 002d 00       		.byte	0
 5576 002e 0B       		.uleb128 0xb
 5577 002f 0B       		.uleb128 0xb
 5578 0030 3E       		.uleb128 0x3e
 5579 0031 0B       		.uleb128 0xb
 5580 0032 03       		.uleb128 0x3
 5581 0033 08       		.uleb128 0x8
 5582 0034 00       		.byte	0
 5583 0035 00       		.byte	0
 5584 0036 05       		.uleb128 0x5
 5585 0037 0F       		.uleb128 0xf
 5586 0038 00       		.byte	0
 5587 0039 0B       		.uleb128 0xb
 5588 003a 0B       		.uleb128 0xb
 5589 003b 00       		.byte	0
 5590 003c 00       		.byte	0
 5591 003d 06       		.uleb128 0x6
 5592 003e 0F       		.uleb128 0xf
 5593 003f 00       		.byte	0
 5594 0040 0B       		.uleb128 0xb
 5595 0041 0B       		.uleb128 0xb
 5596 0042 49       		.uleb128 0x49
 5597 0043 13       		.uleb128 0x13
 5598 0044 00       		.byte	0
 5599 0045 00       		.byte	0
 5600 0046 07       		.uleb128 0x7
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 157


 5601 0047 26       		.uleb128 0x26
 5602 0048 00       		.byte	0
 5603 0049 49       		.uleb128 0x49
 5604 004a 13       		.uleb128 0x13
 5605 004b 00       		.byte	0
 5606 004c 00       		.byte	0
 5607 004d 08       		.uleb128 0x8
 5608 004e 26       		.uleb128 0x26
 5609 004f 00       		.byte	0
 5610 0050 00       		.byte	0
 5611 0051 00       		.byte	0
 5612 0052 09       		.uleb128 0x9
 5613 0053 13       		.uleb128 0x13
 5614 0054 01       		.byte	0x1
 5615 0055 03       		.uleb128 0x3
 5616 0056 0E       		.uleb128 0xe
 5617 0057 0B       		.uleb128 0xb
 5618 0058 0B       		.uleb128 0xb
 5619 0059 3A       		.uleb128 0x3a
 5620 005a 0B       		.uleb128 0xb
 5621 005b 3B       		.uleb128 0x3b
 5622 005c 0B       		.uleb128 0xb
 5623 005d 01       		.uleb128 0x1
 5624 005e 13       		.uleb128 0x13
 5625 005f 00       		.byte	0
 5626 0060 00       		.byte	0
 5627 0061 0A       		.uleb128 0xa
 5628 0062 0D       		.uleb128 0xd
 5629 0063 00       		.byte	0
 5630 0064 03       		.uleb128 0x3
 5631 0065 0E       		.uleb128 0xe
 5632 0066 3A       		.uleb128 0x3a
 5633 0067 0B       		.uleb128 0xb
 5634 0068 3B       		.uleb128 0x3b
 5635 0069 0B       		.uleb128 0xb
 5636 006a 49       		.uleb128 0x49
 5637 006b 13       		.uleb128 0x13
 5638 006c 38       		.uleb128 0x38
 5639 006d 0B       		.uleb128 0xb
 5640 006e 00       		.byte	0
 5641 006f 00       		.byte	0
 5642 0070 0B       		.uleb128 0xb
 5643 0071 35       		.uleb128 0x35
 5644 0072 00       		.byte	0
 5645 0073 49       		.uleb128 0x49
 5646 0074 13       		.uleb128 0x13
 5647 0075 00       		.byte	0
 5648 0076 00       		.byte	0
 5649 0077 0C       		.uleb128 0xc
 5650 0078 17       		.uleb128 0x17
 5651 0079 01       		.byte	0x1
 5652 007a 0B       		.uleb128 0xb
 5653 007b 0B       		.uleb128 0xb
 5654 007c 3A       		.uleb128 0x3a
 5655 007d 0B       		.uleb128 0xb
 5656 007e 3B       		.uleb128 0x3b
 5657 007f 0B       		.uleb128 0xb
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 158


 5658 0080 01       		.uleb128 0x1
 5659 0081 13       		.uleb128 0x13
 5660 0082 00       		.byte	0
 5661 0083 00       		.byte	0
 5662 0084 0D       		.uleb128 0xd
 5663 0085 0D       		.uleb128 0xd
 5664 0086 00       		.byte	0
 5665 0087 03       		.uleb128 0x3
 5666 0088 0E       		.uleb128 0xe
 5667 0089 3A       		.uleb128 0x3a
 5668 008a 0B       		.uleb128 0xb
 5669 008b 3B       		.uleb128 0x3b
 5670 008c 0B       		.uleb128 0xb
 5671 008d 49       		.uleb128 0x49
 5672 008e 13       		.uleb128 0x13
 5673 008f 00       		.byte	0
 5674 0090 00       		.byte	0
 5675 0091 0E       		.uleb128 0xe
 5676 0092 0D       		.uleb128 0xd
 5677 0093 00       		.byte	0
 5678 0094 03       		.uleb128 0x3
 5679 0095 08       		.uleb128 0x8
 5680 0096 3A       		.uleb128 0x3a
 5681 0097 0B       		.uleb128 0xb
 5682 0098 3B       		.uleb128 0x3b
 5683 0099 0B       		.uleb128 0xb
 5684 009a 49       		.uleb128 0x49
 5685 009b 13       		.uleb128 0x13
 5686 009c 38       		.uleb128 0x38
 5687 009d 0B       		.uleb128 0xb
 5688 009e 00       		.byte	0
 5689 009f 00       		.byte	0
 5690 00a0 0F       		.uleb128 0xf
 5691 00a1 2E       		.uleb128 0x2e
 5692 00a2 01       		.byte	0x1
 5693 00a3 03       		.uleb128 0x3
 5694 00a4 0E       		.uleb128 0xe
 5695 00a5 3A       		.uleb128 0x3a
 5696 00a6 0B       		.uleb128 0xb
 5697 00a7 3B       		.uleb128 0x3b
 5698 00a8 0B       		.uleb128 0xb
 5699 00a9 27       		.uleb128 0x27
 5700 00aa 19       		.uleb128 0x19
 5701 00ab 49       		.uleb128 0x49
 5702 00ac 13       		.uleb128 0x13
 5703 00ad 20       		.uleb128 0x20
 5704 00ae 0B       		.uleb128 0xb
 5705 00af 01       		.uleb128 0x1
 5706 00b0 13       		.uleb128 0x13
 5707 00b1 00       		.byte	0
 5708 00b2 00       		.byte	0
 5709 00b3 10       		.uleb128 0x10
 5710 00b4 34       		.uleb128 0x34
 5711 00b5 00       		.byte	0
 5712 00b6 03       		.uleb128 0x3
 5713 00b7 0E       		.uleb128 0xe
 5714 00b8 3A       		.uleb128 0x3a
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 159


 5715 00b9 0B       		.uleb128 0xb
 5716 00ba 3B       		.uleb128 0x3b
 5717 00bb 0B       		.uleb128 0xb
 5718 00bc 49       		.uleb128 0x49
 5719 00bd 13       		.uleb128 0x13
 5720 00be 00       		.byte	0
 5721 00bf 00       		.byte	0
 5722 00c0 11       		.uleb128 0x11
 5723 00c1 2E       		.uleb128 0x2e
 5724 00c2 01       		.byte	0x1
 5725 00c3 03       		.uleb128 0x3
 5726 00c4 0E       		.uleb128 0xe
 5727 00c5 3A       		.uleb128 0x3a
 5728 00c6 0B       		.uleb128 0xb
 5729 00c7 3B       		.uleb128 0x3b
 5730 00c8 0B       		.uleb128 0xb
 5731 00c9 27       		.uleb128 0x27
 5732 00ca 19       		.uleb128 0x19
 5733 00cb 20       		.uleb128 0x20
 5734 00cc 0B       		.uleb128 0xb
 5735 00cd 01       		.uleb128 0x1
 5736 00ce 13       		.uleb128 0x13
 5737 00cf 00       		.byte	0
 5738 00d0 00       		.byte	0
 5739 00d1 12       		.uleb128 0x12
 5740 00d2 05       		.uleb128 0x5
 5741 00d3 00       		.byte	0
 5742 00d4 03       		.uleb128 0x3
 5743 00d5 0E       		.uleb128 0xe
 5744 00d6 3A       		.uleb128 0x3a
 5745 00d7 0B       		.uleb128 0xb
 5746 00d8 3B       		.uleb128 0x3b
 5747 00d9 0B       		.uleb128 0xb
 5748 00da 49       		.uleb128 0x49
 5749 00db 13       		.uleb128 0x13
 5750 00dc 00       		.byte	0
 5751 00dd 00       		.byte	0
 5752 00de 13       		.uleb128 0x13
 5753 00df 2E       		.uleb128 0x2e
 5754 00e0 01       		.byte	0x1
 5755 00e1 03       		.uleb128 0x3
 5756 00e2 0E       		.uleb128 0xe
 5757 00e3 3A       		.uleb128 0x3a
 5758 00e4 0B       		.uleb128 0xb
 5759 00e5 3B       		.uleb128 0x3b
 5760 00e6 05       		.uleb128 0x5
 5761 00e7 27       		.uleb128 0x27
 5762 00e8 19       		.uleb128 0x19
 5763 00e9 49       		.uleb128 0x49
 5764 00ea 13       		.uleb128 0x13
 5765 00eb 11       		.uleb128 0x11
 5766 00ec 01       		.uleb128 0x1
 5767 00ed 12       		.uleb128 0x12
 5768 00ee 06       		.uleb128 0x6
 5769 00ef 40       		.uleb128 0x40
 5770 00f0 18       		.uleb128 0x18
 5771 00f1 9742     		.uleb128 0x2117
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 160


 5772 00f3 19       		.uleb128 0x19
 5773 00f4 01       		.uleb128 0x1
 5774 00f5 13       		.uleb128 0x13
 5775 00f6 00       		.byte	0
 5776 00f7 00       		.byte	0
 5777 00f8 14       		.uleb128 0x14
 5778 00f9 05       		.uleb128 0x5
 5779 00fa 00       		.byte	0
 5780 00fb 03       		.uleb128 0x3
 5781 00fc 0E       		.uleb128 0xe
 5782 00fd 3A       		.uleb128 0x3a
 5783 00fe 0B       		.uleb128 0xb
 5784 00ff 3B       		.uleb128 0x3b
 5785 0100 05       		.uleb128 0x5
 5786 0101 49       		.uleb128 0x49
 5787 0102 13       		.uleb128 0x13
 5788 0103 02       		.uleb128 0x2
 5789 0104 17       		.uleb128 0x17
 5790 0105 00       		.byte	0
 5791 0106 00       		.byte	0
 5792 0107 15       		.uleb128 0x15
 5793 0108 34       		.uleb128 0x34
 5794 0109 00       		.byte	0
 5795 010a 03       		.uleb128 0x3
 5796 010b 0E       		.uleb128 0xe
 5797 010c 3A       		.uleb128 0x3a
 5798 010d 0B       		.uleb128 0xb
 5799 010e 3B       		.uleb128 0x3b
 5800 010f 05       		.uleb128 0x5
 5801 0110 49       		.uleb128 0x49
 5802 0111 13       		.uleb128 0x13
 5803 0112 02       		.uleb128 0x2
 5804 0113 17       		.uleb128 0x17
 5805 0114 00       		.byte	0
 5806 0115 00       		.byte	0
 5807 0116 16       		.uleb128 0x16
 5808 0117 34       		.uleb128 0x34
 5809 0118 00       		.byte	0
 5810 0119 03       		.uleb128 0x3
 5811 011a 0E       		.uleb128 0xe
 5812 011b 3A       		.uleb128 0x3a
 5813 011c 0B       		.uleb128 0xb
 5814 011d 3B       		.uleb128 0x3b
 5815 011e 05       		.uleb128 0x5
 5816 011f 49       		.uleb128 0x49
 5817 0120 13       		.uleb128 0x13
 5818 0121 02       		.uleb128 0x2
 5819 0122 18       		.uleb128 0x18
 5820 0123 00       		.byte	0
 5821 0124 00       		.byte	0
 5822 0125 17       		.uleb128 0x17
 5823 0126 898201   		.uleb128 0x4109
 5824 0129 00       		.byte	0
 5825 012a 11       		.uleb128 0x11
 5826 012b 01       		.uleb128 0x1
 5827 012c 31       		.uleb128 0x31
 5828 012d 13       		.uleb128 0x13
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 161


 5829 012e 00       		.byte	0
 5830 012f 00       		.byte	0
 5831 0130 18       		.uleb128 0x18
 5832 0131 2E       		.uleb128 0x2e
 5833 0132 01       		.byte	0x1
 5834 0133 03       		.uleb128 0x3
 5835 0134 0E       		.uleb128 0xe
 5836 0135 3A       		.uleb128 0x3a
 5837 0136 0B       		.uleb128 0xb
 5838 0137 3B       		.uleb128 0x3b
 5839 0138 05       		.uleb128 0x5
 5840 0139 27       		.uleb128 0x27
 5841 013a 19       		.uleb128 0x19
 5842 013b 11       		.uleb128 0x11
 5843 013c 01       		.uleb128 0x1
 5844 013d 12       		.uleb128 0x12
 5845 013e 06       		.uleb128 0x6
 5846 013f 40       		.uleb128 0x40
 5847 0140 18       		.uleb128 0x18
 5848 0141 9742     		.uleb128 0x2117
 5849 0143 19       		.uleb128 0x19
 5850 0144 01       		.uleb128 0x1
 5851 0145 13       		.uleb128 0x13
 5852 0146 00       		.byte	0
 5853 0147 00       		.byte	0
 5854 0148 19       		.uleb128 0x19
 5855 0149 898201   		.uleb128 0x4109
 5856 014c 01       		.byte	0x1
 5857 014d 11       		.uleb128 0x11
 5858 014e 01       		.uleb128 0x1
 5859 014f 31       		.uleb128 0x31
 5860 0150 13       		.uleb128 0x13
 5861 0151 00       		.byte	0
 5862 0152 00       		.byte	0
 5863 0153 1A       		.uleb128 0x1a
 5864 0154 8A8201   		.uleb128 0x410a
 5865 0157 00       		.byte	0
 5866 0158 02       		.uleb128 0x2
 5867 0159 18       		.uleb128 0x18
 5868 015a 9142     		.uleb128 0x2111
 5869 015c 18       		.uleb128 0x18
 5870 015d 00       		.byte	0
 5871 015e 00       		.byte	0
 5872 015f 1B       		.uleb128 0x1b
 5873 0160 0B       		.uleb128 0xb
 5874 0161 01       		.byte	0x1
 5875 0162 11       		.uleb128 0x11
 5876 0163 01       		.uleb128 0x1
 5877 0164 12       		.uleb128 0x12
 5878 0165 06       		.uleb128 0x6
 5879 0166 01       		.uleb128 0x1
 5880 0167 13       		.uleb128 0x13
 5881 0168 00       		.byte	0
 5882 0169 00       		.byte	0
 5883 016a 1C       		.uleb128 0x1c
 5884 016b 898201   		.uleb128 0x4109
 5885 016e 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 162


 5886 016f 11       		.uleb128 0x11
 5887 0170 01       		.uleb128 0x1
 5888 0171 31       		.uleb128 0x31
 5889 0172 13       		.uleb128 0x13
 5890 0173 01       		.uleb128 0x1
 5891 0174 13       		.uleb128 0x13
 5892 0175 00       		.byte	0
 5893 0176 00       		.byte	0
 5894 0177 1D       		.uleb128 0x1d
 5895 0178 2E       		.uleb128 0x2e
 5896 0179 01       		.byte	0x1
 5897 017a 3F       		.uleb128 0x3f
 5898 017b 19       		.uleb128 0x19
 5899 017c 03       		.uleb128 0x3
 5900 017d 0E       		.uleb128 0xe
 5901 017e 3A       		.uleb128 0x3a
 5902 017f 0B       		.uleb128 0xb
 5903 0180 3B       		.uleb128 0x3b
 5904 0181 0B       		.uleb128 0xb
 5905 0182 27       		.uleb128 0x27
 5906 0183 19       		.uleb128 0x19
 5907 0184 49       		.uleb128 0x49
 5908 0185 13       		.uleb128 0x13
 5909 0186 11       		.uleb128 0x11
 5910 0187 01       		.uleb128 0x1
 5911 0188 12       		.uleb128 0x12
 5912 0189 06       		.uleb128 0x6
 5913 018a 40       		.uleb128 0x40
 5914 018b 18       		.uleb128 0x18
 5915 018c 9742     		.uleb128 0x2117
 5916 018e 19       		.uleb128 0x19
 5917 018f 01       		.uleb128 0x1
 5918 0190 13       		.uleb128 0x13
 5919 0191 00       		.byte	0
 5920 0192 00       		.byte	0
 5921 0193 1E       		.uleb128 0x1e
 5922 0194 05       		.uleb128 0x5
 5923 0195 00       		.byte	0
 5924 0196 03       		.uleb128 0x3
 5925 0197 0E       		.uleb128 0xe
 5926 0198 3A       		.uleb128 0x3a
 5927 0199 0B       		.uleb128 0xb
 5928 019a 3B       		.uleb128 0x3b
 5929 019b 0B       		.uleb128 0xb
 5930 019c 49       		.uleb128 0x49
 5931 019d 13       		.uleb128 0x13
 5932 019e 02       		.uleb128 0x2
 5933 019f 17       		.uleb128 0x17
 5934 01a0 00       		.byte	0
 5935 01a1 00       		.byte	0
 5936 01a2 1F       		.uleb128 0x1f
 5937 01a3 34       		.uleb128 0x34
 5938 01a4 00       		.byte	0
 5939 01a5 03       		.uleb128 0x3
 5940 01a6 0E       		.uleb128 0xe
 5941 01a7 3A       		.uleb128 0x3a
 5942 01a8 0B       		.uleb128 0xb
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 163


 5943 01a9 3B       		.uleb128 0x3b
 5944 01aa 0B       		.uleb128 0xb
 5945 01ab 49       		.uleb128 0x49
 5946 01ac 13       		.uleb128 0x13
 5947 01ad 02       		.uleb128 0x2
 5948 01ae 17       		.uleb128 0x17
 5949 01af 00       		.byte	0
 5950 01b0 00       		.byte	0
 5951 01b1 20       		.uleb128 0x20
 5952 01b2 05       		.uleb128 0x5
 5953 01b3 00       		.byte	0
 5954 01b4 03       		.uleb128 0x3
 5955 01b5 0E       		.uleb128 0xe
 5956 01b6 3A       		.uleb128 0x3a
 5957 01b7 0B       		.uleb128 0xb
 5958 01b8 3B       		.uleb128 0x3b
 5959 01b9 05       		.uleb128 0x5
 5960 01ba 49       		.uleb128 0x49
 5961 01bb 13       		.uleb128 0x13
 5962 01bc 02       		.uleb128 0x2
 5963 01bd 18       		.uleb128 0x18
 5964 01be 00       		.byte	0
 5965 01bf 00       		.byte	0
 5966 01c0 21       		.uleb128 0x21
 5967 01c1 2E       		.uleb128 0x2e
 5968 01c2 01       		.byte	0x1
 5969 01c3 3F       		.uleb128 0x3f
 5970 01c4 19       		.uleb128 0x19
 5971 01c5 03       		.uleb128 0x3
 5972 01c6 0E       		.uleb128 0xe
 5973 01c7 3A       		.uleb128 0x3a
 5974 01c8 0B       		.uleb128 0xb
 5975 01c9 3B       		.uleb128 0x3b
 5976 01ca 05       		.uleb128 0x5
 5977 01cb 27       		.uleb128 0x27
 5978 01cc 19       		.uleb128 0x19
 5979 01cd 49       		.uleb128 0x49
 5980 01ce 13       		.uleb128 0x13
 5981 01cf 11       		.uleb128 0x11
 5982 01d0 01       		.uleb128 0x1
 5983 01d1 12       		.uleb128 0x12
 5984 01d2 06       		.uleb128 0x6
 5985 01d3 40       		.uleb128 0x40
 5986 01d4 18       		.uleb128 0x18
 5987 01d5 9742     		.uleb128 0x2117
 5988 01d7 19       		.uleb128 0x19
 5989 01d8 01       		.uleb128 0x1
 5990 01d9 13       		.uleb128 0x13
 5991 01da 00       		.byte	0
 5992 01db 00       		.byte	0
 5993 01dc 22       		.uleb128 0x22
 5994 01dd 34       		.uleb128 0x34
 5995 01de 00       		.byte	0
 5996 01df 03       		.uleb128 0x3
 5997 01e0 0E       		.uleb128 0xe
 5998 01e1 3A       		.uleb128 0x3a
 5999 01e2 0B       		.uleb128 0xb
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 164


 6000 01e3 3B       		.uleb128 0x3b
 6001 01e4 05       		.uleb128 0x5
 6002 01e5 49       		.uleb128 0x49
 6003 01e6 13       		.uleb128 0x13
 6004 01e7 1C       		.uleb128 0x1c
 6005 01e8 0B       		.uleb128 0xb
 6006 01e9 00       		.byte	0
 6007 01ea 00       		.byte	0
 6008 01eb 23       		.uleb128 0x23
 6009 01ec 34       		.uleb128 0x34
 6010 01ed 00       		.byte	0
 6011 01ee 03       		.uleb128 0x3
 6012 01ef 0E       		.uleb128 0xe
 6013 01f0 3A       		.uleb128 0x3a
 6014 01f1 0B       		.uleb128 0xb
 6015 01f2 3B       		.uleb128 0x3b
 6016 01f3 05       		.uleb128 0x5
 6017 01f4 49       		.uleb128 0x49
 6018 01f5 13       		.uleb128 0x13
 6019 01f6 00       		.byte	0
 6020 01f7 00       		.byte	0
 6021 01f8 24       		.uleb128 0x24
 6022 01f9 1D       		.uleb128 0x1d
 6023 01fa 01       		.byte	0x1
 6024 01fb 31       		.uleb128 0x31
 6025 01fc 13       		.uleb128 0x13
 6026 01fd 11       		.uleb128 0x11
 6027 01fe 01       		.uleb128 0x1
 6028 01ff 12       		.uleb128 0x12
 6029 0200 06       		.uleb128 0x6
 6030 0201 58       		.uleb128 0x58
 6031 0202 0B       		.uleb128 0xb
 6032 0203 59       		.uleb128 0x59
 6033 0204 05       		.uleb128 0x5
 6034 0205 01       		.uleb128 0x1
 6035 0206 13       		.uleb128 0x13
 6036 0207 00       		.byte	0
 6037 0208 00       		.byte	0
 6038 0209 25       		.uleb128 0x25
 6039 020a 0B       		.uleb128 0xb
 6040 020b 01       		.byte	0x1
 6041 020c 11       		.uleb128 0x11
 6042 020d 01       		.uleb128 0x1
 6043 020e 12       		.uleb128 0x12
 6044 020f 06       		.uleb128 0x6
 6045 0210 00       		.byte	0
 6046 0211 00       		.byte	0
 6047 0212 26       		.uleb128 0x26
 6048 0213 34       		.uleb128 0x34
 6049 0214 00       		.byte	0
 6050 0215 31       		.uleb128 0x31
 6051 0216 13       		.uleb128 0x13
 6052 0217 00       		.byte	0
 6053 0218 00       		.byte	0
 6054 0219 27       		.uleb128 0x27
 6055 021a 0B       		.uleb128 0xb
 6056 021b 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 165


 6057 021c 55       		.uleb128 0x55
 6058 021d 17       		.uleb128 0x17
 6059 021e 01       		.uleb128 0x1
 6060 021f 13       		.uleb128 0x13
 6061 0220 00       		.byte	0
 6062 0221 00       		.byte	0
 6063 0222 28       		.uleb128 0x28
 6064 0223 1D       		.uleb128 0x1d
 6065 0224 01       		.byte	0x1
 6066 0225 31       		.uleb128 0x31
 6067 0226 13       		.uleb128 0x13
 6068 0227 11       		.uleb128 0x11
 6069 0228 01       		.uleb128 0x1
 6070 0229 12       		.uleb128 0x12
 6071 022a 06       		.uleb128 0x6
 6072 022b 58       		.uleb128 0x58
 6073 022c 0B       		.uleb128 0xb
 6074 022d 59       		.uleb128 0x59
 6075 022e 05       		.uleb128 0x5
 6076 022f 00       		.byte	0
 6077 0230 00       		.byte	0
 6078 0231 29       		.uleb128 0x29
 6079 0232 05       		.uleb128 0x5
 6080 0233 00       		.byte	0
 6081 0234 31       		.uleb128 0x31
 6082 0235 13       		.uleb128 0x13
 6083 0236 02       		.uleb128 0x2
 6084 0237 17       		.uleb128 0x17
 6085 0238 00       		.byte	0
 6086 0239 00       		.byte	0
 6087 023a 2A       		.uleb128 0x2a
 6088 023b 0B       		.uleb128 0xb
 6089 023c 01       		.byte	0x1
 6090 023d 55       		.uleb128 0x55
 6091 023e 17       		.uleb128 0x17
 6092 023f 00       		.byte	0
 6093 0240 00       		.byte	0
 6094 0241 2B       		.uleb128 0x2b
 6095 0242 2E       		.uleb128 0x2e
 6096 0243 01       		.byte	0x1
 6097 0244 3F       		.uleb128 0x3f
 6098 0245 19       		.uleb128 0x19
 6099 0246 03       		.uleb128 0x3
 6100 0247 0E       		.uleb128 0xe
 6101 0248 3A       		.uleb128 0x3a
 6102 0249 0B       		.uleb128 0xb
 6103 024a 3B       		.uleb128 0x3b
 6104 024b 05       		.uleb128 0x5
 6105 024c 27       		.uleb128 0x27
 6106 024d 19       		.uleb128 0x19
 6107 024e 11       		.uleb128 0x11
 6108 024f 01       		.uleb128 0x1
 6109 0250 12       		.uleb128 0x12
 6110 0251 06       		.uleb128 0x6
 6111 0252 40       		.uleb128 0x40
 6112 0253 18       		.uleb128 0x18
 6113 0254 9742     		.uleb128 0x2117
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 166


 6114 0256 19       		.uleb128 0x19
 6115 0257 01       		.uleb128 0x1
 6116 0258 13       		.uleb128 0x13
 6117 0259 00       		.byte	0
 6118 025a 00       		.byte	0
 6119 025b 2C       		.uleb128 0x2c
 6120 025c 34       		.uleb128 0x34
 6121 025d 00       		.byte	0
 6122 025e 03       		.uleb128 0x3
 6123 025f 08       		.uleb128 0x8
 6124 0260 3A       		.uleb128 0x3a
 6125 0261 0B       		.uleb128 0xb
 6126 0262 3B       		.uleb128 0x3b
 6127 0263 05       		.uleb128 0x5
 6128 0264 49       		.uleb128 0x49
 6129 0265 13       		.uleb128 0x13
 6130 0266 02       		.uleb128 0x2
 6131 0267 17       		.uleb128 0x17
 6132 0268 00       		.byte	0
 6133 0269 00       		.byte	0
 6134 026a 2D       		.uleb128 0x2d
 6135 026b 34       		.uleb128 0x34
 6136 026c 00       		.byte	0
 6137 026d 03       		.uleb128 0x3
 6138 026e 0E       		.uleb128 0xe
 6139 026f 3A       		.uleb128 0x3a
 6140 0270 0B       		.uleb128 0xb
 6141 0271 3B       		.uleb128 0x3b
 6142 0272 05       		.uleb128 0x5
 6143 0273 49       		.uleb128 0x49
 6144 0274 13       		.uleb128 0x13
 6145 0275 3F       		.uleb128 0x3f
 6146 0276 19       		.uleb128 0x19
 6147 0277 3C       		.uleb128 0x3c
 6148 0278 19       		.uleb128 0x19
 6149 0279 00       		.byte	0
 6150 027a 00       		.byte	0
 6151 027b 2E       		.uleb128 0x2e
 6152 027c 01       		.uleb128 0x1
 6153 027d 01       		.byte	0x1
 6154 027e 49       		.uleb128 0x49
 6155 027f 13       		.uleb128 0x13
 6156 0280 01       		.uleb128 0x1
 6157 0281 13       		.uleb128 0x13
 6158 0282 00       		.byte	0
 6159 0283 00       		.byte	0
 6160 0284 2F       		.uleb128 0x2f
 6161 0285 21       		.uleb128 0x21
 6162 0286 00       		.byte	0
 6163 0287 49       		.uleb128 0x49
 6164 0288 13       		.uleb128 0x13
 6165 0289 2F       		.uleb128 0x2f
 6166 028a 0B       		.uleb128 0xb
 6167 028b 00       		.byte	0
 6168 028c 00       		.byte	0
 6169 028d 30       		.uleb128 0x30
 6170 028e 34       		.uleb128 0x34
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 167


 6171 028f 00       		.byte	0
 6172 0290 03       		.uleb128 0x3
 6173 0291 0E       		.uleb128 0xe
 6174 0292 3A       		.uleb128 0x3a
 6175 0293 0B       		.uleb128 0xb
 6176 0294 3B       		.uleb128 0x3b
 6177 0295 0B       		.uleb128 0xb
 6178 0296 49       		.uleb128 0x49
 6179 0297 13       		.uleb128 0x13
 6180 0298 3F       		.uleb128 0x3f
 6181 0299 19       		.uleb128 0x19
 6182 029a 02       		.uleb128 0x2
 6183 029b 18       		.uleb128 0x18
 6184 029c 00       		.byte	0
 6185 029d 00       		.byte	0
 6186 029e 31       		.uleb128 0x31
 6187 029f 2E       		.uleb128 0x2e
 6188 02a0 00       		.byte	0
 6189 02a1 3F       		.uleb128 0x3f
 6190 02a2 19       		.uleb128 0x19
 6191 02a3 3C       		.uleb128 0x3c
 6192 02a4 19       		.uleb128 0x19
 6193 02a5 6E       		.uleb128 0x6e
 6194 02a6 0E       		.uleb128 0xe
 6195 02a7 03       		.uleb128 0x3
 6196 02a8 0E       		.uleb128 0xe
 6197 02a9 3A       		.uleb128 0x3a
 6198 02aa 0B       		.uleb128 0xb
 6199 02ab 3B       		.uleb128 0x3b
 6200 02ac 0B       		.uleb128 0xb
 6201 02ad 00       		.byte	0
 6202 02ae 00       		.byte	0
 6203 02af 32       		.uleb128 0x32
 6204 02b0 2E       		.uleb128 0x2e
 6205 02b1 00       		.byte	0
 6206 02b2 3F       		.uleb128 0x3f
 6207 02b3 19       		.uleb128 0x19
 6208 02b4 3C       		.uleb128 0x3c
 6209 02b5 19       		.uleb128 0x19
 6210 02b6 6E       		.uleb128 0x6e
 6211 02b7 0E       		.uleb128 0xe
 6212 02b8 03       		.uleb128 0x3
 6213 02b9 0E       		.uleb128 0xe
 6214 02ba 3A       		.uleb128 0x3a
 6215 02bb 0B       		.uleb128 0xb
 6216 02bc 3B       		.uleb128 0x3b
 6217 02bd 05       		.uleb128 0x5
 6218 02be 00       		.byte	0
 6219 02bf 00       		.byte	0
 6220 02c0 33       		.uleb128 0x33
 6221 02c1 2E       		.uleb128 0x2e
 6222 02c2 00       		.byte	0
 6223 02c3 3F       		.uleb128 0x3f
 6224 02c4 19       		.uleb128 0x19
 6225 02c5 3C       		.uleb128 0x3c
 6226 02c6 19       		.uleb128 0x19
 6227 02c7 6E       		.uleb128 0x6e
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 168


 6228 02c8 0E       		.uleb128 0xe
 6229 02c9 03       		.uleb128 0x3
 6230 02ca 0E       		.uleb128 0xe
 6231 02cb 00       		.byte	0
 6232 02cc 00       		.byte	0
 6233 02cd 00       		.byte	0
 6234              		.section	.debug_loc,"",%progbits
 6235              	.Ldebug_loc0:
 6236              	.LLST0:
 6237 0000 00000000 		.4byte	.LVL0
 6238 0004 08000000 		.4byte	.LVL1
 6239 0008 0100     		.2byte	0x1
 6240 000a 50       		.byte	0x50
 6241 000b 08000000 		.4byte	.LVL1
 6242 000f 0E000000 		.4byte	.LVL3
 6243 0013 0400     		.2byte	0x4
 6244 0015 F3       		.byte	0xf3
 6245 0016 01       		.uleb128 0x1
 6246 0017 50       		.byte	0x50
 6247 0018 9F       		.byte	0x9f
 6248 0019 0E000000 		.4byte	.LVL3
 6249 001d 10000000 		.4byte	.LVL4
 6250 0021 0100     		.2byte	0x1
 6251 0023 50       		.byte	0x50
 6252 0024 10000000 		.4byte	.LVL4
 6253 0028 12000000 		.4byte	.LFE91
 6254 002c 0400     		.2byte	0x4
 6255 002e F3       		.byte	0xf3
 6256 002f 01       		.uleb128 0x1
 6257 0030 50       		.byte	0x50
 6258 0031 9F       		.byte	0x9f
 6259 0032 00000000 		.4byte	0
 6260 0036 00000000 		.4byte	0
 6261              	.LLST1:
 6262 003a 0C000000 		.4byte	.LVL2
 6263 003e 0E000000 		.4byte	.LVL3
 6264 0042 0100     		.2byte	0x1
 6265 0044 50       		.byte	0x50
 6266 0045 10000000 		.4byte	.LVL4
 6267 0049 12000000 		.4byte	.LFE91
 6268 004d 0100     		.2byte	0x1
 6269 004f 50       		.byte	0x50
 6270 0050 00000000 		.4byte	0
 6271 0054 00000000 		.4byte	0
 6272              	.LLST2:
 6273 0058 00000000 		.4byte	.LVL5
 6274 005c 07000000 		.4byte	.LVL6-1
 6275 0060 0100     		.2byte	0x1
 6276 0062 50       		.byte	0x50
 6277 0063 07000000 		.4byte	.LVL6-1
 6278 0067 12000000 		.4byte	.LVL7
 6279 006b 0100     		.2byte	0x1
 6280 006d 54       		.byte	0x54
 6281 006e 12000000 		.4byte	.LVL7
 6282 0072 14000000 		.4byte	.LVL8
 6283 0076 0400     		.2byte	0x4
 6284 0078 F3       		.byte	0xf3
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 169


 6285 0079 01       		.uleb128 0x1
 6286 007a 50       		.byte	0x50
 6287 007b 9F       		.byte	0x9f
 6288 007c 14000000 		.4byte	.LVL8
 6289 0080 16000000 		.4byte	.LVL9
 6290 0084 0100     		.2byte	0x1
 6291 0086 54       		.byte	0x54
 6292 0087 16000000 		.4byte	.LVL9
 6293 008b 1E000000 		.4byte	.LFE97
 6294 008f 0400     		.2byte	0x4
 6295 0091 F3       		.byte	0xf3
 6296 0092 01       		.uleb128 0x1
 6297 0093 50       		.byte	0x50
 6298 0094 9F       		.byte	0x9f
 6299 0095 00000000 		.4byte	0
 6300 0099 00000000 		.4byte	0
 6301              	.LLST3:
 6302 009d 00000000 		.4byte	.LVL11
 6303 00a1 07000000 		.4byte	.LVL12-1
 6304 00a5 0100     		.2byte	0x1
 6305 00a7 50       		.byte	0x50
 6306 00a8 07000000 		.4byte	.LVL12-1
 6307 00ac 0E000000 		.4byte	.LVL13
 6308 00b0 0100     		.2byte	0x1
 6309 00b2 54       		.byte	0x54
 6310 00b3 0E000000 		.4byte	.LVL13
 6311 00b7 10000000 		.4byte	.LVL14
 6312 00bb 0400     		.2byte	0x4
 6313 00bd F3       		.byte	0xf3
 6314 00be 01       		.uleb128 0x1
 6315 00bf 50       		.byte	0x50
 6316 00c0 9F       		.byte	0x9f
 6317 00c1 10000000 		.4byte	.LVL14
 6318 00c5 12000000 		.4byte	.LVL15
 6319 00c9 0100     		.2byte	0x1
 6320 00cb 54       		.byte	0x54
 6321 00cc 12000000 		.4byte	.LVL15
 6322 00d0 1A000000 		.4byte	.LFE95
 6323 00d4 0400     		.2byte	0x4
 6324 00d6 F3       		.byte	0xf3
 6325 00d7 01       		.uleb128 0x1
 6326 00d8 50       		.byte	0x50
 6327 00d9 9F       		.byte	0x9f
 6328 00da 00000000 		.4byte	0
 6329 00de 00000000 		.4byte	0
 6330              	.LLST4:
 6331 00e2 00000000 		.4byte	.LVL17
 6332 00e6 12000000 		.4byte	.LVL21
 6333 00ea 0100     		.2byte	0x1
 6334 00ec 50       		.byte	0x50
 6335 00ed 12000000 		.4byte	.LVL21
 6336 00f1 1C000000 		.4byte	.LVL23
 6337 00f5 0100     		.2byte	0x1
 6338 00f7 54       		.byte	0x54
 6339 00f8 1C000000 		.4byte	.LVL23
 6340 00fc 20000000 		.4byte	.LVL24
 6341 0100 0100     		.2byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 170


 6342 0102 50       		.byte	0x50
 6343 0103 20000000 		.4byte	.LVL24
 6344 0107 3A000000 		.4byte	.LVL26
 6345 010b 0100     		.2byte	0x1
 6346 010d 54       		.byte	0x54
 6347 010e 3A000000 		.4byte	.LVL26
 6348 0112 3C000000 		.4byte	.LVL27
 6349 0116 0100     		.2byte	0x1
 6350 0118 50       		.byte	0x50
 6351 0119 3C000000 		.4byte	.LVL27
 6352 011d 62000000 		.4byte	.LVL30
 6353 0121 0100     		.2byte	0x1
 6354 0123 54       		.byte	0x54
 6355 0124 62000000 		.4byte	.LVL30
 6356 0128 64000000 		.4byte	.LVL31
 6357 012c 0100     		.2byte	0x1
 6358 012e 50       		.byte	0x50
 6359 012f 64000000 		.4byte	.LVL31
 6360 0133 76000000 		.4byte	.LFE92
 6361 0137 0100     		.2byte	0x1
 6362 0139 54       		.byte	0x54
 6363 013a 00000000 		.4byte	0
 6364 013e 00000000 		.4byte	0
 6365              	.LLST5:
 6366 0142 00000000 		.4byte	.LVL17
 6367 0146 15000000 		.4byte	.LVL22-1
 6368 014a 0100     		.2byte	0x1
 6369 014c 51       		.byte	0x51
 6370 014d 15000000 		.4byte	.LVL22-1
 6371 0151 1C000000 		.4byte	.LVL23
 6372 0155 0400     		.2byte	0x4
 6373 0157 F3       		.byte	0xf3
 6374 0158 01       		.uleb128 0x1
 6375 0159 51       		.byte	0x51
 6376 015a 9F       		.byte	0x9f
 6377 015b 1C000000 		.4byte	.LVL23
 6378 015f 23000000 		.4byte	.LVL25-1
 6379 0163 0100     		.2byte	0x1
 6380 0165 51       		.byte	0x51
 6381 0166 23000000 		.4byte	.LVL25-1
 6382 016a 3A000000 		.4byte	.LVL26
 6383 016e 0400     		.2byte	0x4
 6384 0170 F3       		.byte	0xf3
 6385 0171 01       		.uleb128 0x1
 6386 0172 51       		.byte	0x51
 6387 0173 9F       		.byte	0x9f
 6388 0174 3A000000 		.4byte	.LVL26
 6389 0178 3F000000 		.4byte	.LVL28-1
 6390 017c 0100     		.2byte	0x1
 6391 017e 51       		.byte	0x51
 6392 017f 3F000000 		.4byte	.LVL28-1
 6393 0183 62000000 		.4byte	.LVL30
 6394 0187 0400     		.2byte	0x4
 6395 0189 F3       		.byte	0xf3
 6396 018a 01       		.uleb128 0x1
 6397 018b 51       		.byte	0x51
 6398 018c 9F       		.byte	0x9f
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 171


 6399 018d 62000000 		.4byte	.LVL30
 6400 0191 66000000 		.4byte	.LVL32
 6401 0195 0100     		.2byte	0x1
 6402 0197 51       		.byte	0x51
 6403 0198 66000000 		.4byte	.LVL32
 6404 019c 76000000 		.4byte	.LFE92
 6405 01a0 0400     		.2byte	0x4
 6406 01a2 F3       		.byte	0xf3
 6407 01a3 01       		.uleb128 0x1
 6408 01a4 51       		.byte	0x51
 6409 01a5 9F       		.byte	0x9f
 6410 01a6 00000000 		.4byte	0
 6411 01aa 00000000 		.4byte	0
 6412              	.LLST6:
 6413 01ae 00000000 		.4byte	.LVL17
 6414 01b2 0A000000 		.4byte	.LVL20
 6415 01b6 0100     		.2byte	0x1
 6416 01b8 52       		.byte	0x52
 6417 01b9 0A000000 		.4byte	.LVL20
 6418 01bd 76000000 		.4byte	.LFE92
 6419 01c1 0100     		.2byte	0x1
 6420 01c3 56       		.byte	0x56
 6421 01c4 00000000 		.4byte	0
 6422 01c8 00000000 		.4byte	0
 6423              	.LLST7:
 6424 01cc 06000000 		.4byte	.LVL18
 6425 01d0 16000000 		.4byte	.LVL22
 6426 01d4 0200     		.2byte	0x2
 6427 01d6 30       		.byte	0x30
 6428 01d7 9F       		.byte	0x9f
 6429 01d8 16000000 		.4byte	.LVL22
 6430 01dc 1C000000 		.4byte	.LVL23
 6431 01e0 0100     		.2byte	0x1
 6432 01e2 50       		.byte	0x50
 6433 01e3 1C000000 		.4byte	.LVL23
 6434 01e7 70000000 		.4byte	.LVL33
 6435 01eb 0200     		.2byte	0x2
 6436 01ed 30       		.byte	0x30
 6437 01ee 9F       		.byte	0x9f
 6438 01ef 70000000 		.4byte	.LVL33
 6439 01f3 76000000 		.4byte	.LFE92
 6440 01f7 0100     		.2byte	0x1
 6441 01f9 50       		.byte	0x50
 6442 01fa 00000000 		.4byte	0
 6443 01fe 00000000 		.4byte	0
 6444              	.LLST8:
 6445 0202 08000000 		.4byte	.LVL19
 6446 0206 72000000 		.4byte	.LVL34
 6447 020a 0100     		.2byte	0x1
 6448 020c 55       		.byte	0x55
 6449 020d 72000000 		.4byte	.LVL34
 6450 0211 76000000 		.4byte	.LFE92
 6451 0215 0300     		.2byte	0x3
 6452 0217 75       		.byte	0x75
 6453 0218 7F       		.sleb128 -1
 6454 0219 9F       		.byte	0x9f
 6455 021a 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 172


 6456 021e 00000000 		.4byte	0
 6457              	.LLST9:
 6458 0222 00000000 		.4byte	.LVL35
 6459 0226 1C000000 		.4byte	.LVL37
 6460 022a 0100     		.2byte	0x1
 6461 022c 50       		.byte	0x50
 6462 022d 1C000000 		.4byte	.LVL37
 6463 0231 22000000 		.4byte	.LVL39
 6464 0235 0400     		.2byte	0x4
 6465 0237 F3       		.byte	0xf3
 6466 0238 01       		.uleb128 0x1
 6467 0239 50       		.byte	0x50
 6468 023a 9F       		.byte	0x9f
 6469 023b 22000000 		.4byte	.LVL39
 6470 023f 24000000 		.4byte	.LFE93
 6471 0243 0100     		.2byte	0x1
 6472 0245 50       		.byte	0x50
 6473 0246 00000000 		.4byte	0
 6474 024a 00000000 		.4byte	0
 6475              	.LLST10:
 6476 024e 00000000 		.4byte	.LVL35
 6477 0252 1A000000 		.4byte	.LVL36
 6478 0256 0100     		.2byte	0x1
 6479 0258 51       		.byte	0x51
 6480 0259 1A000000 		.4byte	.LVL36
 6481 025d 22000000 		.4byte	.LVL39
 6482 0261 0100     		.2byte	0x1
 6483 0263 54       		.byte	0x54
 6484 0264 22000000 		.4byte	.LVL39
 6485 0268 24000000 		.4byte	.LFE93
 6486 026c 0100     		.2byte	0x1
 6487 026e 51       		.byte	0x51
 6488 026f 00000000 		.4byte	0
 6489 0273 00000000 		.4byte	0
 6490              	.LLST11:
 6491 0277 00000000 		.4byte	.LVL40
 6492 027b 07000000 		.4byte	.LVL41-1
 6493 027f 0100     		.2byte	0x1
 6494 0281 50       		.byte	0x50
 6495 0282 07000000 		.4byte	.LVL41-1
 6496 0286 66000000 		.4byte	.LFE94
 6497 028a 0100     		.2byte	0x1
 6498 028c 55       		.byte	0x55
 6499 028d 00000000 		.4byte	0
 6500 0291 00000000 		.4byte	0
 6501              	.LLST12:
 6502 0295 0E000000 		.4byte	.LVL42
 6503 0299 24000000 		.4byte	.LVL45
 6504 029d 0100     		.2byte	0x1
 6505 029f 54       		.byte	0x54
 6506 02a0 26000000 		.4byte	.LVL46
 6507 02a4 3C000000 		.4byte	.LVL49
 6508 02a8 0100     		.2byte	0x1
 6509 02aa 54       		.byte	0x54
 6510 02ab 00000000 		.4byte	0
 6511 02af 00000000 		.4byte	0
 6512              	.LLST13:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 173


 6513 02b3 3E000000 		.4byte	.LVL50
 6514 02b7 54000000 		.4byte	.LVL53
 6515 02bb 0100     		.2byte	0x1
 6516 02bd 54       		.byte	0x54
 6517 02be 56000000 		.4byte	.LVL54
 6518 02c2 66000000 		.4byte	.LFE94
 6519 02c6 0100     		.2byte	0x1
 6520 02c8 54       		.byte	0x54
 6521 02c9 00000000 		.4byte	0
 6522 02cd 00000000 		.4byte	0
 6523              	.LLST14:
 6524 02d1 00000000 		.4byte	.LVL56
 6525 02d5 09000000 		.4byte	.LVL58-1
 6526 02d9 0100     		.2byte	0x1
 6527 02db 50       		.byte	0x50
 6528 02dc 09000000 		.4byte	.LVL58-1
 6529 02e0 68000000 		.4byte	.LVL63
 6530 02e4 0100     		.2byte	0x1
 6531 02e6 54       		.byte	0x54
 6532 02e7 68000000 		.4byte	.LVL63
 6533 02eb 6C000000 		.4byte	.LFE68
 6534 02ef 0400     		.2byte	0x4
 6535 02f1 F3       		.byte	0xf3
 6536 02f2 01       		.uleb128 0x1
 6537 02f3 50       		.byte	0x50
 6538 02f4 9F       		.byte	0x9f
 6539 02f5 00000000 		.4byte	0
 6540 02f9 00000000 		.4byte	0
 6541              	.LLST15:
 6542 02fd 00000000 		.4byte	.LVL56
 6543 0301 09000000 		.4byte	.LVL58-1
 6544 0305 0100     		.2byte	0x1
 6545 0307 51       		.byte	0x51
 6546 0308 09000000 		.4byte	.LVL58-1
 6547 030c 68000000 		.4byte	.LVL63
 6548 0310 0100     		.2byte	0x1
 6549 0312 55       		.byte	0x55
 6550 0313 68000000 		.4byte	.LVL63
 6551 0317 6C000000 		.4byte	.LFE68
 6552 031b 0400     		.2byte	0x4
 6553 031d F3       		.byte	0xf3
 6554 031e 01       		.uleb128 0x1
 6555 031f 51       		.byte	0x51
 6556 0320 9F       		.byte	0x9f
 6557 0321 00000000 		.4byte	0
 6558 0325 00000000 		.4byte	0
 6559              	.LLST16:
 6560 0329 06000000 		.4byte	.LVL57
 6561 032d 09000000 		.4byte	.LVL58-1
 6562 0331 0100     		.2byte	0x1
 6563 0333 50       		.byte	0x50
 6564 0334 09000000 		.4byte	.LVL58-1
 6565 0338 68000000 		.4byte	.LVL63
 6566 033c 0100     		.2byte	0x1
 6567 033e 54       		.byte	0x54
 6568 033f 68000000 		.4byte	.LVL63
 6569 0343 6C000000 		.4byte	.LFE68
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 174


 6570 0347 0400     		.2byte	0x4
 6571 0349 F3       		.byte	0xf3
 6572 034a 01       		.uleb128 0x1
 6573 034b 50       		.byte	0x50
 6574 034c 9F       		.byte	0x9f
 6575 034d 00000000 		.4byte	0
 6576 0351 00000000 		.4byte	0
 6577              	.LLST17:
 6578 0355 00000000 		.4byte	.LVL64
 6579 0359 18000000 		.4byte	.LVL67
 6580 035d 0100     		.2byte	0x1
 6581 035f 50       		.byte	0x50
 6582 0360 18000000 		.4byte	.LVL67
 6583 0364 1B000000 		.4byte	.LVL68-1
 6584 0368 0200     		.2byte	0x2
 6585 036a 70       		.byte	0x70
 6586 036b 3C       		.sleb128 60
 6587 036c 1B000000 		.4byte	.LVL68-1
 6588 0370 22000000 		.4byte	.LFE70
 6589 0374 0400     		.2byte	0x4
 6590 0376 F3       		.byte	0xf3
 6591 0377 01       		.uleb128 0x1
 6592 0378 50       		.byte	0x50
 6593 0379 9F       		.byte	0x9f
 6594 037a 00000000 		.4byte	0
 6595 037e 00000000 		.4byte	0
 6596              	.LLST18:
 6597 0382 00000000 		.4byte	.LVL64
 6598 0386 16000000 		.4byte	.LVL66
 6599 038a 0100     		.2byte	0x1
 6600 038c 51       		.byte	0x51
 6601 038d 16000000 		.4byte	.LVL66
 6602 0391 1B000000 		.4byte	.LVL68-1
 6603 0395 0100     		.2byte	0x1
 6604 0397 53       		.byte	0x53
 6605 0398 1B000000 		.4byte	.LVL68-1
 6606 039c 22000000 		.4byte	.LFE70
 6607 03a0 0400     		.2byte	0x4
 6608 03a2 F3       		.byte	0xf3
 6609 03a3 01       		.uleb128 0x1
 6610 03a4 51       		.byte	0x51
 6611 03a5 9F       		.byte	0x9f
 6612 03a6 00000000 		.4byte	0
 6613 03aa 00000000 		.4byte	0
 6614              	.LLST19:
 6615 03ae 00000000 		.4byte	.LVL64
 6616 03b2 1B000000 		.4byte	.LVL68-1
 6617 03b6 0100     		.2byte	0x1
 6618 03b8 52       		.byte	0x52
 6619 03b9 1B000000 		.4byte	.LVL68-1
 6620 03bd 22000000 		.4byte	.LFE70
 6621 03c1 0400     		.2byte	0x4
 6622 03c3 F3       		.byte	0xf3
 6623 03c4 01       		.uleb128 0x1
 6624 03c5 52       		.byte	0x52
 6625 03c6 9F       		.byte	0x9f
 6626 03c7 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 175


 6627 03cb 00000000 		.4byte	0
 6628              	.LLST20:
 6629 03cf 00000000 		.4byte	.LVL64
 6630 03d3 08000000 		.4byte	.LVL65
 6631 03d7 0100     		.2byte	0x1
 6632 03d9 53       		.byte	0x53
 6633 03da 08000000 		.4byte	.LVL65
 6634 03de 22000000 		.4byte	.LFE70
 6635 03e2 0400     		.2byte	0x4
 6636 03e4 F3       		.byte	0xf3
 6637 03e5 01       		.uleb128 0x1
 6638 03e6 53       		.byte	0x53
 6639 03e7 9F       		.byte	0x9f
 6640 03e8 00000000 		.4byte	0
 6641 03ec 00000000 		.4byte	0
 6642              	.LLST21:
 6643 03f0 00000000 		.4byte	.LVL69
 6644 03f4 10000000 		.4byte	.LVL70
 6645 03f8 0100     		.2byte	0x1
 6646 03fa 50       		.byte	0x50
 6647 03fb 10000000 		.4byte	.LVL70
 6648 03ff 12000000 		.4byte	.LVL71
 6649 0403 0100     		.2byte	0x1
 6650 0405 55       		.byte	0x55
 6651 0406 12000000 		.4byte	.LVL71
 6652 040a 14000000 		.4byte	.LVL72
 6653 040e 0100     		.2byte	0x1
 6654 0410 50       		.byte	0x50
 6655 0411 14000000 		.4byte	.LVL72
 6656 0415 34000000 		.4byte	.LFE69
 6657 0419 0100     		.2byte	0x1
 6658 041b 55       		.byte	0x55
 6659 041c 00000000 		.4byte	0
 6660 0420 00000000 		.4byte	0
 6661              	.LLST22:
 6662 0424 00000000 		.4byte	.LVL69
 6663 0428 19000000 		.4byte	.LVL74-1
 6664 042c 0100     		.2byte	0x1
 6665 042e 51       		.byte	0x51
 6666 042f 19000000 		.4byte	.LVL74-1
 6667 0433 34000000 		.4byte	.LFE69
 6668 0437 0100     		.2byte	0x1
 6669 0439 56       		.byte	0x56
 6670 043a 00000000 		.4byte	0
 6671 043e 00000000 		.4byte	0
 6672              	.LLST23:
 6673 0442 00000000 		.4byte	.LVL69
 6674 0446 19000000 		.4byte	.LVL74-1
 6675 044a 0100     		.2byte	0x1
 6676 044c 52       		.byte	0x52
 6677 044d 19000000 		.4byte	.LVL74-1
 6678 0451 34000000 		.4byte	.LFE69
 6679 0455 0400     		.2byte	0x4
 6680 0457 F3       		.byte	0xf3
 6681 0458 01       		.uleb128 0x1
 6682 0459 52       		.byte	0x52
 6683 045a 9F       		.byte	0x9f
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 176


 6684 045b 00000000 		.4byte	0
 6685 045f 00000000 		.4byte	0
 6686              	.LLST24:
 6687 0463 1A000000 		.4byte	.LVL74
 6688 0467 2A000000 		.4byte	.LVL77
 6689 046b 0100     		.2byte	0x1
 6690 046d 50       		.byte	0x50
 6691 046e 2A000000 		.4byte	.LVL77
 6692 0472 34000000 		.4byte	.LFE69
 6693 0476 0100     		.2byte	0x1
 6694 0478 54       		.byte	0x54
 6695 0479 00000000 		.4byte	0
 6696 047d 00000000 		.4byte	0
 6697              	.LLST25:
 6698 0481 10000000 		.4byte	.LVL70
 6699 0485 12000000 		.4byte	.LVL71
 6700 0489 0100     		.2byte	0x1
 6701 048b 50       		.byte	0x50
 6702 048c 14000000 		.4byte	.LVL72
 6703 0490 16000000 		.4byte	.LVL73
 6704 0494 0100     		.2byte	0x1
 6705 0496 50       		.byte	0x50
 6706 0497 16000000 		.4byte	.LVL73
 6707 049b 19000000 		.4byte	.LVL74-1
 6708 049f 0400     		.2byte	0x4
 6709 04a1 70       		.byte	0x70
 6710 04a2 B07F     		.sleb128 -80
 6711 04a4 9F       		.byte	0x9f
 6712 04a5 00000000 		.4byte	0
 6713 04a9 00000000 		.4byte	0
 6714              	.LLST26:
 6715 04ad 1E000000 		.4byte	.LVL75
 6716 04b1 26000000 		.4byte	.LVL76
 6717 04b5 0400     		.2byte	0x4
 6718 04b7 70       		.byte	0x70
 6719 04b8 D000     		.sleb128 80
 6720 04ba 9F       		.byte	0x9f
 6721 04bb 26000000 		.4byte	.LVL76
 6722 04bf 2D000000 		.4byte	.LVL78-1
 6723 04c3 0100     		.2byte	0x1
 6724 04c5 52       		.byte	0x52
 6725 04c6 2D000000 		.4byte	.LVL78-1
 6726 04ca 2E000000 		.4byte	.LVL78
 6727 04ce 0400     		.2byte	0x4
 6728 04d0 74       		.byte	0x74
 6729 04d1 D000     		.sleb128 80
 6730 04d3 9F       		.byte	0x9f
 6731 04d4 00000000 		.4byte	0
 6732 04d8 00000000 		.4byte	0
 6733              	.LLST27:
 6734 04dc 00000000 		.4byte	.LVL79
 6735 04e0 0B000000 		.4byte	.LVL81-1
 6736 04e4 0100     		.2byte	0x1
 6737 04e6 50       		.byte	0x50
 6738 04e7 0B000000 		.4byte	.LVL81-1
 6739 04eb 16000000 		.4byte	.LFE75
 6740 04ef 0400     		.2byte	0x4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 177


 6741 04f1 F3       		.byte	0xf3
 6742 04f2 01       		.uleb128 0x1
 6743 04f3 50       		.byte	0x50
 6744 04f4 9F       		.byte	0x9f
 6745 04f5 00000000 		.4byte	0
 6746 04f9 00000000 		.4byte	0
 6747              	.LLST28:
 6748 04fd 00000000 		.4byte	.LVL79
 6749 0501 08000000 		.4byte	.LVL80
 6750 0505 0100     		.2byte	0x1
 6751 0507 51       		.byte	0x51
 6752 0508 08000000 		.4byte	.LVL80
 6753 050c 16000000 		.4byte	.LFE75
 6754 0510 0100     		.2byte	0x1
 6755 0512 54       		.byte	0x54
 6756 0513 00000000 		.4byte	0
 6757 0517 00000000 		.4byte	0
 6758              	.LLST29:
 6759 051b 0C000000 		.4byte	.LVL81
 6760 051f 14000000 		.4byte	.LVL82
 6761 0523 0100     		.2byte	0x1
 6762 0525 50       		.byte	0x50
 6763 0526 14000000 		.4byte	.LVL82
 6764 052a 16000000 		.4byte	.LFE75
 6765 052e 0100     		.2byte	0x1
 6766 0530 53       		.byte	0x53
 6767 0531 00000000 		.4byte	0
 6768 0535 00000000 		.4byte	0
 6769              	.LLST30:
 6770 0539 00000000 		.4byte	.LVL83
 6771 053d 0E000000 		.4byte	.LVL85
 6772 0541 0100     		.2byte	0x1
 6773 0543 50       		.byte	0x50
 6774 0544 0E000000 		.4byte	.LVL85
 6775 0548 04010000 		.4byte	.LVL110
 6776 054c 0100     		.2byte	0x1
 6777 054e 54       		.byte	0x54
 6778 054f 04010000 		.4byte	.LVL110
 6779 0553 08010000 		.4byte	.LFE76
 6780 0557 0400     		.2byte	0x4
 6781 0559 F3       		.byte	0xf3
 6782 055a 01       		.uleb128 0x1
 6783 055b 50       		.byte	0x50
 6784 055c 9F       		.byte	0x9f
 6785 055d 00000000 		.4byte	0
 6786 0561 00000000 		.4byte	0
 6787              	.LLST31:
 6788 0565 00000000 		.4byte	.LVL83
 6789 0569 0E000000 		.4byte	.LVL85
 6790 056d 0100     		.2byte	0x1
 6791 056f 51       		.byte	0x51
 6792 0570 0E000000 		.4byte	.LVL85
 6793 0574 04010000 		.4byte	.LVL110
 6794 0578 0100     		.2byte	0x1
 6795 057a 57       		.byte	0x57
 6796 057b 04010000 		.4byte	.LVL110
 6797 057f 08010000 		.4byte	.LFE76
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 178


 6798 0583 0400     		.2byte	0x4
 6799 0585 F3       		.byte	0xf3
 6800 0586 01       		.uleb128 0x1
 6801 0587 51       		.byte	0x51
 6802 0588 9F       		.byte	0x9f
 6803 0589 00000000 		.4byte	0
 6804 058d 00000000 		.4byte	0
 6805              	.LLST32:
 6806 0591 00000000 		.4byte	.LVL83
 6807 0595 0E000000 		.4byte	.LVL85
 6808 0599 0100     		.2byte	0x1
 6809 059b 52       		.byte	0x52
 6810 059c 0E000000 		.4byte	.LVL85
 6811 05a0 AE000000 		.4byte	.LVL100
 6812 05a4 0200     		.2byte	0x2
 6813 05a6 91       		.byte	0x91
 6814 05a7 5C       		.sleb128 -36
 6815 05a8 AE000000 		.4byte	.LVL100
 6816 05ac B3000000 		.4byte	.LVL101-1
 6817 05b0 0200     		.2byte	0x2
 6818 05b2 71       		.byte	0x71
 6819 05b3 00       		.sleb128 0
 6820 05b4 B3000000 		.4byte	.LVL101-1
 6821 05b8 04010000 		.4byte	.LVL110
 6822 05bc 0200     		.2byte	0x2
 6823 05be 91       		.byte	0x91
 6824 05bf 5C       		.sleb128 -36
 6825 05c0 04010000 		.4byte	.LVL110
 6826 05c4 08010000 		.4byte	.LFE76
 6827 05c8 0200     		.2byte	0x2
 6828 05ca 7D       		.byte	0x7d
 6829 05cb 5C       		.sleb128 -36
 6830 05cc 00000000 		.4byte	0
 6831 05d0 00000000 		.4byte	0
 6832              	.LLST33:
 6833 05d4 00000000 		.4byte	.LVL83
 6834 05d8 0E000000 		.4byte	.LVL85
 6835 05dc 0100     		.2byte	0x1
 6836 05de 53       		.byte	0x53
 6837 05df 0E000000 		.4byte	.LVL85
 6838 05e3 04010000 		.4byte	.LVL110
 6839 05e7 0100     		.2byte	0x1
 6840 05e9 56       		.byte	0x56
 6841 05ea 04010000 		.4byte	.LVL110
 6842 05ee 08010000 		.4byte	.LFE76
 6843 05f2 0400     		.2byte	0x4
 6844 05f4 F3       		.byte	0xf3
 6845 05f5 01       		.uleb128 0x1
 6846 05f6 53       		.byte	0x53
 6847 05f7 9F       		.byte	0x9f
 6848 05f8 00000000 		.4byte	0
 6849 05fc 00000000 		.4byte	0
 6850              	.LLST34:
 6851 0600 0C000000 		.4byte	.LVL84
 6852 0604 0E000000 		.4byte	.LVL85
 6853 0608 0200     		.2byte	0x2
 6854 060a 30       		.byte	0x30
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 179


 6855 060b 9F       		.byte	0x9f
 6856 060c 0E000000 		.4byte	.LVL85
 6857 0610 76000000 		.4byte	.LVL94
 6858 0614 0100     		.2byte	0x1
 6859 0616 55       		.byte	0x55
 6860 0617 76000000 		.4byte	.LVL94
 6861 061b 78000000 		.4byte	.LVL95
 6862 061f 0200     		.2byte	0x2
 6863 0621 31       		.byte	0x31
 6864 0622 9F       		.byte	0x9f
 6865 0623 78000000 		.4byte	.LVL95
 6866 0627 04010000 		.4byte	.LVL110
 6867 062b 0100     		.2byte	0x1
 6868 062d 55       		.byte	0x55
 6869 062e 00000000 		.4byte	0
 6870 0632 00000000 		.4byte	0
 6871              	.LLST35:
 6872 0636 28000000 		.4byte	.LVL87
 6873 063a 30000000 		.4byte	.LVL88
 6874 063e 0100     		.2byte	0x1
 6875 0640 50       		.byte	0x50
 6876 0641 48000000 		.4byte	.LVL90
 6877 0645 5A000000 		.4byte	.LVL91
 6878 0649 0100     		.2byte	0x1
 6879 064b 50       		.byte	0x50
 6880 064c 00000000 		.4byte	0
 6881 0650 00000000 		.4byte	0
 6882              	.LLST36:
 6883 0654 0C000000 		.4byte	.LVL84
 6884 0658 0E000000 		.4byte	.LVL85
 6885 065c 0100     		.2byte	0x1
 6886 065e 50       		.byte	0x50
 6887 065f 0E000000 		.4byte	.LVL85
 6888 0663 04010000 		.4byte	.LVL110
 6889 0667 0100     		.2byte	0x1
 6890 0669 54       		.byte	0x54
 6891 066a 04010000 		.4byte	.LVL110
 6892 066e 08010000 		.4byte	.LFE76
 6893 0672 0400     		.2byte	0x4
 6894 0674 F3       		.byte	0xf3
 6895 0675 01       		.uleb128 0x1
 6896 0676 50       		.byte	0x50
 6897 0677 9F       		.byte	0x9f
 6898 0678 00000000 		.4byte	0
 6899 067c 00000000 		.4byte	0
 6900              	.LLST37:
 6901 0680 00000000 		.4byte	.LVL111
 6902 0684 13000000 		.4byte	.LVL112-1
 6903 0688 0100     		.2byte	0x1
 6904 068a 50       		.byte	0x50
 6905 068b 13000000 		.4byte	.LVL112-1
 6906 068f 16000000 		.4byte	.LVL113
 6907 0693 0400     		.2byte	0x4
 6908 0695 F3       		.byte	0xf3
 6909 0696 01       		.uleb128 0x1
 6910 0697 50       		.byte	0x50
 6911 0698 9F       		.byte	0x9f
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 180


 6912 0699 16000000 		.4byte	.LVL113
 6913 069d 18000000 		.4byte	.LFE71
 6914 06a1 0100     		.2byte	0x1
 6915 06a3 50       		.byte	0x50
 6916 06a4 00000000 		.4byte	0
 6917 06a8 00000000 		.4byte	0
 6918              	.LLST38:
 6919 06ac 00000000 		.4byte	.LVL114
 6920 06b0 08000000 		.4byte	.LVL116
 6921 06b4 0100     		.2byte	0x1
 6922 06b6 50       		.byte	0x50
 6923 06b7 08000000 		.4byte	.LVL116
 6924 06bb 16000000 		.4byte	.LFE72
 6925 06bf 0400     		.2byte	0x4
 6926 06c1 F3       		.byte	0xf3
 6927 06c2 01       		.uleb128 0x1
 6928 06c3 50       		.byte	0x50
 6929 06c4 9F       		.byte	0x9f
 6930 06c5 00000000 		.4byte	0
 6931 06c9 00000000 		.4byte	0
 6932              	.LLST39:
 6933 06cd 0E000000 		.4byte	.LVL118
 6934 06d1 11000000 		.4byte	.LVL119-1
 6935 06d5 0100     		.2byte	0x1
 6936 06d7 50       		.byte	0x50
 6937 06d8 11000000 		.4byte	.LVL119-1
 6938 06dc 16000000 		.4byte	.LFE72
 6939 06e0 0100     		.2byte	0x1
 6940 06e2 54       		.byte	0x54
 6941 06e3 00000000 		.4byte	0
 6942 06e7 00000000 		.4byte	0
 6943              	.LLST40:
 6944 06eb 00000000 		.4byte	.LVL120
 6945 06ef 09000000 		.4byte	.LVL122-1
 6946 06f3 0100     		.2byte	0x1
 6947 06f5 50       		.byte	0x50
 6948 06f6 09000000 		.4byte	.LVL122-1
 6949 06fa 2C000000 		.4byte	.LFE73
 6950 06fe 0100     		.2byte	0x1
 6951 0700 54       		.byte	0x54
 6952 0701 00000000 		.4byte	0
 6953 0705 00000000 		.4byte	0
 6954              	.LLST41:
 6955 0709 04000000 		.4byte	.LVL121
 6956 070d 09000000 		.4byte	.LVL122-1
 6957 0711 0100     		.2byte	0x1
 6958 0713 50       		.byte	0x50
 6959 0714 09000000 		.4byte	.LVL122-1
 6960 0718 2C000000 		.4byte	.LFE73
 6961 071c 0100     		.2byte	0x1
 6962 071e 54       		.byte	0x54
 6963 071f 00000000 		.4byte	0
 6964 0723 00000000 		.4byte	0
 6965              	.LLST42:
 6966 0727 00000000 		.4byte	.LVL127
 6967 072b 31000000 		.4byte	.LVL131-1
 6968 072f 0100     		.2byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 181


 6969 0731 50       		.byte	0x50
 6970 0732 31000000 		.4byte	.LVL131-1
 6971 0736 5A000000 		.4byte	.LVL135
 6972 073a 0100     		.2byte	0x1
 6973 073c 55       		.byte	0x55
 6974 073d 5A000000 		.4byte	.LVL135
 6975 0741 5C000000 		.4byte	.LVL136
 6976 0745 0100     		.2byte	0x1
 6977 0747 50       		.byte	0x50
 6978 0748 5C000000 		.4byte	.LVL136
 6979 074c 5E000000 		.4byte	.LVL137
 6980 0750 0400     		.2byte	0x4
 6981 0752 F3       		.byte	0xf3
 6982 0753 01       		.uleb128 0x1
 6983 0754 50       		.byte	0x50
 6984 0755 9F       		.byte	0x9f
 6985 0756 5E000000 		.4byte	.LVL137
 6986 075a 68000000 		.4byte	.LVL138
 6987 075e 0100     		.2byte	0x1
 6988 0760 55       		.byte	0x55
 6989 0761 68000000 		.4byte	.LVL138
 6990 0765 6E000000 		.4byte	.LFE77
 6991 0769 0400     		.2byte	0x4
 6992 076b F3       		.byte	0xf3
 6993 076c 01       		.uleb128 0x1
 6994 076d 50       		.byte	0x50
 6995 076e 9F       		.byte	0x9f
 6996 076f 00000000 		.4byte	0
 6997 0773 00000000 		.4byte	0
 6998              	.LLST43:
 6999 0777 00000000 		.4byte	.LVL127
 7000 077b 31000000 		.4byte	.LVL131-1
 7001 077f 0100     		.2byte	0x1
 7002 0781 51       		.byte	0x51
 7003 0782 31000000 		.4byte	.LVL131-1
 7004 0786 5A000000 		.4byte	.LVL135
 7005 078a 0400     		.2byte	0x4
 7006 078c F3       		.byte	0xf3
 7007 078d 01       		.uleb128 0x1
 7008 078e 51       		.byte	0x51
 7009 078f 9F       		.byte	0x9f
 7010 0790 5A000000 		.4byte	.LVL135
 7011 0794 5E000000 		.4byte	.LVL137
 7012 0798 0100     		.2byte	0x1
 7013 079a 51       		.byte	0x51
 7014 079b 5E000000 		.4byte	.LVL137
 7015 079f 6E000000 		.4byte	.LFE77
 7016 07a3 0400     		.2byte	0x4
 7017 07a5 F3       		.byte	0xf3
 7018 07a6 01       		.uleb128 0x1
 7019 07a7 51       		.byte	0x51
 7020 07a8 9F       		.byte	0x9f
 7021 07a9 00000000 		.4byte	0
 7022 07ad 00000000 		.4byte	0
 7023              	.LLST44:
 7024 07b1 00000000 		.4byte	.LVL127
 7025 07b5 2E000000 		.4byte	.LVL130
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 182


 7026 07b9 0100     		.2byte	0x1
 7027 07bb 52       		.byte	0x52
 7028 07bc 2E000000 		.4byte	.LVL130
 7029 07c0 5A000000 		.4byte	.LVL135
 7030 07c4 0100     		.2byte	0x1
 7031 07c6 57       		.byte	0x57
 7032 07c7 5A000000 		.4byte	.LVL135
 7033 07cb 5E000000 		.4byte	.LVL137
 7034 07cf 0100     		.2byte	0x1
 7035 07d1 52       		.byte	0x52
 7036 07d2 5E000000 		.4byte	.LVL137
 7037 07d6 68000000 		.4byte	.LVL138
 7038 07da 0100     		.2byte	0x1
 7039 07dc 57       		.byte	0x57
 7040 07dd 68000000 		.4byte	.LVL138
 7041 07e1 6E000000 		.4byte	.LFE77
 7042 07e5 0400     		.2byte	0x4
 7043 07e7 F3       		.byte	0xf3
 7044 07e8 01       		.uleb128 0x1
 7045 07e9 52       		.byte	0x52
 7046 07ea 9F       		.byte	0x9f
 7047 07eb 00000000 		.4byte	0
 7048 07ef 00000000 		.4byte	0
 7049              	.LLST45:
 7050 07f3 00000000 		.4byte	.LVL127
 7051 07f7 31000000 		.4byte	.LVL131-1
 7052 07fb 0100     		.2byte	0x1
 7053 07fd 53       		.byte	0x53
 7054 07fe 31000000 		.4byte	.LVL131-1
 7055 0802 5A000000 		.4byte	.LVL135
 7056 0806 0400     		.2byte	0x4
 7057 0808 F3       		.byte	0xf3
 7058 0809 01       		.uleb128 0x1
 7059 080a 53       		.byte	0x53
 7060 080b 9F       		.byte	0x9f
 7061 080c 5A000000 		.4byte	.LVL135
 7062 0810 5E000000 		.4byte	.LVL137
 7063 0814 0100     		.2byte	0x1
 7064 0816 53       		.byte	0x53
 7065 0817 5E000000 		.4byte	.LVL137
 7066 081b 6E000000 		.4byte	.LFE77
 7067 081f 0400     		.2byte	0x4
 7068 0821 F3       		.byte	0xf3
 7069 0822 01       		.uleb128 0x1
 7070 0823 53       		.byte	0x53
 7071 0824 9F       		.byte	0x9f
 7072 0825 00000000 		.4byte	0
 7073 0829 00000000 		.4byte	0
 7074              	.LLST46:
 7075 082d 02000000 		.4byte	.LVL128
 7076 0831 31000000 		.4byte	.LVL131-1
 7077 0835 0100     		.2byte	0x1
 7078 0837 50       		.byte	0x50
 7079 0838 31000000 		.4byte	.LVL131-1
 7080 083c 5A000000 		.4byte	.LVL135
 7081 0840 0100     		.2byte	0x1
 7082 0842 55       		.byte	0x55
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 183


 7083 0843 5A000000 		.4byte	.LVL135
 7084 0847 5C000000 		.4byte	.LVL136
 7085 084b 0100     		.2byte	0x1
 7086 084d 50       		.byte	0x50
 7087 084e 5C000000 		.4byte	.LVL136
 7088 0852 5E000000 		.4byte	.LVL137
 7089 0856 0400     		.2byte	0x4
 7090 0858 F3       		.byte	0xf3
 7091 0859 01       		.uleb128 0x1
 7092 085a 50       		.byte	0x50
 7093 085b 9F       		.byte	0x9f
 7094 085c 5E000000 		.4byte	.LVL137
 7095 0860 68000000 		.4byte	.LVL138
 7096 0864 0100     		.2byte	0x1
 7097 0866 55       		.byte	0x55
 7098 0867 68000000 		.4byte	.LVL138
 7099 086b 6E000000 		.4byte	.LFE77
 7100 086f 0400     		.2byte	0x4
 7101 0871 F3       		.byte	0xf3
 7102 0872 01       		.uleb128 0x1
 7103 0873 50       		.byte	0x50
 7104 0874 9F       		.byte	0x9f
 7105 0875 00000000 		.4byte	0
 7106 0879 00000000 		.4byte	0
 7107              	.LLST47:
 7108 087d 2C000000 		.4byte	.LVL129
 7109 0881 50000000 		.4byte	.LVL133
 7110 0885 0100     		.2byte	0x1
 7111 0887 54       		.byte	0x54
 7112 0888 50000000 		.4byte	.LVL133
 7113 088c 52000000 		.4byte	.LVL134
 7114 0890 0300     		.2byte	0x3
 7115 0892 74       		.byte	0x74
 7116 0893 7F       		.sleb128 -1
 7117 0894 9F       		.byte	0x9f
 7118 0895 5E000000 		.4byte	.LVL137
 7119 0899 68000000 		.4byte	.LVL138
 7120 089d 0100     		.2byte	0x1
 7121 089f 54       		.byte	0x54
 7122 08a0 00000000 		.4byte	0
 7123 08a4 00000000 		.4byte	0
 7124              	.LLST48:
 7125 08a8 68000000 		.4byte	.LVL138
 7126 08ac 6C000000 		.4byte	.LVL139
 7127 08b0 0100     		.2byte	0x1
 7128 08b2 56       		.byte	0x56
 7129 08b3 00000000 		.4byte	0
 7130 08b7 00000000 		.4byte	0
 7131              	.LLST49:
 7132 08bb 00000000 		.4byte	.LVL140
 7133 08bf 36000000 		.4byte	.LVL146
 7134 08c3 0100     		.2byte	0x1
 7135 08c5 50       		.byte	0x50
 7136 08c6 36000000 		.4byte	.LVL146
 7137 08ca 39000000 		.4byte	.LVL147-1
 7138 08ce 0300     		.2byte	0x3
 7139 08d0 70       		.byte	0x70
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 184


 7140 08d1 5C       		.sleb128 -36
 7141 08d2 9F       		.byte	0x9f
 7142 08d3 39000000 		.4byte	.LVL147-1
 7143 08d7 44000000 		.4byte	.LVL148
 7144 08db 0400     		.2byte	0x4
 7145 08dd F3       		.byte	0xf3
 7146 08de 01       		.uleb128 0x1
 7147 08df 50       		.byte	0x50
 7148 08e0 9F       		.byte	0x9f
 7149 08e1 44000000 		.4byte	.LVL148
 7150 08e5 4E000000 		.4byte	.LVL151
 7151 08e9 0100     		.2byte	0x1
 7152 08eb 50       		.byte	0x50
 7153 08ec 4E000000 		.4byte	.LVL151
 7154 08f0 50000000 		.4byte	.LVL152
 7155 08f4 0400     		.2byte	0x4
 7156 08f6 F3       		.byte	0xf3
 7157 08f7 01       		.uleb128 0x1
 7158 08f8 50       		.byte	0x50
 7159 08f9 9F       		.byte	0x9f
 7160 08fa 50000000 		.4byte	.LVL152
 7161 08fe 52000000 		.4byte	.LVL153
 7162 0902 0100     		.2byte	0x1
 7163 0904 50       		.byte	0x50
 7164 0905 52000000 		.4byte	.LVL153
 7165 0909 54000000 		.4byte	.LVL154
 7166 090d 0400     		.2byte	0x4
 7167 090f F3       		.byte	0xf3
 7168 0910 01       		.uleb128 0x1
 7169 0911 50       		.byte	0x50
 7170 0912 9F       		.byte	0x9f
 7171 0913 54000000 		.4byte	.LVL154
 7172 0917 56000000 		.4byte	.LVL155
 7173 091b 0100     		.2byte	0x1
 7174 091d 50       		.byte	0x50
 7175 091e 56000000 		.4byte	.LVL155
 7176 0922 64000000 		.4byte	.LFE78
 7177 0926 0400     		.2byte	0x4
 7178 0928 F3       		.byte	0xf3
 7179 0929 01       		.uleb128 0x1
 7180 092a 50       		.byte	0x50
 7181 092b 9F       		.byte	0x9f
 7182 092c 00000000 		.4byte	0
 7183 0930 00000000 		.4byte	0
 7184              	.LLST50:
 7185 0934 00000000 		.4byte	.LVL140
 7186 0938 39000000 		.4byte	.LVL147-1
 7187 093c 0100     		.2byte	0x1
 7188 093e 51       		.byte	0x51
 7189 093f 39000000 		.4byte	.LVL147-1
 7190 0943 44000000 		.4byte	.LVL148
 7191 0947 0100     		.2byte	0x1
 7192 0949 55       		.byte	0x55
 7193 094a 44000000 		.4byte	.LVL148
 7194 094e 58000000 		.4byte	.LVL156
 7195 0952 0100     		.2byte	0x1
 7196 0954 51       		.byte	0x51
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 185


 7197 0955 58000000 		.4byte	.LVL156
 7198 0959 5E000000 		.4byte	.LVL157
 7199 095d 0100     		.2byte	0x1
 7200 095f 55       		.byte	0x55
 7201 0960 5E000000 		.4byte	.LVL157
 7202 0964 64000000 		.4byte	.LFE78
 7203 0968 0400     		.2byte	0x4
 7204 096a F3       		.byte	0xf3
 7205 096b 01       		.uleb128 0x1
 7206 096c 51       		.byte	0x51
 7207 096d 9F       		.byte	0x9f
 7208 096e 00000000 		.4byte	0
 7209 0972 00000000 		.4byte	0
 7210              	.LLST51:
 7211 0976 02000000 		.4byte	.LVL141
 7212 097a 36000000 		.4byte	.LVL146
 7213 097e 0100     		.2byte	0x1
 7214 0980 50       		.byte	0x50
 7215 0981 36000000 		.4byte	.LVL146
 7216 0985 39000000 		.4byte	.LVL147-1
 7217 0989 0300     		.2byte	0x3
 7218 098b 70       		.byte	0x70
 7219 098c 5C       		.sleb128 -36
 7220 098d 9F       		.byte	0x9f
 7221 098e 39000000 		.4byte	.LVL147-1
 7222 0992 44000000 		.4byte	.LVL148
 7223 0996 0400     		.2byte	0x4
 7224 0998 F3       		.byte	0xf3
 7225 0999 01       		.uleb128 0x1
 7226 099a 50       		.byte	0x50
 7227 099b 9F       		.byte	0x9f
 7228 099c 44000000 		.4byte	.LVL148
 7229 09a0 4E000000 		.4byte	.LVL151
 7230 09a4 0100     		.2byte	0x1
 7231 09a6 50       		.byte	0x50
 7232 09a7 4E000000 		.4byte	.LVL151
 7233 09ab 50000000 		.4byte	.LVL152
 7234 09af 0400     		.2byte	0x4
 7235 09b1 F3       		.byte	0xf3
 7236 09b2 01       		.uleb128 0x1
 7237 09b3 50       		.byte	0x50
 7238 09b4 9F       		.byte	0x9f
 7239 09b5 50000000 		.4byte	.LVL152
 7240 09b9 52000000 		.4byte	.LVL153
 7241 09bd 0100     		.2byte	0x1
 7242 09bf 50       		.byte	0x50
 7243 09c0 52000000 		.4byte	.LVL153
 7244 09c4 54000000 		.4byte	.LVL154
 7245 09c8 0400     		.2byte	0x4
 7246 09ca F3       		.byte	0xf3
 7247 09cb 01       		.uleb128 0x1
 7248 09cc 50       		.byte	0x50
 7249 09cd 9F       		.byte	0x9f
 7250 09ce 54000000 		.4byte	.LVL154
 7251 09d2 56000000 		.4byte	.LVL155
 7252 09d6 0100     		.2byte	0x1
 7253 09d8 50       		.byte	0x50
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 186


 7254 09d9 56000000 		.4byte	.LVL155
 7255 09dd 64000000 		.4byte	.LFE78
 7256 09e1 0400     		.2byte	0x4
 7257 09e3 F3       		.byte	0xf3
 7258 09e4 01       		.uleb128 0x1
 7259 09e5 50       		.byte	0x50
 7260 09e6 9F       		.byte	0x9f
 7261 09e7 00000000 		.4byte	0
 7262 09eb 00000000 		.4byte	0
 7263              	.LLST52:
 7264 09ef 18000000 		.4byte	.LVL142
 7265 09f3 26000000 		.4byte	.LVL144
 7266 09f7 0100     		.2byte	0x1
 7267 09f9 52       		.byte	0x52
 7268 09fa 26000000 		.4byte	.LVL144
 7269 09fe 39000000 		.4byte	.LVL147-1
 7270 0a02 0300     		.2byte	0x3
 7271 0a04 72       		.byte	0x72
 7272 0a05 7F       		.sleb128 -1
 7273 0a06 9F       		.byte	0x9f
 7274 0a07 44000000 		.4byte	.LVL148
 7275 0a0b 50000000 		.4byte	.LVL152
 7276 0a0f 0300     		.2byte	0x3
 7277 0a11 72       		.byte	0x72
 7278 0a12 7F       		.sleb128 -1
 7279 0a13 9F       		.byte	0x9f
 7280 0a14 50000000 		.4byte	.LVL152
 7281 0a18 54000000 		.4byte	.LVL154
 7282 0a1c 0100     		.2byte	0x1
 7283 0a1e 52       		.byte	0x52
 7284 0a1f 54000000 		.4byte	.LVL154
 7285 0a23 58000000 		.4byte	.LVL156
 7286 0a27 0300     		.2byte	0x3
 7287 0a29 72       		.byte	0x72
 7288 0a2a 7F       		.sleb128 -1
 7289 0a2b 9F       		.byte	0x9f
 7290 0a2c 00000000 		.4byte	0
 7291 0a30 00000000 		.4byte	0
 7292              	.LLST53:
 7293 0a34 24000000 		.4byte	.LVL143
 7294 0a38 30000000 		.4byte	.LVL145
 7295 0a3c 0100     		.2byte	0x1
 7296 0a3e 53       		.byte	0x53
 7297 0a3f 44000000 		.4byte	.LVL148
 7298 0a43 46000000 		.4byte	.LVL149
 7299 0a47 0100     		.2byte	0x1
 7300 0a49 53       		.byte	0x53
 7301 0a4a 46000000 		.4byte	.LVL149
 7302 0a4e 48000000 		.4byte	.LVL150
 7303 0a52 0300     		.2byte	0x3
 7304 0a54 73       		.byte	0x73
 7305 0a55 7F       		.sleb128 -1
 7306 0a56 9F       		.byte	0x9f
 7307 0a57 00000000 		.4byte	0
 7308 0a5b 00000000 		.4byte	0
 7309              	.LLST54:
 7310 0a5f 5E000000 		.4byte	.LVL157
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 187


 7311 0a63 62000000 		.4byte	.LVL158
 7312 0a67 0100     		.2byte	0x1
 7313 0a69 54       		.byte	0x54
 7314 0a6a 00000000 		.4byte	0
 7315 0a6e 00000000 		.4byte	0
 7316              	.LLST55:
 7317 0a72 00000000 		.4byte	.LVL159
 7318 0a76 0C000000 		.4byte	.LVL161
 7319 0a7a 0100     		.2byte	0x1
 7320 0a7c 50       		.byte	0x50
 7321 0a7d 0C000000 		.4byte	.LVL161
 7322 0a81 F2000000 		.4byte	.LVL188
 7323 0a85 0100     		.2byte	0x1
 7324 0a87 54       		.byte	0x54
 7325 0a88 F2000000 		.4byte	.LVL188
 7326 0a8c F8000000 		.4byte	.LFE79
 7327 0a90 0400     		.2byte	0x4
 7328 0a92 F3       		.byte	0xf3
 7329 0a93 01       		.uleb128 0x1
 7330 0a94 50       		.byte	0x50
 7331 0a95 9F       		.byte	0x9f
 7332 0a96 00000000 		.4byte	0
 7333 0a9a 00000000 		.4byte	0
 7334              	.LLST56:
 7335 0a9e 00000000 		.4byte	.LVL159
 7336 0aa2 0C000000 		.4byte	.LVL161
 7337 0aa6 0100     		.2byte	0x1
 7338 0aa8 51       		.byte	0x51
 7339 0aa9 0C000000 		.4byte	.LVL161
 7340 0aad F2000000 		.4byte	.LVL188
 7341 0ab1 0100     		.2byte	0x1
 7342 0ab3 57       		.byte	0x57
 7343 0ab4 F2000000 		.4byte	.LVL188
 7344 0ab8 F8000000 		.4byte	.LFE79
 7345 0abc 0400     		.2byte	0x4
 7346 0abe F3       		.byte	0xf3
 7347 0abf 01       		.uleb128 0x1
 7348 0ac0 51       		.byte	0x51
 7349 0ac1 9F       		.byte	0x9f
 7350 0ac2 00000000 		.4byte	0
 7351 0ac6 00000000 		.4byte	0
 7352              	.LLST57:
 7353 0aca 00000000 		.4byte	.LVL159
 7354 0ace 0C000000 		.4byte	.LVL161
 7355 0ad2 0100     		.2byte	0x1
 7356 0ad4 52       		.byte	0x52
 7357 0ad5 0C000000 		.4byte	.LVL161
 7358 0ad9 92000000 		.4byte	.LVL176
 7359 0add 0200     		.2byte	0x2
 7360 0adf 91       		.byte	0x91
 7361 0ae0 5C       		.sleb128 -36
 7362 0ae1 92000000 		.4byte	.LVL176
 7363 0ae5 97000000 		.4byte	.LVL177-1
 7364 0ae9 0200     		.2byte	0x2
 7365 0aeb 71       		.byte	0x71
 7366 0aec 00       		.sleb128 0
 7367 0aed 97000000 		.4byte	.LVL177-1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 188


 7368 0af1 F2000000 		.4byte	.LVL188
 7369 0af5 0200     		.2byte	0x2
 7370 0af7 91       		.byte	0x91
 7371 0af8 5C       		.sleb128 -36
 7372 0af9 F2000000 		.4byte	.LVL188
 7373 0afd F8000000 		.4byte	.LFE79
 7374 0b01 0200     		.2byte	0x2
 7375 0b03 7D       		.byte	0x7d
 7376 0b04 5C       		.sleb128 -36
 7377 0b05 00000000 		.4byte	0
 7378 0b09 00000000 		.4byte	0
 7379              	.LLST58:
 7380 0b0d 0A000000 		.4byte	.LVL160
 7381 0b11 0C000000 		.4byte	.LVL161
 7382 0b15 0200     		.2byte	0x2
 7383 0b17 30       		.byte	0x30
 7384 0b18 9F       		.byte	0x9f
 7385 0b19 0C000000 		.4byte	.LVL161
 7386 0b1d 5A000000 		.4byte	.LVL170
 7387 0b21 0100     		.2byte	0x1
 7388 0b23 56       		.byte	0x56
 7389 0b24 5A000000 		.4byte	.LVL170
 7390 0b28 5C000000 		.4byte	.LVL171
 7391 0b2c 0200     		.2byte	0x2
 7392 0b2e 31       		.byte	0x31
 7393 0b2f 9F       		.byte	0x9f
 7394 0b30 5C000000 		.4byte	.LVL171
 7395 0b34 F2000000 		.4byte	.LVL188
 7396 0b38 0100     		.2byte	0x1
 7397 0b3a 56       		.byte	0x56
 7398 0b3b 00000000 		.4byte	0
 7399 0b3f 00000000 		.4byte	0
 7400              	.LLST59:
 7401 0b43 0A000000 		.4byte	.LVL160
 7402 0b47 0C000000 		.4byte	.LVL161
 7403 0b4b 0100     		.2byte	0x1
 7404 0b4d 50       		.byte	0x50
 7405 0b4e 0C000000 		.4byte	.LVL161
 7406 0b52 F2000000 		.4byte	.LVL188
 7407 0b56 0100     		.2byte	0x1
 7408 0b58 54       		.byte	0x54
 7409 0b59 F2000000 		.4byte	.LVL188
 7410 0b5d F8000000 		.4byte	.LFE79
 7411 0b61 0400     		.2byte	0x4
 7412 0b63 F3       		.byte	0xf3
 7413 0b64 01       		.uleb128 0x1
 7414 0b65 50       		.byte	0x50
 7415 0b66 9F       		.byte	0x9f
 7416 0b67 00000000 		.4byte	0
 7417 0b6b 00000000 		.4byte	0
 7418              	.LLST60:
 7419 0b6f 12000000 		.4byte	.LVL163
 7420 0b73 1E000000 		.4byte	.LVL165
 7421 0b77 0100     		.2byte	0x1
 7422 0b79 55       		.byte	0x55
 7423 0b7a 1E000000 		.4byte	.LVL165
 7424 0b7e 46000000 		.4byte	.LVL168
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 189


 7425 0b82 0300     		.2byte	0x3
 7426 0b84 75       		.byte	0x75
 7427 0b85 01       		.sleb128 1
 7428 0b86 9F       		.byte	0x9f
 7429 0b87 46000000 		.4byte	.LVL168
 7430 0b8b EE000000 		.4byte	.LVL187
 7431 0b8f 0100     		.2byte	0x1
 7432 0b91 55       		.byte	0x55
 7433 0b92 00000000 		.4byte	0
 7434 0b96 00000000 		.4byte	0
 7435              	.LLST61:
 7436 0b9a 00000000 		.4byte	.LVL189
 7437 0b9e 0C000000 		.4byte	.LVL191
 7438 0ba2 0100     		.2byte	0x1
 7439 0ba4 50       		.byte	0x50
 7440 0ba5 0C000000 		.4byte	.LVL191
 7441 0ba9 24010000 		.4byte	.LVL228
 7442 0bad 0100     		.2byte	0x1
 7443 0baf 54       		.byte	0x54
 7444 0bb0 24010000 		.4byte	.LVL228
 7445 0bb4 28010000 		.4byte	.LFE80
 7446 0bb8 0400     		.2byte	0x4
 7447 0bba F3       		.byte	0xf3
 7448 0bbb 01       		.uleb128 0x1
 7449 0bbc 50       		.byte	0x50
 7450 0bbd 9F       		.byte	0x9f
 7451 0bbe 00000000 		.4byte	0
 7452 0bc2 00000000 		.4byte	0
 7453              	.LLST62:
 7454 0bc6 00000000 		.4byte	.LVL189
 7455 0bca 0C000000 		.4byte	.LVL191
 7456 0bce 0100     		.2byte	0x1
 7457 0bd0 51       		.byte	0x51
 7458 0bd1 0C000000 		.4byte	.LVL191
 7459 0bd5 94000000 		.4byte	.LVL208
 7460 0bd9 0200     		.2byte	0x2
 7461 0bdb 91       		.byte	0x91
 7462 0bdc 64       		.sleb128 -28
 7463 0bdd 94000000 		.4byte	.LVL208
 7464 0be1 99000000 		.4byte	.LVL209-1
 7465 0be5 0200     		.2byte	0x2
 7466 0be7 71       		.byte	0x71
 7467 0be8 00       		.sleb128 0
 7468 0be9 99000000 		.4byte	.LVL209-1
 7469 0bed 24010000 		.4byte	.LVL228
 7470 0bf1 0200     		.2byte	0x2
 7471 0bf3 91       		.byte	0x91
 7472 0bf4 64       		.sleb128 -28
 7473 0bf5 24010000 		.4byte	.LVL228
 7474 0bf9 28010000 		.4byte	.LFE80
 7475 0bfd 0200     		.2byte	0x2
 7476 0bff 7D       		.byte	0x7d
 7477 0c00 64       		.sleb128 -28
 7478 0c01 00000000 		.4byte	0
 7479 0c05 00000000 		.4byte	0
 7480              	.LLST63:
 7481 0c09 08000000 		.4byte	.LVL190
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 190


 7482 0c0d 0C000000 		.4byte	.LVL191
 7483 0c11 0200     		.2byte	0x2
 7484 0c13 30       		.byte	0x30
 7485 0c14 9F       		.byte	0x9f
 7486 0c15 0C000000 		.4byte	.LVL191
 7487 0c19 5C000000 		.4byte	.LVL202
 7488 0c1d 0100     		.2byte	0x1
 7489 0c1f 55       		.byte	0x55
 7490 0c20 5C000000 		.4byte	.LVL202
 7491 0c24 5E000000 		.4byte	.LVL203
 7492 0c28 0200     		.2byte	0x2
 7493 0c2a 31       		.byte	0x31
 7494 0c2b 9F       		.byte	0x9f
 7495 0c2c 5E000000 		.4byte	.LVL203
 7496 0c30 24010000 		.4byte	.LVL228
 7497 0c34 0100     		.2byte	0x1
 7498 0c36 55       		.byte	0x55
 7499 0c37 00000000 		.4byte	0
 7500 0c3b 00000000 		.4byte	0
 7501              	.LLST64:
 7502 0c3f 08000000 		.4byte	.LVL190
 7503 0c43 0C000000 		.4byte	.LVL191
 7504 0c47 0100     		.2byte	0x1
 7505 0c49 50       		.byte	0x50
 7506 0c4a 0C000000 		.4byte	.LVL191
 7507 0c4e 24010000 		.4byte	.LVL228
 7508 0c52 0100     		.2byte	0x1
 7509 0c54 54       		.byte	0x54
 7510 0c55 24010000 		.4byte	.LVL228
 7511 0c59 28010000 		.4byte	.LFE80
 7512 0c5d 0400     		.2byte	0x4
 7513 0c5f F3       		.byte	0xf3
 7514 0c60 01       		.uleb128 0x1
 7515 0c61 50       		.byte	0x50
 7516 0c62 9F       		.byte	0x9f
 7517 0c63 00000000 		.4byte	0
 7518 0c67 00000000 		.4byte	0
 7519              	.LLST65:
 7520 0c6b 08000000 		.4byte	.LVL190
 7521 0c6f 0C000000 		.4byte	.LVL191
 7522 0c73 0200     		.2byte	0x2
 7523 0c75 30       		.byte	0x30
 7524 0c76 9F       		.byte	0x9f
 7525 0c77 0C000000 		.4byte	.LVL191
 7526 0c7b B4000000 		.4byte	.LVL213
 7527 0c7f 0100     		.2byte	0x1
 7528 0c81 56       		.byte	0x56
 7529 0c82 B4000000 		.4byte	.LVL213
 7530 0c86 B7000000 		.4byte	.LVL214-1
 7531 0c8a 0100     		.2byte	0x1
 7532 0c8c 50       		.byte	0x50
 7533 0c8d B7000000 		.4byte	.LVL214-1
 7534 0c91 24010000 		.4byte	.LVL228
 7535 0c95 0100     		.2byte	0x1
 7536 0c97 56       		.byte	0x56
 7537 0c98 00000000 		.4byte	0
 7538 0c9c 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 191


 7539              	.LLST66:
 7540 0ca0 12000000 		.4byte	.LVL193
 7541 0ca4 16000000 		.4byte	.LVL194
 7542 0ca8 0100     		.2byte	0x1
 7543 0caa 53       		.byte	0x53
 7544 0cab 16000000 		.4byte	.LVL194
 7545 0caf 1A000000 		.4byte	.LVL195
 7546 0cb3 0300     		.2byte	0x3
 7547 0cb5 73       		.byte	0x73
 7548 0cb6 01       		.sleb128 1
 7549 0cb7 9F       		.byte	0x9f
 7550 0cb8 1A000000 		.4byte	.LVL195
 7551 0cbc 1F000000 		.4byte	.LVL196-1
 7552 0cc0 0600     		.2byte	0x6
 7553 0cc2 74       		.byte	0x74
 7554 0cc3 38       		.sleb128 56
 7555 0cc4 06       		.byte	0x6
 7556 0cc5 23       		.byte	0x23
 7557 0cc6 01       		.uleb128 0x1
 7558 0cc7 9F       		.byte	0x9f
 7559 0cc8 48000000 		.4byte	.LVL199
 7560 0ccc 4A000000 		.4byte	.LVL200
 7561 0cd0 0100     		.2byte	0x1
 7562 0cd2 53       		.byte	0x53
 7563 0cd3 00000000 		.4byte	0
 7564 0cd7 00000000 		.4byte	0
 7565              	.LLST67:
 7566 0cdb 0E010000 		.4byte	.LVL224
 7567 0cdf 12010000 		.4byte	.LVL225
 7568 0ce3 0100     		.2byte	0x1
 7569 0ce5 50       		.byte	0x50
 7570 0ce6 12010000 		.4byte	.LVL225
 7571 0cea 15010000 		.4byte	.LVL226-1
 7572 0cee 0100     		.2byte	0x1
 7573 0cf0 51       		.byte	0x51
 7574 0cf1 00000000 		.4byte	0
 7575 0cf5 00000000 		.4byte	0
 7576              	.LLST68:
 7577 0cf9 00000000 		.4byte	.LVL229
 7578 0cfd 0B000000 		.4byte	.LVL231-1
 7579 0d01 0100     		.2byte	0x1
 7580 0d03 50       		.byte	0x50
 7581 0d04 0B000000 		.4byte	.LVL231-1
 7582 0d08 30000000 		.4byte	.LFE74
 7583 0d0c 0100     		.2byte	0x1
 7584 0d0e 54       		.byte	0x54
 7585 0d0f 00000000 		.4byte	0
 7586 0d13 00000000 		.4byte	0
 7587              	.LLST69:
 7588 0d17 00000000 		.4byte	.LVL229
 7589 0d1b 0B000000 		.4byte	.LVL231-1
 7590 0d1f 0100     		.2byte	0x1
 7591 0d21 51       		.byte	0x51
 7592 0d22 0B000000 		.4byte	.LVL231-1
 7593 0d26 30000000 		.4byte	.LFE74
 7594 0d2a 0100     		.2byte	0x1
 7595 0d2c 56       		.byte	0x56
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 192


 7596 0d2d 00000000 		.4byte	0
 7597 0d31 00000000 		.4byte	0
 7598              	.LLST70:
 7599 0d35 16000000 		.4byte	.LVL232
 7600 0d39 1A000000 		.4byte	.LVL233
 7601 0d3d 0200     		.2byte	0x2
 7602 0d3f 31       		.byte	0x31
 7603 0d40 9F       		.byte	0x9f
 7604 0d41 22000000 		.4byte	.LVL234
 7605 0d45 2C000000 		.4byte	.LVL235
 7606 0d49 0100     		.2byte	0x1
 7607 0d4b 50       		.byte	0x50
 7608 0d4c 2C000000 		.4byte	.LVL235
 7609 0d50 30000000 		.4byte	.LFE74
 7610 0d54 0100     		.2byte	0x1
 7611 0d56 53       		.byte	0x53
 7612 0d57 00000000 		.4byte	0
 7613 0d5b 00000000 		.4byte	0
 7614              	.LLST71:
 7615 0d5f 06000000 		.4byte	.LVL230
 7616 0d63 0B000000 		.4byte	.LVL231-1
 7617 0d67 0100     		.2byte	0x1
 7618 0d69 50       		.byte	0x50
 7619 0d6a 0B000000 		.4byte	.LVL231-1
 7620 0d6e 30000000 		.4byte	.LFE74
 7621 0d72 0100     		.2byte	0x1
 7622 0d74 54       		.byte	0x54
 7623 0d75 00000000 		.4byte	0
 7624 0d79 00000000 		.4byte	0
 7625              	.LLST72:
 7626 0d7d 00000000 		.4byte	.LVL236
 7627 0d81 0C000000 		.4byte	.LVL238
 7628 0d85 0100     		.2byte	0x1
 7629 0d87 50       		.byte	0x50
 7630 0d88 0C000000 		.4byte	.LVL238
 7631 0d8c F2000000 		.4byte	.LVL266
 7632 0d90 0100     		.2byte	0x1
 7633 0d92 54       		.byte	0x54
 7634 0d93 F2000000 		.4byte	.LVL266
 7635 0d97 F8000000 		.4byte	.LFE81
 7636 0d9b 0400     		.2byte	0x4
 7637 0d9d F3       		.byte	0xf3
 7638 0d9e 01       		.uleb128 0x1
 7639 0d9f 50       		.byte	0x50
 7640 0da0 9F       		.byte	0x9f
 7641 0da1 00000000 		.4byte	0
 7642 0da5 00000000 		.4byte	0
 7643              	.LLST73:
 7644 0da9 00000000 		.4byte	.LVL236
 7645 0dad 0C000000 		.4byte	.LVL238
 7646 0db1 0100     		.2byte	0x1
 7647 0db3 51       		.byte	0x51
 7648 0db4 0C000000 		.4byte	.LVL238
 7649 0db8 F2000000 		.4byte	.LVL266
 7650 0dbc 0100     		.2byte	0x1
 7651 0dbe 56       		.byte	0x56
 7652 0dbf F2000000 		.4byte	.LVL266
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 193


 7653 0dc3 F8000000 		.4byte	.LFE81
 7654 0dc7 0400     		.2byte	0x4
 7655 0dc9 F3       		.byte	0xf3
 7656 0dca 01       		.uleb128 0x1
 7657 0dcb 51       		.byte	0x51
 7658 0dcc 9F       		.byte	0x9f
 7659 0dcd 00000000 		.4byte	0
 7660 0dd1 00000000 		.4byte	0
 7661              	.LLST74:
 7662 0dd5 00000000 		.4byte	.LVL236
 7663 0dd9 0C000000 		.4byte	.LVL238
 7664 0ddd 0100     		.2byte	0x1
 7665 0ddf 52       		.byte	0x52
 7666 0de0 0C000000 		.4byte	.LVL238
 7667 0de4 92000000 		.4byte	.LVL254
 7668 0de8 0200     		.2byte	0x2
 7669 0dea 91       		.byte	0x91
 7670 0deb 64       		.sleb128 -28
 7671 0dec 92000000 		.4byte	.LVL254
 7672 0df0 97000000 		.4byte	.LVL255-1
 7673 0df4 0200     		.2byte	0x2
 7674 0df6 71       		.byte	0x71
 7675 0df7 00       		.sleb128 0
 7676 0df8 97000000 		.4byte	.LVL255-1
 7677 0dfc F2000000 		.4byte	.LVL266
 7678 0e00 0200     		.2byte	0x2
 7679 0e02 91       		.byte	0x91
 7680 0e03 64       		.sleb128 -28
 7681 0e04 F2000000 		.4byte	.LVL266
 7682 0e08 F8000000 		.4byte	.LFE81
 7683 0e0c 0200     		.2byte	0x2
 7684 0e0e 7D       		.byte	0x7d
 7685 0e0f 64       		.sleb128 -28
 7686 0e10 00000000 		.4byte	0
 7687 0e14 00000000 		.4byte	0
 7688              	.LLST75:
 7689 0e18 0A000000 		.4byte	.LVL237
 7690 0e1c 0C000000 		.4byte	.LVL238
 7691 0e20 0200     		.2byte	0x2
 7692 0e22 30       		.byte	0x30
 7693 0e23 9F       		.byte	0x9f
 7694 0e24 0C000000 		.4byte	.LVL238
 7695 0e28 16000000 		.4byte	.LVL241
 7696 0e2c 0100     		.2byte	0x1
 7697 0e2e 55       		.byte	0x55
 7698 0e2f 46000000 		.4byte	.LVL245
 7699 0e33 5A000000 		.4byte	.LVL248
 7700 0e37 0100     		.2byte	0x1
 7701 0e39 55       		.byte	0x55
 7702 0e3a 5A000000 		.4byte	.LVL248
 7703 0e3e 5C000000 		.4byte	.LVL249
 7704 0e42 0200     		.2byte	0x2
 7705 0e44 31       		.byte	0x31
 7706 0e45 9F       		.byte	0x9f
 7707 0e46 5C000000 		.4byte	.LVL249
 7708 0e4a EE000000 		.4byte	.LVL265
 7709 0e4e 0100     		.2byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 194


 7710 0e50 55       		.byte	0x55
 7711 0e51 00000000 		.4byte	0
 7712 0e55 00000000 		.4byte	0
 7713              	.LLST76:
 7714 0e59 16000000 		.4byte	.LVL241
 7715 0e5d 46000000 		.4byte	.LVL245
 7716 0e61 0100     		.2byte	0x1
 7717 0e63 55       		.byte	0x55
 7718 0e64 00000000 		.4byte	0
 7719 0e68 00000000 		.4byte	0
 7720              	.LLST77:
 7721 0e6c 0A000000 		.4byte	.LVL237
 7722 0e70 0C000000 		.4byte	.LVL238
 7723 0e74 0100     		.2byte	0x1
 7724 0e76 50       		.byte	0x50
 7725 0e77 0C000000 		.4byte	.LVL238
 7726 0e7b F2000000 		.4byte	.LVL266
 7727 0e7f 0100     		.2byte	0x1
 7728 0e81 54       		.byte	0x54
 7729 0e82 F2000000 		.4byte	.LVL266
 7730 0e86 F8000000 		.4byte	.LFE81
 7731 0e8a 0400     		.2byte	0x4
 7732 0e8c F3       		.byte	0xf3
 7733 0e8d 01       		.uleb128 0x1
 7734 0e8e 50       		.byte	0x50
 7735 0e8f 9F       		.byte	0x9f
 7736 0e90 00000000 		.4byte	0
 7737 0e94 00000000 		.4byte	0
 7738              	.LLST78:
 7739 0e98 12000000 		.4byte	.LVL240
 7740 0e9c 1D000000 		.4byte	.LVL242-1
 7741 0ea0 0100     		.2byte	0x1
 7742 0ea2 53       		.byte	0x53
 7743 0ea3 46000000 		.4byte	.LVL245
 7744 0ea7 48000000 		.4byte	.LVL246
 7745 0eab 0100     		.2byte	0x1
 7746 0ead 53       		.byte	0x53
 7747 0eae 00000000 		.4byte	0
 7748 0eb2 00000000 		.4byte	0
 7749              	.LLST79:
 7750 0eb6 00000000 		.4byte	.LVL267
 7751 0eba 29000000 		.4byte	.LVL271-1
 7752 0ebe 0100     		.2byte	0x1
 7753 0ec0 50       		.byte	0x50
 7754 0ec1 29000000 		.4byte	.LVL271-1
 7755 0ec5 5C000000 		.4byte	.LVL276
 7756 0ec9 0100     		.2byte	0x1
 7757 0ecb 57       		.byte	0x57
 7758 0ecc 5C000000 		.4byte	.LVL276
 7759 0ed0 5E000000 		.4byte	.LVL277
 7760 0ed4 0100     		.2byte	0x1
 7761 0ed6 50       		.byte	0x50
 7762 0ed7 5E000000 		.4byte	.LVL277
 7763 0edb 60000000 		.4byte	.LVL278
 7764 0edf 0400     		.2byte	0x4
 7765 0ee1 F3       		.byte	0xf3
 7766 0ee2 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 195


 7767 0ee3 50       		.byte	0x50
 7768 0ee4 9F       		.byte	0x9f
 7769 0ee5 60000000 		.4byte	.LVL278
 7770 0ee9 6A000000 		.4byte	.LVL279
 7771 0eed 0100     		.2byte	0x1
 7772 0eef 57       		.byte	0x57
 7773 0ef0 6A000000 		.4byte	.LVL279
 7774 0ef4 72000000 		.4byte	.LFE82
 7775 0ef8 0400     		.2byte	0x4
 7776 0efa F3       		.byte	0xf3
 7777 0efb 01       		.uleb128 0x1
 7778 0efc 50       		.byte	0x50
 7779 0efd 9F       		.byte	0x9f
 7780 0efe 00000000 		.4byte	0
 7781 0f02 00000000 		.4byte	0
 7782              	.LLST80:
 7783 0f06 00000000 		.4byte	.LVL267
 7784 0f0a 29000000 		.4byte	.LVL271-1
 7785 0f0e 0100     		.2byte	0x1
 7786 0f10 51       		.byte	0x51
 7787 0f11 29000000 		.4byte	.LVL271-1
 7788 0f15 5C000000 		.4byte	.LVL276
 7789 0f19 0400     		.2byte	0x4
 7790 0f1b F3       		.byte	0xf3
 7791 0f1c 01       		.uleb128 0x1
 7792 0f1d 51       		.byte	0x51
 7793 0f1e 9F       		.byte	0x9f
 7794 0f1f 5C000000 		.4byte	.LVL276
 7795 0f23 60000000 		.4byte	.LVL278
 7796 0f27 0100     		.2byte	0x1
 7797 0f29 51       		.byte	0x51
 7798 0f2a 60000000 		.4byte	.LVL278
 7799 0f2e 72000000 		.4byte	.LFE82
 7800 0f32 0400     		.2byte	0x4
 7801 0f34 F3       		.byte	0xf3
 7802 0f35 01       		.uleb128 0x1
 7803 0f36 51       		.byte	0x51
 7804 0f37 9F       		.byte	0x9f
 7805 0f38 00000000 		.4byte	0
 7806 0f3c 00000000 		.4byte	0
 7807              	.LLST81:
 7808 0f40 00000000 		.4byte	.LVL267
 7809 0f44 29000000 		.4byte	.LVL271-1
 7810 0f48 0100     		.2byte	0x1
 7811 0f4a 52       		.byte	0x52
 7812 0f4b 29000000 		.4byte	.LVL271-1
 7813 0f4f 5C000000 		.4byte	.LVL276
 7814 0f53 0100     		.2byte	0x1
 7815 0f55 58       		.byte	0x58
 7816 0f56 5C000000 		.4byte	.LVL276
 7817 0f5a 60000000 		.4byte	.LVL278
 7818 0f5e 0100     		.2byte	0x1
 7819 0f60 52       		.byte	0x52
 7820 0f61 60000000 		.4byte	.LVL278
 7821 0f65 6A000000 		.4byte	.LVL279
 7822 0f69 0100     		.2byte	0x1
 7823 0f6b 58       		.byte	0x58
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 196


 7824 0f6c 6A000000 		.4byte	.LVL279
 7825 0f70 72000000 		.4byte	.LFE82
 7826 0f74 0400     		.2byte	0x4
 7827 0f76 F3       		.byte	0xf3
 7828 0f77 01       		.uleb128 0x1
 7829 0f78 52       		.byte	0x52
 7830 0f79 9F       		.byte	0x9f
 7831 0f7a 00000000 		.4byte	0
 7832 0f7e 00000000 		.4byte	0
 7833              	.LLST82:
 7834 0f82 04000000 		.4byte	.LVL268
 7835 0f86 29000000 		.4byte	.LVL271-1
 7836 0f8a 0100     		.2byte	0x1
 7837 0f8c 50       		.byte	0x50
 7838 0f8d 29000000 		.4byte	.LVL271-1
 7839 0f91 5C000000 		.4byte	.LVL276
 7840 0f95 0100     		.2byte	0x1
 7841 0f97 57       		.byte	0x57
 7842 0f98 5C000000 		.4byte	.LVL276
 7843 0f9c 5E000000 		.4byte	.LVL277
 7844 0fa0 0100     		.2byte	0x1
 7845 0fa2 50       		.byte	0x50
 7846 0fa3 5E000000 		.4byte	.LVL277
 7847 0fa7 60000000 		.4byte	.LVL278
 7848 0fab 0400     		.2byte	0x4
 7849 0fad F3       		.byte	0xf3
 7850 0fae 01       		.uleb128 0x1
 7851 0faf 50       		.byte	0x50
 7852 0fb0 9F       		.byte	0x9f
 7853 0fb1 60000000 		.4byte	.LVL278
 7854 0fb5 6A000000 		.4byte	.LVL279
 7855 0fb9 0100     		.2byte	0x1
 7856 0fbb 57       		.byte	0x57
 7857 0fbc 6A000000 		.4byte	.LVL279
 7858 0fc0 72000000 		.4byte	.LFE82
 7859 0fc4 0400     		.2byte	0x4
 7860 0fc6 F3       		.byte	0xf3
 7861 0fc7 01       		.uleb128 0x1
 7862 0fc8 50       		.byte	0x50
 7863 0fc9 9F       		.byte	0x9f
 7864 0fca 00000000 		.4byte	0
 7865 0fce 00000000 		.4byte	0
 7866              	.LLST83:
 7867 0fd2 1A000000 		.4byte	.LVL269
 7868 0fd6 2C000000 		.4byte	.LVL272
 7869 0fda 0100     		.2byte	0x1
 7870 0fdc 54       		.byte	0x54
 7871 0fdd 2C000000 		.4byte	.LVL272
 7872 0fe1 5C000000 		.4byte	.LVL276
 7873 0fe5 0300     		.2byte	0x3
 7874 0fe7 74       		.byte	0x74
 7875 0fe8 01       		.sleb128 1
 7876 0fe9 9F       		.byte	0x9f
 7877 0fea 5C000000 		.4byte	.LVL276
 7878 0fee 60000000 		.4byte	.LVL278
 7879 0ff2 0100     		.2byte	0x1
 7880 0ff4 54       		.byte	0x54
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 197


 7881 0ff5 60000000 		.4byte	.LVL278
 7882 0ff9 6A000000 		.4byte	.LVL279
 7883 0ffd 0300     		.2byte	0x3
 7884 0fff 74       		.byte	0x74
 7885 1000 01       		.sleb128 1
 7886 1001 9F       		.byte	0x9f
 7887 1002 00000000 		.4byte	0
 7888 1006 00000000 		.4byte	0
 7889              	.LLST84:
 7890 100a 26000000 		.4byte	.LVL270
 7891 100e 52000000 		.4byte	.LVL274
 7892 1012 0100     		.2byte	0x1
 7893 1014 55       		.byte	0x55
 7894 1015 52000000 		.4byte	.LVL274
 7895 1019 54000000 		.4byte	.LVL275
 7896 101d 0300     		.2byte	0x3
 7897 101f 75       		.byte	0x75
 7898 1020 7F       		.sleb128 -1
 7899 1021 9F       		.byte	0x9f
 7900 1022 60000000 		.4byte	.LVL278
 7901 1026 6A000000 		.4byte	.LVL279
 7902 102a 0100     		.2byte	0x1
 7903 102c 55       		.byte	0x55
 7904 102d 00000000 		.4byte	0
 7905 1031 00000000 		.4byte	0
 7906              	.LLST85:
 7907 1035 6A000000 		.4byte	.LVL279
 7908 1039 6E000000 		.4byte	.LVL280
 7909 103d 0100     		.2byte	0x1
 7910 103f 56       		.byte	0x56
 7911 1040 00000000 		.4byte	0
 7912 1044 00000000 		.4byte	0
 7913              	.LLST86:
 7914 1048 00000000 		.4byte	.LVL281
 7915 104c 21000000 		.4byte	.LVL284-1
 7916 1050 0100     		.2byte	0x1
 7917 1052 50       		.byte	0x50
 7918 1053 21000000 		.4byte	.LVL284-1
 7919 1057 28000000 		.4byte	.LVL286
 7920 105b 0100     		.2byte	0x1
 7921 105d 54       		.byte	0x54
 7922 105e 28000000 		.4byte	.LVL286
 7923 1062 2A000000 		.4byte	.LVL287
 7924 1066 0100     		.2byte	0x1
 7925 1068 50       		.byte	0x50
 7926 1069 2A000000 		.4byte	.LVL287
 7927 106d 30000000 		.4byte	.LFE83
 7928 1071 0400     		.2byte	0x4
 7929 1073 F3       		.byte	0xf3
 7930 1074 01       		.uleb128 0x1
 7931 1075 50       		.byte	0x50
 7932 1076 9F       		.byte	0x9f
 7933 1077 00000000 		.4byte	0
 7934 107b 00000000 		.4byte	0
 7935              	.LLST87:
 7936 107f 00000000 		.4byte	.LVL281
 7937 1083 21000000 		.4byte	.LVL284-1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 198


 7938 1087 0100     		.2byte	0x1
 7939 1089 51       		.byte	0x51
 7940 108a 21000000 		.4byte	.LVL284-1
 7941 108e 28000000 		.4byte	.LVL286
 7942 1092 0400     		.2byte	0x4
 7943 1094 F3       		.byte	0xf3
 7944 1095 01       		.uleb128 0x1
 7945 1096 51       		.byte	0x51
 7946 1097 9F       		.byte	0x9f
 7947 1098 28000000 		.4byte	.LVL286
 7948 109c 2A000000 		.4byte	.LVL287
 7949 10a0 0100     		.2byte	0x1
 7950 10a2 51       		.byte	0x51
 7951 10a3 2A000000 		.4byte	.LVL287
 7952 10a7 30000000 		.4byte	.LFE83
 7953 10ab 0400     		.2byte	0x4
 7954 10ad F3       		.byte	0xf3
 7955 10ae 01       		.uleb128 0x1
 7956 10af 51       		.byte	0x51
 7957 10b0 9F       		.byte	0x9f
 7958 10b1 00000000 		.4byte	0
 7959 10b5 00000000 		.4byte	0
 7960              	.LLST88:
 7961 10b9 24000000 		.4byte	.LVL285
 7962 10bd 28000000 		.4byte	.LVL286
 7963 10c1 0200     		.2byte	0x2
 7964 10c3 31       		.byte	0x31
 7965 10c4 9F       		.byte	0x9f
 7966 10c5 2A000000 		.4byte	.LVL287
 7967 10c9 30000000 		.4byte	.LFE83
 7968 10cd 0100     		.2byte	0x1
 7969 10cf 50       		.byte	0x50
 7970 10d0 00000000 		.4byte	0
 7971 10d4 00000000 		.4byte	0
 7972              	.LLST89:
 7973 10d8 1E000000 		.4byte	.LVL283
 7974 10dc 28000000 		.4byte	.LVL286
 7975 10e0 0100     		.2byte	0x1
 7976 10e2 56       		.byte	0x56
 7977 10e3 00000000 		.4byte	0
 7978 10e7 00000000 		.4byte	0
 7979              	.LLST90:
 7980 10eb 02000000 		.4byte	.LVL282
 7981 10ef 21000000 		.4byte	.LVL284-1
 7982 10f3 0100     		.2byte	0x1
 7983 10f5 50       		.byte	0x50
 7984 10f6 21000000 		.4byte	.LVL284-1
 7985 10fa 28000000 		.4byte	.LVL286
 7986 10fe 0100     		.2byte	0x1
 7987 1100 54       		.byte	0x54
 7988 1101 28000000 		.4byte	.LVL286
 7989 1105 2A000000 		.4byte	.LVL287
 7990 1109 0100     		.2byte	0x1
 7991 110b 50       		.byte	0x50
 7992 110c 2A000000 		.4byte	.LVL287
 7993 1110 30000000 		.4byte	.LFE83
 7994 1114 0400     		.2byte	0x4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 199


 7995 1116 F3       		.byte	0xf3
 7996 1117 01       		.uleb128 0x1
 7997 1118 50       		.byte	0x50
 7998 1119 9F       		.byte	0x9f
 7999 111a 00000000 		.4byte	0
 8000 111e 00000000 		.4byte	0
 8001              	.LLST91:
 8002 1122 2A000000 		.4byte	.LVL287
 8003 1126 2E000000 		.4byte	.LVL288
 8004 112a 0100     		.2byte	0x1
 8005 112c 55       		.byte	0x55
 8006 112d 00000000 		.4byte	0
 8007 1131 00000000 		.4byte	0
 8008              	.LLST92:
 8009 1135 00000000 		.4byte	.LVL289
 8010 1139 07000000 		.4byte	.LVL290-1
 8011 113d 0100     		.2byte	0x1
 8012 113f 50       		.byte	0x50
 8013 1140 07000000 		.4byte	.LVL290-1
 8014 1144 0A000000 		.4byte	.LVL291
 8015 1148 0100     		.2byte	0x1
 8016 114a 54       		.byte	0x54
 8017 114b 0A000000 		.4byte	.LVL291
 8018 114f 12000000 		.4byte	.LFE84
 8019 1153 0400     		.2byte	0x4
 8020 1155 F3       		.byte	0xf3
 8021 1156 01       		.uleb128 0x1
 8022 1157 50       		.byte	0x50
 8023 1158 9F       		.byte	0x9f
 8024 1159 00000000 		.4byte	0
 8025 115d 00000000 		.4byte	0
 8026              	.LLST93:
 8027 1161 00000000 		.4byte	.LVL293
 8028 1165 07000000 		.4byte	.LVL295-1
 8029 1169 0100     		.2byte	0x1
 8030 116b 50       		.byte	0x50
 8031 116c 07000000 		.4byte	.LVL295-1
 8032 1170 0C000000 		.4byte	.LVL296
 8033 1174 0100     		.2byte	0x1
 8034 1176 54       		.byte	0x54
 8035 1177 0C000000 		.4byte	.LVL296
 8036 117b 16000000 		.4byte	.LFE85
 8037 117f 0400     		.2byte	0x4
 8038 1181 F3       		.byte	0xf3
 8039 1182 01       		.uleb128 0x1
 8040 1183 50       		.byte	0x50
 8041 1184 9F       		.byte	0x9f
 8042 1185 00000000 		.4byte	0
 8043 1189 00000000 		.4byte	0
 8044              	.LLST94:
 8045 118d 04000000 		.4byte	.LVL294
 8046 1191 07000000 		.4byte	.LVL295-1
 8047 1195 0100     		.2byte	0x1
 8048 1197 50       		.byte	0x50
 8049 1198 07000000 		.4byte	.LVL295-1
 8050 119c 0C000000 		.4byte	.LVL296
 8051 11a0 0100     		.2byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 200


 8052 11a2 54       		.byte	0x54
 8053 11a3 0C000000 		.4byte	.LVL296
 8054 11a7 16000000 		.4byte	.LFE85
 8055 11ab 0400     		.2byte	0x4
 8056 11ad F3       		.byte	0xf3
 8057 11ae 01       		.uleb128 0x1
 8058 11af 50       		.byte	0x50
 8059 11b0 9F       		.byte	0x9f
 8060 11b1 00000000 		.4byte	0
 8061 11b5 00000000 		.4byte	0
 8062              	.LLST95:
 8063 11b9 00000000 		.4byte	.LVL299
 8064 11bd 02000000 		.4byte	.LVL300
 8065 11c1 0100     		.2byte	0x1
 8066 11c3 50       		.byte	0x50
 8067 11c4 02000000 		.4byte	.LVL300
 8068 11c8 04000000 		.4byte	.LFE86
 8069 11cc 0400     		.2byte	0x4
 8070 11ce F3       		.byte	0xf3
 8071 11cf 01       		.uleb128 0x1
 8072 11d0 50       		.byte	0x50
 8073 11d1 9F       		.byte	0x9f
 8074 11d2 00000000 		.4byte	0
 8075 11d6 00000000 		.4byte	0
 8076              	.LLST96:
 8077 11da 00000000 		.4byte	.LVL301
 8078 11de 02000000 		.4byte	.LVL302
 8079 11e2 0100     		.2byte	0x1
 8080 11e4 50       		.byte	0x50
 8081 11e5 02000000 		.4byte	.LVL302
 8082 11e9 04000000 		.4byte	.LFE88
 8083 11ed 0400     		.2byte	0x4
 8084 11ef F3       		.byte	0xf3
 8085 11f0 01       		.uleb128 0x1
 8086 11f1 50       		.byte	0x50
 8087 11f2 9F       		.byte	0x9f
 8088 11f3 00000000 		.4byte	0
 8089 11f7 00000000 		.4byte	0
 8090              	.LLST97:
 8091 11fb 00000000 		.4byte	.LVL304
 8092 11ff 04000000 		.4byte	.LVL305
 8093 1203 0100     		.2byte	0x1
 8094 1205 50       		.byte	0x50
 8095 1206 04000000 		.4byte	.LVL305
 8096 120a 06000000 		.4byte	.LFE90
 8097 120e 0400     		.2byte	0x4
 8098 1210 F3       		.byte	0xf3
 8099 1211 01       		.uleb128 0x1
 8100 1212 50       		.byte	0x50
 8101 1213 9F       		.byte	0x9f
 8102 1214 00000000 		.4byte	0
 8103 1218 00000000 		.4byte	0
 8104              	.LLST98:
 8105 121c 00000000 		.4byte	.LVL306
 8106 1220 06000000 		.4byte	.LVL307
 8107 1224 0100     		.2byte	0x1
 8108 1226 50       		.byte	0x50
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 201


 8109 1227 06000000 		.4byte	.LVL307
 8110 122b 08000000 		.4byte	.LVL308
 8111 122f 0400     		.2byte	0x4
 8112 1231 F3       		.byte	0xf3
 8113 1232 01       		.uleb128 0x1
 8114 1233 50       		.byte	0x50
 8115 1234 9F       		.byte	0x9f
 8116 1235 08000000 		.4byte	.LVL308
 8117 1239 0A000000 		.4byte	.LVL309
 8118 123d 0100     		.2byte	0x1
 8119 123f 50       		.byte	0x50
 8120 1240 0A000000 		.4byte	.LVL309
 8121 1244 0C000000 		.4byte	.LFE96
 8122 1248 0400     		.2byte	0x4
 8123 124a F3       		.byte	0xf3
 8124 124b 01       		.uleb128 0x1
 8125 124c 50       		.byte	0x50
 8126 124d 9F       		.byte	0x9f
 8127 124e 00000000 		.4byte	0
 8128 1252 00000000 		.4byte	0
 8129              	.LLST99:
 8130 1256 00000000 		.4byte	.LVL310
 8131 125a 0A000000 		.4byte	.LVL311
 8132 125e 0100     		.2byte	0x1
 8133 1260 50       		.byte	0x50
 8134 1261 0A000000 		.4byte	.LVL311
 8135 1265 0C000000 		.4byte	.LVL312
 8136 1269 0400     		.2byte	0x4
 8137 126b F3       		.byte	0xf3
 8138 126c 01       		.uleb128 0x1
 8139 126d 50       		.byte	0x50
 8140 126e 9F       		.byte	0x9f
 8141 126f 0C000000 		.4byte	.LVL312
 8142 1273 0E000000 		.4byte	.LVL313
 8143 1277 0100     		.2byte	0x1
 8144 1279 50       		.byte	0x50
 8145 127a 0E000000 		.4byte	.LVL313
 8146 127e 10000000 		.4byte	.LFE98
 8147 1282 0400     		.2byte	0x4
 8148 1284 F3       		.byte	0xf3
 8149 1285 01       		.uleb128 0x1
 8150 1286 50       		.byte	0x50
 8151 1287 9F       		.byte	0x9f
 8152 1288 00000000 		.4byte	0
 8153 128c 00000000 		.4byte	0
 8154              	.LLST100:
 8155 1290 00000000 		.4byte	.LVL314
 8156 1294 04000000 		.4byte	.LVL315
 8157 1298 0200     		.2byte	0x2
 8158 129a 30       		.byte	0x30
 8159 129b 9F       		.byte	0x9f
 8160 129c 04000000 		.4byte	.LVL315
 8161 12a0 16000000 		.4byte	.LVL316
 8162 12a4 0100     		.2byte	0x1
 8163 12a6 53       		.byte	0x53
 8164 12a7 1A000000 		.4byte	.LVL317
 8165 12ab 28000000 		.4byte	.LFE99
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 202


 8166 12af 0100     		.2byte	0x1
 8167 12b1 53       		.byte	0x53
 8168 12b2 00000000 		.4byte	0
 8169 12b6 00000000 		.4byte	0
 8170              	.LLST101:
 8171 12ba 00000000 		.4byte	.LVL319
 8172 12be 16000000 		.4byte	.LVL321
 8173 12c2 0100     		.2byte	0x1
 8174 12c4 50       		.byte	0x50
 8175 12c5 16000000 		.4byte	.LVL321
 8176 12c9 18000000 		.4byte	.LVL322
 8177 12cd 0400     		.2byte	0x4
 8178 12cf F3       		.byte	0xf3
 8179 12d0 01       		.uleb128 0x1
 8180 12d1 50       		.byte	0x50
 8181 12d2 9F       		.byte	0x9f
 8182 12d3 18000000 		.4byte	.LVL322
 8183 12d7 20000000 		.4byte	.LVL324
 8184 12db 0100     		.2byte	0x1
 8185 12dd 50       		.byte	0x50
 8186 12de 20000000 		.4byte	.LVL324
 8187 12e2 28000000 		.4byte	.LFE100
 8188 12e6 0400     		.2byte	0x4
 8189 12e8 F3       		.byte	0xf3
 8190 12e9 01       		.uleb128 0x1
 8191 12ea 50       		.byte	0x50
 8192 12eb 9F       		.byte	0x9f
 8193 12ec 00000000 		.4byte	0
 8194 12f0 00000000 		.4byte	0
 8195              	.LLST102:
 8196 12f4 00000000 		.4byte	.LVL319
 8197 12f8 04000000 		.4byte	.LVL320
 8198 12fc 0200     		.2byte	0x2
 8199 12fe 30       		.byte	0x30
 8200 12ff 9F       		.byte	0x9f
 8201 1300 04000000 		.4byte	.LVL320
 8202 1304 28000000 		.4byte	.LFE100
 8203 1308 0100     		.2byte	0x1
 8204 130a 53       		.byte	0x53
 8205 130b 00000000 		.4byte	0
 8206 130f 00000000 		.4byte	0
 8207              	.LLST103:
 8208 1313 00000000 		.4byte	.LVL319
 8209 1317 16000000 		.4byte	.LVL321
 8210 131b 0200     		.2byte	0x2
 8211 131d 30       		.byte	0x30
 8212 131e 9F       		.byte	0x9f
 8213 131f 16000000 		.4byte	.LVL321
 8214 1323 18000000 		.4byte	.LVL322
 8215 1327 0100     		.2byte	0x1
 8216 1329 50       		.byte	0x50
 8217 132a 18000000 		.4byte	.LVL322
 8218 132e 20000000 		.4byte	.LVL324
 8219 1332 0200     		.2byte	0x2
 8220 1334 30       		.byte	0x30
 8221 1335 9F       		.byte	0x9f
 8222 1336 20000000 		.4byte	.LVL324
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 203


 8223 133a 28000000 		.4byte	.LFE100
 8224 133e 0100     		.2byte	0x1
 8225 1340 50       		.byte	0x50
 8226 1341 00000000 		.4byte	0
 8227 1345 00000000 		.4byte	0
 8228              	.LLST104:
 8229 1349 00000000 		.4byte	.LVL325
 8230 134d 04000000 		.4byte	.LVL326
 8231 1351 0200     		.2byte	0x2
 8232 1353 30       		.byte	0x30
 8233 1354 9F       		.byte	0x9f
 8234 1355 04000000 		.4byte	.LVL326
 8235 1359 1C000000 		.4byte	.LVL327
 8236 135d 0100     		.2byte	0x1
 8237 135f 53       		.byte	0x53
 8238 1360 20000000 		.4byte	.LVL328
 8239 1364 2C000000 		.4byte	.LFE101
 8240 1368 0100     		.2byte	0x1
 8241 136a 53       		.byte	0x53
 8242 136b 00000000 		.4byte	0
 8243 136f 00000000 		.4byte	0
 8244              	.LLST105:
 8245 1373 00000000 		.4byte	.LVL330
 8246 1377 07000000 		.4byte	.LVL332-1
 8247 137b 0100     		.2byte	0x1
 8248 137d 50       		.byte	0x50
 8249 137e 07000000 		.4byte	.LVL332-1
 8250 1382 10000000 		.4byte	.LFE87
 8251 1386 0100     		.2byte	0x1
 8252 1388 54       		.byte	0x54
 8253 1389 00000000 		.4byte	0
 8254 138d 00000000 		.4byte	0
 8255              	.LLST106:
 8256 1391 04000000 		.4byte	.LVL331
 8257 1395 07000000 		.4byte	.LVL332-1
 8258 1399 0100     		.2byte	0x1
 8259 139b 50       		.byte	0x50
 8260 139c 07000000 		.4byte	.LVL332-1
 8261 13a0 10000000 		.4byte	.LFE87
 8262 13a4 0100     		.2byte	0x1
 8263 13a6 54       		.byte	0x54
 8264 13a7 00000000 		.4byte	0
 8265 13ab 00000000 		.4byte	0
 8266              		.section	.debug_aranges,"",%progbits
 8267 0000 24010000 		.4byte	0x124
 8268 0004 0200     		.2byte	0x2
 8269 0006 00000000 		.4byte	.Ldebug_info0
 8270 000a 04       		.byte	0x4
 8271 000b 00       		.byte	0
 8272 000c 0000     		.2byte	0
 8273 000e 0000     		.2byte	0
 8274 0010 00000000 		.4byte	.LFB91
 8275 0014 12000000 		.4byte	.LFE91-.LFB91
 8276 0018 00000000 		.4byte	.LFB97
 8277 001c 1E000000 		.4byte	.LFE97-.LFB97
 8278 0020 00000000 		.4byte	.LFB95
 8279 0024 1A000000 		.4byte	.LFE95-.LFB95
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 204


 8280 0028 00000000 		.4byte	.LFB92
 8281 002c 76000000 		.4byte	.LFE92-.LFB92
 8282 0030 00000000 		.4byte	.LFB93
 8283 0034 24000000 		.4byte	.LFE93-.LFB93
 8284 0038 00000000 		.4byte	.LFB94
 8285 003c 66000000 		.4byte	.LFE94-.LFB94
 8286 0040 00000000 		.4byte	.LFB68
 8287 0044 6C000000 		.4byte	.LFE68-.LFB68
 8288 0048 00000000 		.4byte	.LFB70
 8289 004c 22000000 		.4byte	.LFE70-.LFB70
 8290 0050 00000000 		.4byte	.LFB69
 8291 0054 34000000 		.4byte	.LFE69-.LFB69
 8292 0058 00000000 		.4byte	.LFB75
 8293 005c 16000000 		.4byte	.LFE75-.LFB75
 8294 0060 00000000 		.4byte	.LFB76
 8295 0064 08010000 		.4byte	.LFE76-.LFB76
 8296 0068 00000000 		.4byte	.LFB71
 8297 006c 18000000 		.4byte	.LFE71-.LFB71
 8298 0070 00000000 		.4byte	.LFB72
 8299 0074 16000000 		.4byte	.LFE72-.LFB72
 8300 0078 00000000 		.4byte	.LFB73
 8301 007c 2C000000 		.4byte	.LFE73-.LFB73
 8302 0080 00000000 		.4byte	.LFB77
 8303 0084 6E000000 		.4byte	.LFE77-.LFB77
 8304 0088 00000000 		.4byte	.LFB78
 8305 008c 64000000 		.4byte	.LFE78-.LFB78
 8306 0090 00000000 		.4byte	.LFB79
 8307 0094 F8000000 		.4byte	.LFE79-.LFB79
 8308 0098 00000000 		.4byte	.LFB80
 8309 009c 28010000 		.4byte	.LFE80-.LFB80
 8310 00a0 00000000 		.4byte	.LFB74
 8311 00a4 30000000 		.4byte	.LFE74-.LFB74
 8312 00a8 00000000 		.4byte	.LFB81
 8313 00ac F8000000 		.4byte	.LFE81-.LFB81
 8314 00b0 00000000 		.4byte	.LFB82
 8315 00b4 72000000 		.4byte	.LFE82-.LFB82
 8316 00b8 00000000 		.4byte	.LFB83
 8317 00bc 30000000 		.4byte	.LFE83-.LFB83
 8318 00c0 00000000 		.4byte	.LFB84
 8319 00c4 12000000 		.4byte	.LFE84-.LFB84
 8320 00c8 00000000 		.4byte	.LFB85
 8321 00cc 16000000 		.4byte	.LFE85-.LFB85
 8322 00d0 00000000 		.4byte	.LFB86
 8323 00d4 04000000 		.4byte	.LFE86-.LFB86
 8324 00d8 00000000 		.4byte	.LFB88
 8325 00dc 04000000 		.4byte	.LFE88-.LFB88
 8326 00e0 00000000 		.4byte	.LFB89
 8327 00e4 04000000 		.4byte	.LFE89-.LFB89
 8328 00e8 00000000 		.4byte	.LFB90
 8329 00ec 06000000 		.4byte	.LFE90-.LFB90
 8330 00f0 00000000 		.4byte	.LFB96
 8331 00f4 0C000000 		.4byte	.LFE96-.LFB96
 8332 00f8 00000000 		.4byte	.LFB98
 8333 00fc 10000000 		.4byte	.LFE98-.LFB98
 8334 0100 00000000 		.4byte	.LFB99
 8335 0104 28000000 		.4byte	.LFE99-.LFB99
 8336 0108 00000000 		.4byte	.LFB100
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 205


 8337 010c 28000000 		.4byte	.LFE100-.LFB100
 8338 0110 00000000 		.4byte	.LFB101
 8339 0114 2C000000 		.4byte	.LFE101-.LFB101
 8340 0118 00000000 		.4byte	.LFB87
 8341 011c 10000000 		.4byte	.LFE87-.LFB87
 8342 0120 00000000 		.4byte	0
 8343 0124 00000000 		.4byte	0
 8344              		.section	.debug_ranges,"",%progbits
 8345              	.Ldebug_ranges0:
 8346 0000 26000000 		.4byte	.LBB27
 8347 0004 5A000000 		.4byte	.LBE27
 8348 0008 5E000000 		.4byte	.LBB28
 8349 000c 68000000 		.4byte	.LBE28
 8350 0010 00000000 		.4byte	0
 8351 0014 00000000 		.4byte	0
 8352 0018 1E000000 		.4byte	.LBB34
 8353 001c 50000000 		.4byte	.LBE34
 8354 0020 54000000 		.4byte	.LBB35
 8355 0024 5E000000 		.4byte	.LBE35
 8356 0028 00000000 		.4byte	0
 8357 002c 00000000 		.4byte	0
 8358 0030 20000000 		.4byte	.LBB45
 8359 0034 5C000000 		.4byte	.LBE45
 8360 0038 60000000 		.4byte	.LBB46
 8361 003c 6A000000 		.4byte	.LBE46
 8362 0040 00000000 		.4byte	0
 8363 0044 00000000 		.4byte	0
 8364 0048 00000000 		.4byte	.LFB91
 8365 004c 12000000 		.4byte	.LFE91
 8366 0050 00000000 		.4byte	.LFB97
 8367 0054 1E000000 		.4byte	.LFE97
 8368 0058 00000000 		.4byte	.LFB95
 8369 005c 1A000000 		.4byte	.LFE95
 8370 0060 00000000 		.4byte	.LFB92
 8371 0064 76000000 		.4byte	.LFE92
 8372 0068 00000000 		.4byte	.LFB93
 8373 006c 24000000 		.4byte	.LFE93
 8374 0070 00000000 		.4byte	.LFB94
 8375 0074 66000000 		.4byte	.LFE94
 8376 0078 00000000 		.4byte	.LFB68
 8377 007c 6C000000 		.4byte	.LFE68
 8378 0080 00000000 		.4byte	.LFB70
 8379 0084 22000000 		.4byte	.LFE70
 8380 0088 00000000 		.4byte	.LFB69
 8381 008c 34000000 		.4byte	.LFE69
 8382 0090 00000000 		.4byte	.LFB75
 8383 0094 16000000 		.4byte	.LFE75
 8384 0098 00000000 		.4byte	.LFB76
 8385 009c 08010000 		.4byte	.LFE76
 8386 00a0 00000000 		.4byte	.LFB71
 8387 00a4 18000000 		.4byte	.LFE71
 8388 00a8 00000000 		.4byte	.LFB72
 8389 00ac 16000000 		.4byte	.LFE72
 8390 00b0 00000000 		.4byte	.LFB73
 8391 00b4 2C000000 		.4byte	.LFE73
 8392 00b8 00000000 		.4byte	.LFB77
 8393 00bc 6E000000 		.4byte	.LFE77
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 206


 8394 00c0 00000000 		.4byte	.LFB78
 8395 00c4 64000000 		.4byte	.LFE78
 8396 00c8 00000000 		.4byte	.LFB79
 8397 00cc F8000000 		.4byte	.LFE79
 8398 00d0 00000000 		.4byte	.LFB80
 8399 00d4 28010000 		.4byte	.LFE80
 8400 00d8 00000000 		.4byte	.LFB74
 8401 00dc 30000000 		.4byte	.LFE74
 8402 00e0 00000000 		.4byte	.LFB81
 8403 00e4 F8000000 		.4byte	.LFE81
 8404 00e8 00000000 		.4byte	.LFB82
 8405 00ec 72000000 		.4byte	.LFE82
 8406 00f0 00000000 		.4byte	.LFB83
 8407 00f4 30000000 		.4byte	.LFE83
 8408 00f8 00000000 		.4byte	.LFB84
 8409 00fc 12000000 		.4byte	.LFE84
 8410 0100 00000000 		.4byte	.LFB85
 8411 0104 16000000 		.4byte	.LFE85
 8412 0108 00000000 		.4byte	.LFB86
 8413 010c 04000000 		.4byte	.LFE86
 8414 0110 00000000 		.4byte	.LFB88
 8415 0114 04000000 		.4byte	.LFE88
 8416 0118 00000000 		.4byte	.LFB89
 8417 011c 04000000 		.4byte	.LFE89
 8418 0120 00000000 		.4byte	.LFB90
 8419 0124 06000000 		.4byte	.LFE90
 8420 0128 00000000 		.4byte	.LFB96
 8421 012c 0C000000 		.4byte	.LFE96
 8422 0130 00000000 		.4byte	.LFB98
 8423 0134 10000000 		.4byte	.LFE98
 8424 0138 00000000 		.4byte	.LFB99
 8425 013c 28000000 		.4byte	.LFE99
 8426 0140 00000000 		.4byte	.LFB100
 8427 0144 28000000 		.4byte	.LFE100
 8428 0148 00000000 		.4byte	.LFB101
 8429 014c 2C000000 		.4byte	.LFE101
 8430 0150 00000000 		.4byte	.LFB87
 8431 0154 10000000 		.4byte	.LFE87
 8432 0158 00000000 		.4byte	0
 8433 015c 00000000 		.4byte	0
 8434              		.section	.debug_line,"",%progbits
 8435              	.Ldebug_line0:
 8436 0000 38070000 		.section	.debug_str,"MS",%progbits,1
 8436      02005402 
 8436      00000201 
 8436      FB0E0D00 
 8436      01010101 
 8437              	.LASF36:
 8438 0000 75784E75 		.ascii	"uxNumberOfItems\000"
 8438      6D626572 
 8438      4F664974 
 8438      656D7300 
 8439              	.LASF137:
 8440 0010 76506F72 		.ascii	"vPortExitCritical\000"
 8440      74457869 
 8440      74437269 
 8440      74696361 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 207


 8440      6C00
 8441              	.LASF110:
 8442 0022 78517565 		.ascii	"xQueueReceive\000"
 8442      75655265 
 8442      63656976 
 8442      6500
 8443              	.LASF118:
 8444 0030 78517565 		.ascii	"xQueueReceiveFromISR\000"
 8444      75655265 
 8444      63656976 
 8444      6546726F 
 8444      6D495352 
 8445              	.LASF52:
 8446 0045 78546173 		.ascii	"xTasksWaitingToReceive\000"
 8446      6B735761 
 8446      6974696E 
 8446      67546F52 
 8446      65636569 
 8447              	.LASF107:
 8448 005c 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 8448      67686572 
 8448      5072696F 
 8448      72697479 
 8448      5461736B 
 8449              	.LASF105:
 8450 0076 70784D75 		.ascii	"pxMutex\000"
 8450      74657800 
 8451              	.LASF111:
 8452 007e 78517565 		.ascii	"xQueueSemaphoreTake\000"
 8452      75655365 
 8452      6D617068 
 8452      6F726554 
 8452      616B6500 
 8453              	.LASF0:
 8454 0092 756E7369 		.ascii	"unsigned int\000"
 8454      676E6564 
 8454      20696E74 
 8454      00
 8455              	.LASF37:
 8456 009f 7078496E 		.ascii	"pxIndex\000"
 8456      64657800 
 8457              	.LASF40:
 8458 00a7 7854494D 		.ascii	"xTIME_OUT\000"
 8458      455F4F55 
 8458      5400
 8459              	.LASF86:
 8460 00b1 70784E65 		.ascii	"pxNewQueue\000"
 8460      77517565 
 8460      756500
 8461              	.LASF10:
 8462 00bc 5F5F696E 		.ascii	"__int32_t\000"
 8462      7433325F 
 8462      7400
 8463              	.LASF32:
 8464 00c6 784C4953 		.ascii	"xLIST_ITEM\000"
 8464      545F4954 
 8464      454D00
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 208


 8465              	.LASF62:
 8466 00d1 51554555 		.ascii	"QUEUE_REGISTRY_ITEM\000"
 8466      455F5245 
 8466      47495354 
 8466      52595F49 
 8466      54454D00 
 8467              	.LASF128:
 8468 00e5 76517565 		.ascii	"vQueueSetQueueNumber\000"
 8468      75655365 
 8468      74517565 
 8468      75654E75 
 8468      6D626572 
 8469              	.LASF51:
 8470 00fa 78546173 		.ascii	"xTasksWaitingToSend\000"
 8470      6B735761 
 8470      6974696E 
 8470      67546F53 
 8470      656E6400 
 8471              	.LASF122:
 8472 010e 75785175 		.ascii	"uxQueueSpacesAvailable\000"
 8472      65756553 
 8472      70616365 
 8472      73417661 
 8472      696C6162 
 8473              	.LASF57:
 8474 0125 6354784C 		.ascii	"cTxLock\000"
 8474      6F636B00 
 8475              	.LASF41:
 8476 012d 784F7665 		.ascii	"xOverflowCount\000"
 8476      72666C6F 
 8476      77436F75 
 8476      6E7400
 8477              	.LASF136:
 8478 013c 76506F72 		.ascii	"vPortEnterCritical\000"
 8478      74456E74 
 8478      65724372 
 8478      69746963 
 8478      616C00
 8479              	.LASF46:
 8480 014f 75785265 		.ascii	"uxRecursiveCallCount\000"
 8480      63757273 
 8480      69766543 
 8480      616C6C43 
 8480      6F756E74 
 8481              	.LASF61:
 8482 0164 51756575 		.ascii	"Queue_t\000"
 8482      655F7400 
 8483              	.LASF95:
 8484 016c 78436F70 		.ascii	"xCopyPosition\000"
 8484      79506F73 
 8484      6974696F 
 8484      6E00
 8485              	.LASF121:
 8486 017a 75785265 		.ascii	"uxReturn\000"
 8486      7475726E 
 8486      00
 8487              	.LASF66:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 209


 8488 0183 51756575 		.ascii	"QueueRegistryItem_t\000"
 8488      65526567 
 8488      69737472 
 8488      79497465 
 8488      6D5F7400 
 8489              	.LASF133:
 8490 0197 76517565 		.ascii	"vQueueDelete\000"
 8490      75654465 
 8490      6C657465 
 8490      00
 8491              	.LASF45:
 8492 01a4 70635265 		.ascii	"pcReadFrom\000"
 8492      61644672 
 8492      6F6D00
 8493              	.LASF132:
 8494 01af 76517565 		.ascii	"vQueueUnregisterQueue\000"
 8494      7565556E 
 8494      72656769 
 8494      73746572 
 8494      51756575 
 8495              	.LASF108:
 8496 01c5 75785361 		.ascii	"uxSavedInterruptStatus\000"
 8496      76656449 
 8496      6E746572 
 8496      72757074 
 8496      53746174 
 8497              	.LASF83:
 8498 01dc 70727649 		.ascii	"prvInitialiseNewQueue\000"
 8498      6E697469 
 8498      616C6973 
 8498      654E6577 
 8498      51756575 
 8499              	.LASF20:
 8500 01f2 75696E74 		.ascii	"uint32_t\000"
 8500      33325F74 
 8500      00
 8501              	.LASF17:
 8502 01fb 696E7438 		.ascii	"int8_t\000"
 8502      5F7400
 8503              	.LASF102:
 8504 0202 75784D75 		.ascii	"uxMutexSize\000"
 8504      74657853 
 8504      697A6500 
 8505              	.LASF97:
 8506 020e 78596965 		.ascii	"xYieldRequired\000"
 8506      6C645265 
 8506      71756972 
 8506      656400
 8507              	.LASF67:
 8508 021d 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 8508      6967696E 
 8508      616C4241 
 8508      53455052 
 8508      4900
 8509              	.LASF81:
 8510 022f 78517565 		.ascii	"xQueue\000"
 8510      756500
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 210


 8511              	.LASF21:
 8512 0236 666C6F61 		.ascii	"float\000"
 8512      7400
 8513              	.LASF47:
 8514 023c 51756575 		.ascii	"QueueDefinition\000"
 8514      65446566 
 8514      696E6974 
 8514      696F6E00 
 8515              	.LASF14:
 8516 024c 6C6F6E67 		.ascii	"long long unsigned int\000"
 8516      206C6F6E 
 8516      6720756E 
 8516      7369676E 
 8516      65642069 
 8517              	.LASF74:
 8518 0263 70727649 		.ascii	"prvIsQueueEmpty\000"
 8518      73517565 
 8518      7565456D 
 8518      70747900 
 8519              	.LASF78:
 8520 0273 70764275 		.ascii	"pvBuffer\000"
 8520      66666572 
 8520      00
 8521              	.LASF69:
 8522 027c 70727647 		.ascii	"prvGetDisinheritPriorityAfterTimeout\000"
 8522      65744469 
 8522      73696E68 
 8522      65726974 
 8522      5072696F 
 8523              	.LASF28:
 8524 02a1 70785072 		.ascii	"pxPrevious\000"
 8524      6576696F 
 8524      757300
 8525              	.LASF53:
 8526 02ac 75784D65 		.ascii	"uxMessagesWaiting\000"
 8526      73736167 
 8526      65735761 
 8526      6974696E 
 8526      6700
 8527              	.LASF142:
 8528 02be 7076506F 		.ascii	"pvPortMalloc\000"
 8528      72744D61 
 8528      6C6C6F63 
 8528      00
 8529              	.LASF144:
 8530 02cb 76546173 		.ascii	"vTaskSuspendAll\000"
 8530      6B537573 
 8530      70656E64 
 8530      416C6C00 
 8531              	.LASF116:
 8532 02db 78517565 		.ascii	"xQueuePeek\000"
 8532      75655065 
 8532      656B00
 8533              	.LASF153:
 8534 02e6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 8534      43313120 
 8534      352E342E 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 211


 8534      31203230 
 8534      31363036 
 8535 0319 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 8535      20726576 
 8535      6973696F 
 8535      6E203233 
 8535      37373135 
 8536 034c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 8536      66756E63 
 8536      74696F6E 
 8536      2D736563 
 8536      74696F6E 
 8537              	.LASF96:
 8538 0374 78456E74 		.ascii	"xEntryTimeSet\000"
 8538      72795469 
 8538      6D655365 
 8538      7400
 8539              	.LASF3:
 8540 0382 73697A65 		.ascii	"size_t\000"
 8540      5F7400
 8541              	.LASF98:
 8542 0389 7854696D 		.ascii	"xTimeOut\000"
 8542      654F7574 
 8542      00
 8543              	.LASF64:
 8544 0392 7848616E 		.ascii	"xHandle\000"
 8544      646C6500 
 8545              	.LASF63:
 8546 039a 70635175 		.ascii	"pcQueueName\000"
 8546      6575654E 
 8546      616D6500 
 8547              	.LASF33:
 8548 03a6 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 8548      495F4C49 
 8548      53545F49 
 8548      54454D00 
 8549              	.LASF35:
 8550 03b6 784C4953 		.ascii	"xLIST\000"
 8550      5400
 8551              	.LASF106:
 8552 03bc 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 8552      75654765 
 8552      6E657269 
 8552      6353656E 
 8552      6446726F 
 8553              	.LASF157:
 8554 03d5 76506F72 		.ascii	"vPortSetBASEPRI\000"
 8554      74536574 
 8554      42415345 
 8554      50524900 
 8555              	.LASF75:
 8556 03e5 70727643 		.ascii	"prvCopyDataToQueue\000"
 8556      6F707944 
 8556      61746154 
 8556      6F517565 
 8556      756500
 8557              	.LASF93:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 212


 8558 03f8 78517565 		.ascii	"xQueueGenericSend\000"
 8558      75654765 
 8558      6E657269 
 8558      6353656E 
 8558      6400
 8559              	.LASF146:
 8560 040a 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 8560      6B506C61 
 8560      63654F6E 
 8560      4576656E 
 8560      744C6973 
 8561              	.LASF149:
 8562 0420 70765461 		.ascii	"pvTaskIncrementMutexHeldCount\000"
 8562      736B496E 
 8562      6372656D 
 8562      656E744D 
 8562      75746578 
 8563              	.LASF55:
 8564 043e 75784974 		.ascii	"uxItemSize\000"
 8564      656D5369 
 8564      7A6500
 8565              	.LASF92:
 8566 0449 7578496E 		.ascii	"uxInitialCount\000"
 8566      69746961 
 8566      6C436F75 
 8566      6E7400
 8567              	.LASF138:
 8568 0458 78546173 		.ascii	"xTaskPriorityDisinherit\000"
 8568      6B507269 
 8568      6F726974 
 8568      79446973 
 8568      696E6865 
 8569              	.LASF101:
 8570 0470 75784D75 		.ascii	"uxMutexLength\000"
 8570      7465784C 
 8570      656E6774 
 8570      6800
 8571              	.LASF16:
 8572 047e 63686172 		.ascii	"char\000"
 8572      00
 8573              	.LASF31:
 8574 0483 4C697374 		.ascii	"ListItem_t\000"
 8574      4974656D 
 8574      5F7400
 8575              	.LASF70:
 8576 048e 70727649 		.ascii	"prvIsQueueFull\000"
 8576      73517565 
 8576      75654675 
 8576      6C6C00
 8577              	.LASF68:
 8578 049d 756C4E65 		.ascii	"ulNewBASEPRI\000"
 8578      77424153 
 8578      45505249 
 8578      00
 8579              	.LASF24:
 8580 04aa 55426173 		.ascii	"UBaseType_t\000"
 8580      65547970 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 213


 8580      655F7400 
 8581              	.LASF109:
 8582 04b6 78517565 		.ascii	"xQueueGiveFromISR\000"
 8582      75654769 
 8582      76654672 
 8582      6F6D4953 
 8582      5200
 8583              	.LASF135:
 8584 04c8 78517565 		.ascii	"xQueueRegistry\000"
 8584      75655265 
 8584      67697374 
 8584      727900
 8585              	.LASF44:
 8586 04d7 51756575 		.ascii	"QueueHandle_t\000"
 8586      6548616E 
 8586      646C655F 
 8586      7400
 8587              	.LASF155:
 8588 04e5 433A5C55 		.ascii	"C:\\Users\\samue\\Desktop\\RobotRage2\\Zumo\\ZumoBo"
 8588      73657273 
 8588      5C73616D 
 8588      75655C44 
 8588      65736B74 
 8589 0512 742E6379 		.ascii	"t.cydsn\000"
 8589      64736E00 
 8590              	.LASF38:
 8591 051a 784C6973 		.ascii	"xListEnd\000"
 8591      74456E64 
 8591      00
 8592              	.LASF123:
 8593 0523 75785175 		.ascii	"uxQueueMessagesWaitingFromISR\000"
 8593      6575654D 
 8593      65737361 
 8593      67657357 
 8593      61697469 
 8594              	.LASF34:
 8595 0541 4D696E69 		.ascii	"MiniListItem_t\000"
 8595      4C697374 
 8595      4974656D 
 8595      5F7400
 8596              	.LASF18:
 8597 0550 75696E74 		.ascii	"uint8_t\000"
 8597      385F7400 
 8598              	.LASF65:
 8599 0558 78517565 		.ascii	"xQueueRegistryItem\000"
 8599      75655265 
 8599      67697374 
 8599      72794974 
 8599      656D00
 8600              	.LASF88:
 8601 056b 78517565 		.ascii	"xQueueGenericCreate\000"
 8601      75654765 
 8601      6E657269 
 8601      63437265 
 8601      61746500 
 8602              	.LASF100:
 8603 057f 78517565 		.ascii	"xQueueCreateMutex\000"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 214


 8603      75654372 
 8603      65617465 
 8603      4D757465 
 8603      7800
 8604              	.LASF156:
 8605 0591 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 8605      72745261 
 8605      69736542 
 8605      41534550 
 8605      524900
 8606              	.LASF1:
 8607 05a4 6C6F6E67 		.ascii	"long long int\000"
 8607      206C6F6E 
 8607      6720696E 
 8607      7400
 8608              	.LASF99:
 8609 05b2 70727649 		.ascii	"prvInitialiseMutex\000"
 8609      6E697469 
 8609      616C6973 
 8609      654D7574 
 8609      657800
 8610              	.LASF23:
 8611 05c5 42617365 		.ascii	"BaseType_t\000"
 8611      54797065 
 8611      5F7400
 8612              	.LASF85:
 8613 05d0 70756351 		.ascii	"pucQueueStorage\000"
 8613      75657565 
 8613      53746F72 
 8613      61676500 
 8614              	.LASF104:
 8615 05e0 784D7574 		.ascii	"xMutex\000"
 8615      657800
 8616              	.LASF42:
 8617 05e7 7854696D 		.ascii	"xTimeOnEntering\000"
 8617      654F6E45 
 8617      6E746572 
 8617      696E6700 
 8618              	.LASF129:
 8619 05f7 76517565 		.ascii	"vQueueAddToRegistry\000"
 8619      75654164 
 8619      64546F52 
 8619      65676973 
 8619      74727900 
 8620              	.LASF125:
 8621 060b 75635175 		.ascii	"ucQueueGetQueueType\000"
 8621      65756547 
 8621      65745175 
 8621      65756554 
 8621      79706500 
 8622              	.LASF27:
 8623 061f 70784E65 		.ascii	"pxNext\000"
 8623      787400
 8624              	.LASF82:
 8625 0626 784E6577 		.ascii	"xNewQueue\000"
 8625      51756575 
 8625      6500
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 215


 8626              	.LASF91:
 8627 0630 75784D61 		.ascii	"uxMaxCount\000"
 8627      78436F75 
 8627      6E7400
 8628              	.LASF43:
 8629 063b 54696D65 		.ascii	"TimeOut_t\000"
 8629      4F75745F 
 8629      7400
 8630              	.LASF143:
 8631 0645 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
 8631      6B496E74 
 8631      65726E61 
 8631      6C536574 
 8631      54696D65 
 8632              	.LASF117:
 8633 0662 70634F72 		.ascii	"pcOriginalReadPosition\000"
 8633      6967696E 
 8633      616C5265 
 8633      6164506F 
 8633      73697469 
 8634              	.LASF72:
 8635 0679 75784869 		.ascii	"uxHighestPriorityOfWaitingTasks\000"
 8635      67686573 
 8635      74507269 
 8635      6F726974 
 8635      794F6657 
 8636              	.LASF158:
 8637 0699 756C4E65 		.ascii	"ulNewMaskValue\000"
 8637      774D6173 
 8637      6B56616C 
 8637      756500
 8638              	.LASF59:
 8639 06a8 75635175 		.ascii	"ucQueueType\000"
 8639      65756554 
 8639      79706500 
 8640              	.LASF39:
 8641 06b4 4C697374 		.ascii	"List_t\000"
 8641      5F7400
 8642              	.LASF113:
 8643 06bb 75785365 		.ascii	"uxSemaphoreCount\000"
 8643      6D617068 
 8643      6F726543 
 8643      6F756E74 
 8643      00
 8644              	.LASF50:
 8645 06cc 70635772 		.ascii	"pcWriteTo\000"
 8645      69746554 
 8645      6F00
 8646              	.LASF25:
 8647 06d6 5469636B 		.ascii	"TickType_t\000"
 8647      54797065 
 8647      5F7400
 8648              	.LASF4:
 8649 06e1 5F5F696E 		.ascii	"__int8_t\000"
 8649      74385F74 
 8649      00
 8650              	.LASF124:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 216


 8651 06ea 75785175 		.ascii	"uxQueueGetQueueNumber\000"
 8651      65756547 
 8651      65745175 
 8651      6575654E 
 8651      756D6265 
 8652              	.LASF84:
 8653 0700 75785175 		.ascii	"uxQueueLength\000"
 8653      6575654C 
 8653      656E6774 
 8653      6800
 8654              	.LASF2:
 8655 070e 6C6F6E67 		.ascii	"long double\000"
 8655      20646F75 
 8655      626C6500 
 8656              	.LASF112:
 8657 071a 78496E68 		.ascii	"xInheritanceOccurred\000"
 8657      65726974 
 8657      616E6365 
 8657      4F636375 
 8657      72726564 
 8658              	.LASF115:
 8659 072f 78517565 		.ascii	"xQueueTakeMutexRecursive\000"
 8659      75655461 
 8659      6B654D75 
 8659      74657852 
 8659      65637572 
 8660              	.LASF30:
 8661 0748 7076436F 		.ascii	"pvContainer\000"
 8661      6E746169 
 8661      6E657200 
 8662              	.LASF130:
 8663 0754 70635175 		.ascii	"pcQueueGetName\000"
 8663      65756547 
 8663      65744E61 
 8663      6D6500
 8664              	.LASF131:
 8665 0763 70635265 		.ascii	"pcReturn\000"
 8665      7475726E 
 8665      00
 8666              	.LASF54:
 8667 076c 75784C65 		.ascii	"uxLength\000"
 8667      6E677468 
 8667      00
 8668              	.LASF58:
 8669 0775 75785175 		.ascii	"uxQueueNumber\000"
 8669      6575654E 
 8669      756D6265 
 8669      7200
 8670              	.LASF8:
 8671 0783 73686F72 		.ascii	"short int\000"
 8671      7420696E 
 8671      7400
 8672              	.LASF26:
 8673 078d 78497465 		.ascii	"xItemValue\000"
 8673      6D56616C 
 8673      756500
 8674              	.LASF11:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 217


 8675 0798 6C6F6E67 		.ascii	"long int\000"
 8675      20696E74 
 8675      00
 8676              	.LASF134:
 8677 07a1 49544D5F 		.ascii	"ITM_RxBuffer\000"
 8677      52784275 
 8677      66666572 
 8677      00
 8678              	.LASF89:
 8679 07ae 78517565 		.ascii	"xQueueSizeInBytes\000"
 8679      75655369 
 8679      7A65496E 
 8679      42797465 
 8679      7300
 8680              	.LASF147:
 8681 07c0 78546173 		.ascii	"xTaskResumeAll\000"
 8681      6B526573 
 8681      756D6541 
 8681      6C6C00
 8682              	.LASF76:
 8683 07cf 70764974 		.ascii	"pvItemToQueue\000"
 8683      656D546F 
 8683      51756575 
 8683      6500
 8684              	.LASF145:
 8685 07dd 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 8685      6B436865 
 8685      636B466F 
 8685      7254696D 
 8685      654F7574 
 8686              	.LASF152:
 8687 07f2 76506F72 		.ascii	"vPortFree\000"
 8687      74467265 
 8687      6500
 8688              	.LASF127:
 8689 07fc 78517565 		.ascii	"xQueueIsQueueFullFromISR\000"
 8689      75654973 
 8689      51756575 
 8689      6546756C 
 8689      6C46726F 
 8690              	.LASF120:
 8691 0815 75785175 		.ascii	"uxQueueMessagesWaiting\000"
 8691      6575654D 
 8691      65737361 
 8691      67657357 
 8691      61697469 
 8692              	.LASF49:
 8693 082c 70635461 		.ascii	"pcTail\000"
 8693      696C00
 8694              	.LASF6:
 8695 0833 5F5F7569 		.ascii	"__uint8_t\000"
 8695      6E74385F 
 8695      7400
 8696              	.LASF71:
 8697 083d 70785175 		.ascii	"pxQueue\000"
 8697      65756500 
 8698              	.LASF73:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 218


 8699 0845 78526574 		.ascii	"xReturn\000"
 8699      75726E00 
 8700              	.LASF15:
 8701 084d 73697A65 		.ascii	"sizetype\000"
 8701      74797065 
 8701      00
 8702              	.LASF140:
 8703 0856 76546173 		.ascii	"vTaskMissedYield\000"
 8703      6B4D6973 
 8703      73656459 
 8703      69656C64 
 8703      00
 8704              	.LASF13:
 8705 0867 6C6F6E67 		.ascii	"long unsigned int\000"
 8705      20756E73 
 8705      69676E65 
 8705      6420696E 
 8705      7400
 8706              	.LASF151:
 8707 0879 78546173 		.ascii	"xTaskPriorityInherit\000"
 8707      6B507269 
 8707      6F726974 
 8707      79496E68 
 8707      65726974 
 8708              	.LASF19:
 8709 088e 696E7433 		.ascii	"int32_t\000"
 8709      325F7400 
 8710              	.LASF154:
 8711 0896 2E2E5C46 		.ascii	"..\\FreeRTOS\\Source\\queue.c\000"
 8711      72656552 
 8711      544F535C 
 8711      536F7572 
 8711      63655C71 
 8712              	.LASF119:
 8713 08b1 78517565 		.ascii	"xQueuePeekFromISR\000"
 8713      75655065 
 8713      656B4672 
 8713      6F6D4953 
 8713      5200
 8714              	.LASF114:
 8715 08c3 75784869 		.ascii	"uxHighestWaitingPriority\000"
 8715      67686573 
 8715      74576169 
 8715      74696E67 
 8715      5072696F 
 8716              	.LASF7:
 8717 08dc 756E7369 		.ascii	"unsigned char\000"
 8717      676E6564 
 8717      20636861 
 8717      7200
 8718              	.LASF12:
 8719 08ea 5F5F7569 		.ascii	"__uint32_t\000"
 8719      6E743332 
 8719      5F7400
 8720              	.LASF141:
 8721 08f5 764C6973 		.ascii	"vListInitialise\000"
 8721      74496E69 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 219


 8721      7469616C 
 8721      69736500 
 8722              	.LASF79:
 8723 0905 70727643 		.ascii	"prvCopyDataFromQueue\000"
 8723      6F707944 
 8723      61746146 
 8723      726F6D51 
 8723      75657565 
 8724              	.LASF150:
 8725 091a 76546173 		.ascii	"vTaskPriorityDisinheritAfterTimeout\000"
 8725      6B507269 
 8725      6F726974 
 8725      79446973 
 8725      696E6865 
 8726              	.LASF94:
 8727 093e 78546963 		.ascii	"xTicksToWait\000"
 8727      6B73546F 
 8727      57616974 
 8727      00
 8728              	.LASF29:
 8729 094b 70764F77 		.ascii	"pvOwner\000"
 8729      6E657200 
 8730              	.LASF148:
 8731 0953 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 8731      6B476574 
 8731      43757272 
 8731      656E7454 
 8731      61736B48 
 8732              	.LASF48:
 8733 096d 70634865 		.ascii	"pcHead\000"
 8733      616400
 8734              	.LASF103:
 8735 0974 78517565 		.ascii	"xQueueGiveMutexRecursive\000"
 8735      75654769 
 8735      76654D75 
 8735      74657852 
 8735      65637572 
 8736              	.LASF80:
 8737 098d 70727655 		.ascii	"prvUnlockQueue\000"
 8737      6E6C6F63 
 8737      6B517565 
 8737      756500
 8738              	.LASF87:
 8739 099c 78517565 		.ascii	"xQueueGenericReset\000"
 8739      75654765 
 8739      6E657269 
 8739      63526573 
 8739      657400
 8740              	.LASF126:
 8741 09af 78517565 		.ascii	"xQueueIsQueueEmptyFromISR\000"
 8741      75654973 
 8741      51756575 
 8741      65456D70 
 8741      74794672 
 8742              	.LASF5:
 8743 09c9 7369676E 		.ascii	"signed char\000"
 8743      65642063 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccfQVYCS.s 			page 220


 8743      68617200 
 8744              	.LASF9:
 8745 09d5 73686F72 		.ascii	"short unsigned int\000"
 8745      7420756E 
 8745      7369676E 
 8745      65642069 
 8745      6E7400
 8746              	.LASF159:
 8747 09e8 6D656D63 		.ascii	"memcpy\000"
 8747      707900
 8748              	.LASF60:
 8749 09ef 78515545 		.ascii	"xQUEUE\000"
 8749      554500
 8750              	.LASF22:
 8751 09f6 646F7562 		.ascii	"double\000"
 8751      6C6500
 8752              	.LASF77:
 8753 09fd 78506F73 		.ascii	"xPosition\000"
 8753      6974696F 
 8753      6E00
 8754              	.LASF56:
 8755 0a07 6352784C 		.ascii	"cRxLock\000"
 8755      6F636B00 
 8756              	.LASF139:
 8757 0a0f 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 8757      6B52656D 
 8757      6F766546 
 8757      726F6D45 
 8757      76656E74 
 8758              	.LASF90:
 8759 0a28 78517565 		.ascii	"xQueueCreateCountingSemaphore\000"
 8759      75654372 
 8759      65617465 
 8759      436F756E 
 8759      74696E67 
 8760              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
