ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"tasks.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	prvTaskIsTaskSuspended, %function
  24              	prvTaskIsTaskSuspended:
  25              	.LFB80:
  26              		.file 1 "..\\FreeRTOS\\Source\\tasks.c"
   1:..\FreeRTOS\Source/tasks.c **** /*
   2:..\FreeRTOS\Source/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:..\FreeRTOS\Source/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS\Source/tasks.c ****  *
   5:..\FreeRTOS\Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS\Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS\Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS\Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS\Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS\Source/tasks.c ****  * subject to the following conditions:
  11:..\FreeRTOS\Source/tasks.c ****  *
  12:..\FreeRTOS\Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS\Source/tasks.c ****  * copies or substantial portions of the Software.
  14:..\FreeRTOS\Source/tasks.c ****  *
  15:..\FreeRTOS\Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\FreeRTOS\Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\FreeRTOS\Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\FreeRTOS\Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\FreeRTOS\Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\FreeRTOS\Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\FreeRTOS\Source/tasks.c ****  *
  22:..\FreeRTOS\Source/tasks.c ****  * http://www.FreeRTOS.org
  23:..\FreeRTOS\Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:..\FreeRTOS\Source/tasks.c ****  *
  25:..\FreeRTOS\Source/tasks.c ****  * 1 tab == 4 spaces!
  26:..\FreeRTOS\Source/tasks.c ****  */
  27:..\FreeRTOS\Source/tasks.c **** 
  28:..\FreeRTOS\Source/tasks.c **** /* Standard includes. */
  29:..\FreeRTOS\Source/tasks.c **** #include <stdlib.h>
  30:..\FreeRTOS\Source/tasks.c **** #include <string.h>
  31:..\FreeRTOS\Source/tasks.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 2


  32:..\FreeRTOS\Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:..\FreeRTOS\Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:..\FreeRTOS\Source/tasks.c **** task.h is included from an application file. */
  35:..\FreeRTOS\Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:..\FreeRTOS\Source/tasks.c **** 
  37:..\FreeRTOS\Source/tasks.c **** /* FreeRTOS includes. */
  38:..\FreeRTOS\Source/tasks.c **** #include "FreeRTOS.h"
  39:..\FreeRTOS\Source/tasks.c **** #include "task.h"
  40:..\FreeRTOS\Source/tasks.c **** #include "timers.h"
  41:..\FreeRTOS\Source/tasks.c **** #include "stack_macros.h"
  42:..\FreeRTOS\Source/tasks.c **** 
  43:..\FreeRTOS\Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:..\FreeRTOS\Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:..\FreeRTOS\Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:..\FreeRTOS\Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:..\FreeRTOS\Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:..\FreeRTOS\Source/tasks.c **** 
  49:..\FreeRTOS\Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:..\FreeRTOS\Source/tasks.c **** functions but without including stdio.h here. */
  51:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:..\FreeRTOS\Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:..\FreeRTOS\Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:..\FreeRTOS\Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:..\FreeRTOS\Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:..\FreeRTOS\Source/tasks.c **** 	#include <stdio.h>
  57:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:..\FreeRTOS\Source/tasks.c **** 
  59:..\FreeRTOS\Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:..\FreeRTOS\Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:..\FreeRTOS\Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:..\FreeRTOS\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:..\FreeRTOS\Source/tasks.c **** #else
  64:..\FreeRTOS\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:..\FreeRTOS\Source/tasks.c **** #endif
  66:..\FreeRTOS\Source/tasks.c **** 
  67:..\FreeRTOS\Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:..\FreeRTOS\Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:..\FreeRTOS\Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:..\FreeRTOS\Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:..\FreeRTOS\Source/tasks.c **** 
  72:..\FreeRTOS\Source/tasks.c **** /*
  73:..\FreeRTOS\Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:..\FreeRTOS\Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:..\FreeRTOS\Source/tasks.c ****  */
  76:..\FreeRTOS\Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:..\FreeRTOS\Source/tasks.c **** 
  78:..\FreeRTOS\Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:..\FreeRTOS\Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:..\FreeRTOS\Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:..\FreeRTOS\Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:..\FreeRTOS\Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:..\FreeRTOS\Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:..\FreeRTOS\Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:..\FreeRTOS\Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:..\FreeRTOS\Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:..\FreeRTOS\Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
  88:..\FreeRTOS\Source/tasks.c **** made to free the RAM that was allocated statically.
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 3


  89:..\FreeRTOS\Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
  90:..\FreeRTOS\Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:..\FreeRTOS\Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:..\FreeRTOS\Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:..\FreeRTOS\Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:..\FreeRTOS\Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:..\FreeRTOS\Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:..\FreeRTOS\Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:..\FreeRTOS\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:..\FreeRTOS\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:..\FreeRTOS\Source/tasks.c **** 
 100:..\FreeRTOS\Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:..\FreeRTOS\Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:..\FreeRTOS\Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:..\FreeRTOS\Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:..\FreeRTOS\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:..\FreeRTOS\Source/tasks.c **** #else
 106:..\FreeRTOS\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:..\FreeRTOS\Source/tasks.c **** #endif
 108:..\FreeRTOS\Source/tasks.c **** 
 109:..\FreeRTOS\Source/tasks.c **** /*
 110:..\FreeRTOS\Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:..\FreeRTOS\Source/tasks.c ****  */
 112:..\FreeRTOS\Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:..\FreeRTOS\Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:..\FreeRTOS\Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:..\FreeRTOS\Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:..\FreeRTOS\Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:..\FreeRTOS\Source/tasks.c **** 
 118:..\FreeRTOS\Source/tasks.c **** /*
 119:..\FreeRTOS\Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:..\FreeRTOS\Source/tasks.c ****  * global, rather than file scope.
 121:..\FreeRTOS\Source/tasks.c ****  */
 122:..\FreeRTOS\Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:..\FreeRTOS\Source/tasks.c **** 	#define static
 124:..\FreeRTOS\Source/tasks.c **** #endif
 125:..\FreeRTOS\Source/tasks.c **** 
 126:..\FreeRTOS\Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:..\FreeRTOS\Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:..\FreeRTOS\Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:..\FreeRTOS\Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:..\FreeRTOS\Source/tasks.c **** #endif
 131:..\FreeRTOS\Source/tasks.c **** 
 132:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:..\FreeRTOS\Source/tasks.c **** 
 134:..\FreeRTOS\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:..\FreeRTOS\Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:..\FreeRTOS\Source/tasks.c **** 	microcontroller architecture. */
 137:..\FreeRTOS\Source/tasks.c **** 
 138:..\FreeRTOS\Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:..\FreeRTOS\Source/tasks.c **** 	state task. */
 140:..\FreeRTOS\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:..\FreeRTOS\Source/tasks.c **** 	{																									\
 142:..\FreeRTOS\Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:..\FreeRTOS\Source/tasks.c **** 		{																								\
 144:..\FreeRTOS\Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 145:..\FreeRTOS\Source/tasks.c **** 		}																								\
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 4


 146:..\FreeRTOS\Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 147:..\FreeRTOS\Source/tasks.c **** 
 148:..\FreeRTOS\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:..\FreeRTOS\Source/tasks.c **** 
 150:..\FreeRTOS\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:..\FreeRTOS\Source/tasks.c **** 	{																									\
 152:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:..\FreeRTOS\Source/tasks.c **** 																										\
 154:..\FreeRTOS\Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:..\FreeRTOS\Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:..\FreeRTOS\Source/tasks.c **** 		{																								\
 157:..\FreeRTOS\Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:..\FreeRTOS\Source/tasks.c **** 			--uxTopPriority;																			\
 159:..\FreeRTOS\Source/tasks.c **** 		}																								\
 160:..\FreeRTOS\Source/tasks.c **** 																										\
 161:..\FreeRTOS\Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:..\FreeRTOS\Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:..\FreeRTOS\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:..\FreeRTOS\Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:..\FreeRTOS\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:..\FreeRTOS\Source/tasks.c **** 
 167:..\FreeRTOS\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:..\FreeRTOS\Source/tasks.c **** 
 169:..\FreeRTOS\Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:..\FreeRTOS\Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:..\FreeRTOS\Source/tasks.c **** 	being used. */
 172:..\FreeRTOS\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:..\FreeRTOS\Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:..\FreeRTOS\Source/tasks.c **** 
 175:..\FreeRTOS\Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:..\FreeRTOS\Source/tasks.c **** 
 177:..\FreeRTOS\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:..\FreeRTOS\Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:..\FreeRTOS\Source/tasks.c **** 	architecture being used. */
 180:..\FreeRTOS\Source/tasks.c **** 
 181:..\FreeRTOS\Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:..\FreeRTOS\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:..\FreeRTOS\Source/tasks.c **** 
 184:..\FreeRTOS\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:..\FreeRTOS\Source/tasks.c **** 
 186:..\FreeRTOS\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:..\FreeRTOS\Source/tasks.c **** 	{																								\
 188:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:..\FreeRTOS\Source/tasks.c **** 																									\
 190:..\FreeRTOS\Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:..\FreeRTOS\Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:..\FreeRTOS\Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:..\FreeRTOS\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:..\FreeRTOS\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:..\FreeRTOS\Source/tasks.c **** 
 196:..\FreeRTOS\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:..\FreeRTOS\Source/tasks.c **** 
 198:..\FreeRTOS\Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:..\FreeRTOS\Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:..\FreeRTOS\Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:..\FreeRTOS\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 202:..\FreeRTOS\Source/tasks.c **** 	{																									\
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 5


 203:..\FreeRTOS\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 204:..\FreeRTOS\Source/tasks.c **** 		{																								\
 205:..\FreeRTOS\Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:..\FreeRTOS\Source/tasks.c **** 		}																								\
 207:..\FreeRTOS\Source/tasks.c **** 	}
 208:..\FreeRTOS\Source/tasks.c **** 
 209:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:..\FreeRTOS\Source/tasks.c **** 
 211:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 212:..\FreeRTOS\Source/tasks.c **** 
 213:..\FreeRTOS\Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:..\FreeRTOS\Source/tasks.c **** count overflows. */
 215:..\FreeRTOS\Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:..\FreeRTOS\Source/tasks.c **** {																									\
 217:..\FreeRTOS\Source/tasks.c **** 	List_t *pxTemp;																					\
 218:..\FreeRTOS\Source/tasks.c **** 																									\
 219:..\FreeRTOS\Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:..\FreeRTOS\Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:..\FreeRTOS\Source/tasks.c **** 																									\
 222:..\FreeRTOS\Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:..\FreeRTOS\Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:..\FreeRTOS\Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:..\FreeRTOS\Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:..\FreeRTOS\Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:..\FreeRTOS\Source/tasks.c **** }
 228:..\FreeRTOS\Source/tasks.c **** 
 229:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 230:..\FreeRTOS\Source/tasks.c **** 
 231:..\FreeRTOS\Source/tasks.c **** /*
 232:..\FreeRTOS\Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:..\FreeRTOS\Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:..\FreeRTOS\Source/tasks.c ****  */
 235:..\FreeRTOS\Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:..\FreeRTOS\Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:..\FreeRTOS\Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:..\FreeRTOS\Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:..\FreeRTOS\Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 241:..\FreeRTOS\Source/tasks.c **** 
 242:..\FreeRTOS\Source/tasks.c **** /*
 243:..\FreeRTOS\Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:..\FreeRTOS\Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:..\FreeRTOS\Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:..\FreeRTOS\Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:..\FreeRTOS\Source/tasks.c ****  */
 248:..\FreeRTOS\Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:..\FreeRTOS\Source/tasks.c **** 
 250:..\FreeRTOS\Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:..\FreeRTOS\Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:..\FreeRTOS\Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:..\FreeRTOS\Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:..\FreeRTOS\Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:..\FreeRTOS\Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:..\FreeRTOS\Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:..\FreeRTOS\Source/tasks.c **** to its original value when it is released. */
 258:..\FreeRTOS\Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 259:..\FreeRTOS\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 6


 260:..\FreeRTOS\Source/tasks.c **** #else
 261:..\FreeRTOS\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:..\FreeRTOS\Source/tasks.c **** #endif
 263:..\FreeRTOS\Source/tasks.c **** 
 264:..\FreeRTOS\Source/tasks.c **** /*
 265:..\FreeRTOS\Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:..\FreeRTOS\Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:..\FreeRTOS\Source/tasks.c ****  * (the task's run time environment, including register values)
 268:..\FreeRTOS\Source/tasks.c ****  */
 269:..\FreeRTOS\Source/tasks.c **** typedef struct tskTaskControlBlock
 270:..\FreeRTOS\Source/tasks.c **** {
 271:..\FreeRTOS\Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:..\FreeRTOS\Source/tasks.c **** 
 273:..\FreeRTOS\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:..\FreeRTOS\Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:..\FreeRTOS\Source/tasks.c **** 	#endif
 276:..\FreeRTOS\Source/tasks.c **** 
 277:..\FreeRTOS\Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:..\FreeRTOS\Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:..\FreeRTOS\Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:..\FreeRTOS\Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:..\FreeRTOS\Source/tasks.c **** 
 283:..\FreeRTOS\Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:..\FreeRTOS\Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:..\FreeRTOS\Source/tasks.c **** 	#endif
 286:..\FreeRTOS\Source/tasks.c **** 
 287:..\FreeRTOS\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:..\FreeRTOS\Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:..\FreeRTOS\Source/tasks.c **** 	#endif
 290:..\FreeRTOS\Source/tasks.c **** 
 291:..\FreeRTOS\Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:..\FreeRTOS\Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:..\FreeRTOS\Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:..\FreeRTOS\Source/tasks.c **** 	#endif
 295:..\FreeRTOS\Source/tasks.c **** 
 296:..\FreeRTOS\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:..\FreeRTOS\Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:..\FreeRTOS\Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:..\FreeRTOS\Source/tasks.c **** 	#endif
 300:..\FreeRTOS\Source/tasks.c **** 
 301:..\FreeRTOS\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:..\FreeRTOS\Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:..\FreeRTOS\Source/tasks.c **** 	#endif
 304:..\FreeRTOS\Source/tasks.c **** 
 305:..\FreeRTOS\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:..\FreeRTOS\Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:..\FreeRTOS\Source/tasks.c **** 	#endif
 308:..\FreeRTOS\Source/tasks.c **** 
 309:..\FreeRTOS\Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:..\FreeRTOS\Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:..\FreeRTOS\Source/tasks.c **** 	#endif
 312:..\FreeRTOS\Source/tasks.c **** 
 313:..\FreeRTOS\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:..\FreeRTOS\Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:..\FreeRTOS\Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 316:..\FreeRTOS\Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 7


 317:..\FreeRTOS\Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 318:..\FreeRTOS\Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:..\FreeRTOS\Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:..\FreeRTOS\Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:..\FreeRTOS\Source/tasks.c **** 		struct	_reent xNewLib_reent;
 322:..\FreeRTOS\Source/tasks.c **** 	#endif
 323:..\FreeRTOS\Source/tasks.c **** 
 324:..\FreeRTOS\Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:..\FreeRTOS\Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:..\FreeRTOS\Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:..\FreeRTOS\Source/tasks.c **** 	#endif
 328:..\FreeRTOS\Source/tasks.c **** 
 329:..\FreeRTOS\Source/tasks.c **** 	/* See the comments above the definition of
 330:..\FreeRTOS\Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:..\FreeRTOS\Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:..\FreeRTOS\Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:..\FreeRTOS\Source/tasks.c **** 	#endif
 334:..\FreeRTOS\Source/tasks.c **** 
 335:..\FreeRTOS\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:..\FreeRTOS\Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:..\FreeRTOS\Source/tasks.c **** 	#endif
 338:..\FreeRTOS\Source/tasks.c **** 
 339:..\FreeRTOS\Source/tasks.c **** } tskTCB;
 340:..\FreeRTOS\Source/tasks.c **** 
 341:..\FreeRTOS\Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:..\FreeRTOS\Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:..\FreeRTOS\Source/tasks.c **** typedef tskTCB TCB_t;
 344:..\FreeRTOS\Source/tasks.c **** 
 345:..\FreeRTOS\Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:..\FreeRTOS\Source/tasks.c **** which static variables must be declared volatile. */
 347:..\FreeRTOS\Source/tasks.c **** 
 348:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:..\FreeRTOS\Source/tasks.c **** 
 350:..\FreeRTOS\Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 352:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 353:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 354:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 355:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 356:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 357:..\FreeRTOS\Source/tasks.c **** 
 358:..\FreeRTOS\Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:..\FreeRTOS\Source/tasks.c **** 
 360:..\FreeRTOS\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 361:..\FreeRTOS\Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:..\FreeRTOS\Source/tasks.c **** 
 363:..\FreeRTOS\Source/tasks.c **** #endif
 364:..\FreeRTOS\Source/tasks.c **** 
 365:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:..\FreeRTOS\Source/tasks.c **** 
 367:..\FreeRTOS\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 368:..\FreeRTOS\Source/tasks.c **** 
 369:..\FreeRTOS\Source/tasks.c **** #endif
 370:..\FreeRTOS\Source/tasks.c **** 
 371:..\FreeRTOS\Source/tasks.c **** /* Other file private variables. --------------------------------*/
 372:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 373:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 8


 374:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 375:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 376:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 379:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:..\FreeRTOS\Source/tasks.c **** 
 383:..\FreeRTOS\Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:..\FreeRTOS\Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:..\FreeRTOS\Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:..\FreeRTOS\Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:..\FreeRTOS\Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:..\FreeRTOS\Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:..\FreeRTOS\Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:..\FreeRTOS\Source/tasks.c **** accessed from a critical section. */
 391:..\FreeRTOS\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:..\FreeRTOS\Source/tasks.c **** 
 393:..\FreeRTOS\Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:..\FreeRTOS\Source/tasks.c **** 
 395:..\FreeRTOS\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:..\FreeRTOS\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:..\FreeRTOS\Source/tasks.c **** 
 398:..\FreeRTOS\Source/tasks.c **** #endif
 399:..\FreeRTOS\Source/tasks.c **** 
 400:..\FreeRTOS\Source/tasks.c **** /*lint -restore */
 401:..\FreeRTOS\Source/tasks.c **** 
 402:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 403:..\FreeRTOS\Source/tasks.c **** 
 404:..\FreeRTOS\Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:..\FreeRTOS\Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:..\FreeRTOS\Source/tasks.c **** 
 407:..\FreeRTOS\Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:..\FreeRTOS\Source/tasks.c **** 
 409:..\FreeRTOS\Source/tasks.c **** #endif
 410:..\FreeRTOS\Source/tasks.c **** 
 411:..\FreeRTOS\Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:..\FreeRTOS\Source/tasks.c **** 
 413:..\FreeRTOS\Source/tasks.c **** 	extern void vApplicationTickHook( void );
 414:..\FreeRTOS\Source/tasks.c **** 
 415:..\FreeRTOS\Source/tasks.c **** #endif
 416:..\FreeRTOS\Source/tasks.c **** 
 417:..\FreeRTOS\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:..\FreeRTOS\Source/tasks.c **** 
 419:..\FreeRTOS\Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:..\FreeRTOS\Source/tasks.c **** 
 421:..\FreeRTOS\Source/tasks.c **** #endif
 422:..\FreeRTOS\Source/tasks.c **** 
 423:..\FreeRTOS\Source/tasks.c **** /* File private functions. --------------------------------*/
 424:..\FreeRTOS\Source/tasks.c **** 
 425:..\FreeRTOS\Source/tasks.c **** /**
 426:..\FreeRTOS\Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:..\FreeRTOS\Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:..\FreeRTOS\Source/tasks.c ****  * is in any other state.
 429:..\FreeRTOS\Source/tasks.c ****  */
 430:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 9


 431:..\FreeRTOS\Source/tasks.c **** 
 432:..\FreeRTOS\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:..\FreeRTOS\Source/tasks.c **** 
 434:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:..\FreeRTOS\Source/tasks.c **** 
 436:..\FreeRTOS\Source/tasks.c **** /*
 437:..\FreeRTOS\Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:..\FreeRTOS\Source/tasks.c ****  * automatically upon the creation of the first task.
 439:..\FreeRTOS\Source/tasks.c ****  */
 440:..\FreeRTOS\Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:..\FreeRTOS\Source/tasks.c **** 
 442:..\FreeRTOS\Source/tasks.c **** /*
 443:..\FreeRTOS\Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:..\FreeRTOS\Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:..\FreeRTOS\Source/tasks.c ****  * creation of the first user task.
 446:..\FreeRTOS\Source/tasks.c ****  *
 447:..\FreeRTOS\Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:..\FreeRTOS\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:..\FreeRTOS\Source/tasks.c ****  *
 450:..\FreeRTOS\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:..\FreeRTOS\Source/tasks.c ****  *
 452:..\FreeRTOS\Source/tasks.c ****  */
 453:..\FreeRTOS\Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:..\FreeRTOS\Source/tasks.c **** 
 455:..\FreeRTOS\Source/tasks.c **** /*
 456:..\FreeRTOS\Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:..\FreeRTOS\Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:..\FreeRTOS\Source/tasks.c ****  *
 459:..\FreeRTOS\Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:..\FreeRTOS\Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:..\FreeRTOS\Source/tasks.c ****  */
 462:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:..\FreeRTOS\Source/tasks.c **** 
 464:..\FreeRTOS\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:..\FreeRTOS\Source/tasks.c **** 
 466:..\FreeRTOS\Source/tasks.c **** #endif
 467:..\FreeRTOS\Source/tasks.c **** 
 468:..\FreeRTOS\Source/tasks.c **** /*
 469:..\FreeRTOS\Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:..\FreeRTOS\Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:..\FreeRTOS\Source/tasks.c ****  * and its TCB deleted.
 472:..\FreeRTOS\Source/tasks.c ****  */
 473:..\FreeRTOS\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:..\FreeRTOS\Source/tasks.c **** 
 475:..\FreeRTOS\Source/tasks.c **** /*
 476:..\FreeRTOS\Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:..\FreeRTOS\Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:..\FreeRTOS\Source/tasks.c ****  */
 479:..\FreeRTOS\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:..\FreeRTOS\Source/tasks.c **** 
 481:..\FreeRTOS\Source/tasks.c **** /*
 482:..\FreeRTOS\Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:..\FreeRTOS\Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:..\FreeRTOS\Source/tasks.c ****  * a suspended list, etc.).
 485:..\FreeRTOS\Source/tasks.c ****  *
 486:..\FreeRTOS\Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 487:..\FreeRTOS\Source/tasks.c ****  * NORMAL APPLICATION CODE.
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 10


 488:..\FreeRTOS\Source/tasks.c ****  */
 489:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:..\FreeRTOS\Source/tasks.c **** 
 491:..\FreeRTOS\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:..\FreeRTOS\Source/tasks.c **** 
 493:..\FreeRTOS\Source/tasks.c **** #endif
 494:..\FreeRTOS\Source/tasks.c **** 
 495:..\FreeRTOS\Source/tasks.c **** /*
 496:..\FreeRTOS\Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:..\FreeRTOS\Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:..\FreeRTOS\Source/tasks.c ****  */
 499:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:..\FreeRTOS\Source/tasks.c **** 
 501:..\FreeRTOS\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:..\FreeRTOS\Source/tasks.c **** 
 503:..\FreeRTOS\Source/tasks.c **** #endif
 504:..\FreeRTOS\Source/tasks.c **** 
 505:..\FreeRTOS\Source/tasks.c **** /*
 506:..\FreeRTOS\Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:..\FreeRTOS\Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:..\FreeRTOS\Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:..\FreeRTOS\Source/tasks.c ****  */
 510:..\FreeRTOS\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 511:..\FreeRTOS\Source/tasks.c **** 
 512:..\FreeRTOS\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 513:..\FreeRTOS\Source/tasks.c **** 
 514:..\FreeRTOS\Source/tasks.c **** #endif
 515:..\FreeRTOS\Source/tasks.c **** 
 516:..\FreeRTOS\Source/tasks.c **** /*
 517:..\FreeRTOS\Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:..\FreeRTOS\Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:..\FreeRTOS\Source/tasks.c ****  *
 520:..\FreeRTOS\Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:..\FreeRTOS\Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:..\FreeRTOS\Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:..\FreeRTOS\Source/tasks.c ****  * set to a value other than 1.
 524:..\FreeRTOS\Source/tasks.c ****  */
 525:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:..\FreeRTOS\Source/tasks.c **** 
 527:..\FreeRTOS\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:..\FreeRTOS\Source/tasks.c **** 
 529:..\FreeRTOS\Source/tasks.c **** #endif
 530:..\FreeRTOS\Source/tasks.c **** 
 531:..\FreeRTOS\Source/tasks.c **** /*
 532:..\FreeRTOS\Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:..\FreeRTOS\Source/tasks.c ****  * will exit the Blocked state.
 534:..\FreeRTOS\Source/tasks.c ****  */
 535:..\FreeRTOS\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:..\FreeRTOS\Source/tasks.c **** 
 537:..\FreeRTOS\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:..\FreeRTOS\Source/tasks.c **** 
 539:..\FreeRTOS\Source/tasks.c **** 	/*
 540:..\FreeRTOS\Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:..\FreeRTOS\Source/tasks.c **** 	 * human readable tables of task information.
 542:..\FreeRTOS\Source/tasks.c **** 	 */
 543:..\FreeRTOS\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 544:..\FreeRTOS\Source/tasks.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 11


 545:..\FreeRTOS\Source/tasks.c **** #endif
 546:..\FreeRTOS\Source/tasks.c **** 
 547:..\FreeRTOS\Source/tasks.c **** /*
 548:..\FreeRTOS\Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:..\FreeRTOS\Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:..\FreeRTOS\Source/tasks.c ****  */
 551:..\FreeRTOS\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:..\FreeRTOS\Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:..\FreeRTOS\Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:..\FreeRTOS\Source/tasks.c **** 									void * const pvParameters,
 555:..\FreeRTOS\Source/tasks.c **** 									UBaseType_t uxPriority,
 556:..\FreeRTOS\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:..\FreeRTOS\Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:..\FreeRTOS\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:..\FreeRTOS\Source/tasks.c **** 
 560:..\FreeRTOS\Source/tasks.c **** /*
 561:..\FreeRTOS\Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:..\FreeRTOS\Source/tasks.c ****  * under the control of the scheduler.
 563:..\FreeRTOS\Source/tasks.c ****  */
 564:..\FreeRTOS\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:..\FreeRTOS\Source/tasks.c **** 
 566:..\FreeRTOS\Source/tasks.c **** /*
 567:..\FreeRTOS\Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:..\FreeRTOS\Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:..\FreeRTOS\Source/tasks.c ****  * called by the function.
 570:..\FreeRTOS\Source/tasks.c ****  */
 571:..\FreeRTOS\Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:..\FreeRTOS\Source/tasks.c **** 
 573:..\FreeRTOS\Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:..\FreeRTOS\Source/tasks.c **** 
 575:..\FreeRTOS\Source/tasks.c **** #endif
 576:..\FreeRTOS\Source/tasks.c **** 
 577:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 578:..\FreeRTOS\Source/tasks.c **** 
 579:..\FreeRTOS\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:..\FreeRTOS\Source/tasks.c **** 
 581:..\FreeRTOS\Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:..\FreeRTOS\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:..\FreeRTOS\Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:..\FreeRTOS\Source/tasks.c **** 									void * const pvParameters,
 585:..\FreeRTOS\Source/tasks.c **** 									UBaseType_t uxPriority,
 586:..\FreeRTOS\Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:..\FreeRTOS\Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:..\FreeRTOS\Source/tasks.c **** 	{
 589:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:..\FreeRTOS\Source/tasks.c **** 	TaskHandle_t xReturn;
 591:..\FreeRTOS\Source/tasks.c **** 
 592:..\FreeRTOS\Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:..\FreeRTOS\Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:..\FreeRTOS\Source/tasks.c **** 
 595:..\FreeRTOS\Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:..\FreeRTOS\Source/tasks.c **** 		{
 597:..\FreeRTOS\Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:..\FreeRTOS\Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:..\FreeRTOS\Source/tasks.c **** 			structure. */
 600:..\FreeRTOS\Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
 601:..\FreeRTOS\Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 12


 602:..\FreeRTOS\Source/tasks.c **** 		}
 603:..\FreeRTOS\Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 604:..\FreeRTOS\Source/tasks.c **** 
 605:..\FreeRTOS\Source/tasks.c **** 
 606:..\FreeRTOS\Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 607:..\FreeRTOS\Source/tasks.c **** 		{
 608:..\FreeRTOS\Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 609:..\FreeRTOS\Source/tasks.c **** 			function - use them. */
 610:..\FreeRTOS\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 611:..\FreeRTOS\Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 612:..\FreeRTOS\Source/tasks.c **** 
 613:..\FreeRTOS\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 614:..\FreeRTOS\Source/tasks.c **** 			{
 615:..\FreeRTOS\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 616:..\FreeRTOS\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 617:..\FreeRTOS\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 618:..\FreeRTOS\Source/tasks.c **** 			}
 619:..\FreeRTOS\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 620:..\FreeRTOS\Source/tasks.c **** 
 621:..\FreeRTOS\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 622:..\FreeRTOS\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 623:..\FreeRTOS\Source/tasks.c **** 		}
 624:..\FreeRTOS\Source/tasks.c **** 		else
 625:..\FreeRTOS\Source/tasks.c **** 		{
 626:..\FreeRTOS\Source/tasks.c **** 			xReturn = NULL;
 627:..\FreeRTOS\Source/tasks.c **** 		}
 628:..\FreeRTOS\Source/tasks.c **** 
 629:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
 630:..\FreeRTOS\Source/tasks.c **** 	}
 631:..\FreeRTOS\Source/tasks.c **** 
 632:..\FreeRTOS\Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 633:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 634:..\FreeRTOS\Source/tasks.c **** 
 635:..\FreeRTOS\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 636:..\FreeRTOS\Source/tasks.c **** 
 637:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 638:..\FreeRTOS\Source/tasks.c **** 	{
 639:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxNewTCB;
 640:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 641:..\FreeRTOS\Source/tasks.c **** 
 642:..\FreeRTOS\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 643:..\FreeRTOS\Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 644:..\FreeRTOS\Source/tasks.c **** 
 645:..\FreeRTOS\Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 646:..\FreeRTOS\Source/tasks.c **** 		{
 647:..\FreeRTOS\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 648:..\FreeRTOS\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 649:..\FreeRTOS\Source/tasks.c **** 			not static allocation is being used. */
 650:..\FreeRTOS\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 651:..\FreeRTOS\Source/tasks.c **** 
 652:..\FreeRTOS\Source/tasks.c **** 			/* Store the stack location in the TCB. */
 653:..\FreeRTOS\Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 654:..\FreeRTOS\Source/tasks.c **** 
 655:..\FreeRTOS\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 656:..\FreeRTOS\Source/tasks.c **** 			{
 657:..\FreeRTOS\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 658:..\FreeRTOS\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 13


 659:..\FreeRTOS\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 660:..\FreeRTOS\Source/tasks.c **** 			}
 661:..\FreeRTOS\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 662:..\FreeRTOS\Source/tasks.c **** 
 663:..\FreeRTOS\Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 664:..\FreeRTOS\Source/tasks.c **** 									pxTaskDefinition->pcName,
 665:..\FreeRTOS\Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 666:..\FreeRTOS\Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 667:..\FreeRTOS\Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 668:..\FreeRTOS\Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 669:..\FreeRTOS\Source/tasks.c **** 									pxTaskDefinition->xRegions );
 670:..\FreeRTOS\Source/tasks.c **** 
 671:..\FreeRTOS\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 672:..\FreeRTOS\Source/tasks.c **** 			xReturn = pdPASS;
 673:..\FreeRTOS\Source/tasks.c **** 		}
 674:..\FreeRTOS\Source/tasks.c **** 
 675:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
 676:..\FreeRTOS\Source/tasks.c **** 	}
 677:..\FreeRTOS\Source/tasks.c **** 
 678:..\FreeRTOS\Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 679:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 680:..\FreeRTOS\Source/tasks.c **** 
 681:..\FreeRTOS\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 682:..\FreeRTOS\Source/tasks.c **** 
 683:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 684:..\FreeRTOS\Source/tasks.c **** 	{
 685:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxNewTCB;
 686:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 687:..\FreeRTOS\Source/tasks.c **** 
 688:..\FreeRTOS\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 689:..\FreeRTOS\Source/tasks.c **** 
 690:..\FreeRTOS\Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 691:..\FreeRTOS\Source/tasks.c **** 		{
 692:..\FreeRTOS\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 693:..\FreeRTOS\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 694:..\FreeRTOS\Source/tasks.c **** 			not static allocation is being used. */
 695:..\FreeRTOS\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 696:..\FreeRTOS\Source/tasks.c **** 
 697:..\FreeRTOS\Source/tasks.c **** 			if( pxNewTCB != NULL )
 698:..\FreeRTOS\Source/tasks.c **** 			{
 699:..\FreeRTOS\Source/tasks.c **** 				/* Store the stack location in the TCB. */
 700:..\FreeRTOS\Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 701:..\FreeRTOS\Source/tasks.c **** 
 702:..\FreeRTOS\Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 703:..\FreeRTOS\Source/tasks.c **** 				{
 704:..\FreeRTOS\Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 705:..\FreeRTOS\Source/tasks.c **** 					this task had a statically allocated stack in case it is
 706:..\FreeRTOS\Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 707:..\FreeRTOS\Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 708:..\FreeRTOS\Source/tasks.c **** 				}
 709:..\FreeRTOS\Source/tasks.c **** 				#endif
 710:..\FreeRTOS\Source/tasks.c **** 
 711:..\FreeRTOS\Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 712:..\FreeRTOS\Source/tasks.c **** 										pxTaskDefinition->pcName,
 713:..\FreeRTOS\Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 714:..\FreeRTOS\Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 715:..\FreeRTOS\Source/tasks.c **** 										pxTaskDefinition->uxPriority,
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 14


 716:..\FreeRTOS\Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 717:..\FreeRTOS\Source/tasks.c **** 										pxTaskDefinition->xRegions );
 718:..\FreeRTOS\Source/tasks.c **** 
 719:..\FreeRTOS\Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 720:..\FreeRTOS\Source/tasks.c **** 				xReturn = pdPASS;
 721:..\FreeRTOS\Source/tasks.c **** 			}
 722:..\FreeRTOS\Source/tasks.c **** 		}
 723:..\FreeRTOS\Source/tasks.c **** 
 724:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
 725:..\FreeRTOS\Source/tasks.c **** 	}
 726:..\FreeRTOS\Source/tasks.c **** 
 727:..\FreeRTOS\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 728:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 729:..\FreeRTOS\Source/tasks.c **** 
 730:..\FreeRTOS\Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 731:..\FreeRTOS\Source/tasks.c **** 
 732:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 733:..\FreeRTOS\Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 734:..\FreeRTOS\Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 735:..\FreeRTOS\Source/tasks.c **** 							void * const pvParameters,
 736:..\FreeRTOS\Source/tasks.c **** 							UBaseType_t uxPriority,
 737:..\FreeRTOS\Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 738:..\FreeRTOS\Source/tasks.c **** 	{
 739:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxNewTCB;
 740:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xReturn;
 741:..\FreeRTOS\Source/tasks.c **** 
 742:..\FreeRTOS\Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 743:..\FreeRTOS\Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 744:..\FreeRTOS\Source/tasks.c **** 		the TCB then the stack. */
 745:..\FreeRTOS\Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 746:..\FreeRTOS\Source/tasks.c **** 		{
 747:..\FreeRTOS\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 748:..\FreeRTOS\Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 749:..\FreeRTOS\Source/tasks.c **** 			allocation is being used. */
 750:..\FreeRTOS\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 751:..\FreeRTOS\Source/tasks.c **** 
 752:..\FreeRTOS\Source/tasks.c **** 			if( pxNewTCB != NULL )
 753:..\FreeRTOS\Source/tasks.c **** 			{
 754:..\FreeRTOS\Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 755:..\FreeRTOS\Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 756:..\FreeRTOS\Source/tasks.c **** 				be deleted later if required. */
 757:..\FreeRTOS\Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 758:..\FreeRTOS\Source/tasks.c **** 
 759:..\FreeRTOS\Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 760:..\FreeRTOS\Source/tasks.c **** 				{
 761:..\FreeRTOS\Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 762:..\FreeRTOS\Source/tasks.c **** 					vPortFree( pxNewTCB );
 763:..\FreeRTOS\Source/tasks.c **** 					pxNewTCB = NULL;
 764:..\FreeRTOS\Source/tasks.c **** 				}
 765:..\FreeRTOS\Source/tasks.c **** 			}
 766:..\FreeRTOS\Source/tasks.c **** 		}
 767:..\FreeRTOS\Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 768:..\FreeRTOS\Source/tasks.c **** 		{
 769:..\FreeRTOS\Source/tasks.c **** 		StackType_t *pxStack;
 770:..\FreeRTOS\Source/tasks.c **** 
 771:..\FreeRTOS\Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 772:..\FreeRTOS\Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 15


 773:..\FreeRTOS\Source/tasks.c **** 
 774:..\FreeRTOS\Source/tasks.c **** 			if( pxStack != NULL )
 775:..\FreeRTOS\Source/tasks.c **** 			{
 776:..\FreeRTOS\Source/tasks.c **** 				/* Allocate space for the TCB. */
 777:..\FreeRTOS\Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 778:..\FreeRTOS\Source/tasks.c **** 
 779:..\FreeRTOS\Source/tasks.c **** 				if( pxNewTCB != NULL )
 780:..\FreeRTOS\Source/tasks.c **** 				{
 781:..\FreeRTOS\Source/tasks.c **** 					/* Store the stack location in the TCB. */
 782:..\FreeRTOS\Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 783:..\FreeRTOS\Source/tasks.c **** 				}
 784:..\FreeRTOS\Source/tasks.c **** 				else
 785:..\FreeRTOS\Source/tasks.c **** 				{
 786:..\FreeRTOS\Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 787:..\FreeRTOS\Source/tasks.c **** 					it again. */
 788:..\FreeRTOS\Source/tasks.c **** 					vPortFree( pxStack );
 789:..\FreeRTOS\Source/tasks.c **** 				}
 790:..\FreeRTOS\Source/tasks.c **** 			}
 791:..\FreeRTOS\Source/tasks.c **** 			else
 792:..\FreeRTOS\Source/tasks.c **** 			{
 793:..\FreeRTOS\Source/tasks.c **** 				pxNewTCB = NULL;
 794:..\FreeRTOS\Source/tasks.c **** 			}
 795:..\FreeRTOS\Source/tasks.c **** 		}
 796:..\FreeRTOS\Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 797:..\FreeRTOS\Source/tasks.c **** 
 798:..\FreeRTOS\Source/tasks.c **** 		if( pxNewTCB != NULL )
 799:..\FreeRTOS\Source/tasks.c **** 		{
 800:..\FreeRTOS\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 801:..\FreeRTOS\Source/tasks.c **** 			{
 802:..\FreeRTOS\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 803:..\FreeRTOS\Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 804:..\FreeRTOS\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 805:..\FreeRTOS\Source/tasks.c **** 			}
 806:..\FreeRTOS\Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 807:..\FreeRTOS\Source/tasks.c **** 
 808:..\FreeRTOS\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 809:..\FreeRTOS\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 810:..\FreeRTOS\Source/tasks.c **** 			xReturn = pdPASS;
 811:..\FreeRTOS\Source/tasks.c **** 		}
 812:..\FreeRTOS\Source/tasks.c **** 		else
 813:..\FreeRTOS\Source/tasks.c **** 		{
 814:..\FreeRTOS\Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 815:..\FreeRTOS\Source/tasks.c **** 		}
 816:..\FreeRTOS\Source/tasks.c **** 
 817:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
 818:..\FreeRTOS\Source/tasks.c **** 	}
 819:..\FreeRTOS\Source/tasks.c **** 
 820:..\FreeRTOS\Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 821:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 822:..\FreeRTOS\Source/tasks.c **** 
 823:..\FreeRTOS\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 824:..\FreeRTOS\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 825:..\FreeRTOS\Source/tasks.c **** 									const uint32_t ulStackDepth,
 826:..\FreeRTOS\Source/tasks.c **** 									void * const pvParameters,
 827:..\FreeRTOS\Source/tasks.c **** 									UBaseType_t uxPriority,
 828:..\FreeRTOS\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 829:..\FreeRTOS\Source/tasks.c **** 									TCB_t *pxNewTCB,
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 16


 830:..\FreeRTOS\Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 831:..\FreeRTOS\Source/tasks.c **** {
 832:..\FreeRTOS\Source/tasks.c **** StackType_t *pxTopOfStack;
 833:..\FreeRTOS\Source/tasks.c **** UBaseType_t x;
 834:..\FreeRTOS\Source/tasks.c **** 
 835:..\FreeRTOS\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 836:..\FreeRTOS\Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 837:..\FreeRTOS\Source/tasks.c **** 		BaseType_t xRunPrivileged;
 838:..\FreeRTOS\Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 839:..\FreeRTOS\Source/tasks.c **** 		{
 840:..\FreeRTOS\Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 841:..\FreeRTOS\Source/tasks.c **** 		}
 842:..\FreeRTOS\Source/tasks.c **** 		else
 843:..\FreeRTOS\Source/tasks.c **** 		{
 844:..\FreeRTOS\Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 845:..\FreeRTOS\Source/tasks.c **** 		}
 846:..\FreeRTOS\Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 847:..\FreeRTOS\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 848:..\FreeRTOS\Source/tasks.c **** 
 849:..\FreeRTOS\Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 850:..\FreeRTOS\Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 851:..\FreeRTOS\Source/tasks.c **** 	{
 852:..\FreeRTOS\Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 853:..\FreeRTOS\Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 854:..\FreeRTOS\Source/tasks.c **** 	}
 855:..\FreeRTOS\Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 856:..\FreeRTOS\Source/tasks.c **** 
 857:..\FreeRTOS\Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 858:..\FreeRTOS\Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 859:..\FreeRTOS\Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 860:..\FreeRTOS\Source/tasks.c **** 	by the port. */
 861:..\FreeRTOS\Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 862:..\FreeRTOS\Source/tasks.c **** 	{
 863:..\FreeRTOS\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 864:..\FreeRTOS\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 865:..\FreeRTOS\Source/tasks.c **** 
 866:..\FreeRTOS\Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 867:..\FreeRTOS\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 868:..\FreeRTOS\Source/tasks.c **** 
 869:..\FreeRTOS\Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 870:..\FreeRTOS\Source/tasks.c **** 		{
 871:..\FreeRTOS\Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 872:..\FreeRTOS\Source/tasks.c **** 			debugging. */
 873:..\FreeRTOS\Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 874:..\FreeRTOS\Source/tasks.c **** 		}
 875:..\FreeRTOS\Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 876:..\FreeRTOS\Source/tasks.c **** 	}
 877:..\FreeRTOS\Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 878:..\FreeRTOS\Source/tasks.c **** 	{
 879:..\FreeRTOS\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 880:..\FreeRTOS\Source/tasks.c **** 
 881:..\FreeRTOS\Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 882:..\FreeRTOS\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 883:..\FreeRTOS\Source/tasks.c **** 
 884:..\FreeRTOS\Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 885:..\FreeRTOS\Source/tasks.c **** 		performed. */
 886:..\FreeRTOS\Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 17


 887:..\FreeRTOS\Source/tasks.c **** 	}
 888:..\FreeRTOS\Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 889:..\FreeRTOS\Source/tasks.c **** 
 890:..\FreeRTOS\Source/tasks.c **** 	/* Store the task name in the TCB. */
 891:..\FreeRTOS\Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 892:..\FreeRTOS\Source/tasks.c **** 	{
 893:..\FreeRTOS\Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 894:..\FreeRTOS\Source/tasks.c **** 
 895:..\FreeRTOS\Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 896:..\FreeRTOS\Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 897:..\FreeRTOS\Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 898:..\FreeRTOS\Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 899:..\FreeRTOS\Source/tasks.c **** 		{
 900:..\FreeRTOS\Source/tasks.c **** 			break;
 901:..\FreeRTOS\Source/tasks.c **** 		}
 902:..\FreeRTOS\Source/tasks.c **** 		else
 903:..\FreeRTOS\Source/tasks.c **** 		{
 904:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 905:..\FreeRTOS\Source/tasks.c **** 		}
 906:..\FreeRTOS\Source/tasks.c **** 	}
 907:..\FreeRTOS\Source/tasks.c **** 
 908:..\FreeRTOS\Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 909:..\FreeRTOS\Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 910:..\FreeRTOS\Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 911:..\FreeRTOS\Source/tasks.c **** 
 912:..\FreeRTOS\Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 913:..\FreeRTOS\Source/tasks.c **** 	remove the privilege bit if one is present. */
 914:..\FreeRTOS\Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 915:..\FreeRTOS\Source/tasks.c **** 	{
 916:..\FreeRTOS\Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 917:..\FreeRTOS\Source/tasks.c **** 	}
 918:..\FreeRTOS\Source/tasks.c **** 	else
 919:..\FreeRTOS\Source/tasks.c **** 	{
 920:..\FreeRTOS\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 921:..\FreeRTOS\Source/tasks.c **** 	}
 922:..\FreeRTOS\Source/tasks.c **** 
 923:..\FreeRTOS\Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 924:..\FreeRTOS\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 925:..\FreeRTOS\Source/tasks.c **** 	{
 926:..\FreeRTOS\Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 927:..\FreeRTOS\Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 928:..\FreeRTOS\Source/tasks.c **** 	}
 929:..\FreeRTOS\Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 930:..\FreeRTOS\Source/tasks.c **** 
 931:..\FreeRTOS\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 932:..\FreeRTOS\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 933:..\FreeRTOS\Source/tasks.c **** 
 934:..\FreeRTOS\Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 935:..\FreeRTOS\Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 936:..\FreeRTOS\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 937:..\FreeRTOS\Source/tasks.c **** 
 938:..\FreeRTOS\Source/tasks.c **** 	/* Event lists are always in priority order. */
 939:..\FreeRTOS\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 940:..\FreeRTOS\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 941:..\FreeRTOS\Source/tasks.c **** 
 942:..\FreeRTOS\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 943:..\FreeRTOS\Source/tasks.c **** 	{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 18


 944:..\FreeRTOS\Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 945:..\FreeRTOS\Source/tasks.c **** 	}
 946:..\FreeRTOS\Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 947:..\FreeRTOS\Source/tasks.c **** 
 948:..\FreeRTOS\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 949:..\FreeRTOS\Source/tasks.c **** 	{
 950:..\FreeRTOS\Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 951:..\FreeRTOS\Source/tasks.c **** 	}
 952:..\FreeRTOS\Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 953:..\FreeRTOS\Source/tasks.c **** 
 954:..\FreeRTOS\Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 955:..\FreeRTOS\Source/tasks.c **** 	{
 956:..\FreeRTOS\Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 957:..\FreeRTOS\Source/tasks.c **** 	}
 958:..\FreeRTOS\Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 959:..\FreeRTOS\Source/tasks.c **** 
 960:..\FreeRTOS\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 961:..\FreeRTOS\Source/tasks.c **** 	{
 962:..\FreeRTOS\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 963:..\FreeRTOS\Source/tasks.c **** 	}
 964:..\FreeRTOS\Source/tasks.c **** 	#else
 965:..\FreeRTOS\Source/tasks.c **** 	{
 966:..\FreeRTOS\Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 967:..\FreeRTOS\Source/tasks.c **** 		( void ) xRegions;
 968:..\FreeRTOS\Source/tasks.c **** 	}
 969:..\FreeRTOS\Source/tasks.c **** 	#endif
 970:..\FreeRTOS\Source/tasks.c **** 
 971:..\FreeRTOS\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 972:..\FreeRTOS\Source/tasks.c **** 	{
 973:..\FreeRTOS\Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 974:..\FreeRTOS\Source/tasks.c **** 		{
 975:..\FreeRTOS\Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 976:..\FreeRTOS\Source/tasks.c **** 		}
 977:..\FreeRTOS\Source/tasks.c **** 	}
 978:..\FreeRTOS\Source/tasks.c **** 	#endif
 979:..\FreeRTOS\Source/tasks.c **** 
 980:..\FreeRTOS\Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 981:..\FreeRTOS\Source/tasks.c **** 	{
 982:..\FreeRTOS\Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 983:..\FreeRTOS\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 984:..\FreeRTOS\Source/tasks.c **** 	}
 985:..\FreeRTOS\Source/tasks.c **** 	#endif
 986:..\FreeRTOS\Source/tasks.c **** 
 987:..\FreeRTOS\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 988:..\FreeRTOS\Source/tasks.c **** 	{
 989:..\FreeRTOS\Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 990:..\FreeRTOS\Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 991:..\FreeRTOS\Source/tasks.c **** 	}
 992:..\FreeRTOS\Source/tasks.c **** 	#endif
 993:..\FreeRTOS\Source/tasks.c **** 
 994:..\FreeRTOS\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 995:..\FreeRTOS\Source/tasks.c **** 	{
 996:..\FreeRTOS\Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 997:..\FreeRTOS\Source/tasks.c **** 	}
 998:..\FreeRTOS\Source/tasks.c **** 	#endif
 999:..\FreeRTOS\Source/tasks.c **** 
1000:..\FreeRTOS\Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 19


1001:..\FreeRTOS\Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1002:..\FreeRTOS\Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1003:..\FreeRTOS\Source/tasks.c **** 	the top of stack variable is updated. */
1004:..\FreeRTOS\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1005:..\FreeRTOS\Source/tasks.c **** 	{
1006:..\FreeRTOS\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1007:..\FreeRTOS\Source/tasks.c **** 	}
1008:..\FreeRTOS\Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1009:..\FreeRTOS\Source/tasks.c **** 	{
1010:..\FreeRTOS\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1011:..\FreeRTOS\Source/tasks.c **** 	}
1012:..\FreeRTOS\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1013:..\FreeRTOS\Source/tasks.c **** 
1014:..\FreeRTOS\Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
1015:..\FreeRTOS\Source/tasks.c **** 	{
1016:..\FreeRTOS\Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1017:..\FreeRTOS\Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1018:..\FreeRTOS\Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1019:..\FreeRTOS\Source/tasks.c **** 	}
1020:..\FreeRTOS\Source/tasks.c **** 	else
1021:..\FreeRTOS\Source/tasks.c **** 	{
1022:..\FreeRTOS\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1023:..\FreeRTOS\Source/tasks.c **** 	}
1024:..\FreeRTOS\Source/tasks.c **** }
1025:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
1026:..\FreeRTOS\Source/tasks.c **** 
1027:..\FreeRTOS\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1028:..\FreeRTOS\Source/tasks.c **** {
1029:..\FreeRTOS\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1030:..\FreeRTOS\Source/tasks.c **** 	updated. */
1031:..\FreeRTOS\Source/tasks.c **** 	taskENTER_CRITICAL();
1032:..\FreeRTOS\Source/tasks.c **** 	{
1033:..\FreeRTOS\Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1034:..\FreeRTOS\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1035:..\FreeRTOS\Source/tasks.c **** 		{
1036:..\FreeRTOS\Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1037:..\FreeRTOS\Source/tasks.c **** 			the suspended state - make this the current task. */
1038:..\FreeRTOS\Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1039:..\FreeRTOS\Source/tasks.c **** 
1040:..\FreeRTOS\Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1041:..\FreeRTOS\Source/tasks.c **** 			{
1042:..\FreeRTOS\Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1043:..\FreeRTOS\Source/tasks.c **** 				initialisation required.  We will not recover if this call
1044:..\FreeRTOS\Source/tasks.c **** 				fails, but we will report the failure. */
1045:..\FreeRTOS\Source/tasks.c **** 				prvInitialiseTaskLists();
1046:..\FreeRTOS\Source/tasks.c **** 			}
1047:..\FreeRTOS\Source/tasks.c **** 			else
1048:..\FreeRTOS\Source/tasks.c **** 			{
1049:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1050:..\FreeRTOS\Source/tasks.c **** 			}
1051:..\FreeRTOS\Source/tasks.c **** 		}
1052:..\FreeRTOS\Source/tasks.c **** 		else
1053:..\FreeRTOS\Source/tasks.c **** 		{
1054:..\FreeRTOS\Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1055:..\FreeRTOS\Source/tasks.c **** 			current task if it is the highest priority task to be created
1056:..\FreeRTOS\Source/tasks.c **** 			so far. */
1057:..\FreeRTOS\Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 20


1058:..\FreeRTOS\Source/tasks.c **** 			{
1059:..\FreeRTOS\Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1060:..\FreeRTOS\Source/tasks.c **** 				{
1061:..\FreeRTOS\Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1062:..\FreeRTOS\Source/tasks.c **** 				}
1063:..\FreeRTOS\Source/tasks.c **** 				else
1064:..\FreeRTOS\Source/tasks.c **** 				{
1065:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1066:..\FreeRTOS\Source/tasks.c **** 				}
1067:..\FreeRTOS\Source/tasks.c **** 			}
1068:..\FreeRTOS\Source/tasks.c **** 			else
1069:..\FreeRTOS\Source/tasks.c **** 			{
1070:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1071:..\FreeRTOS\Source/tasks.c **** 			}
1072:..\FreeRTOS\Source/tasks.c **** 		}
1073:..\FreeRTOS\Source/tasks.c **** 
1074:..\FreeRTOS\Source/tasks.c **** 		uxTaskNumber++;
1075:..\FreeRTOS\Source/tasks.c **** 
1076:..\FreeRTOS\Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1077:..\FreeRTOS\Source/tasks.c **** 		{
1078:..\FreeRTOS\Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1079:..\FreeRTOS\Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1080:..\FreeRTOS\Source/tasks.c **** 		}
1081:..\FreeRTOS\Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1082:..\FreeRTOS\Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1083:..\FreeRTOS\Source/tasks.c **** 
1084:..\FreeRTOS\Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1085:..\FreeRTOS\Source/tasks.c **** 
1086:..\FreeRTOS\Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1087:..\FreeRTOS\Source/tasks.c **** 	}
1088:..\FreeRTOS\Source/tasks.c **** 	taskEXIT_CRITICAL();
1089:..\FreeRTOS\Source/tasks.c **** 
1090:..\FreeRTOS\Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1091:..\FreeRTOS\Source/tasks.c **** 	{
1092:..\FreeRTOS\Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1093:..\FreeRTOS\Source/tasks.c **** 		then it should run now. */
1094:..\FreeRTOS\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1095:..\FreeRTOS\Source/tasks.c **** 		{
1096:..\FreeRTOS\Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1097:..\FreeRTOS\Source/tasks.c **** 		}
1098:..\FreeRTOS\Source/tasks.c **** 		else
1099:..\FreeRTOS\Source/tasks.c **** 		{
1100:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1101:..\FreeRTOS\Source/tasks.c **** 		}
1102:..\FreeRTOS\Source/tasks.c **** 	}
1103:..\FreeRTOS\Source/tasks.c **** 	else
1104:..\FreeRTOS\Source/tasks.c **** 	{
1105:..\FreeRTOS\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1106:..\FreeRTOS\Source/tasks.c **** 	}
1107:..\FreeRTOS\Source/tasks.c **** }
1108:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
1109:..\FreeRTOS\Source/tasks.c **** 
1110:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1111:..\FreeRTOS\Source/tasks.c **** 
1112:..\FreeRTOS\Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1113:..\FreeRTOS\Source/tasks.c **** 	{
1114:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 21


1115:..\FreeRTOS\Source/tasks.c **** 
1116:..\FreeRTOS\Source/tasks.c **** 		taskENTER_CRITICAL();
1117:..\FreeRTOS\Source/tasks.c **** 		{
1118:..\FreeRTOS\Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1119:..\FreeRTOS\Source/tasks.c **** 			being deleted. */
1120:..\FreeRTOS\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1121:..\FreeRTOS\Source/tasks.c **** 
1122:..\FreeRTOS\Source/tasks.c **** 			/* Remove task from the ready list. */
1123:..\FreeRTOS\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1124:..\FreeRTOS\Source/tasks.c **** 			{
1125:..\FreeRTOS\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1126:..\FreeRTOS\Source/tasks.c **** 			}
1127:..\FreeRTOS\Source/tasks.c **** 			else
1128:..\FreeRTOS\Source/tasks.c **** 			{
1129:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1130:..\FreeRTOS\Source/tasks.c **** 			}
1131:..\FreeRTOS\Source/tasks.c **** 
1132:..\FreeRTOS\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1133:..\FreeRTOS\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1134:..\FreeRTOS\Source/tasks.c **** 			{
1135:..\FreeRTOS\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1136:..\FreeRTOS\Source/tasks.c **** 			}
1137:..\FreeRTOS\Source/tasks.c **** 			else
1138:..\FreeRTOS\Source/tasks.c **** 			{
1139:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1140:..\FreeRTOS\Source/tasks.c **** 			}
1141:..\FreeRTOS\Source/tasks.c **** 
1142:..\FreeRTOS\Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1143:..\FreeRTOS\Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1144:..\FreeRTOS\Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1145:..\FreeRTOS\Source/tasks.c **** 			not return. */
1146:..\FreeRTOS\Source/tasks.c **** 			uxTaskNumber++;
1147:..\FreeRTOS\Source/tasks.c **** 
1148:..\FreeRTOS\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1149:..\FreeRTOS\Source/tasks.c **** 			{
1150:..\FreeRTOS\Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1151:..\FreeRTOS\Source/tasks.c **** 				task itself, as a context switch to another task is required.
1152:..\FreeRTOS\Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1153:..\FreeRTOS\Source/tasks.c **** 				check the termination list and free up any memory allocated by
1154:..\FreeRTOS\Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1155:..\FreeRTOS\Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1156:..\FreeRTOS\Source/tasks.c **** 
1157:..\FreeRTOS\Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1158:..\FreeRTOS\Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1159:..\FreeRTOS\Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1160:..\FreeRTOS\Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1161:..\FreeRTOS\Source/tasks.c **** 
1162:..\FreeRTOS\Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1163:..\FreeRTOS\Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1164:..\FreeRTOS\Source/tasks.c **** 				after which it is not possible to yield away from this task -
1165:..\FreeRTOS\Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1166:..\FreeRTOS\Source/tasks.c **** 				required. */
1167:..\FreeRTOS\Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1168:..\FreeRTOS\Source/tasks.c **** 			}
1169:..\FreeRTOS\Source/tasks.c **** 			else
1170:..\FreeRTOS\Source/tasks.c **** 			{
1171:..\FreeRTOS\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 22


1172:..\FreeRTOS\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1173:..\FreeRTOS\Source/tasks.c **** 
1174:..\FreeRTOS\Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1175:..\FreeRTOS\Source/tasks.c **** 				the task that has just been deleted. */
1176:..\FreeRTOS\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1177:..\FreeRTOS\Source/tasks.c **** 			}
1178:..\FreeRTOS\Source/tasks.c **** 
1179:..\FreeRTOS\Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1180:..\FreeRTOS\Source/tasks.c **** 		}
1181:..\FreeRTOS\Source/tasks.c **** 		taskEXIT_CRITICAL();
1182:..\FreeRTOS\Source/tasks.c **** 
1183:..\FreeRTOS\Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1184:..\FreeRTOS\Source/tasks.c **** 		been deleted. */
1185:..\FreeRTOS\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1186:..\FreeRTOS\Source/tasks.c **** 		{
1187:..\FreeRTOS\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1188:..\FreeRTOS\Source/tasks.c **** 			{
1189:..\FreeRTOS\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1190:..\FreeRTOS\Source/tasks.c **** 				portYIELD_WITHIN_API();
1191:..\FreeRTOS\Source/tasks.c **** 			}
1192:..\FreeRTOS\Source/tasks.c **** 			else
1193:..\FreeRTOS\Source/tasks.c **** 			{
1194:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1195:..\FreeRTOS\Source/tasks.c **** 			}
1196:..\FreeRTOS\Source/tasks.c **** 		}
1197:..\FreeRTOS\Source/tasks.c **** 	}
1198:..\FreeRTOS\Source/tasks.c **** 
1199:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1200:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
1201:..\FreeRTOS\Source/tasks.c **** 
1202:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1203:..\FreeRTOS\Source/tasks.c **** 
1204:..\FreeRTOS\Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1205:..\FreeRTOS\Source/tasks.c **** 	{
1206:..\FreeRTOS\Source/tasks.c **** 	TickType_t xTimeToWake;
1207:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1208:..\FreeRTOS\Source/tasks.c **** 
1209:..\FreeRTOS\Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1210:..\FreeRTOS\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1211:..\FreeRTOS\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1212:..\FreeRTOS\Source/tasks.c **** 
1213:..\FreeRTOS\Source/tasks.c **** 		vTaskSuspendAll();
1214:..\FreeRTOS\Source/tasks.c **** 		{
1215:..\FreeRTOS\Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1216:..\FreeRTOS\Source/tasks.c **** 			block. */
1217:..\FreeRTOS\Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1218:..\FreeRTOS\Source/tasks.c **** 
1219:..\FreeRTOS\Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1220:..\FreeRTOS\Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1221:..\FreeRTOS\Source/tasks.c **** 
1222:..\FreeRTOS\Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1223:..\FreeRTOS\Source/tasks.c **** 			{
1224:..\FreeRTOS\Source/tasks.c **** 				/* The tick count has overflowed since this function was
1225:..\FreeRTOS\Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1226:..\FreeRTOS\Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1227:..\FreeRTOS\Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1228:..\FreeRTOS\Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 23


1229:..\FreeRTOS\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1230:..\FreeRTOS\Source/tasks.c **** 				{
1231:..\FreeRTOS\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1232:..\FreeRTOS\Source/tasks.c **** 				}
1233:..\FreeRTOS\Source/tasks.c **** 				else
1234:..\FreeRTOS\Source/tasks.c **** 				{
1235:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1236:..\FreeRTOS\Source/tasks.c **** 				}
1237:..\FreeRTOS\Source/tasks.c **** 			}
1238:..\FreeRTOS\Source/tasks.c **** 			else
1239:..\FreeRTOS\Source/tasks.c **** 			{
1240:..\FreeRTOS\Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1241:..\FreeRTOS\Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1242:..\FreeRTOS\Source/tasks.c **** 				tick time is less than the wake time. */
1243:..\FreeRTOS\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1244:..\FreeRTOS\Source/tasks.c **** 				{
1245:..\FreeRTOS\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1246:..\FreeRTOS\Source/tasks.c **** 				}
1247:..\FreeRTOS\Source/tasks.c **** 				else
1248:..\FreeRTOS\Source/tasks.c **** 				{
1249:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1250:..\FreeRTOS\Source/tasks.c **** 				}
1251:..\FreeRTOS\Source/tasks.c **** 			}
1252:..\FreeRTOS\Source/tasks.c **** 
1253:..\FreeRTOS\Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1254:..\FreeRTOS\Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1255:..\FreeRTOS\Source/tasks.c **** 
1256:..\FreeRTOS\Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1257:..\FreeRTOS\Source/tasks.c **** 			{
1258:..\FreeRTOS\Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1259:..\FreeRTOS\Source/tasks.c **** 
1260:..\FreeRTOS\Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1261:..\FreeRTOS\Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1262:..\FreeRTOS\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1263:..\FreeRTOS\Source/tasks.c **** 			}
1264:..\FreeRTOS\Source/tasks.c **** 			else
1265:..\FreeRTOS\Source/tasks.c **** 			{
1266:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1267:..\FreeRTOS\Source/tasks.c **** 			}
1268:..\FreeRTOS\Source/tasks.c **** 		}
1269:..\FreeRTOS\Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1270:..\FreeRTOS\Source/tasks.c **** 
1271:..\FreeRTOS\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1272:..\FreeRTOS\Source/tasks.c **** 		have put ourselves to sleep. */
1273:..\FreeRTOS\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1274:..\FreeRTOS\Source/tasks.c **** 		{
1275:..\FreeRTOS\Source/tasks.c **** 			portYIELD_WITHIN_API();
1276:..\FreeRTOS\Source/tasks.c **** 		}
1277:..\FreeRTOS\Source/tasks.c **** 		else
1278:..\FreeRTOS\Source/tasks.c **** 		{
1279:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1280:..\FreeRTOS\Source/tasks.c **** 		}
1281:..\FreeRTOS\Source/tasks.c **** 	}
1282:..\FreeRTOS\Source/tasks.c **** 
1283:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1284:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
1285:..\FreeRTOS\Source/tasks.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 24


1286:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1287:..\FreeRTOS\Source/tasks.c **** 
1288:..\FreeRTOS\Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1289:..\FreeRTOS\Source/tasks.c **** 	{
1290:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1291:..\FreeRTOS\Source/tasks.c **** 
1292:..\FreeRTOS\Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1293:..\FreeRTOS\Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1294:..\FreeRTOS\Source/tasks.c **** 		{
1295:..\FreeRTOS\Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1296:..\FreeRTOS\Source/tasks.c **** 			vTaskSuspendAll();
1297:..\FreeRTOS\Source/tasks.c **** 			{
1298:..\FreeRTOS\Source/tasks.c **** 				traceTASK_DELAY();
1299:..\FreeRTOS\Source/tasks.c **** 
1300:..\FreeRTOS\Source/tasks.c **** 				/* A task that is removed from the event list while the
1301:..\FreeRTOS\Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1302:..\FreeRTOS\Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1303:..\FreeRTOS\Source/tasks.c **** 				is resumed.
1304:..\FreeRTOS\Source/tasks.c **** 
1305:..\FreeRTOS\Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1306:..\FreeRTOS\Source/tasks.c **** 				executing task. */
1307:..\FreeRTOS\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1308:..\FreeRTOS\Source/tasks.c **** 			}
1309:..\FreeRTOS\Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1310:..\FreeRTOS\Source/tasks.c **** 		}
1311:..\FreeRTOS\Source/tasks.c **** 		else
1312:..\FreeRTOS\Source/tasks.c **** 		{
1313:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1314:..\FreeRTOS\Source/tasks.c **** 		}
1315:..\FreeRTOS\Source/tasks.c **** 
1316:..\FreeRTOS\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1317:..\FreeRTOS\Source/tasks.c **** 		have put ourselves to sleep. */
1318:..\FreeRTOS\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1319:..\FreeRTOS\Source/tasks.c **** 		{
1320:..\FreeRTOS\Source/tasks.c **** 			portYIELD_WITHIN_API();
1321:..\FreeRTOS\Source/tasks.c **** 		}
1322:..\FreeRTOS\Source/tasks.c **** 		else
1323:..\FreeRTOS\Source/tasks.c **** 		{
1324:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1325:..\FreeRTOS\Source/tasks.c **** 		}
1326:..\FreeRTOS\Source/tasks.c **** 	}
1327:..\FreeRTOS\Source/tasks.c **** 
1328:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1329:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
1330:..\FreeRTOS\Source/tasks.c **** 
1331:..\FreeRTOS\Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1332:..\FreeRTOS\Source/tasks.c **** 
1333:..\FreeRTOS\Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1334:..\FreeRTOS\Source/tasks.c **** 	{
1335:..\FreeRTOS\Source/tasks.c **** 	eTaskState eReturn;
1336:..\FreeRTOS\Source/tasks.c **** 	List_t *pxStateList;
1337:..\FreeRTOS\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1338:..\FreeRTOS\Source/tasks.c **** 
1339:..\FreeRTOS\Source/tasks.c **** 		configASSERT( pxTCB );
1340:..\FreeRTOS\Source/tasks.c **** 
1341:..\FreeRTOS\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1342:..\FreeRTOS\Source/tasks.c **** 		{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 25


1343:..\FreeRTOS\Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1344:..\FreeRTOS\Source/tasks.c **** 			eReturn = eRunning;
1345:..\FreeRTOS\Source/tasks.c **** 		}
1346:..\FreeRTOS\Source/tasks.c **** 		else
1347:..\FreeRTOS\Source/tasks.c **** 		{
1348:..\FreeRTOS\Source/tasks.c **** 			taskENTER_CRITICAL();
1349:..\FreeRTOS\Source/tasks.c **** 			{
1350:..\FreeRTOS\Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1351:..\FreeRTOS\Source/tasks.c **** 			}
1352:..\FreeRTOS\Source/tasks.c **** 			taskEXIT_CRITICAL();
1353:..\FreeRTOS\Source/tasks.c **** 
1354:..\FreeRTOS\Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1355:..\FreeRTOS\Source/tasks.c **** 			{
1356:..\FreeRTOS\Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1357:..\FreeRTOS\Source/tasks.c **** 				lists. */
1358:..\FreeRTOS\Source/tasks.c **** 				eReturn = eBlocked;
1359:..\FreeRTOS\Source/tasks.c **** 			}
1360:..\FreeRTOS\Source/tasks.c **** 
1361:..\FreeRTOS\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1362:..\FreeRTOS\Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1363:..\FreeRTOS\Source/tasks.c **** 				{
1364:..\FreeRTOS\Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1365:..\FreeRTOS\Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1366:..\FreeRTOS\Source/tasks.c **** 					indefinitely? */
1367:..\FreeRTOS\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1368:..\FreeRTOS\Source/tasks.c **** 					{
1369:..\FreeRTOS\Source/tasks.c **** 						eReturn = eSuspended;
1370:..\FreeRTOS\Source/tasks.c **** 					}
1371:..\FreeRTOS\Source/tasks.c **** 					else
1372:..\FreeRTOS\Source/tasks.c **** 					{
1373:..\FreeRTOS\Source/tasks.c **** 						eReturn = eBlocked;
1374:..\FreeRTOS\Source/tasks.c **** 					}
1375:..\FreeRTOS\Source/tasks.c **** 				}
1376:..\FreeRTOS\Source/tasks.c **** 			#endif
1377:..\FreeRTOS\Source/tasks.c **** 
1378:..\FreeRTOS\Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1379:..\FreeRTOS\Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1380:..\FreeRTOS\Source/tasks.c **** 				{
1381:..\FreeRTOS\Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1382:..\FreeRTOS\Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1383:..\FreeRTOS\Source/tasks.c **** 					all. */
1384:..\FreeRTOS\Source/tasks.c **** 					eReturn = eDeleted;
1385:..\FreeRTOS\Source/tasks.c **** 				}
1386:..\FreeRTOS\Source/tasks.c **** 			#endif
1387:..\FreeRTOS\Source/tasks.c **** 
1388:..\FreeRTOS\Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1389:..\FreeRTOS\Source/tasks.c **** 			{
1390:..\FreeRTOS\Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1391:..\FreeRTOS\Source/tasks.c **** 				Ready (including pending ready) state. */
1392:..\FreeRTOS\Source/tasks.c **** 				eReturn = eReady;
1393:..\FreeRTOS\Source/tasks.c **** 			}
1394:..\FreeRTOS\Source/tasks.c **** 		}
1395:..\FreeRTOS\Source/tasks.c **** 
1396:..\FreeRTOS\Source/tasks.c **** 		return eReturn;
1397:..\FreeRTOS\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1398:..\FreeRTOS\Source/tasks.c **** 
1399:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 26


1400:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
1401:..\FreeRTOS\Source/tasks.c **** 
1402:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1403:..\FreeRTOS\Source/tasks.c **** 
1404:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1405:..\FreeRTOS\Source/tasks.c **** 	{
1406:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
1407:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxReturn;
1408:..\FreeRTOS\Source/tasks.c **** 
1409:..\FreeRTOS\Source/tasks.c **** 		taskENTER_CRITICAL();
1410:..\FreeRTOS\Source/tasks.c **** 		{
1411:..\FreeRTOS\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1412:..\FreeRTOS\Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1413:..\FreeRTOS\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1414:..\FreeRTOS\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1415:..\FreeRTOS\Source/tasks.c **** 		}
1416:..\FreeRTOS\Source/tasks.c **** 		taskEXIT_CRITICAL();
1417:..\FreeRTOS\Source/tasks.c **** 
1418:..\FreeRTOS\Source/tasks.c **** 		return uxReturn;
1419:..\FreeRTOS\Source/tasks.c **** 	}
1420:..\FreeRTOS\Source/tasks.c **** 
1421:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1422:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
1423:..\FreeRTOS\Source/tasks.c **** 
1424:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1425:..\FreeRTOS\Source/tasks.c **** 
1426:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1427:..\FreeRTOS\Source/tasks.c **** 	{
1428:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
1429:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1430:..\FreeRTOS\Source/tasks.c **** 
1431:..\FreeRTOS\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1432:..\FreeRTOS\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1433:..\FreeRTOS\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1434:..\FreeRTOS\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1435:..\FreeRTOS\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1436:..\FreeRTOS\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1437:..\FreeRTOS\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1438:..\FreeRTOS\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1439:..\FreeRTOS\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1440:..\FreeRTOS\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1441:..\FreeRTOS\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1442:..\FreeRTOS\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1443:..\FreeRTOS\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1444:..\FreeRTOS\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1445:..\FreeRTOS\Source/tasks.c **** 		provided on the following link:
1446:..\FreeRTOS\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1447:..\FreeRTOS\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1448:..\FreeRTOS\Source/tasks.c **** 
1449:..\FreeRTOS\Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1450:..\FreeRTOS\Source/tasks.c **** 		{
1451:..\FreeRTOS\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1452:..\FreeRTOS\Source/tasks.c **** 			task that is being queried. */
1453:..\FreeRTOS\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1454:..\FreeRTOS\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1455:..\FreeRTOS\Source/tasks.c **** 		}
1456:..\FreeRTOS\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 27


1457:..\FreeRTOS\Source/tasks.c **** 
1458:..\FreeRTOS\Source/tasks.c **** 		return uxReturn;
1459:..\FreeRTOS\Source/tasks.c **** 	}
1460:..\FreeRTOS\Source/tasks.c **** 
1461:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1462:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
1463:..\FreeRTOS\Source/tasks.c **** 
1464:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1465:..\FreeRTOS\Source/tasks.c **** 
1466:..\FreeRTOS\Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1467:..\FreeRTOS\Source/tasks.c **** 	{
1468:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
1469:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1470:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1471:..\FreeRTOS\Source/tasks.c **** 
1472:..\FreeRTOS\Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1473:..\FreeRTOS\Source/tasks.c **** 
1474:..\FreeRTOS\Source/tasks.c **** 		/* Ensure the new priority is valid. */
1475:..\FreeRTOS\Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1476:..\FreeRTOS\Source/tasks.c **** 		{
1477:..\FreeRTOS\Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1478:..\FreeRTOS\Source/tasks.c **** 		}
1479:..\FreeRTOS\Source/tasks.c **** 		else
1480:..\FreeRTOS\Source/tasks.c **** 		{
1481:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1482:..\FreeRTOS\Source/tasks.c **** 		}
1483:..\FreeRTOS\Source/tasks.c **** 
1484:..\FreeRTOS\Source/tasks.c **** 		taskENTER_CRITICAL();
1485:..\FreeRTOS\Source/tasks.c **** 		{
1486:..\FreeRTOS\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1487:..\FreeRTOS\Source/tasks.c **** 			task that is being changed. */
1488:..\FreeRTOS\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1489:..\FreeRTOS\Source/tasks.c **** 
1490:..\FreeRTOS\Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1491:..\FreeRTOS\Source/tasks.c **** 
1492:..\FreeRTOS\Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1493:..\FreeRTOS\Source/tasks.c **** 			{
1494:..\FreeRTOS\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1495:..\FreeRTOS\Source/tasks.c **** 			}
1496:..\FreeRTOS\Source/tasks.c **** 			#else
1497:..\FreeRTOS\Source/tasks.c **** 			{
1498:..\FreeRTOS\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1499:..\FreeRTOS\Source/tasks.c **** 			}
1500:..\FreeRTOS\Source/tasks.c **** 			#endif
1501:..\FreeRTOS\Source/tasks.c **** 
1502:..\FreeRTOS\Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1503:..\FreeRTOS\Source/tasks.c **** 			{
1504:..\FreeRTOS\Source/tasks.c **** 				/* The priority change may have readied a task of higher
1505:..\FreeRTOS\Source/tasks.c **** 				priority than the calling task. */
1506:..\FreeRTOS\Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1507:..\FreeRTOS\Source/tasks.c **** 				{
1508:..\FreeRTOS\Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1509:..\FreeRTOS\Source/tasks.c **** 					{
1510:..\FreeRTOS\Source/tasks.c **** 						/* The priority of a task other than the currently
1511:..\FreeRTOS\Source/tasks.c **** 						running task is being raised.  Is the priority being
1512:..\FreeRTOS\Source/tasks.c **** 						raised above that of the running task? */
1513:..\FreeRTOS\Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 28


1514:..\FreeRTOS\Source/tasks.c **** 						{
1515:..\FreeRTOS\Source/tasks.c **** 							xYieldRequired = pdTRUE;
1516:..\FreeRTOS\Source/tasks.c **** 						}
1517:..\FreeRTOS\Source/tasks.c **** 						else
1518:..\FreeRTOS\Source/tasks.c **** 						{
1519:..\FreeRTOS\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1520:..\FreeRTOS\Source/tasks.c **** 						}
1521:..\FreeRTOS\Source/tasks.c **** 					}
1522:..\FreeRTOS\Source/tasks.c **** 					else
1523:..\FreeRTOS\Source/tasks.c **** 					{
1524:..\FreeRTOS\Source/tasks.c **** 						/* The priority of the running task is being raised,
1525:..\FreeRTOS\Source/tasks.c **** 						but the running task must already be the highest
1526:..\FreeRTOS\Source/tasks.c **** 						priority task able to run so no yield is required. */
1527:..\FreeRTOS\Source/tasks.c **** 					}
1528:..\FreeRTOS\Source/tasks.c **** 				}
1529:..\FreeRTOS\Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1530:..\FreeRTOS\Source/tasks.c **** 				{
1531:..\FreeRTOS\Source/tasks.c **** 					/* Setting the priority of the running task down means
1532:..\FreeRTOS\Source/tasks.c **** 					there may now be another task of higher priority that
1533:..\FreeRTOS\Source/tasks.c **** 					is ready to execute. */
1534:..\FreeRTOS\Source/tasks.c **** 					xYieldRequired = pdTRUE;
1535:..\FreeRTOS\Source/tasks.c **** 				}
1536:..\FreeRTOS\Source/tasks.c **** 				else
1537:..\FreeRTOS\Source/tasks.c **** 				{
1538:..\FreeRTOS\Source/tasks.c **** 					/* Setting the priority of any other task down does not
1539:..\FreeRTOS\Source/tasks.c **** 					require a yield as the running task must be above the
1540:..\FreeRTOS\Source/tasks.c **** 					new priority of the task being modified. */
1541:..\FreeRTOS\Source/tasks.c **** 				}
1542:..\FreeRTOS\Source/tasks.c **** 
1543:..\FreeRTOS\Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1544:..\FreeRTOS\Source/tasks.c **** 				before its uxPriority member is changed so the
1545:..\FreeRTOS\Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1546:..\FreeRTOS\Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1547:..\FreeRTOS\Source/tasks.c **** 
1548:..\FreeRTOS\Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1549:..\FreeRTOS\Source/tasks.c **** 				{
1550:..\FreeRTOS\Source/tasks.c **** 					/* Only change the priority being used if the task is not
1551:..\FreeRTOS\Source/tasks.c **** 					currently using an inherited priority. */
1552:..\FreeRTOS\Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1553:..\FreeRTOS\Source/tasks.c **** 					{
1554:..\FreeRTOS\Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1555:..\FreeRTOS\Source/tasks.c **** 					}
1556:..\FreeRTOS\Source/tasks.c **** 					else
1557:..\FreeRTOS\Source/tasks.c **** 					{
1558:..\FreeRTOS\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1559:..\FreeRTOS\Source/tasks.c **** 					}
1560:..\FreeRTOS\Source/tasks.c **** 
1561:..\FreeRTOS\Source/tasks.c **** 					/* The base priority gets set whatever. */
1562:..\FreeRTOS\Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1563:..\FreeRTOS\Source/tasks.c **** 				}
1564:..\FreeRTOS\Source/tasks.c **** 				#else
1565:..\FreeRTOS\Source/tasks.c **** 				{
1566:..\FreeRTOS\Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1567:..\FreeRTOS\Source/tasks.c **** 				}
1568:..\FreeRTOS\Source/tasks.c **** 				#endif
1569:..\FreeRTOS\Source/tasks.c **** 
1570:..\FreeRTOS\Source/tasks.c **** 				/* Only reset the event list item value if the value is not
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 29


1571:..\FreeRTOS\Source/tasks.c **** 				being used for anything else. */
1572:..\FreeRTOS\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1573:..\FreeRTOS\Source/tasks.c **** 				{
1574:..\FreeRTOS\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1575:..\FreeRTOS\Source/tasks.c **** 				}
1576:..\FreeRTOS\Source/tasks.c **** 				else
1577:..\FreeRTOS\Source/tasks.c **** 				{
1578:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1579:..\FreeRTOS\Source/tasks.c **** 				}
1580:..\FreeRTOS\Source/tasks.c **** 
1581:..\FreeRTOS\Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1582:..\FreeRTOS\Source/tasks.c **** 				nothing more than change its priority variable. However, if
1583:..\FreeRTOS\Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1584:..\FreeRTOS\Source/tasks.c **** 				in the list appropriate to its new priority. */
1585:..\FreeRTOS\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1586:..\FreeRTOS\Source/tasks.c **** 				{
1587:..\FreeRTOS\Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1588:..\FreeRTOS\Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1589:..\FreeRTOS\Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1590:..\FreeRTOS\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1591:..\FreeRTOS\Source/tasks.c **** 					{
1592:..\FreeRTOS\Source/tasks.c **** 						/* It is known that the task is in its ready list so
1593:..\FreeRTOS\Source/tasks.c **** 						there is no need to check again and the port level
1594:..\FreeRTOS\Source/tasks.c **** 						reset macro can be called directly. */
1595:..\FreeRTOS\Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1596:..\FreeRTOS\Source/tasks.c **** 					}
1597:..\FreeRTOS\Source/tasks.c **** 					else
1598:..\FreeRTOS\Source/tasks.c **** 					{
1599:..\FreeRTOS\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1600:..\FreeRTOS\Source/tasks.c **** 					}
1601:..\FreeRTOS\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1602:..\FreeRTOS\Source/tasks.c **** 				}
1603:..\FreeRTOS\Source/tasks.c **** 				else
1604:..\FreeRTOS\Source/tasks.c **** 				{
1605:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1606:..\FreeRTOS\Source/tasks.c **** 				}
1607:..\FreeRTOS\Source/tasks.c **** 
1608:..\FreeRTOS\Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1609:..\FreeRTOS\Source/tasks.c **** 				{
1610:..\FreeRTOS\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1611:..\FreeRTOS\Source/tasks.c **** 				}
1612:..\FreeRTOS\Source/tasks.c **** 				else
1613:..\FreeRTOS\Source/tasks.c **** 				{
1614:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1615:..\FreeRTOS\Source/tasks.c **** 				}
1616:..\FreeRTOS\Source/tasks.c **** 
1617:..\FreeRTOS\Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1618:..\FreeRTOS\Source/tasks.c **** 				optimised task selection is not being used. */
1619:..\FreeRTOS\Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1620:..\FreeRTOS\Source/tasks.c **** 			}
1621:..\FreeRTOS\Source/tasks.c **** 		}
1622:..\FreeRTOS\Source/tasks.c **** 		taskEXIT_CRITICAL();
1623:..\FreeRTOS\Source/tasks.c **** 	}
1624:..\FreeRTOS\Source/tasks.c **** 
1625:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1626:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
1627:..\FreeRTOS\Source/tasks.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 30


1628:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1629:..\FreeRTOS\Source/tasks.c **** 
1630:..\FreeRTOS\Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1631:..\FreeRTOS\Source/tasks.c **** 	{
1632:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
1633:..\FreeRTOS\Source/tasks.c **** 
1634:..\FreeRTOS\Source/tasks.c **** 		taskENTER_CRITICAL();
1635:..\FreeRTOS\Source/tasks.c **** 		{
1636:..\FreeRTOS\Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1637:..\FreeRTOS\Source/tasks.c **** 			being suspended. */
1638:..\FreeRTOS\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1639:..\FreeRTOS\Source/tasks.c **** 
1640:..\FreeRTOS\Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1641:..\FreeRTOS\Source/tasks.c **** 
1642:..\FreeRTOS\Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1643:..\FreeRTOS\Source/tasks.c **** 			suspended list. */
1644:..\FreeRTOS\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1645:..\FreeRTOS\Source/tasks.c **** 			{
1646:..\FreeRTOS\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1647:..\FreeRTOS\Source/tasks.c **** 			}
1648:..\FreeRTOS\Source/tasks.c **** 			else
1649:..\FreeRTOS\Source/tasks.c **** 			{
1650:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1651:..\FreeRTOS\Source/tasks.c **** 			}
1652:..\FreeRTOS\Source/tasks.c **** 
1653:..\FreeRTOS\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1654:..\FreeRTOS\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1655:..\FreeRTOS\Source/tasks.c **** 			{
1656:..\FreeRTOS\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1657:..\FreeRTOS\Source/tasks.c **** 			}
1658:..\FreeRTOS\Source/tasks.c **** 			else
1659:..\FreeRTOS\Source/tasks.c **** 			{
1660:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1661:..\FreeRTOS\Source/tasks.c **** 			}
1662:..\FreeRTOS\Source/tasks.c **** 
1663:..\FreeRTOS\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1664:..\FreeRTOS\Source/tasks.c **** 
1665:..\FreeRTOS\Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1666:..\FreeRTOS\Source/tasks.c **** 			{
1667:..\FreeRTOS\Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1668:..\FreeRTOS\Source/tasks.c **** 				{
1669:..\FreeRTOS\Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1670:..\FreeRTOS\Source/tasks.c **** 					now suspended, so no notification was received. */
1671:..\FreeRTOS\Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1672:..\FreeRTOS\Source/tasks.c **** 				}
1673:..\FreeRTOS\Source/tasks.c **** 			}
1674:..\FreeRTOS\Source/tasks.c **** 			#endif
1675:..\FreeRTOS\Source/tasks.c **** 		}
1676:..\FreeRTOS\Source/tasks.c **** 		taskEXIT_CRITICAL();
1677:..\FreeRTOS\Source/tasks.c **** 
1678:..\FreeRTOS\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1679:..\FreeRTOS\Source/tasks.c **** 		{
1680:..\FreeRTOS\Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1681:..\FreeRTOS\Source/tasks.c **** 			task that is now in the Suspended state. */
1682:..\FreeRTOS\Source/tasks.c **** 			taskENTER_CRITICAL();
1683:..\FreeRTOS\Source/tasks.c **** 			{
1684:..\FreeRTOS\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 31


1685:..\FreeRTOS\Source/tasks.c **** 			}
1686:..\FreeRTOS\Source/tasks.c **** 			taskEXIT_CRITICAL();
1687:..\FreeRTOS\Source/tasks.c **** 		}
1688:..\FreeRTOS\Source/tasks.c **** 		else
1689:..\FreeRTOS\Source/tasks.c **** 		{
1690:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1691:..\FreeRTOS\Source/tasks.c **** 		}
1692:..\FreeRTOS\Source/tasks.c **** 
1693:..\FreeRTOS\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1694:..\FreeRTOS\Source/tasks.c **** 		{
1695:..\FreeRTOS\Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1696:..\FreeRTOS\Source/tasks.c **** 			{
1697:..\FreeRTOS\Source/tasks.c **** 				/* The current task has just been suspended. */
1698:..\FreeRTOS\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1699:..\FreeRTOS\Source/tasks.c **** 				portYIELD_WITHIN_API();
1700:..\FreeRTOS\Source/tasks.c **** 			}
1701:..\FreeRTOS\Source/tasks.c **** 			else
1702:..\FreeRTOS\Source/tasks.c **** 			{
1703:..\FreeRTOS\Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1704:..\FreeRTOS\Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1705:..\FreeRTOS\Source/tasks.c **** 				must be adjusted to point to a different task. */
1706:..\FreeRTOS\Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1707:..\FreeRTOS\Source/tasks.c **** 				{
1708:..\FreeRTOS\Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1709:..\FreeRTOS\Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1710:..\FreeRTOS\Source/tasks.c **** 					be set to point to it no matter what its relative priority
1711:..\FreeRTOS\Source/tasks.c **** 					is. */
1712:..\FreeRTOS\Source/tasks.c **** 					pxCurrentTCB = NULL;
1713:..\FreeRTOS\Source/tasks.c **** 				}
1714:..\FreeRTOS\Source/tasks.c **** 				else
1715:..\FreeRTOS\Source/tasks.c **** 				{
1716:..\FreeRTOS\Source/tasks.c **** 					vTaskSwitchContext();
1717:..\FreeRTOS\Source/tasks.c **** 				}
1718:..\FreeRTOS\Source/tasks.c **** 			}
1719:..\FreeRTOS\Source/tasks.c **** 		}
1720:..\FreeRTOS\Source/tasks.c **** 		else
1721:..\FreeRTOS\Source/tasks.c **** 		{
1722:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1723:..\FreeRTOS\Source/tasks.c **** 		}
1724:..\FreeRTOS\Source/tasks.c **** 	}
1725:..\FreeRTOS\Source/tasks.c **** 
1726:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1727:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
1728:..\FreeRTOS\Source/tasks.c **** 
1729:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1730:..\FreeRTOS\Source/tasks.c **** 
1731:..\FreeRTOS\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1732:..\FreeRTOS\Source/tasks.c **** 	{
  27              		.loc 1 1732 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
1733:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1734:..\FreeRTOS\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1735:..\FreeRTOS\Source/tasks.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 32


1736:..\FreeRTOS\Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1737:..\FreeRTOS\Source/tasks.c **** 		section. */
1738:..\FreeRTOS\Source/tasks.c **** 
1739:..\FreeRTOS\Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1740:..\FreeRTOS\Source/tasks.c **** 		configASSERT( xTask );
1741:..\FreeRTOS\Source/tasks.c **** 
1742:..\FreeRTOS\Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1743:..\FreeRTOS\Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  33              		.loc 1 1743 0
  34 0000 4269     		ldr	r2, [r0, #20]
  35 0002 0B4B     		ldr	r3, .L10
  36 0004 9A42     		cmp	r2, r3
  37 0006 01D1     		bne	.L5
  38 0008 0123     		movs	r3, #1
  39 000a 00E0     		b	.L2
  40              	.L5:
  41 000c 0023     		movs	r3, #0
  42              	.L2:
  43              		.loc 1 1743 0 is_stmt 0 discriminator 4
  44 000e 43B1     		cbz	r3, .L6
1744:..\FreeRTOS\Source/tasks.c **** 		{
1745:..\FreeRTOS\Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1746:..\FreeRTOS\Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  45              		.loc 1 1746 0 is_stmt 1
  46 0010 826A     		ldr	r2, [r0, #40]
  47 0012 0849     		ldr	r1, .L10+4
  48 0014 8A42     		cmp	r2, r1
  49 0016 06D0     		beq	.L7
1747:..\FreeRTOS\Source/tasks.c **** 			{
1748:..\FreeRTOS\Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1749:..\FreeRTOS\Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1750:..\FreeRTOS\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  50              		.loc 1 1750 0
  51 0018 02B1     		cbz	r2, .L4
  52 001a 0023     		movs	r3, #0
  53              	.L4:
  54              		.loc 1 1750 0 is_stmt 0 discriminator 4
  55 001c 2BB9     		cbnz	r3, .L9
1733:..\FreeRTOS\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  56              		.loc 1 1733 0 is_stmt 1
  57 001e 0020     		movs	r0, #0
  58              	.LVL1:
  59 0020 7047     		bx	lr
  60              	.LVL2:
  61              	.L6:
  62 0022 0020     		movs	r0, #0
  63              	.LVL3:
  64 0024 7047     		bx	lr
  65              	.LVL4:
  66              	.L7:
  67 0026 0020     		movs	r0, #0
  68              	.LVL5:
  69 0028 7047     		bx	lr
  70              	.LVL6:
  71              	.L9:
1751:..\FreeRTOS\Source/tasks.c **** 				{
1752:..\FreeRTOS\Source/tasks.c **** 					xReturn = pdTRUE;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 33


  72              		.loc 1 1752 0
  73 002a 0120     		movs	r0, #1
  74              	.LVL7:
1753:..\FreeRTOS\Source/tasks.c **** 				}
1754:..\FreeRTOS\Source/tasks.c **** 				else
1755:..\FreeRTOS\Source/tasks.c **** 				{
1756:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1757:..\FreeRTOS\Source/tasks.c **** 				}
1758:..\FreeRTOS\Source/tasks.c **** 			}
1759:..\FreeRTOS\Source/tasks.c **** 			else
1760:..\FreeRTOS\Source/tasks.c **** 			{
1761:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1762:..\FreeRTOS\Source/tasks.c **** 			}
1763:..\FreeRTOS\Source/tasks.c **** 		}
1764:..\FreeRTOS\Source/tasks.c **** 		else
1765:..\FreeRTOS\Source/tasks.c **** 		{
1766:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1767:..\FreeRTOS\Source/tasks.c **** 		}
1768:..\FreeRTOS\Source/tasks.c **** 
1769:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
1770:..\FreeRTOS\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  75              		.loc 1 1770 0
  76 002c 7047     		bx	lr
  77              	.L11:
  78 002e 00BF     		.align	2
  79              	.L10:
  80 0030 00000000 		.word	.LANCHOR0
  81 0034 14000000 		.word	.LANCHOR0+20
  82              		.cfi_endproc
  83              	.LFE80:
  84              		.size	prvTaskIsTaskSuspended, .-prvTaskIsTaskSuspended
  85              		.section	.text.prvTaskCheckFreeStackSpace,"ax",%progbits
  86              		.align	2
  87              		.thumb
  88              		.thumb_func
  89              		.type	prvTaskCheckFreeStackSpace, %function
  90              	prvTaskCheckFreeStackSpace:
  91              	.LFB109:
1771:..\FreeRTOS\Source/tasks.c **** 
1772:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1773:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
1774:..\FreeRTOS\Source/tasks.c **** 
1775:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1776:..\FreeRTOS\Source/tasks.c **** 
1777:..\FreeRTOS\Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1778:..\FreeRTOS\Source/tasks.c **** 	{
1779:..\FreeRTOS\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1780:..\FreeRTOS\Source/tasks.c **** 
1781:..\FreeRTOS\Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1782:..\FreeRTOS\Source/tasks.c **** 		configASSERT( xTaskToResume );
1783:..\FreeRTOS\Source/tasks.c **** 
1784:..\FreeRTOS\Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1785:..\FreeRTOS\Source/tasks.c **** 		currently executing task. */
1786:..\FreeRTOS\Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1787:..\FreeRTOS\Source/tasks.c **** 		{
1788:..\FreeRTOS\Source/tasks.c **** 			taskENTER_CRITICAL();
1789:..\FreeRTOS\Source/tasks.c **** 			{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 34


1790:..\FreeRTOS\Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1791:..\FreeRTOS\Source/tasks.c **** 				{
1792:..\FreeRTOS\Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1793:..\FreeRTOS\Source/tasks.c **** 
1794:..\FreeRTOS\Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1795:..\FreeRTOS\Source/tasks.c **** 					suspended because this is inside a critical section. */
1796:..\FreeRTOS\Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1797:..\FreeRTOS\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1798:..\FreeRTOS\Source/tasks.c **** 
1799:..\FreeRTOS\Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1800:..\FreeRTOS\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1801:..\FreeRTOS\Source/tasks.c **** 					{
1802:..\FreeRTOS\Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1803:..\FreeRTOS\Source/tasks.c **** 						but will leave the lists in the correct state for the
1804:..\FreeRTOS\Source/tasks.c **** 						next yield. */
1805:..\FreeRTOS\Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1806:..\FreeRTOS\Source/tasks.c **** 					}
1807:..\FreeRTOS\Source/tasks.c **** 					else
1808:..\FreeRTOS\Source/tasks.c **** 					{
1809:..\FreeRTOS\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1810:..\FreeRTOS\Source/tasks.c **** 					}
1811:..\FreeRTOS\Source/tasks.c **** 				}
1812:..\FreeRTOS\Source/tasks.c **** 				else
1813:..\FreeRTOS\Source/tasks.c **** 				{
1814:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1815:..\FreeRTOS\Source/tasks.c **** 				}
1816:..\FreeRTOS\Source/tasks.c **** 			}
1817:..\FreeRTOS\Source/tasks.c **** 			taskEXIT_CRITICAL();
1818:..\FreeRTOS\Source/tasks.c **** 		}
1819:..\FreeRTOS\Source/tasks.c **** 		else
1820:..\FreeRTOS\Source/tasks.c **** 		{
1821:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1822:..\FreeRTOS\Source/tasks.c **** 		}
1823:..\FreeRTOS\Source/tasks.c **** 	}
1824:..\FreeRTOS\Source/tasks.c **** 
1825:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1826:..\FreeRTOS\Source/tasks.c **** 
1827:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
1828:..\FreeRTOS\Source/tasks.c **** 
1829:..\FreeRTOS\Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1830:..\FreeRTOS\Source/tasks.c **** 
1831:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1832:..\FreeRTOS\Source/tasks.c **** 	{
1833:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1834:..\FreeRTOS\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1835:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1836:..\FreeRTOS\Source/tasks.c **** 
1837:..\FreeRTOS\Source/tasks.c **** 		configASSERT( xTaskToResume );
1838:..\FreeRTOS\Source/tasks.c **** 
1839:..\FreeRTOS\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1840:..\FreeRTOS\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1841:..\FreeRTOS\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1842:..\FreeRTOS\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1843:..\FreeRTOS\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1844:..\FreeRTOS\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1845:..\FreeRTOS\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1846:..\FreeRTOS\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 35


1847:..\FreeRTOS\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1848:..\FreeRTOS\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1849:..\FreeRTOS\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1850:..\FreeRTOS\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1851:..\FreeRTOS\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1852:..\FreeRTOS\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1853:..\FreeRTOS\Source/tasks.c **** 		provided on the following link:
1854:..\FreeRTOS\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1855:..\FreeRTOS\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1856:..\FreeRTOS\Source/tasks.c **** 
1857:..\FreeRTOS\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1858:..\FreeRTOS\Source/tasks.c **** 		{
1859:..\FreeRTOS\Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1860:..\FreeRTOS\Source/tasks.c **** 			{
1861:..\FreeRTOS\Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1862:..\FreeRTOS\Source/tasks.c **** 
1863:..\FreeRTOS\Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1864:..\FreeRTOS\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1865:..\FreeRTOS\Source/tasks.c **** 				{
1866:..\FreeRTOS\Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1867:..\FreeRTOS\Source/tasks.c **** 					suspended list to the ready list directly. */
1868:..\FreeRTOS\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1869:..\FreeRTOS\Source/tasks.c **** 					{
1870:..\FreeRTOS\Source/tasks.c **** 						xYieldRequired = pdTRUE;
1871:..\FreeRTOS\Source/tasks.c **** 					}
1872:..\FreeRTOS\Source/tasks.c **** 					else
1873:..\FreeRTOS\Source/tasks.c **** 					{
1874:..\FreeRTOS\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1875:..\FreeRTOS\Source/tasks.c **** 					}
1876:..\FreeRTOS\Source/tasks.c **** 
1877:..\FreeRTOS\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1878:..\FreeRTOS\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1879:..\FreeRTOS\Source/tasks.c **** 				}
1880:..\FreeRTOS\Source/tasks.c **** 				else
1881:..\FreeRTOS\Source/tasks.c **** 				{
1882:..\FreeRTOS\Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1883:..\FreeRTOS\Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1884:..\FreeRTOS\Source/tasks.c **** 					unsuspended. */
1885:..\FreeRTOS\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1886:..\FreeRTOS\Source/tasks.c **** 				}
1887:..\FreeRTOS\Source/tasks.c **** 			}
1888:..\FreeRTOS\Source/tasks.c **** 			else
1889:..\FreeRTOS\Source/tasks.c **** 			{
1890:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1891:..\FreeRTOS\Source/tasks.c **** 			}
1892:..\FreeRTOS\Source/tasks.c **** 		}
1893:..\FreeRTOS\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1894:..\FreeRTOS\Source/tasks.c **** 
1895:..\FreeRTOS\Source/tasks.c **** 		return xYieldRequired;
1896:..\FreeRTOS\Source/tasks.c **** 	}
1897:..\FreeRTOS\Source/tasks.c **** 
1898:..\FreeRTOS\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1899:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
1900:..\FreeRTOS\Source/tasks.c **** 
1901:..\FreeRTOS\Source/tasks.c **** void vTaskStartScheduler( void )
1902:..\FreeRTOS\Source/tasks.c **** {
1903:..\FreeRTOS\Source/tasks.c **** BaseType_t xReturn;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 36


1904:..\FreeRTOS\Source/tasks.c **** 
1905:..\FreeRTOS\Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1906:..\FreeRTOS\Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1907:..\FreeRTOS\Source/tasks.c **** 	{
1908:..\FreeRTOS\Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1909:..\FreeRTOS\Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1910:..\FreeRTOS\Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1911:..\FreeRTOS\Source/tasks.c **** 
1912:..\FreeRTOS\Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1913:..\FreeRTOS\Source/tasks.c **** 		address of the RAM then create the idle task. */
1914:..\FreeRTOS\Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1915:..\FreeRTOS\Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1916:..\FreeRTOS\Source/tasks.c **** 												configIDLE_TASK_NAME,
1917:..\FreeRTOS\Source/tasks.c **** 												ulIdleTaskStackSize,
1918:..\FreeRTOS\Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1919:..\FreeRTOS\Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1920:..\FreeRTOS\Source/tasks.c **** 												pxIdleTaskStackBuffer,
1921:..\FreeRTOS\Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1922:..\FreeRTOS\Source/tasks.c **** 
1923:..\FreeRTOS\Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1924:..\FreeRTOS\Source/tasks.c **** 		{
1925:..\FreeRTOS\Source/tasks.c **** 			xReturn = pdPASS;
1926:..\FreeRTOS\Source/tasks.c **** 		}
1927:..\FreeRTOS\Source/tasks.c **** 		else
1928:..\FreeRTOS\Source/tasks.c **** 		{
1929:..\FreeRTOS\Source/tasks.c **** 			xReturn = pdFAIL;
1930:..\FreeRTOS\Source/tasks.c **** 		}
1931:..\FreeRTOS\Source/tasks.c **** 	}
1932:..\FreeRTOS\Source/tasks.c **** 	#else
1933:..\FreeRTOS\Source/tasks.c **** 	{
1934:..\FreeRTOS\Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1935:..\FreeRTOS\Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1936:..\FreeRTOS\Source/tasks.c **** 								configIDLE_TASK_NAME,
1937:..\FreeRTOS\Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1938:..\FreeRTOS\Source/tasks.c **** 								( void * ) NULL,
1939:..\FreeRTOS\Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1940:..\FreeRTOS\Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1941:..\FreeRTOS\Source/tasks.c **** 	}
1942:..\FreeRTOS\Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1943:..\FreeRTOS\Source/tasks.c **** 
1944:..\FreeRTOS\Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1945:..\FreeRTOS\Source/tasks.c **** 	{
1946:..\FreeRTOS\Source/tasks.c **** 		if( xReturn == pdPASS )
1947:..\FreeRTOS\Source/tasks.c **** 		{
1948:..\FreeRTOS\Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1949:..\FreeRTOS\Source/tasks.c **** 		}
1950:..\FreeRTOS\Source/tasks.c **** 		else
1951:..\FreeRTOS\Source/tasks.c **** 		{
1952:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1953:..\FreeRTOS\Source/tasks.c **** 		}
1954:..\FreeRTOS\Source/tasks.c **** 	}
1955:..\FreeRTOS\Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1956:..\FreeRTOS\Source/tasks.c **** 
1957:..\FreeRTOS\Source/tasks.c **** 	if( xReturn == pdPASS )
1958:..\FreeRTOS\Source/tasks.c **** 	{
1959:..\FreeRTOS\Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1960:..\FreeRTOS\Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 37


1961:..\FreeRTOS\Source/tasks.c **** 		the only macro called by the function. */
1962:..\FreeRTOS\Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1963:..\FreeRTOS\Source/tasks.c **** 		{
1964:..\FreeRTOS\Source/tasks.c **** 			freertos_tasks_c_additions_init();
1965:..\FreeRTOS\Source/tasks.c **** 		}
1966:..\FreeRTOS\Source/tasks.c **** 		#endif
1967:..\FreeRTOS\Source/tasks.c **** 
1968:..\FreeRTOS\Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1969:..\FreeRTOS\Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1970:..\FreeRTOS\Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1971:..\FreeRTOS\Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1972:..\FreeRTOS\Source/tasks.c **** 		starts to run. */
1973:..\FreeRTOS\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1974:..\FreeRTOS\Source/tasks.c **** 
1975:..\FreeRTOS\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1976:..\FreeRTOS\Source/tasks.c **** 		{
1977:..\FreeRTOS\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1978:..\FreeRTOS\Source/tasks.c **** 			structure specific to the task that will run first. */
1979:..\FreeRTOS\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1980:..\FreeRTOS\Source/tasks.c **** 		}
1981:..\FreeRTOS\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1982:..\FreeRTOS\Source/tasks.c **** 
1983:..\FreeRTOS\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1984:..\FreeRTOS\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1985:..\FreeRTOS\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1986:..\FreeRTOS\Source/tasks.c **** 
1987:..\FreeRTOS\Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1988:..\FreeRTOS\Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1989:..\FreeRTOS\Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1990:..\FreeRTOS\Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1991:..\FreeRTOS\Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1992:..\FreeRTOS\Source/tasks.c **** 		FreeRTOSConfig.h file. */
1993:..\FreeRTOS\Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1994:..\FreeRTOS\Source/tasks.c **** 
1995:..\FreeRTOS\Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1996:..\FreeRTOS\Source/tasks.c **** 		portable interface. */
1997:..\FreeRTOS\Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1998:..\FreeRTOS\Source/tasks.c **** 		{
1999:..\FreeRTOS\Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2000:..\FreeRTOS\Source/tasks.c **** 			function will not return. */
2001:..\FreeRTOS\Source/tasks.c **** 		}
2002:..\FreeRTOS\Source/tasks.c **** 		else
2003:..\FreeRTOS\Source/tasks.c **** 		{
2004:..\FreeRTOS\Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2005:..\FreeRTOS\Source/tasks.c **** 		}
2006:..\FreeRTOS\Source/tasks.c **** 	}
2007:..\FreeRTOS\Source/tasks.c **** 	else
2008:..\FreeRTOS\Source/tasks.c **** 	{
2009:..\FreeRTOS\Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2010:..\FreeRTOS\Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2011:..\FreeRTOS\Source/tasks.c **** 		or the timer task. */
2012:..\FreeRTOS\Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2013:..\FreeRTOS\Source/tasks.c **** 	}
2014:..\FreeRTOS\Source/tasks.c **** 
2015:..\FreeRTOS\Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2016:..\FreeRTOS\Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2017:..\FreeRTOS\Source/tasks.c **** 	( void ) xIdleTaskHandle;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 38


2018:..\FreeRTOS\Source/tasks.c **** }
2019:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
2020:..\FreeRTOS\Source/tasks.c **** 
2021:..\FreeRTOS\Source/tasks.c **** void vTaskEndScheduler( void )
2022:..\FreeRTOS\Source/tasks.c **** {
2023:..\FreeRTOS\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2024:..\FreeRTOS\Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2025:..\FreeRTOS\Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2026:..\FreeRTOS\Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2027:..\FreeRTOS\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2028:..\FreeRTOS\Source/tasks.c **** 	vPortEndScheduler();
2029:..\FreeRTOS\Source/tasks.c **** }
2030:..\FreeRTOS\Source/tasks.c **** /*----------------------------------------------------------*/
2031:..\FreeRTOS\Source/tasks.c **** 
2032:..\FreeRTOS\Source/tasks.c **** void vTaskSuspendAll( void )
2033:..\FreeRTOS\Source/tasks.c **** {
2034:..\FreeRTOS\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2035:..\FreeRTOS\Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2036:..\FreeRTOS\Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2037:..\FreeRTOS\Source/tasks.c **** 	http://goo.gl/wu4acr */
2038:..\FreeRTOS\Source/tasks.c **** 	++uxSchedulerSuspended;
2039:..\FreeRTOS\Source/tasks.c **** }
2040:..\FreeRTOS\Source/tasks.c **** /*----------------------------------------------------------*/
2041:..\FreeRTOS\Source/tasks.c **** 
2042:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2043:..\FreeRTOS\Source/tasks.c **** 
2044:..\FreeRTOS\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2045:..\FreeRTOS\Source/tasks.c **** 	{
2046:..\FreeRTOS\Source/tasks.c **** 	TickType_t xReturn;
2047:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2048:..\FreeRTOS\Source/tasks.c **** 
2049:..\FreeRTOS\Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2050:..\FreeRTOS\Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2051:..\FreeRTOS\Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2052:..\FreeRTOS\Source/tasks.c **** 		running. */
2053:..\FreeRTOS\Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2054:..\FreeRTOS\Source/tasks.c **** 		{
2055:..\FreeRTOS\Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2056:..\FreeRTOS\Source/tasks.c **** 			{
2057:..\FreeRTOS\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2058:..\FreeRTOS\Source/tasks.c **** 			}
2059:..\FreeRTOS\Source/tasks.c **** 		}
2060:..\FreeRTOS\Source/tasks.c **** 		#else
2061:..\FreeRTOS\Source/tasks.c **** 		{
2062:..\FreeRTOS\Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2063:..\FreeRTOS\Source/tasks.c **** 
2064:..\FreeRTOS\Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2065:..\FreeRTOS\Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2066:..\FreeRTOS\Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2067:..\FreeRTOS\Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2068:..\FreeRTOS\Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2069:..\FreeRTOS\Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2070:..\FreeRTOS\Source/tasks.c **** 			{
2071:..\FreeRTOS\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2072:..\FreeRTOS\Source/tasks.c **** 			}
2073:..\FreeRTOS\Source/tasks.c **** 		}
2074:..\FreeRTOS\Source/tasks.c **** 		#endif
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 39


2075:..\FreeRTOS\Source/tasks.c **** 
2076:..\FreeRTOS\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2077:..\FreeRTOS\Source/tasks.c **** 		{
2078:..\FreeRTOS\Source/tasks.c **** 			xReturn = 0;
2079:..\FreeRTOS\Source/tasks.c **** 		}
2080:..\FreeRTOS\Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2081:..\FreeRTOS\Source/tasks.c **** 		{
2082:..\FreeRTOS\Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2083:..\FreeRTOS\Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2084:..\FreeRTOS\Source/tasks.c **** 			processed. */
2085:..\FreeRTOS\Source/tasks.c **** 			xReturn = 0;
2086:..\FreeRTOS\Source/tasks.c **** 		}
2087:..\FreeRTOS\Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2088:..\FreeRTOS\Source/tasks.c **** 		{
2089:..\FreeRTOS\Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2090:..\FreeRTOS\Source/tasks.c **** 			idle priority.  This path can only be reached if
2091:..\FreeRTOS\Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2092:..\FreeRTOS\Source/tasks.c **** 			xReturn = 0;
2093:..\FreeRTOS\Source/tasks.c **** 		}
2094:..\FreeRTOS\Source/tasks.c **** 		else
2095:..\FreeRTOS\Source/tasks.c **** 		{
2096:..\FreeRTOS\Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2097:..\FreeRTOS\Source/tasks.c **** 		}
2098:..\FreeRTOS\Source/tasks.c **** 
2099:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
2100:..\FreeRTOS\Source/tasks.c **** 	}
2101:..\FreeRTOS\Source/tasks.c **** 
2102:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2103:..\FreeRTOS\Source/tasks.c **** /*----------------------------------------------------------*/
2104:..\FreeRTOS\Source/tasks.c **** 
2105:..\FreeRTOS\Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2106:..\FreeRTOS\Source/tasks.c **** {
2107:..\FreeRTOS\Source/tasks.c **** TCB_t *pxTCB = NULL;
2108:..\FreeRTOS\Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2109:..\FreeRTOS\Source/tasks.c **** 
2110:..\FreeRTOS\Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2111:..\FreeRTOS\Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2112:..\FreeRTOS\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2113:..\FreeRTOS\Source/tasks.c **** 
2114:..\FreeRTOS\Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2115:..\FreeRTOS\Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2116:..\FreeRTOS\Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2117:..\FreeRTOS\Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2118:..\FreeRTOS\Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2119:..\FreeRTOS\Source/tasks.c **** 	taskENTER_CRITICAL();
2120:..\FreeRTOS\Source/tasks.c **** 	{
2121:..\FreeRTOS\Source/tasks.c **** 		--uxSchedulerSuspended;
2122:..\FreeRTOS\Source/tasks.c **** 
2123:..\FreeRTOS\Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2124:..\FreeRTOS\Source/tasks.c **** 		{
2125:..\FreeRTOS\Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2126:..\FreeRTOS\Source/tasks.c **** 			{
2127:..\FreeRTOS\Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2128:..\FreeRTOS\Source/tasks.c **** 				appropriate ready list. */
2129:..\FreeRTOS\Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2130:..\FreeRTOS\Source/tasks.c **** 				{
2131:..\FreeRTOS\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 40


2132:..\FreeRTOS\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2133:..\FreeRTOS\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2134:..\FreeRTOS\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2135:..\FreeRTOS\Source/tasks.c **** 
2136:..\FreeRTOS\Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2137:..\FreeRTOS\Source/tasks.c **** 					task then a yield must be performed. */
2138:..\FreeRTOS\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2139:..\FreeRTOS\Source/tasks.c **** 					{
2140:..\FreeRTOS\Source/tasks.c **** 						xYieldPending = pdTRUE;
2141:..\FreeRTOS\Source/tasks.c **** 					}
2142:..\FreeRTOS\Source/tasks.c **** 					else
2143:..\FreeRTOS\Source/tasks.c **** 					{
2144:..\FreeRTOS\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2145:..\FreeRTOS\Source/tasks.c **** 					}
2146:..\FreeRTOS\Source/tasks.c **** 				}
2147:..\FreeRTOS\Source/tasks.c **** 
2148:..\FreeRTOS\Source/tasks.c **** 				if( pxTCB != NULL )
2149:..\FreeRTOS\Source/tasks.c **** 				{
2150:..\FreeRTOS\Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2151:..\FreeRTOS\Source/tasks.c **** 					which may have prevented the next unblock time from being
2152:..\FreeRTOS\Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2153:..\FreeRTOS\Source/tasks.c **** 					important for low power tickless implementations, where
2154:..\FreeRTOS\Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2155:..\FreeRTOS\Source/tasks.c **** 					state. */
2156:..\FreeRTOS\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2157:..\FreeRTOS\Source/tasks.c **** 				}
2158:..\FreeRTOS\Source/tasks.c **** 
2159:..\FreeRTOS\Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2160:..\FreeRTOS\Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2161:..\FreeRTOS\Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2162:..\FreeRTOS\Source/tasks.c **** 				time. */
2163:..\FreeRTOS\Source/tasks.c **** 				{
2164:..\FreeRTOS\Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2165:..\FreeRTOS\Source/tasks.c **** 
2166:..\FreeRTOS\Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2167:..\FreeRTOS\Source/tasks.c **** 					{
2168:..\FreeRTOS\Source/tasks.c **** 						do
2169:..\FreeRTOS\Source/tasks.c **** 						{
2170:..\FreeRTOS\Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2171:..\FreeRTOS\Source/tasks.c **** 							{
2172:..\FreeRTOS\Source/tasks.c **** 								xYieldPending = pdTRUE;
2173:..\FreeRTOS\Source/tasks.c **** 							}
2174:..\FreeRTOS\Source/tasks.c **** 							else
2175:..\FreeRTOS\Source/tasks.c **** 							{
2176:..\FreeRTOS\Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2177:..\FreeRTOS\Source/tasks.c **** 							}
2178:..\FreeRTOS\Source/tasks.c **** 							--uxPendedCounts;
2179:..\FreeRTOS\Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2180:..\FreeRTOS\Source/tasks.c **** 
2181:..\FreeRTOS\Source/tasks.c **** 						uxPendedTicks = 0;
2182:..\FreeRTOS\Source/tasks.c **** 					}
2183:..\FreeRTOS\Source/tasks.c **** 					else
2184:..\FreeRTOS\Source/tasks.c **** 					{
2185:..\FreeRTOS\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2186:..\FreeRTOS\Source/tasks.c **** 					}
2187:..\FreeRTOS\Source/tasks.c **** 				}
2188:..\FreeRTOS\Source/tasks.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 41


2189:..\FreeRTOS\Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2190:..\FreeRTOS\Source/tasks.c **** 				{
2191:..\FreeRTOS\Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2192:..\FreeRTOS\Source/tasks.c **** 					{
2193:..\FreeRTOS\Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2194:..\FreeRTOS\Source/tasks.c **** 					}
2195:..\FreeRTOS\Source/tasks.c **** 					#endif
2196:..\FreeRTOS\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2197:..\FreeRTOS\Source/tasks.c **** 				}
2198:..\FreeRTOS\Source/tasks.c **** 				else
2199:..\FreeRTOS\Source/tasks.c **** 				{
2200:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2201:..\FreeRTOS\Source/tasks.c **** 				}
2202:..\FreeRTOS\Source/tasks.c **** 			}
2203:..\FreeRTOS\Source/tasks.c **** 		}
2204:..\FreeRTOS\Source/tasks.c **** 		else
2205:..\FreeRTOS\Source/tasks.c **** 		{
2206:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2207:..\FreeRTOS\Source/tasks.c **** 		}
2208:..\FreeRTOS\Source/tasks.c **** 	}
2209:..\FreeRTOS\Source/tasks.c **** 	taskEXIT_CRITICAL();
2210:..\FreeRTOS\Source/tasks.c **** 
2211:..\FreeRTOS\Source/tasks.c **** 	return xAlreadyYielded;
2212:..\FreeRTOS\Source/tasks.c **** }
2213:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
2214:..\FreeRTOS\Source/tasks.c **** 
2215:..\FreeRTOS\Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2216:..\FreeRTOS\Source/tasks.c **** {
2217:..\FreeRTOS\Source/tasks.c **** TickType_t xTicks;
2218:..\FreeRTOS\Source/tasks.c **** 
2219:..\FreeRTOS\Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2220:..\FreeRTOS\Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2221:..\FreeRTOS\Source/tasks.c **** 	{
2222:..\FreeRTOS\Source/tasks.c **** 		xTicks = xTickCount;
2223:..\FreeRTOS\Source/tasks.c **** 	}
2224:..\FreeRTOS\Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2225:..\FreeRTOS\Source/tasks.c **** 
2226:..\FreeRTOS\Source/tasks.c **** 	return xTicks;
2227:..\FreeRTOS\Source/tasks.c **** }
2228:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
2229:..\FreeRTOS\Source/tasks.c **** 
2230:..\FreeRTOS\Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2231:..\FreeRTOS\Source/tasks.c **** {
2232:..\FreeRTOS\Source/tasks.c **** TickType_t xReturn;
2233:..\FreeRTOS\Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2234:..\FreeRTOS\Source/tasks.c **** 
2235:..\FreeRTOS\Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2236:..\FreeRTOS\Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2237:..\FreeRTOS\Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2238:..\FreeRTOS\Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2239:..\FreeRTOS\Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2240:..\FreeRTOS\Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2241:..\FreeRTOS\Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2242:..\FreeRTOS\Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2243:..\FreeRTOS\Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2244:..\FreeRTOS\Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2245:..\FreeRTOS\Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 42


2246:..\FreeRTOS\Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2247:..\FreeRTOS\Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2248:..\FreeRTOS\Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2249:..\FreeRTOS\Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2250:..\FreeRTOS\Source/tasks.c **** 
2251:..\FreeRTOS\Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2252:..\FreeRTOS\Source/tasks.c **** 	{
2253:..\FreeRTOS\Source/tasks.c **** 		xReturn = xTickCount;
2254:..\FreeRTOS\Source/tasks.c **** 	}
2255:..\FreeRTOS\Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2256:..\FreeRTOS\Source/tasks.c **** 
2257:..\FreeRTOS\Source/tasks.c **** 	return xReturn;
2258:..\FreeRTOS\Source/tasks.c **** }
2259:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
2260:..\FreeRTOS\Source/tasks.c **** 
2261:..\FreeRTOS\Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2262:..\FreeRTOS\Source/tasks.c **** {
2263:..\FreeRTOS\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2264:..\FreeRTOS\Source/tasks.c **** 	BaseType_t. */
2265:..\FreeRTOS\Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2266:..\FreeRTOS\Source/tasks.c **** }
2267:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
2268:..\FreeRTOS\Source/tasks.c **** 
2269:..\FreeRTOS\Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2270:..\FreeRTOS\Source/tasks.c **** {
2271:..\FreeRTOS\Source/tasks.c **** TCB_t *pxTCB;
2272:..\FreeRTOS\Source/tasks.c **** 
2273:..\FreeRTOS\Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2274:..\FreeRTOS\Source/tasks.c **** 	queried. */
2275:..\FreeRTOS\Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2276:..\FreeRTOS\Source/tasks.c **** 	configASSERT( pxTCB );
2277:..\FreeRTOS\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2278:..\FreeRTOS\Source/tasks.c **** }
2279:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
2280:..\FreeRTOS\Source/tasks.c **** 
2281:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2282:..\FreeRTOS\Source/tasks.c **** 
2283:..\FreeRTOS\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2284:..\FreeRTOS\Source/tasks.c **** 	{
2285:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2286:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t x;
2287:..\FreeRTOS\Source/tasks.c **** 	char cNextChar;
2288:..\FreeRTOS\Source/tasks.c **** 
2289:..\FreeRTOS\Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2290:..\FreeRTOS\Source/tasks.c **** 
2291:..\FreeRTOS\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2292:..\FreeRTOS\Source/tasks.c **** 		{
2293:..\FreeRTOS\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2294:..\FreeRTOS\Source/tasks.c **** 
2295:..\FreeRTOS\Source/tasks.c **** 			do
2296:..\FreeRTOS\Source/tasks.c **** 			{
2297:..\FreeRTOS\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2298:..\FreeRTOS\Source/tasks.c **** 
2299:..\FreeRTOS\Source/tasks.c **** 				/* Check each character in the name looking for a match or
2300:..\FreeRTOS\Source/tasks.c **** 				mismatch. */
2301:..\FreeRTOS\Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2302:..\FreeRTOS\Source/tasks.c **** 				{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 43


2303:..\FreeRTOS\Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2304:..\FreeRTOS\Source/tasks.c **** 
2305:..\FreeRTOS\Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2306:..\FreeRTOS\Source/tasks.c **** 					{
2307:..\FreeRTOS\Source/tasks.c **** 						/* Characters didn't match. */
2308:..\FreeRTOS\Source/tasks.c **** 						break;
2309:..\FreeRTOS\Source/tasks.c **** 					}
2310:..\FreeRTOS\Source/tasks.c **** 					else if( cNextChar == 0x00 )
2311:..\FreeRTOS\Source/tasks.c **** 					{
2312:..\FreeRTOS\Source/tasks.c **** 						/* Both strings terminated, a match must have been
2313:..\FreeRTOS\Source/tasks.c **** 						found. */
2314:..\FreeRTOS\Source/tasks.c **** 						pxReturn = pxNextTCB;
2315:..\FreeRTOS\Source/tasks.c **** 						break;
2316:..\FreeRTOS\Source/tasks.c **** 					}
2317:..\FreeRTOS\Source/tasks.c **** 					else
2318:..\FreeRTOS\Source/tasks.c **** 					{
2319:..\FreeRTOS\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2320:..\FreeRTOS\Source/tasks.c **** 					}
2321:..\FreeRTOS\Source/tasks.c **** 				}
2322:..\FreeRTOS\Source/tasks.c **** 
2323:..\FreeRTOS\Source/tasks.c **** 				if( pxReturn != NULL )
2324:..\FreeRTOS\Source/tasks.c **** 				{
2325:..\FreeRTOS\Source/tasks.c **** 					/* The handle has been found. */
2326:..\FreeRTOS\Source/tasks.c **** 					break;
2327:..\FreeRTOS\Source/tasks.c **** 				}
2328:..\FreeRTOS\Source/tasks.c **** 
2329:..\FreeRTOS\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2330:..\FreeRTOS\Source/tasks.c **** 		}
2331:..\FreeRTOS\Source/tasks.c **** 		else
2332:..\FreeRTOS\Source/tasks.c **** 		{
2333:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2334:..\FreeRTOS\Source/tasks.c **** 		}
2335:..\FreeRTOS\Source/tasks.c **** 
2336:..\FreeRTOS\Source/tasks.c **** 		return pxReturn;
2337:..\FreeRTOS\Source/tasks.c **** 	}
2338:..\FreeRTOS\Source/tasks.c **** 
2339:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2340:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
2341:..\FreeRTOS\Source/tasks.c **** 
2342:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2343:..\FreeRTOS\Source/tasks.c **** 
2344:..\FreeRTOS\Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2345:..\FreeRTOS\Source/tasks.c **** 	{
2346:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2347:..\FreeRTOS\Source/tasks.c **** 	TCB_t* pxTCB;
2348:..\FreeRTOS\Source/tasks.c **** 
2349:..\FreeRTOS\Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2350:..\FreeRTOS\Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2351:..\FreeRTOS\Source/tasks.c **** 
2352:..\FreeRTOS\Source/tasks.c **** 		vTaskSuspendAll();
2353:..\FreeRTOS\Source/tasks.c **** 		{
2354:..\FreeRTOS\Source/tasks.c **** 			/* Search the ready lists. */
2355:..\FreeRTOS\Source/tasks.c **** 			do
2356:..\FreeRTOS\Source/tasks.c **** 			{
2357:..\FreeRTOS\Source/tasks.c **** 				uxQueue--;
2358:..\FreeRTOS\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2359:..\FreeRTOS\Source/tasks.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 44


2360:..\FreeRTOS\Source/tasks.c **** 				if( pxTCB != NULL )
2361:..\FreeRTOS\Source/tasks.c **** 				{
2362:..\FreeRTOS\Source/tasks.c **** 					/* Found the handle. */
2363:..\FreeRTOS\Source/tasks.c **** 					break;
2364:..\FreeRTOS\Source/tasks.c **** 				}
2365:..\FreeRTOS\Source/tasks.c **** 
2366:..\FreeRTOS\Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2367:..\FreeRTOS\Source/tasks.c **** 
2368:..\FreeRTOS\Source/tasks.c **** 			/* Search the delayed lists. */
2369:..\FreeRTOS\Source/tasks.c **** 			if( pxTCB == NULL )
2370:..\FreeRTOS\Source/tasks.c **** 			{
2371:..\FreeRTOS\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2372:..\FreeRTOS\Source/tasks.c **** 			}
2373:..\FreeRTOS\Source/tasks.c **** 
2374:..\FreeRTOS\Source/tasks.c **** 			if( pxTCB == NULL )
2375:..\FreeRTOS\Source/tasks.c **** 			{
2376:..\FreeRTOS\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2377:..\FreeRTOS\Source/tasks.c **** 			}
2378:..\FreeRTOS\Source/tasks.c **** 
2379:..\FreeRTOS\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2380:..\FreeRTOS\Source/tasks.c **** 			{
2381:..\FreeRTOS\Source/tasks.c **** 				if( pxTCB == NULL )
2382:..\FreeRTOS\Source/tasks.c **** 				{
2383:..\FreeRTOS\Source/tasks.c **** 					/* Search the suspended list. */
2384:..\FreeRTOS\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2385:..\FreeRTOS\Source/tasks.c **** 				}
2386:..\FreeRTOS\Source/tasks.c **** 			}
2387:..\FreeRTOS\Source/tasks.c **** 			#endif
2388:..\FreeRTOS\Source/tasks.c **** 
2389:..\FreeRTOS\Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2390:..\FreeRTOS\Source/tasks.c **** 			{
2391:..\FreeRTOS\Source/tasks.c **** 				if( pxTCB == NULL )
2392:..\FreeRTOS\Source/tasks.c **** 				{
2393:..\FreeRTOS\Source/tasks.c **** 					/* Search the deleted list. */
2394:..\FreeRTOS\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2395:..\FreeRTOS\Source/tasks.c **** 				}
2396:..\FreeRTOS\Source/tasks.c **** 			}
2397:..\FreeRTOS\Source/tasks.c **** 			#endif
2398:..\FreeRTOS\Source/tasks.c **** 		}
2399:..\FreeRTOS\Source/tasks.c **** 		( void ) xTaskResumeAll();
2400:..\FreeRTOS\Source/tasks.c **** 
2401:..\FreeRTOS\Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2402:..\FreeRTOS\Source/tasks.c **** 	}
2403:..\FreeRTOS\Source/tasks.c **** 
2404:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2405:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
2406:..\FreeRTOS\Source/tasks.c **** 
2407:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2408:..\FreeRTOS\Source/tasks.c **** 
2409:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2410:..\FreeRTOS\Source/tasks.c **** 	{
2411:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2412:..\FreeRTOS\Source/tasks.c **** 
2413:..\FreeRTOS\Source/tasks.c **** 		vTaskSuspendAll();
2414:..\FreeRTOS\Source/tasks.c **** 		{
2415:..\FreeRTOS\Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2416:..\FreeRTOS\Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 45


2417:..\FreeRTOS\Source/tasks.c **** 			{
2418:..\FreeRTOS\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2419:..\FreeRTOS\Source/tasks.c **** 				task in the Ready state. */
2420:..\FreeRTOS\Source/tasks.c **** 				do
2421:..\FreeRTOS\Source/tasks.c **** 				{
2422:..\FreeRTOS\Source/tasks.c **** 					uxQueue--;
2423:..\FreeRTOS\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2424:..\FreeRTOS\Source/tasks.c **** 
2425:..\FreeRTOS\Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2426:..\FreeRTOS\Source/tasks.c **** 
2427:..\FreeRTOS\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2428:..\FreeRTOS\Source/tasks.c **** 				task in the Blocked state. */
2429:..\FreeRTOS\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2430:..\FreeRTOS\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2431:..\FreeRTOS\Source/tasks.c **** 
2432:..\FreeRTOS\Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2433:..\FreeRTOS\Source/tasks.c **** 				{
2434:..\FreeRTOS\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2435:..\FreeRTOS\Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2436:..\FreeRTOS\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2437:..\FreeRTOS\Source/tasks.c **** 				}
2438:..\FreeRTOS\Source/tasks.c **** 				#endif
2439:..\FreeRTOS\Source/tasks.c **** 
2440:..\FreeRTOS\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2441:..\FreeRTOS\Source/tasks.c **** 				{
2442:..\FreeRTOS\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2443:..\FreeRTOS\Source/tasks.c **** 					each task in the Suspended state. */
2444:..\FreeRTOS\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2445:..\FreeRTOS\Source/tasks.c **** 				}
2446:..\FreeRTOS\Source/tasks.c **** 				#endif
2447:..\FreeRTOS\Source/tasks.c **** 
2448:..\FreeRTOS\Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2449:..\FreeRTOS\Source/tasks.c **** 				{
2450:..\FreeRTOS\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2451:..\FreeRTOS\Source/tasks.c **** 					{
2452:..\FreeRTOS\Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2453:..\FreeRTOS\Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2454:..\FreeRTOS\Source/tasks.c **** 						#else
2455:..\FreeRTOS\Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2456:..\FreeRTOS\Source/tasks.c **** 						#endif
2457:..\FreeRTOS\Source/tasks.c **** 					}
2458:..\FreeRTOS\Source/tasks.c **** 				}
2459:..\FreeRTOS\Source/tasks.c **** 				#else
2460:..\FreeRTOS\Source/tasks.c **** 				{
2461:..\FreeRTOS\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2462:..\FreeRTOS\Source/tasks.c **** 					{
2463:..\FreeRTOS\Source/tasks.c **** 						*pulTotalRunTime = 0;
2464:..\FreeRTOS\Source/tasks.c **** 					}
2465:..\FreeRTOS\Source/tasks.c **** 				}
2466:..\FreeRTOS\Source/tasks.c **** 				#endif
2467:..\FreeRTOS\Source/tasks.c **** 			}
2468:..\FreeRTOS\Source/tasks.c **** 			else
2469:..\FreeRTOS\Source/tasks.c **** 			{
2470:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2471:..\FreeRTOS\Source/tasks.c **** 			}
2472:..\FreeRTOS\Source/tasks.c **** 		}
2473:..\FreeRTOS\Source/tasks.c **** 		( void ) xTaskResumeAll();
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 46


2474:..\FreeRTOS\Source/tasks.c **** 
2475:..\FreeRTOS\Source/tasks.c **** 		return uxTask;
2476:..\FreeRTOS\Source/tasks.c **** 	}
2477:..\FreeRTOS\Source/tasks.c **** 
2478:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2479:..\FreeRTOS\Source/tasks.c **** /*----------------------------------------------------------*/
2480:..\FreeRTOS\Source/tasks.c **** 
2481:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2482:..\FreeRTOS\Source/tasks.c **** 
2483:..\FreeRTOS\Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2484:..\FreeRTOS\Source/tasks.c **** 	{
2485:..\FreeRTOS\Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2486:..\FreeRTOS\Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2487:..\FreeRTOS\Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2488:..\FreeRTOS\Source/tasks.c **** 		return xIdleTaskHandle;
2489:..\FreeRTOS\Source/tasks.c **** 	}
2490:..\FreeRTOS\Source/tasks.c **** 
2491:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2492:..\FreeRTOS\Source/tasks.c **** /*----------------------------------------------------------*/
2493:..\FreeRTOS\Source/tasks.c **** 
2494:..\FreeRTOS\Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2495:..\FreeRTOS\Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2496:..\FreeRTOS\Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2497:..\FreeRTOS\Source/tasks.c **** 1. */
2498:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2499:..\FreeRTOS\Source/tasks.c **** 
2500:..\FreeRTOS\Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2501:..\FreeRTOS\Source/tasks.c **** 	{
2502:..\FreeRTOS\Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2503:..\FreeRTOS\Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2504:..\FreeRTOS\Source/tasks.c **** 		each stepped tick. */
2505:..\FreeRTOS\Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2506:..\FreeRTOS\Source/tasks.c **** 		xTickCount += xTicksToJump;
2507:..\FreeRTOS\Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2508:..\FreeRTOS\Source/tasks.c **** 	}
2509:..\FreeRTOS\Source/tasks.c **** 
2510:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2511:..\FreeRTOS\Source/tasks.c **** /*----------------------------------------------------------*/
2512:..\FreeRTOS\Source/tasks.c **** 
2513:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2514:..\FreeRTOS\Source/tasks.c **** 
2515:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2516:..\FreeRTOS\Source/tasks.c **** 	{
2517:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2518:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xReturn;
2519:..\FreeRTOS\Source/tasks.c **** 
2520:..\FreeRTOS\Source/tasks.c **** 		configASSERT( pxTCB );
2521:..\FreeRTOS\Source/tasks.c **** 
2522:..\FreeRTOS\Source/tasks.c **** 		vTaskSuspendAll();
2523:..\FreeRTOS\Source/tasks.c **** 		{
2524:..\FreeRTOS\Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2525:..\FreeRTOS\Source/tasks.c **** 			it is actually in the Blocked state. */
2526:..\FreeRTOS\Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2527:..\FreeRTOS\Source/tasks.c **** 			{
2528:..\FreeRTOS\Source/tasks.c **** 				xReturn = pdPASS;
2529:..\FreeRTOS\Source/tasks.c **** 
2530:..\FreeRTOS\Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 47


2531:..\FreeRTOS\Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2532:..\FreeRTOS\Source/tasks.c **** 				scheduler is suspended. */
2533:..\FreeRTOS\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2534:..\FreeRTOS\Source/tasks.c **** 
2535:..\FreeRTOS\Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2536:..\FreeRTOS\Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2537:..\FreeRTOS\Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2538:..\FreeRTOS\Source/tasks.c **** 				is used. */
2539:..\FreeRTOS\Source/tasks.c **** 				taskENTER_CRITICAL();
2540:..\FreeRTOS\Source/tasks.c **** 				{
2541:..\FreeRTOS\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2542:..\FreeRTOS\Source/tasks.c **** 					{
2543:..\FreeRTOS\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2544:..\FreeRTOS\Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2545:..\FreeRTOS\Source/tasks.c **** 					}
2546:..\FreeRTOS\Source/tasks.c **** 					else
2547:..\FreeRTOS\Source/tasks.c **** 					{
2548:..\FreeRTOS\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2549:..\FreeRTOS\Source/tasks.c **** 					}
2550:..\FreeRTOS\Source/tasks.c **** 				}
2551:..\FreeRTOS\Source/tasks.c **** 				taskEXIT_CRITICAL();
2552:..\FreeRTOS\Source/tasks.c **** 
2553:..\FreeRTOS\Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2554:..\FreeRTOS\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2555:..\FreeRTOS\Source/tasks.c **** 
2556:..\FreeRTOS\Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2557:..\FreeRTOS\Source/tasks.c **** 				switch if preemption is turned off. */
2558:..\FreeRTOS\Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2559:..\FreeRTOS\Source/tasks.c **** 				{
2560:..\FreeRTOS\Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2561:..\FreeRTOS\Source/tasks.c **** 					performed if the unblocked task has a priority that is
2562:..\FreeRTOS\Source/tasks.c **** 					equal to or higher than the currently executing task. */
2563:..\FreeRTOS\Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2564:..\FreeRTOS\Source/tasks.c **** 					{
2565:..\FreeRTOS\Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2566:..\FreeRTOS\Source/tasks.c **** 						is unsuspended. */
2567:..\FreeRTOS\Source/tasks.c **** 						xYieldPending = pdTRUE;
2568:..\FreeRTOS\Source/tasks.c **** 					}
2569:..\FreeRTOS\Source/tasks.c **** 					else
2570:..\FreeRTOS\Source/tasks.c **** 					{
2571:..\FreeRTOS\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2572:..\FreeRTOS\Source/tasks.c **** 					}
2573:..\FreeRTOS\Source/tasks.c **** 				}
2574:..\FreeRTOS\Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2575:..\FreeRTOS\Source/tasks.c **** 			}
2576:..\FreeRTOS\Source/tasks.c **** 			else
2577:..\FreeRTOS\Source/tasks.c **** 			{
2578:..\FreeRTOS\Source/tasks.c **** 				xReturn = pdFAIL;
2579:..\FreeRTOS\Source/tasks.c **** 			}
2580:..\FreeRTOS\Source/tasks.c **** 		}
2581:..\FreeRTOS\Source/tasks.c **** 		( void ) xTaskResumeAll();
2582:..\FreeRTOS\Source/tasks.c **** 
2583:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
2584:..\FreeRTOS\Source/tasks.c **** 	}
2585:..\FreeRTOS\Source/tasks.c **** 
2586:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2587:..\FreeRTOS\Source/tasks.c **** /*----------------------------------------------------------*/
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 48


2588:..\FreeRTOS\Source/tasks.c **** 
2589:..\FreeRTOS\Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2590:..\FreeRTOS\Source/tasks.c **** {
2591:..\FreeRTOS\Source/tasks.c **** TCB_t * pxTCB;
2592:..\FreeRTOS\Source/tasks.c **** TickType_t xItemValue;
2593:..\FreeRTOS\Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2594:..\FreeRTOS\Source/tasks.c **** 
2595:..\FreeRTOS\Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2596:..\FreeRTOS\Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2597:..\FreeRTOS\Source/tasks.c **** 	tasks to be unblocked. */
2598:..\FreeRTOS\Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2599:..\FreeRTOS\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2600:..\FreeRTOS\Source/tasks.c **** 	{
2601:..\FreeRTOS\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2602:..\FreeRTOS\Source/tasks.c **** 		block. */
2603:..\FreeRTOS\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2604:..\FreeRTOS\Source/tasks.c **** 
2605:..\FreeRTOS\Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2606:..\FreeRTOS\Source/tasks.c **** 		delayed lists if it wraps to 0. */
2607:..\FreeRTOS\Source/tasks.c **** 		xTickCount = xConstTickCount;
2608:..\FreeRTOS\Source/tasks.c **** 
2609:..\FreeRTOS\Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2610:..\FreeRTOS\Source/tasks.c **** 		{
2611:..\FreeRTOS\Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2612:..\FreeRTOS\Source/tasks.c **** 		}
2613:..\FreeRTOS\Source/tasks.c **** 		else
2614:..\FreeRTOS\Source/tasks.c **** 		{
2615:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2616:..\FreeRTOS\Source/tasks.c **** 		}
2617:..\FreeRTOS\Source/tasks.c **** 
2618:..\FreeRTOS\Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2619:..\FreeRTOS\Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2620:..\FreeRTOS\Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2621:..\FreeRTOS\Source/tasks.c **** 		look any further down the list. */
2622:..\FreeRTOS\Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2623:..\FreeRTOS\Source/tasks.c **** 		{
2624:..\FreeRTOS\Source/tasks.c **** 			for( ;; )
2625:..\FreeRTOS\Source/tasks.c **** 			{
2626:..\FreeRTOS\Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2627:..\FreeRTOS\Source/tasks.c **** 				{
2628:..\FreeRTOS\Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2629:..\FreeRTOS\Source/tasks.c **** 					to the maximum possible value so it is extremely
2630:..\FreeRTOS\Source/tasks.c **** 					unlikely that the
2631:..\FreeRTOS\Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2632:..\FreeRTOS\Source/tasks.c **** 					next time through. */
2633:..\FreeRTOS\Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2634:..\FreeRTOS\Source/tasks.c **** 					break;
2635:..\FreeRTOS\Source/tasks.c **** 				}
2636:..\FreeRTOS\Source/tasks.c **** 				else
2637:..\FreeRTOS\Source/tasks.c **** 				{
2638:..\FreeRTOS\Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2639:..\FreeRTOS\Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2640:..\FreeRTOS\Source/tasks.c **** 					at which the task at the head of the delayed list must
2641:..\FreeRTOS\Source/tasks.c **** 					be removed from the Blocked state. */
2642:..\FreeRTOS\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2643:..\FreeRTOS\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2644:..\FreeRTOS\Source/tasks.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 49


2645:..\FreeRTOS\Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2646:..\FreeRTOS\Source/tasks.c **** 					{
2647:..\FreeRTOS\Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2648:..\FreeRTOS\Source/tasks.c **** 						item value is the time at which the task at the head
2649:..\FreeRTOS\Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2650:..\FreeRTOS\Source/tasks.c **** 						state -	so record the item value in
2651:..\FreeRTOS\Source/tasks.c **** 						xNextTaskUnblockTime. */
2652:..\FreeRTOS\Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2653:..\FreeRTOS\Source/tasks.c **** 						break;
2654:..\FreeRTOS\Source/tasks.c **** 					}
2655:..\FreeRTOS\Source/tasks.c **** 					else
2656:..\FreeRTOS\Source/tasks.c **** 					{
2657:..\FreeRTOS\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2658:..\FreeRTOS\Source/tasks.c **** 					}
2659:..\FreeRTOS\Source/tasks.c **** 
2660:..\FreeRTOS\Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2661:..\FreeRTOS\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2662:..\FreeRTOS\Source/tasks.c **** 
2663:..\FreeRTOS\Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2664:..\FreeRTOS\Source/tasks.c **** 					it from the event list. */
2665:..\FreeRTOS\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2666:..\FreeRTOS\Source/tasks.c **** 					{
2667:..\FreeRTOS\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2668:..\FreeRTOS\Source/tasks.c **** 					}
2669:..\FreeRTOS\Source/tasks.c **** 					else
2670:..\FreeRTOS\Source/tasks.c **** 					{
2671:..\FreeRTOS\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2672:..\FreeRTOS\Source/tasks.c **** 					}
2673:..\FreeRTOS\Source/tasks.c **** 
2674:..\FreeRTOS\Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2675:..\FreeRTOS\Source/tasks.c **** 					list. */
2676:..\FreeRTOS\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2677:..\FreeRTOS\Source/tasks.c **** 
2678:..\FreeRTOS\Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2679:..\FreeRTOS\Source/tasks.c **** 					context switch if preemption is turned off. */
2680:..\FreeRTOS\Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2681:..\FreeRTOS\Source/tasks.c **** 					{
2682:..\FreeRTOS\Source/tasks.c **** 						/* Preemption is on, but a context switch should
2683:..\FreeRTOS\Source/tasks.c **** 						only be performed if the unblocked task has a
2684:..\FreeRTOS\Source/tasks.c **** 						priority that is equal to or higher than the
2685:..\FreeRTOS\Source/tasks.c **** 						currently executing task. */
2686:..\FreeRTOS\Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2687:..\FreeRTOS\Source/tasks.c **** 						{
2688:..\FreeRTOS\Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2689:..\FreeRTOS\Source/tasks.c **** 						}
2690:..\FreeRTOS\Source/tasks.c **** 						else
2691:..\FreeRTOS\Source/tasks.c **** 						{
2692:..\FreeRTOS\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2693:..\FreeRTOS\Source/tasks.c **** 						}
2694:..\FreeRTOS\Source/tasks.c **** 					}
2695:..\FreeRTOS\Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2696:..\FreeRTOS\Source/tasks.c **** 				}
2697:..\FreeRTOS\Source/tasks.c **** 			}
2698:..\FreeRTOS\Source/tasks.c **** 		}
2699:..\FreeRTOS\Source/tasks.c **** 
2700:..\FreeRTOS\Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2701:..\FreeRTOS\Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 50


2702:..\FreeRTOS\Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2703:..\FreeRTOS\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2704:..\FreeRTOS\Source/tasks.c **** 		{
2705:..\FreeRTOS\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2706:..\FreeRTOS\Source/tasks.c **** 			{
2707:..\FreeRTOS\Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2708:..\FreeRTOS\Source/tasks.c **** 			}
2709:..\FreeRTOS\Source/tasks.c **** 			else
2710:..\FreeRTOS\Source/tasks.c **** 			{
2711:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2712:..\FreeRTOS\Source/tasks.c **** 			}
2713:..\FreeRTOS\Source/tasks.c **** 		}
2714:..\FreeRTOS\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2715:..\FreeRTOS\Source/tasks.c **** 
2716:..\FreeRTOS\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2717:..\FreeRTOS\Source/tasks.c **** 		{
2718:..\FreeRTOS\Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2719:..\FreeRTOS\Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2720:..\FreeRTOS\Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2721:..\FreeRTOS\Source/tasks.c **** 			{
2722:..\FreeRTOS\Source/tasks.c **** 				vApplicationTickHook();
2723:..\FreeRTOS\Source/tasks.c **** 			}
2724:..\FreeRTOS\Source/tasks.c **** 			else
2725:..\FreeRTOS\Source/tasks.c **** 			{
2726:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2727:..\FreeRTOS\Source/tasks.c **** 			}
2728:..\FreeRTOS\Source/tasks.c **** 		}
2729:..\FreeRTOS\Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2730:..\FreeRTOS\Source/tasks.c **** 	}
2731:..\FreeRTOS\Source/tasks.c **** 	else
2732:..\FreeRTOS\Source/tasks.c **** 	{
2733:..\FreeRTOS\Source/tasks.c **** 		++uxPendedTicks;
2734:..\FreeRTOS\Source/tasks.c **** 
2735:..\FreeRTOS\Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2736:..\FreeRTOS\Source/tasks.c **** 		scheduler is locked. */
2737:..\FreeRTOS\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2738:..\FreeRTOS\Source/tasks.c **** 		{
2739:..\FreeRTOS\Source/tasks.c **** 			vApplicationTickHook();
2740:..\FreeRTOS\Source/tasks.c **** 		}
2741:..\FreeRTOS\Source/tasks.c **** 		#endif
2742:..\FreeRTOS\Source/tasks.c **** 	}
2743:..\FreeRTOS\Source/tasks.c **** 
2744:..\FreeRTOS\Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2745:..\FreeRTOS\Source/tasks.c **** 	{
2746:..\FreeRTOS\Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2747:..\FreeRTOS\Source/tasks.c **** 		{
2748:..\FreeRTOS\Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2749:..\FreeRTOS\Source/tasks.c **** 		}
2750:..\FreeRTOS\Source/tasks.c **** 		else
2751:..\FreeRTOS\Source/tasks.c **** 		{
2752:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2753:..\FreeRTOS\Source/tasks.c **** 		}
2754:..\FreeRTOS\Source/tasks.c **** 	}
2755:..\FreeRTOS\Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2756:..\FreeRTOS\Source/tasks.c **** 
2757:..\FreeRTOS\Source/tasks.c **** 	return xSwitchRequired;
2758:..\FreeRTOS\Source/tasks.c **** }
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 51


2759:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
2760:..\FreeRTOS\Source/tasks.c **** 
2761:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2762:..\FreeRTOS\Source/tasks.c **** 
2763:..\FreeRTOS\Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2764:..\FreeRTOS\Source/tasks.c **** 	{
2765:..\FreeRTOS\Source/tasks.c **** 	TCB_t *xTCB;
2766:..\FreeRTOS\Source/tasks.c **** 
2767:..\FreeRTOS\Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2768:..\FreeRTOS\Source/tasks.c **** 		getting set. */
2769:..\FreeRTOS\Source/tasks.c **** 		if( xTask == NULL )
2770:..\FreeRTOS\Source/tasks.c **** 		{
2771:..\FreeRTOS\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2772:..\FreeRTOS\Source/tasks.c **** 		}
2773:..\FreeRTOS\Source/tasks.c **** 		else
2774:..\FreeRTOS\Source/tasks.c **** 		{
2775:..\FreeRTOS\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2776:..\FreeRTOS\Source/tasks.c **** 		}
2777:..\FreeRTOS\Source/tasks.c **** 
2778:..\FreeRTOS\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2779:..\FreeRTOS\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2780:..\FreeRTOS\Source/tasks.c **** 		taskENTER_CRITICAL();
2781:..\FreeRTOS\Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2782:..\FreeRTOS\Source/tasks.c **** 		taskEXIT_CRITICAL();
2783:..\FreeRTOS\Source/tasks.c **** 	}
2784:..\FreeRTOS\Source/tasks.c **** 
2785:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2786:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
2787:..\FreeRTOS\Source/tasks.c **** 
2788:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2789:..\FreeRTOS\Source/tasks.c **** 
2790:..\FreeRTOS\Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2791:..\FreeRTOS\Source/tasks.c **** 	{
2792:..\FreeRTOS\Source/tasks.c **** 	TCB_t *xTCB;
2793:..\FreeRTOS\Source/tasks.c **** 	TaskHookFunction_t xReturn;
2794:..\FreeRTOS\Source/tasks.c **** 
2795:..\FreeRTOS\Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2796:..\FreeRTOS\Source/tasks.c **** 		if( xTask == NULL )
2797:..\FreeRTOS\Source/tasks.c **** 		{
2798:..\FreeRTOS\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2799:..\FreeRTOS\Source/tasks.c **** 		}
2800:..\FreeRTOS\Source/tasks.c **** 		else
2801:..\FreeRTOS\Source/tasks.c **** 		{
2802:..\FreeRTOS\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2803:..\FreeRTOS\Source/tasks.c **** 		}
2804:..\FreeRTOS\Source/tasks.c **** 
2805:..\FreeRTOS\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2806:..\FreeRTOS\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2807:..\FreeRTOS\Source/tasks.c **** 		taskENTER_CRITICAL();
2808:..\FreeRTOS\Source/tasks.c **** 		{
2809:..\FreeRTOS\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2810:..\FreeRTOS\Source/tasks.c **** 		}
2811:..\FreeRTOS\Source/tasks.c **** 		taskEXIT_CRITICAL();
2812:..\FreeRTOS\Source/tasks.c **** 
2813:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
2814:..\FreeRTOS\Source/tasks.c **** 	}
2815:..\FreeRTOS\Source/tasks.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 52


2816:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2817:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
2818:..\FreeRTOS\Source/tasks.c **** 
2819:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2820:..\FreeRTOS\Source/tasks.c **** 
2821:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2822:..\FreeRTOS\Source/tasks.c **** 	{
2823:..\FreeRTOS\Source/tasks.c **** 	TCB_t *xTCB;
2824:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xReturn;
2825:..\FreeRTOS\Source/tasks.c **** 
2826:..\FreeRTOS\Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2827:..\FreeRTOS\Source/tasks.c **** 		if( xTask == NULL )
2828:..\FreeRTOS\Source/tasks.c **** 		{
2829:..\FreeRTOS\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2830:..\FreeRTOS\Source/tasks.c **** 		}
2831:..\FreeRTOS\Source/tasks.c **** 		else
2832:..\FreeRTOS\Source/tasks.c **** 		{
2833:..\FreeRTOS\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2834:..\FreeRTOS\Source/tasks.c **** 		}
2835:..\FreeRTOS\Source/tasks.c **** 
2836:..\FreeRTOS\Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2837:..\FreeRTOS\Source/tasks.c **** 		{
2838:..\FreeRTOS\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2839:..\FreeRTOS\Source/tasks.c **** 		}
2840:..\FreeRTOS\Source/tasks.c **** 		else
2841:..\FreeRTOS\Source/tasks.c **** 		{
2842:..\FreeRTOS\Source/tasks.c **** 			xReturn = pdFAIL;
2843:..\FreeRTOS\Source/tasks.c **** 		}
2844:..\FreeRTOS\Source/tasks.c **** 
2845:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
2846:..\FreeRTOS\Source/tasks.c **** 	}
2847:..\FreeRTOS\Source/tasks.c **** 
2848:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2849:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
2850:..\FreeRTOS\Source/tasks.c **** 
2851:..\FreeRTOS\Source/tasks.c **** void vTaskSwitchContext( void )
2852:..\FreeRTOS\Source/tasks.c **** {
2853:..\FreeRTOS\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2854:..\FreeRTOS\Source/tasks.c **** 	{
2855:..\FreeRTOS\Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2856:..\FreeRTOS\Source/tasks.c **** 		switch. */
2857:..\FreeRTOS\Source/tasks.c **** 		xYieldPending = pdTRUE;
2858:..\FreeRTOS\Source/tasks.c **** 	}
2859:..\FreeRTOS\Source/tasks.c **** 	else
2860:..\FreeRTOS\Source/tasks.c **** 	{
2861:..\FreeRTOS\Source/tasks.c **** 		xYieldPending = pdFALSE;
2862:..\FreeRTOS\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2863:..\FreeRTOS\Source/tasks.c **** 
2864:..\FreeRTOS\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2865:..\FreeRTOS\Source/tasks.c **** 		{
2866:..\FreeRTOS\Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2867:..\FreeRTOS\Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2868:..\FreeRTOS\Source/tasks.c **** 				#else
2869:..\FreeRTOS\Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2870:..\FreeRTOS\Source/tasks.c **** 				#endif
2871:..\FreeRTOS\Source/tasks.c **** 
2872:..\FreeRTOS\Source/tasks.c **** 				/* Add the amount of time the task has been running to the
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 53


2873:..\FreeRTOS\Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2874:..\FreeRTOS\Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2875:..\FreeRTOS\Source/tasks.c **** 				protection here so count values are only valid until the timer
2876:..\FreeRTOS\Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2877:..\FreeRTOS\Source/tasks.c **** 				against suspect run time stat counter implementations - which
2878:..\FreeRTOS\Source/tasks.c **** 				are provided by the application, not the kernel. */
2879:..\FreeRTOS\Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2880:..\FreeRTOS\Source/tasks.c **** 				{
2881:..\FreeRTOS\Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2882:..\FreeRTOS\Source/tasks.c **** 				}
2883:..\FreeRTOS\Source/tasks.c **** 				else
2884:..\FreeRTOS\Source/tasks.c **** 				{
2885:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2886:..\FreeRTOS\Source/tasks.c **** 				}
2887:..\FreeRTOS\Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2888:..\FreeRTOS\Source/tasks.c **** 		}
2889:..\FreeRTOS\Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2890:..\FreeRTOS\Source/tasks.c **** 
2891:..\FreeRTOS\Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2892:..\FreeRTOS\Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
2893:..\FreeRTOS\Source/tasks.c **** 
2894:..\FreeRTOS\Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2895:..\FreeRTOS\Source/tasks.c **** 		optimised asm code. */
2896:..\FreeRTOS\Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2897:..\FreeRTOS\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2898:..\FreeRTOS\Source/tasks.c **** 
2899:..\FreeRTOS\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2900:..\FreeRTOS\Source/tasks.c **** 		{
2901:..\FreeRTOS\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2902:..\FreeRTOS\Source/tasks.c **** 			structure specific to this task. */
2903:..\FreeRTOS\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2904:..\FreeRTOS\Source/tasks.c **** 		}
2905:..\FreeRTOS\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2906:..\FreeRTOS\Source/tasks.c **** 	}
2907:..\FreeRTOS\Source/tasks.c **** }
2908:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
2909:..\FreeRTOS\Source/tasks.c **** 
2910:..\FreeRTOS\Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2911:..\FreeRTOS\Source/tasks.c **** {
2912:..\FreeRTOS\Source/tasks.c **** 	configASSERT( pxEventList );
2913:..\FreeRTOS\Source/tasks.c **** 
2914:..\FreeRTOS\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2915:..\FreeRTOS\Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2916:..\FreeRTOS\Source/tasks.c **** 
2917:..\FreeRTOS\Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2918:..\FreeRTOS\Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2919:..\FreeRTOS\Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2920:..\FreeRTOS\Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2921:..\FreeRTOS\Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2922:..\FreeRTOS\Source/tasks.c **** 
2923:..\FreeRTOS\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2924:..\FreeRTOS\Source/tasks.c **** }
2925:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
2926:..\FreeRTOS\Source/tasks.c **** 
2927:..\FreeRTOS\Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2928:..\FreeRTOS\Source/tasks.c **** {
2929:..\FreeRTOS\Source/tasks.c **** 	configASSERT( pxEventList );
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 54


2930:..\FreeRTOS\Source/tasks.c **** 
2931:..\FreeRTOS\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2932:..\FreeRTOS\Source/tasks.c **** 	the event groups implementation. */
2933:..\FreeRTOS\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2934:..\FreeRTOS\Source/tasks.c **** 
2935:..\FreeRTOS\Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2936:..\FreeRTOS\Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2937:..\FreeRTOS\Source/tasks.c **** 	task that is not in the Blocked state. */
2938:..\FreeRTOS\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2939:..\FreeRTOS\Source/tasks.c **** 
2940:..\FreeRTOS\Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2941:..\FreeRTOS\Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2942:..\FreeRTOS\Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2943:..\FreeRTOS\Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2944:..\FreeRTOS\Source/tasks.c **** 	the task level). */
2945:..\FreeRTOS\Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2946:..\FreeRTOS\Source/tasks.c **** 
2947:..\FreeRTOS\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2948:..\FreeRTOS\Source/tasks.c **** }
2949:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
2950:..\FreeRTOS\Source/tasks.c **** 
2951:..\FreeRTOS\Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2952:..\FreeRTOS\Source/tasks.c **** 
2953:..\FreeRTOS\Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2954:..\FreeRTOS\Source/tasks.c **** 	{
2955:..\FreeRTOS\Source/tasks.c **** 		configASSERT( pxEventList );
2956:..\FreeRTOS\Source/tasks.c **** 
2957:..\FreeRTOS\Source/tasks.c **** 		/* This function should not be called by application code hence the
2958:..\FreeRTOS\Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2959:..\FreeRTOS\Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2960:..\FreeRTOS\Source/tasks.c **** 		it should be called with the scheduler suspended. */
2961:..\FreeRTOS\Source/tasks.c **** 
2962:..\FreeRTOS\Source/tasks.c **** 
2963:..\FreeRTOS\Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2964:..\FreeRTOS\Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2965:..\FreeRTOS\Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2966:..\FreeRTOS\Source/tasks.c **** 		can be used in place of vListInsert. */
2967:..\FreeRTOS\Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2968:..\FreeRTOS\Source/tasks.c **** 
2969:..\FreeRTOS\Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2970:..\FreeRTOS\Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2971:..\FreeRTOS\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2972:..\FreeRTOS\Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2973:..\FreeRTOS\Source/tasks.c **** 		{
2974:..\FreeRTOS\Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2975:..\FreeRTOS\Source/tasks.c **** 		}
2976:..\FreeRTOS\Source/tasks.c **** 
2977:..\FreeRTOS\Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2978:..\FreeRTOS\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2979:..\FreeRTOS\Source/tasks.c **** 	}
2980:..\FreeRTOS\Source/tasks.c **** 
2981:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_TIMERS */
2982:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
2983:..\FreeRTOS\Source/tasks.c **** 
2984:..\FreeRTOS\Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2985:..\FreeRTOS\Source/tasks.c **** {
2986:..\FreeRTOS\Source/tasks.c **** TCB_t *pxUnblockedTCB;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 55


2987:..\FreeRTOS\Source/tasks.c **** BaseType_t xReturn;
2988:..\FreeRTOS\Source/tasks.c **** 
2989:..\FreeRTOS\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2990:..\FreeRTOS\Source/tasks.c **** 	called from a critical section within an ISR. */
2991:..\FreeRTOS\Source/tasks.c **** 
2992:..\FreeRTOS\Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2993:..\FreeRTOS\Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2994:..\FreeRTOS\Source/tasks.c **** 	the delayed list, and add it to the ready list.
2995:..\FreeRTOS\Source/tasks.c **** 
2996:..\FreeRTOS\Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2997:..\FreeRTOS\Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2998:..\FreeRTOS\Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2999:..\FreeRTOS\Source/tasks.c **** 
3000:..\FreeRTOS\Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3001:..\FreeRTOS\Source/tasks.c **** 	pxEventList is not empty. */
3002:..\FreeRTOS\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
3003:..\FreeRTOS\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3004:..\FreeRTOS\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3005:..\FreeRTOS\Source/tasks.c **** 
3006:..\FreeRTOS\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3007:..\FreeRTOS\Source/tasks.c **** 	{
3008:..\FreeRTOS\Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3009:..\FreeRTOS\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3010:..\FreeRTOS\Source/tasks.c **** 	}
3011:..\FreeRTOS\Source/tasks.c **** 	else
3012:..\FreeRTOS\Source/tasks.c **** 	{
3013:..\FreeRTOS\Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3014:..\FreeRTOS\Source/tasks.c **** 		pending until the scheduler is resumed. */
3015:..\FreeRTOS\Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3016:..\FreeRTOS\Source/tasks.c **** 	}
3017:..\FreeRTOS\Source/tasks.c **** 
3018:..\FreeRTOS\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3019:..\FreeRTOS\Source/tasks.c **** 	{
3020:..\FreeRTOS\Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3021:..\FreeRTOS\Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3022:..\FreeRTOS\Source/tasks.c **** 		it should force a context switch now. */
3023:..\FreeRTOS\Source/tasks.c **** 		xReturn = pdTRUE;
3024:..\FreeRTOS\Source/tasks.c **** 
3025:..\FreeRTOS\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3026:..\FreeRTOS\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3027:..\FreeRTOS\Source/tasks.c **** 		xYieldPending = pdTRUE;
3028:..\FreeRTOS\Source/tasks.c **** 	}
3029:..\FreeRTOS\Source/tasks.c **** 	else
3030:..\FreeRTOS\Source/tasks.c **** 	{
3031:..\FreeRTOS\Source/tasks.c **** 		xReturn = pdFALSE;
3032:..\FreeRTOS\Source/tasks.c **** 	}
3033:..\FreeRTOS\Source/tasks.c **** 
3034:..\FreeRTOS\Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3035:..\FreeRTOS\Source/tasks.c **** 	{
3036:..\FreeRTOS\Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3037:..\FreeRTOS\Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3038:..\FreeRTOS\Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3039:..\FreeRTOS\Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3040:..\FreeRTOS\Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3041:..\FreeRTOS\Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3042:..\FreeRTOS\Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3043:..\FreeRTOS\Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 56


3044:..\FreeRTOS\Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3045:..\FreeRTOS\Source/tasks.c **** 	}
3046:..\FreeRTOS\Source/tasks.c **** 	#endif
3047:..\FreeRTOS\Source/tasks.c **** 
3048:..\FreeRTOS\Source/tasks.c **** 	return xReturn;
3049:..\FreeRTOS\Source/tasks.c **** }
3050:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3051:..\FreeRTOS\Source/tasks.c **** 
3052:..\FreeRTOS\Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3053:..\FreeRTOS\Source/tasks.c **** {
3054:..\FreeRTOS\Source/tasks.c **** TCB_t *pxUnblockedTCB;
3055:..\FreeRTOS\Source/tasks.c **** 
3056:..\FreeRTOS\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3057:..\FreeRTOS\Source/tasks.c **** 	the event flags implementation. */
3058:..\FreeRTOS\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3059:..\FreeRTOS\Source/tasks.c **** 
3060:..\FreeRTOS\Source/tasks.c **** 	/* Store the new item value in the event list. */
3061:..\FreeRTOS\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3062:..\FreeRTOS\Source/tasks.c **** 
3063:..\FreeRTOS\Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3064:..\FreeRTOS\Source/tasks.c **** 	event flags. */
3065:..\FreeRTOS\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
3066:..\FreeRTOS\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3067:..\FreeRTOS\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3068:..\FreeRTOS\Source/tasks.c **** 
3069:..\FreeRTOS\Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3070:..\FreeRTOS\Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3071:..\FreeRTOS\Source/tasks.c **** 	lists. */
3072:..\FreeRTOS\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3073:..\FreeRTOS\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3074:..\FreeRTOS\Source/tasks.c **** 
3075:..\FreeRTOS\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3076:..\FreeRTOS\Source/tasks.c **** 	{
3077:..\FreeRTOS\Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3078:..\FreeRTOS\Source/tasks.c **** 		a context switch is required.  This function is called with the
3079:..\FreeRTOS\Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3080:..\FreeRTOS\Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3081:..\FreeRTOS\Source/tasks.c **** 		xYieldPending = pdTRUE;
3082:..\FreeRTOS\Source/tasks.c **** 	}
3083:..\FreeRTOS\Source/tasks.c **** }
3084:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3085:..\FreeRTOS\Source/tasks.c **** 
3086:..\FreeRTOS\Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3087:..\FreeRTOS\Source/tasks.c **** {
3088:..\FreeRTOS\Source/tasks.c **** 	configASSERT( pxTimeOut );
3089:..\FreeRTOS\Source/tasks.c **** 	taskENTER_CRITICAL();
3090:..\FreeRTOS\Source/tasks.c **** 	{
3091:..\FreeRTOS\Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3092:..\FreeRTOS\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3093:..\FreeRTOS\Source/tasks.c **** 	}
3094:..\FreeRTOS\Source/tasks.c **** 	taskEXIT_CRITICAL();
3095:..\FreeRTOS\Source/tasks.c **** }
3096:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3097:..\FreeRTOS\Source/tasks.c **** 
3098:..\FreeRTOS\Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3099:..\FreeRTOS\Source/tasks.c **** {
3100:..\FreeRTOS\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 57


3101:..\FreeRTOS\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3102:..\FreeRTOS\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3103:..\FreeRTOS\Source/tasks.c **** }
3104:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3105:..\FreeRTOS\Source/tasks.c **** 
3106:..\FreeRTOS\Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3107:..\FreeRTOS\Source/tasks.c **** {
3108:..\FreeRTOS\Source/tasks.c **** BaseType_t xReturn;
3109:..\FreeRTOS\Source/tasks.c **** 
3110:..\FreeRTOS\Source/tasks.c **** 	configASSERT( pxTimeOut );
3111:..\FreeRTOS\Source/tasks.c **** 	configASSERT( pxTicksToWait );
3112:..\FreeRTOS\Source/tasks.c **** 
3113:..\FreeRTOS\Source/tasks.c **** 	taskENTER_CRITICAL();
3114:..\FreeRTOS\Source/tasks.c **** 	{
3115:..\FreeRTOS\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3116:..\FreeRTOS\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3117:..\FreeRTOS\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3118:..\FreeRTOS\Source/tasks.c **** 
3119:..\FreeRTOS\Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3120:..\FreeRTOS\Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3121:..\FreeRTOS\Source/tasks.c **** 			{
3122:..\FreeRTOS\Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3123:..\FreeRTOS\Source/tasks.c **** 				but has the same result. */
3124:..\FreeRTOS\Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3125:..\FreeRTOS\Source/tasks.c **** 				xReturn = pdTRUE;
3126:..\FreeRTOS\Source/tasks.c **** 			}
3127:..\FreeRTOS\Source/tasks.c **** 			else
3128:..\FreeRTOS\Source/tasks.c **** 		#endif
3129:..\FreeRTOS\Source/tasks.c **** 
3130:..\FreeRTOS\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3131:..\FreeRTOS\Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3132:..\FreeRTOS\Source/tasks.c **** 			{
3133:..\FreeRTOS\Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3134:..\FreeRTOS\Source/tasks.c **** 				specified is the maximum block time then the task should block
3135:..\FreeRTOS\Source/tasks.c **** 				indefinitely, and therefore never time out. */
3136:..\FreeRTOS\Source/tasks.c **** 				xReturn = pdFALSE;
3137:..\FreeRTOS\Source/tasks.c **** 			}
3138:..\FreeRTOS\Source/tasks.c **** 			else
3139:..\FreeRTOS\Source/tasks.c **** 		#endif
3140:..\FreeRTOS\Source/tasks.c **** 
3141:..\FreeRTOS\Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3142:..\FreeRTOS\Source/tasks.c **** 		{
3143:..\FreeRTOS\Source/tasks.c **** 			/* The tick count is greater than the time at which
3144:..\FreeRTOS\Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3145:..\FreeRTOS\Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3146:..\FreeRTOS\Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3147:..\FreeRTOS\Source/tasks.c **** 			was called. */
3148:..\FreeRTOS\Source/tasks.c **** 			xReturn = pdTRUE;
3149:..\FreeRTOS\Source/tasks.c **** 		}
3150:..\FreeRTOS\Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3151:..\FreeRTOS\Source/tasks.c **** 		{
3152:..\FreeRTOS\Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3153:..\FreeRTOS\Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3154:..\FreeRTOS\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3155:..\FreeRTOS\Source/tasks.c **** 			xReturn = pdFALSE;
3156:..\FreeRTOS\Source/tasks.c **** 		}
3157:..\FreeRTOS\Source/tasks.c **** 		else
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 58


3158:..\FreeRTOS\Source/tasks.c **** 		{
3159:..\FreeRTOS\Source/tasks.c **** 			*pxTicksToWait = 0;
3160:..\FreeRTOS\Source/tasks.c **** 			xReturn = pdTRUE;
3161:..\FreeRTOS\Source/tasks.c **** 		}
3162:..\FreeRTOS\Source/tasks.c **** 	}
3163:..\FreeRTOS\Source/tasks.c **** 	taskEXIT_CRITICAL();
3164:..\FreeRTOS\Source/tasks.c **** 
3165:..\FreeRTOS\Source/tasks.c **** 	return xReturn;
3166:..\FreeRTOS\Source/tasks.c **** }
3167:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3168:..\FreeRTOS\Source/tasks.c **** 
3169:..\FreeRTOS\Source/tasks.c **** void vTaskMissedYield( void )
3170:..\FreeRTOS\Source/tasks.c **** {
3171:..\FreeRTOS\Source/tasks.c **** 	xYieldPending = pdTRUE;
3172:..\FreeRTOS\Source/tasks.c **** }
3173:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3174:..\FreeRTOS\Source/tasks.c **** 
3175:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3176:..\FreeRTOS\Source/tasks.c **** 
3177:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3178:..\FreeRTOS\Source/tasks.c **** 	{
3179:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxReturn;
3180:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
3181:..\FreeRTOS\Source/tasks.c **** 
3182:..\FreeRTOS\Source/tasks.c **** 		if( xTask != NULL )
3183:..\FreeRTOS\Source/tasks.c **** 		{
3184:..\FreeRTOS\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3185:..\FreeRTOS\Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3186:..\FreeRTOS\Source/tasks.c **** 		}
3187:..\FreeRTOS\Source/tasks.c **** 		else
3188:..\FreeRTOS\Source/tasks.c **** 		{
3189:..\FreeRTOS\Source/tasks.c **** 			uxReturn = 0U;
3190:..\FreeRTOS\Source/tasks.c **** 		}
3191:..\FreeRTOS\Source/tasks.c **** 
3192:..\FreeRTOS\Source/tasks.c **** 		return uxReturn;
3193:..\FreeRTOS\Source/tasks.c **** 	}
3194:..\FreeRTOS\Source/tasks.c **** 
3195:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3196:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3197:..\FreeRTOS\Source/tasks.c **** 
3198:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3199:..\FreeRTOS\Source/tasks.c **** 
3200:..\FreeRTOS\Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3201:..\FreeRTOS\Source/tasks.c **** 	{
3202:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
3203:..\FreeRTOS\Source/tasks.c **** 
3204:..\FreeRTOS\Source/tasks.c **** 		if( xTask != NULL )
3205:..\FreeRTOS\Source/tasks.c **** 		{
3206:..\FreeRTOS\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3207:..\FreeRTOS\Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3208:..\FreeRTOS\Source/tasks.c **** 		}
3209:..\FreeRTOS\Source/tasks.c **** 	}
3210:..\FreeRTOS\Source/tasks.c **** 
3211:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3212:..\FreeRTOS\Source/tasks.c **** 
3213:..\FreeRTOS\Source/tasks.c **** /*
3214:..\FreeRTOS\Source/tasks.c ****  * -----------------------------------------------------------
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 59


3215:..\FreeRTOS\Source/tasks.c ****  * The Idle task.
3216:..\FreeRTOS\Source/tasks.c ****  * ----------------------------------------------------------
3217:..\FreeRTOS\Source/tasks.c ****  *
3218:..\FreeRTOS\Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3219:..\FreeRTOS\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3220:..\FreeRTOS\Source/tasks.c ****  *
3221:..\FreeRTOS\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3222:..\FreeRTOS\Source/tasks.c ****  *
3223:..\FreeRTOS\Source/tasks.c ****  */
3224:..\FreeRTOS\Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3225:..\FreeRTOS\Source/tasks.c **** {
3226:..\FreeRTOS\Source/tasks.c **** 	/* Stop warnings. */
3227:..\FreeRTOS\Source/tasks.c **** 	( void ) pvParameters;
3228:..\FreeRTOS\Source/tasks.c **** 
3229:..\FreeRTOS\Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3230:..\FreeRTOS\Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3231:..\FreeRTOS\Source/tasks.c **** 
3232:..\FreeRTOS\Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3233:..\FreeRTOS\Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3234:..\FreeRTOS\Source/tasks.c **** 	any. */
3235:..\FreeRTOS\Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3236:..\FreeRTOS\Source/tasks.c **** 
3237:..\FreeRTOS\Source/tasks.c **** 	for( ;; )
3238:..\FreeRTOS\Source/tasks.c **** 	{
3239:..\FreeRTOS\Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3240:..\FreeRTOS\Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3241:..\FreeRTOS\Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3242:..\FreeRTOS\Source/tasks.c **** 
3243:..\FreeRTOS\Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3244:..\FreeRTOS\Source/tasks.c **** 		{
3245:..\FreeRTOS\Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3246:..\FreeRTOS\Source/tasks.c **** 			see if any other task has become available.  If we are using
3247:..\FreeRTOS\Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3248:..\FreeRTOS\Source/tasks.c **** 			will automatically get the processor anyway. */
3249:..\FreeRTOS\Source/tasks.c **** 			taskYIELD();
3250:..\FreeRTOS\Source/tasks.c **** 		}
3251:..\FreeRTOS\Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3252:..\FreeRTOS\Source/tasks.c **** 
3253:..\FreeRTOS\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3254:..\FreeRTOS\Source/tasks.c **** 		{
3255:..\FreeRTOS\Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3256:..\FreeRTOS\Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3257:..\FreeRTOS\Source/tasks.c **** 			to run then the idle task should yield before the end of the
3258:..\FreeRTOS\Source/tasks.c **** 			timeslice.
3259:..\FreeRTOS\Source/tasks.c **** 
3260:..\FreeRTOS\Source/tasks.c **** 			A critical region is not required here as we are just reading from
3261:..\FreeRTOS\Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3262:..\FreeRTOS\Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3263:..\FreeRTOS\Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3264:..\FreeRTOS\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3265:..\FreeRTOS\Source/tasks.c **** 			{
3266:..\FreeRTOS\Source/tasks.c **** 				taskYIELD();
3267:..\FreeRTOS\Source/tasks.c **** 			}
3268:..\FreeRTOS\Source/tasks.c **** 			else
3269:..\FreeRTOS\Source/tasks.c **** 			{
3270:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3271:..\FreeRTOS\Source/tasks.c **** 			}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 60


3272:..\FreeRTOS\Source/tasks.c **** 		}
3273:..\FreeRTOS\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3274:..\FreeRTOS\Source/tasks.c **** 
3275:..\FreeRTOS\Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3276:..\FreeRTOS\Source/tasks.c **** 		{
3277:..\FreeRTOS\Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3278:..\FreeRTOS\Source/tasks.c **** 
3279:..\FreeRTOS\Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3280:..\FreeRTOS\Source/tasks.c **** 			allows the application designer to add background functionality
3281:..\FreeRTOS\Source/tasks.c **** 			without the overhead of a separate task.
3282:..\FreeRTOS\Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3283:..\FreeRTOS\Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3284:..\FreeRTOS\Source/tasks.c **** 			vApplicationIdleHook();
3285:..\FreeRTOS\Source/tasks.c **** 		}
3286:..\FreeRTOS\Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3287:..\FreeRTOS\Source/tasks.c **** 
3288:..\FreeRTOS\Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3289:..\FreeRTOS\Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3290:..\FreeRTOS\Source/tasks.c **** 		user defined low power mode	implementations require
3291:..\FreeRTOS\Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3292:..\FreeRTOS\Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3293:..\FreeRTOS\Source/tasks.c **** 		{
3294:..\FreeRTOS\Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3295:..\FreeRTOS\Source/tasks.c **** 
3296:..\FreeRTOS\Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3297:..\FreeRTOS\Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3298:..\FreeRTOS\Source/tasks.c **** 			test of the expected idle time is performed without the
3299:..\FreeRTOS\Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3300:..\FreeRTOS\Source/tasks.c **** 			valid. */
3301:..\FreeRTOS\Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3302:..\FreeRTOS\Source/tasks.c **** 
3303:..\FreeRTOS\Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3304:..\FreeRTOS\Source/tasks.c **** 			{
3305:..\FreeRTOS\Source/tasks.c **** 				vTaskSuspendAll();
3306:..\FreeRTOS\Source/tasks.c **** 				{
3307:..\FreeRTOS\Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3308:..\FreeRTOS\Source/tasks.c **** 					time can be sampled again, and this time its value can
3309:..\FreeRTOS\Source/tasks.c **** 					be used. */
3310:..\FreeRTOS\Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3311:..\FreeRTOS\Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3312:..\FreeRTOS\Source/tasks.c **** 
3313:..\FreeRTOS\Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3314:..\FreeRTOS\Source/tasks.c **** 					if the application does not want
3315:..\FreeRTOS\Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3316:..\FreeRTOS\Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3317:..\FreeRTOS\Source/tasks.c **** 
3318:..\FreeRTOS\Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3319:..\FreeRTOS\Source/tasks.c **** 					{
3320:..\FreeRTOS\Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3321:..\FreeRTOS\Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3322:..\FreeRTOS\Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3323:..\FreeRTOS\Source/tasks.c **** 					}
3324:..\FreeRTOS\Source/tasks.c **** 					else
3325:..\FreeRTOS\Source/tasks.c **** 					{
3326:..\FreeRTOS\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3327:..\FreeRTOS\Source/tasks.c **** 					}
3328:..\FreeRTOS\Source/tasks.c **** 				}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 61


3329:..\FreeRTOS\Source/tasks.c **** 				( void ) xTaskResumeAll();
3330:..\FreeRTOS\Source/tasks.c **** 			}
3331:..\FreeRTOS\Source/tasks.c **** 			else
3332:..\FreeRTOS\Source/tasks.c **** 			{
3333:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3334:..\FreeRTOS\Source/tasks.c **** 			}
3335:..\FreeRTOS\Source/tasks.c **** 		}
3336:..\FreeRTOS\Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3337:..\FreeRTOS\Source/tasks.c **** 	}
3338:..\FreeRTOS\Source/tasks.c **** }
3339:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3340:..\FreeRTOS\Source/tasks.c **** 
3341:..\FreeRTOS\Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3342:..\FreeRTOS\Source/tasks.c **** 
3343:..\FreeRTOS\Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3344:..\FreeRTOS\Source/tasks.c **** 	{
3345:..\FreeRTOS\Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3346:..\FreeRTOS\Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3347:..\FreeRTOS\Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3348:..\FreeRTOS\Source/tasks.c **** 
3349:..\FreeRTOS\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3350:..\FreeRTOS\Source/tasks.c **** 		{
3351:..\FreeRTOS\Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3352:..\FreeRTOS\Source/tasks.c **** 			eReturn = eAbortSleep;
3353:..\FreeRTOS\Source/tasks.c **** 		}
3354:..\FreeRTOS\Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3355:..\FreeRTOS\Source/tasks.c **** 		{
3356:..\FreeRTOS\Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3357:..\FreeRTOS\Source/tasks.c **** 			eReturn = eAbortSleep;
3358:..\FreeRTOS\Source/tasks.c **** 		}
3359:..\FreeRTOS\Source/tasks.c **** 		else
3360:..\FreeRTOS\Source/tasks.c **** 		{
3361:..\FreeRTOS\Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3362:..\FreeRTOS\Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3363:..\FreeRTOS\Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3364:..\FreeRTOS\Source/tasks.c **** 			interrupts. */
3365:..\FreeRTOS\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3366:..\FreeRTOS\Source/tasks.c **** 			{
3367:..\FreeRTOS\Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3368:..\FreeRTOS\Source/tasks.c **** 			}
3369:..\FreeRTOS\Source/tasks.c **** 			else
3370:..\FreeRTOS\Source/tasks.c **** 			{
3371:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3372:..\FreeRTOS\Source/tasks.c **** 			}
3373:..\FreeRTOS\Source/tasks.c **** 		}
3374:..\FreeRTOS\Source/tasks.c **** 
3375:..\FreeRTOS\Source/tasks.c **** 		return eReturn;
3376:..\FreeRTOS\Source/tasks.c **** 	}
3377:..\FreeRTOS\Source/tasks.c **** 
3378:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3379:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3380:..\FreeRTOS\Source/tasks.c **** 
3381:..\FreeRTOS\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3382:..\FreeRTOS\Source/tasks.c **** 
3383:..\FreeRTOS\Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3384:..\FreeRTOS\Source/tasks.c **** 	{
3385:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 62


3386:..\FreeRTOS\Source/tasks.c **** 
3387:..\FreeRTOS\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3388:..\FreeRTOS\Source/tasks.c **** 		{
3389:..\FreeRTOS\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3390:..\FreeRTOS\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3391:..\FreeRTOS\Source/tasks.c **** 		}
3392:..\FreeRTOS\Source/tasks.c **** 	}
3393:..\FreeRTOS\Source/tasks.c **** 
3394:..\FreeRTOS\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3395:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3396:..\FreeRTOS\Source/tasks.c **** 
3397:..\FreeRTOS\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3398:..\FreeRTOS\Source/tasks.c **** 
3399:..\FreeRTOS\Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3400:..\FreeRTOS\Source/tasks.c **** 	{
3401:..\FreeRTOS\Source/tasks.c **** 	void *pvReturn = NULL;
3402:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
3403:..\FreeRTOS\Source/tasks.c **** 
3404:..\FreeRTOS\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3405:..\FreeRTOS\Source/tasks.c **** 		{
3406:..\FreeRTOS\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3407:..\FreeRTOS\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3408:..\FreeRTOS\Source/tasks.c **** 		}
3409:..\FreeRTOS\Source/tasks.c **** 		else
3410:..\FreeRTOS\Source/tasks.c **** 		{
3411:..\FreeRTOS\Source/tasks.c **** 			pvReturn = NULL;
3412:..\FreeRTOS\Source/tasks.c **** 		}
3413:..\FreeRTOS\Source/tasks.c **** 
3414:..\FreeRTOS\Source/tasks.c **** 		return pvReturn;
3415:..\FreeRTOS\Source/tasks.c **** 	}
3416:..\FreeRTOS\Source/tasks.c **** 
3417:..\FreeRTOS\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3418:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3419:..\FreeRTOS\Source/tasks.c **** 
3420:..\FreeRTOS\Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3421:..\FreeRTOS\Source/tasks.c **** 
3422:..\FreeRTOS\Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3423:..\FreeRTOS\Source/tasks.c **** 	{
3424:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
3425:..\FreeRTOS\Source/tasks.c **** 
3426:..\FreeRTOS\Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3427:..\FreeRTOS\Source/tasks.c **** 		the calling task. */
3428:..\FreeRTOS\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3429:..\FreeRTOS\Source/tasks.c **** 
3430:..\FreeRTOS\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3431:..\FreeRTOS\Source/tasks.c **** 	}
3432:..\FreeRTOS\Source/tasks.c **** 
3433:..\FreeRTOS\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3434:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3435:..\FreeRTOS\Source/tasks.c **** 
3436:..\FreeRTOS\Source/tasks.c **** static void prvInitialiseTaskLists( void )
3437:..\FreeRTOS\Source/tasks.c **** {
3438:..\FreeRTOS\Source/tasks.c **** UBaseType_t uxPriority;
3439:..\FreeRTOS\Source/tasks.c **** 
3440:..\FreeRTOS\Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3441:..\FreeRTOS\Source/tasks.c **** 	{
3442:..\FreeRTOS\Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 63


3443:..\FreeRTOS\Source/tasks.c **** 	}
3444:..\FreeRTOS\Source/tasks.c **** 
3445:..\FreeRTOS\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3446:..\FreeRTOS\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3447:..\FreeRTOS\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3448:..\FreeRTOS\Source/tasks.c **** 
3449:..\FreeRTOS\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3450:..\FreeRTOS\Source/tasks.c **** 	{
3451:..\FreeRTOS\Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3452:..\FreeRTOS\Source/tasks.c **** 	}
3453:..\FreeRTOS\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3454:..\FreeRTOS\Source/tasks.c **** 
3455:..\FreeRTOS\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3456:..\FreeRTOS\Source/tasks.c **** 	{
3457:..\FreeRTOS\Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3458:..\FreeRTOS\Source/tasks.c **** 	}
3459:..\FreeRTOS\Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3460:..\FreeRTOS\Source/tasks.c **** 
3461:..\FreeRTOS\Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3462:..\FreeRTOS\Source/tasks.c **** 	using list2. */
3463:..\FreeRTOS\Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3464:..\FreeRTOS\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3465:..\FreeRTOS\Source/tasks.c **** }
3466:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3467:..\FreeRTOS\Source/tasks.c **** 
3468:..\FreeRTOS\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3469:..\FreeRTOS\Source/tasks.c **** {
3470:..\FreeRTOS\Source/tasks.c **** 
3471:..\FreeRTOS\Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3472:..\FreeRTOS\Source/tasks.c **** 
3473:..\FreeRTOS\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3474:..\FreeRTOS\Source/tasks.c **** 	{
3475:..\FreeRTOS\Source/tasks.c **** 		TCB_t *pxTCB;
3476:..\FreeRTOS\Source/tasks.c **** 
3477:..\FreeRTOS\Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3478:..\FreeRTOS\Source/tasks.c **** 		being called too often in the idle task. */
3479:..\FreeRTOS\Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3480:..\FreeRTOS\Source/tasks.c **** 		{
3481:..\FreeRTOS\Source/tasks.c **** 			taskENTER_CRITICAL();
3482:..\FreeRTOS\Source/tasks.c **** 			{
3483:..\FreeRTOS\Source/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3484:..\FreeRTOS\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3485:..\FreeRTOS\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3486:..\FreeRTOS\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3487:..\FreeRTOS\Source/tasks.c **** 			}
3488:..\FreeRTOS\Source/tasks.c **** 			taskEXIT_CRITICAL();
3489:..\FreeRTOS\Source/tasks.c **** 
3490:..\FreeRTOS\Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3491:..\FreeRTOS\Source/tasks.c **** 		}
3492:..\FreeRTOS\Source/tasks.c **** 	}
3493:..\FreeRTOS\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3494:..\FreeRTOS\Source/tasks.c **** }
3495:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3496:..\FreeRTOS\Source/tasks.c **** 
3497:..\FreeRTOS\Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3498:..\FreeRTOS\Source/tasks.c **** 
3499:..\FreeRTOS\Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 64


3500:..\FreeRTOS\Source/tasks.c **** 	{
3501:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
3502:..\FreeRTOS\Source/tasks.c **** 
3503:..\FreeRTOS\Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3504:..\FreeRTOS\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3505:..\FreeRTOS\Source/tasks.c **** 
3506:..\FreeRTOS\Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3507:..\FreeRTOS\Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3508:..\FreeRTOS\Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3509:..\FreeRTOS\Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3510:..\FreeRTOS\Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3511:..\FreeRTOS\Source/tasks.c **** 
3512:..\FreeRTOS\Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3513:..\FreeRTOS\Source/tasks.c **** 		{
3514:..\FreeRTOS\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3515:..\FreeRTOS\Source/tasks.c **** 		}
3516:..\FreeRTOS\Source/tasks.c **** 		#else
3517:..\FreeRTOS\Source/tasks.c **** 		{
3518:..\FreeRTOS\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3519:..\FreeRTOS\Source/tasks.c **** 		}
3520:..\FreeRTOS\Source/tasks.c **** 		#endif
3521:..\FreeRTOS\Source/tasks.c **** 
3522:..\FreeRTOS\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3523:..\FreeRTOS\Source/tasks.c **** 		{
3524:..\FreeRTOS\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3525:..\FreeRTOS\Source/tasks.c **** 		}
3526:..\FreeRTOS\Source/tasks.c **** 		#else
3527:..\FreeRTOS\Source/tasks.c **** 		{
3528:..\FreeRTOS\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3529:..\FreeRTOS\Source/tasks.c **** 		}
3530:..\FreeRTOS\Source/tasks.c **** 		#endif
3531:..\FreeRTOS\Source/tasks.c **** 
3532:..\FreeRTOS\Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3533:..\FreeRTOS\Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3534:..\FreeRTOS\Source/tasks.c **** 		state is just set to whatever is passed in. */
3535:..\FreeRTOS\Source/tasks.c **** 		if( eState != eInvalid )
3536:..\FreeRTOS\Source/tasks.c **** 		{
3537:..\FreeRTOS\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3538:..\FreeRTOS\Source/tasks.c **** 			{
3539:..\FreeRTOS\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3540:..\FreeRTOS\Source/tasks.c **** 			}
3541:..\FreeRTOS\Source/tasks.c **** 			else
3542:..\FreeRTOS\Source/tasks.c **** 			{
3543:..\FreeRTOS\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3544:..\FreeRTOS\Source/tasks.c **** 
3545:..\FreeRTOS\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3546:..\FreeRTOS\Source/tasks.c **** 				{
3547:..\FreeRTOS\Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3548:..\FreeRTOS\Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3549:..\FreeRTOS\Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3550:..\FreeRTOS\Source/tasks.c **** 					if( eState == eSuspended )
3551:..\FreeRTOS\Source/tasks.c **** 					{
3552:..\FreeRTOS\Source/tasks.c **** 						vTaskSuspendAll();
3553:..\FreeRTOS\Source/tasks.c **** 						{
3554:..\FreeRTOS\Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3555:..\FreeRTOS\Source/tasks.c **** 							{
3556:..\FreeRTOS\Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 65


3557:..\FreeRTOS\Source/tasks.c **** 							}
3558:..\FreeRTOS\Source/tasks.c **** 						}
3559:..\FreeRTOS\Source/tasks.c **** 						( void ) xTaskResumeAll();
3560:..\FreeRTOS\Source/tasks.c **** 					}
3561:..\FreeRTOS\Source/tasks.c **** 				}
3562:..\FreeRTOS\Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3563:..\FreeRTOS\Source/tasks.c **** 			}
3564:..\FreeRTOS\Source/tasks.c **** 		}
3565:..\FreeRTOS\Source/tasks.c **** 		else
3566:..\FreeRTOS\Source/tasks.c **** 		{
3567:..\FreeRTOS\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3568:..\FreeRTOS\Source/tasks.c **** 		}
3569:..\FreeRTOS\Source/tasks.c **** 
3570:..\FreeRTOS\Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3571:..\FreeRTOS\Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3572:..\FreeRTOS\Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3573:..\FreeRTOS\Source/tasks.c **** 		{
3574:..\FreeRTOS\Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3575:..\FreeRTOS\Source/tasks.c **** 			{
3576:..\FreeRTOS\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3577:..\FreeRTOS\Source/tasks.c **** 			}
3578:..\FreeRTOS\Source/tasks.c **** 			#else
3579:..\FreeRTOS\Source/tasks.c **** 			{
3580:..\FreeRTOS\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3581:..\FreeRTOS\Source/tasks.c **** 			}
3582:..\FreeRTOS\Source/tasks.c **** 			#endif
3583:..\FreeRTOS\Source/tasks.c **** 		}
3584:..\FreeRTOS\Source/tasks.c **** 		else
3585:..\FreeRTOS\Source/tasks.c **** 		{
3586:..\FreeRTOS\Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3587:..\FreeRTOS\Source/tasks.c **** 		}
3588:..\FreeRTOS\Source/tasks.c **** 	}
3589:..\FreeRTOS\Source/tasks.c **** 
3590:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3591:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3592:..\FreeRTOS\Source/tasks.c **** 
3593:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3594:..\FreeRTOS\Source/tasks.c **** 
3595:..\FreeRTOS\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3596:..\FreeRTOS\Source/tasks.c **** 	{
3597:..\FreeRTOS\Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3598:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxTask = 0;
3599:..\FreeRTOS\Source/tasks.c **** 
3600:..\FreeRTOS\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3601:..\FreeRTOS\Source/tasks.c **** 		{
3602:..\FreeRTOS\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3603:..\FreeRTOS\Source/tasks.c **** 
3604:..\FreeRTOS\Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3605:..\FreeRTOS\Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3606:..\FreeRTOS\Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3607:..\FreeRTOS\Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3608:..\FreeRTOS\Source/tasks.c **** 			do
3609:..\FreeRTOS\Source/tasks.c **** 			{
3610:..\FreeRTOS\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3611:..\FreeRTOS\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3612:..\FreeRTOS\Source/tasks.c **** 				uxTask++;
3613:..\FreeRTOS\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 66


3614:..\FreeRTOS\Source/tasks.c **** 		}
3615:..\FreeRTOS\Source/tasks.c **** 		else
3616:..\FreeRTOS\Source/tasks.c **** 		{
3617:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3618:..\FreeRTOS\Source/tasks.c **** 		}
3619:..\FreeRTOS\Source/tasks.c **** 
3620:..\FreeRTOS\Source/tasks.c **** 		return uxTask;
3621:..\FreeRTOS\Source/tasks.c **** 	}
3622:..\FreeRTOS\Source/tasks.c **** 
3623:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3624:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3625:..\FreeRTOS\Source/tasks.c **** 
3626:..\FreeRTOS\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3627:..\FreeRTOS\Source/tasks.c **** 
3628:..\FreeRTOS\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3629:..\FreeRTOS\Source/tasks.c **** 	{
  92              		.loc 1 3629 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97              	.LVL8:
3630:..\FreeRTOS\Source/tasks.c **** 	uint32_t ulCount = 0U;
  98              		.loc 1 3630 0
  99 0000 0023     		movs	r3, #0
3631:..\FreeRTOS\Source/tasks.c **** 
3632:..\FreeRTOS\Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
 100              		.loc 1 3632 0
 101 0002 01E0     		b	.L13
 102              	.LVL9:
 103              	.L14:
3633:..\FreeRTOS\Source/tasks.c **** 		{
3634:..\FreeRTOS\Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
 104              		.loc 1 3634 0
 105 0004 0130     		adds	r0, r0, #1
 106              	.LVL10:
3635:..\FreeRTOS\Source/tasks.c **** 			ulCount++;
 107              		.loc 1 3635 0
 108 0006 0133     		adds	r3, r3, #1
 109              	.LVL11:
 110              	.L13:
3632:..\FreeRTOS\Source/tasks.c **** 		{
 111              		.loc 1 3632 0
 112 0008 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 113 000a A52A     		cmp	r2, #165
 114 000c FAD0     		beq	.L14
 115              	.LVL12:
3636:..\FreeRTOS\Source/tasks.c **** 		}
3637:..\FreeRTOS\Source/tasks.c **** 
3638:..\FreeRTOS\Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3639:..\FreeRTOS\Source/tasks.c **** 
3640:..\FreeRTOS\Source/tasks.c **** 		return ( uint16_t ) ulCount;
3641:..\FreeRTOS\Source/tasks.c **** 	}
 116              		.loc 1 3641 0
 117 000e C3F38F00 		ubfx	r0, r3, #2, #16
 118              	.LVL13:
 119 0012 7047     		bx	lr
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 67


 120              		.cfi_endproc
 121              	.LFE109:
 122              		.size	prvTaskCheckFreeStackSpace, .-prvTaskCheckFreeStackSpace
 123              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 124              		.align	2
 125              		.thumb
 126              		.thumb_func
 127              		.type	prvResetNextTaskUnblockTime, %function
 128              	prvResetNextTaskUnblockTime:
 129              	.LFB112:
3642:..\FreeRTOS\Source/tasks.c **** 
3643:..\FreeRTOS\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3644:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3645:..\FreeRTOS\Source/tasks.c **** 
3646:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3647:..\FreeRTOS\Source/tasks.c **** 
3648:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3649:..\FreeRTOS\Source/tasks.c **** 	{
3650:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
3651:..\FreeRTOS\Source/tasks.c **** 	uint8_t *pucEndOfStack;
3652:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxReturn;
3653:..\FreeRTOS\Source/tasks.c **** 
3654:..\FreeRTOS\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3655:..\FreeRTOS\Source/tasks.c **** 
3656:..\FreeRTOS\Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3657:..\FreeRTOS\Source/tasks.c **** 		{
3658:..\FreeRTOS\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3659:..\FreeRTOS\Source/tasks.c **** 		}
3660:..\FreeRTOS\Source/tasks.c **** 		#else
3661:..\FreeRTOS\Source/tasks.c **** 		{
3662:..\FreeRTOS\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3663:..\FreeRTOS\Source/tasks.c **** 		}
3664:..\FreeRTOS\Source/tasks.c **** 		#endif
3665:..\FreeRTOS\Source/tasks.c **** 
3666:..\FreeRTOS\Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3667:..\FreeRTOS\Source/tasks.c **** 
3668:..\FreeRTOS\Source/tasks.c **** 		return uxReturn;
3669:..\FreeRTOS\Source/tasks.c **** 	}
3670:..\FreeRTOS\Source/tasks.c **** 
3671:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3672:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3673:..\FreeRTOS\Source/tasks.c **** 
3674:..\FreeRTOS\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3675:..\FreeRTOS\Source/tasks.c **** 
3676:..\FreeRTOS\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3677:..\FreeRTOS\Source/tasks.c **** 	{
3678:..\FreeRTOS\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3679:..\FreeRTOS\Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3680:..\FreeRTOS\Source/tasks.c **** 		want to allocate and clean RAM statically. */
3681:..\FreeRTOS\Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3682:..\FreeRTOS\Source/tasks.c **** 
3683:..\FreeRTOS\Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3684:..\FreeRTOS\Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3685:..\FreeRTOS\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3686:..\FreeRTOS\Source/tasks.c **** 		{
3687:..\FreeRTOS\Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3688:..\FreeRTOS\Source/tasks.c **** 		}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 68


3689:..\FreeRTOS\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3690:..\FreeRTOS\Source/tasks.c **** 
3691:..\FreeRTOS\Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3692:..\FreeRTOS\Source/tasks.c **** 		{
3693:..\FreeRTOS\Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3694:..\FreeRTOS\Source/tasks.c **** 			the stack and TCB. */
3695:..\FreeRTOS\Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3696:..\FreeRTOS\Source/tasks.c **** 			vPortFree( pxTCB );
3697:..\FreeRTOS\Source/tasks.c **** 		}
3698:..\FreeRTOS\Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
3699:..\FreeRTOS\Source/tasks.c **** 		{
3700:..\FreeRTOS\Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3701:..\FreeRTOS\Source/tasks.c **** 			check what was statically allocated before trying to free the
3702:..\FreeRTOS\Source/tasks.c **** 			memory. */
3703:..\FreeRTOS\Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3704:..\FreeRTOS\Source/tasks.c **** 			{
3705:..\FreeRTOS\Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3706:..\FreeRTOS\Source/tasks.c **** 				must be freed. */
3707:..\FreeRTOS\Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3708:..\FreeRTOS\Source/tasks.c **** 				vPortFree( pxTCB );
3709:..\FreeRTOS\Source/tasks.c **** 			}
3710:..\FreeRTOS\Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3711:..\FreeRTOS\Source/tasks.c **** 			{
3712:..\FreeRTOS\Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3713:..\FreeRTOS\Source/tasks.c **** 				only memory that must be freed. */
3714:..\FreeRTOS\Source/tasks.c **** 				vPortFree( pxTCB );
3715:..\FreeRTOS\Source/tasks.c **** 			}
3716:..\FreeRTOS\Source/tasks.c **** 			else
3717:..\FreeRTOS\Source/tasks.c **** 			{
3718:..\FreeRTOS\Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3719:..\FreeRTOS\Source/tasks.c **** 				nothing needs to be freed. */
3720:..\FreeRTOS\Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3721:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3722:..\FreeRTOS\Source/tasks.c **** 			}
3723:..\FreeRTOS\Source/tasks.c **** 		}
3724:..\FreeRTOS\Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3725:..\FreeRTOS\Source/tasks.c **** 	}
3726:..\FreeRTOS\Source/tasks.c **** 
3727:..\FreeRTOS\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3728:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3729:..\FreeRTOS\Source/tasks.c **** 
3730:..\FreeRTOS\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3731:..\FreeRTOS\Source/tasks.c **** {
 130              		.loc 1 3731 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
3732:..\FreeRTOS\Source/tasks.c **** TCB_t *pxTCB;
3733:..\FreeRTOS\Source/tasks.c **** 
3734:..\FreeRTOS\Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 135              		.loc 1 3734 0
 136 0000 094B     		ldr	r3, .L20
 137 0002 9B6A     		ldr	r3, [r3, #40]
 138 0004 1B68     		ldr	r3, [r3]
 139 0006 0BB9     		cbnz	r3, .L19
 140 0008 0123     		movs	r3, #1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 69


 141 000a 00E0     		b	.L16
 142              	.L19:
 143 000c 0023     		movs	r3, #0
 144              	.L16:
 145              		.loc 1 3734 0 is_stmt 0 discriminator 4
 146 000e 23B1     		cbz	r3, .L17
3735:..\FreeRTOS\Source/tasks.c **** 	{
3736:..\FreeRTOS\Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3737:..\FreeRTOS\Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3738:..\FreeRTOS\Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3739:..\FreeRTOS\Source/tasks.c **** 		there is an item in the delayed list. */
3740:..\FreeRTOS\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 147              		.loc 1 3740 0 is_stmt 1
 148 0010 4FF0FF32 		mov	r2, #-1
 149 0014 044B     		ldr	r3, .L20
 150 0016 DA62     		str	r2, [r3, #44]
 151 0018 7047     		bx	lr
 152              	.L17:
3741:..\FreeRTOS\Source/tasks.c **** 	}
3742:..\FreeRTOS\Source/tasks.c **** 	else
3743:..\FreeRTOS\Source/tasks.c **** 	{
3744:..\FreeRTOS\Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3745:..\FreeRTOS\Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3746:..\FreeRTOS\Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3747:..\FreeRTOS\Source/tasks.c **** 		from the Blocked state. */
3748:..\FreeRTOS\Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 153              		.loc 1 3748 0
 154 001a 034B     		ldr	r3, .L20
 155 001c 9A6A     		ldr	r2, [r3, #40]
 156 001e D268     		ldr	r2, [r2, #12]
 157 0020 D268     		ldr	r2, [r2, #12]
 158              	.LVL14:
3749:..\FreeRTOS\Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 159              		.loc 1 3749 0
 160 0022 5268     		ldr	r2, [r2, #4]
 161              	.LVL15:
 162 0024 DA62     		str	r2, [r3, #44]
 163 0026 7047     		bx	lr
 164              	.L21:
 165              		.align	2
 166              	.L20:
 167 0028 00000000 		.word	.LANCHOR0
 168              		.cfi_endproc
 169              	.LFE112:
 170              		.size	prvResetNextTaskUnblockTime, .-prvResetNextTaskUnblockTime
 171              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 172              		.align	2
 173              		.thumb
 174              		.thumb_func
 175              		.type	prvInitialiseNewTask, %function
 176              	prvInitialiseNewTask:
 177              	.LFB70:
 831:..\FreeRTOS\Source/tasks.c **** StackType_t *pxTopOfStack;
 178              		.loc 1 831 0
 179              		.cfi_startproc
 180              		@ args = 16, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 70


 182              	.LVL16:
 183 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 184              		.cfi_def_cfa_offset 32
 185              		.cfi_offset 4, -32
 186              		.cfi_offset 5, -28
 187              		.cfi_offset 6, -24
 188              		.cfi_offset 7, -20
 189              		.cfi_offset 8, -16
 190              		.cfi_offset 9, -12
 191              		.cfi_offset 10, -8
 192              		.cfi_offset 14, -4
 193 0004 8146     		mov	r9, r0
 194 0006 0D46     		mov	r5, r1
 195 0008 1746     		mov	r7, r2
 196 000a 9A46     		mov	r10, r3
 197 000c 089E     		ldr	r6, [sp, #32]
 198 000e DDF82480 		ldr	r8, [sp, #36]
 199 0012 0A9C     		ldr	r4, [sp, #40]
 853:..\FreeRTOS\Source/tasks.c **** 	}
 200              		.loc 1 853 0
 201 0014 9200     		lsls	r2, r2, #2
 202              	.LVL17:
 203 0016 A521     		movs	r1, #165
 204              	.LVL18:
 205 0018 206B     		ldr	r0, [r4, #48]
 206              	.LVL19:
 207 001a FFF7FEFF 		bl	memset
 208              	.LVL20:
 863:..\FreeRTOS\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 209              		.loc 1 863 0
 210 001e 236B     		ldr	r3, [r4, #48]
 211 0020 07F18042 		add	r2, r7, #1073741824
 212 0024 013A     		subs	r2, r2, #1
 213 0026 03EB8207 		add	r7, r3, r2, lsl #2
 214              	.LVL21:
 864:..\FreeRTOS\Source/tasks.c **** 
 215              		.loc 1 864 0
 216 002a 27F00707 		bic	r7, r7, #7
 217              	.LVL22:
 891:..\FreeRTOS\Source/tasks.c **** 	{
 218              		.loc 1 891 0
 219 002e 0023     		movs	r3, #0
 220 0030 06E0     		b	.L23
 221              	.LVL23:
 222              	.L25:
 893:..\FreeRTOS\Source/tasks.c **** 
 223              		.loc 1 893 0
 224 0032 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 225 0034 E218     		adds	r2, r4, r3
 226 0036 82F83410 		strb	r1, [r2, #52]
 898:..\FreeRTOS\Source/tasks.c **** 		{
 227              		.loc 1 898 0
 228 003a EA5C     		ldrb	r2, [r5, r3]	@ zero_extendqisi2
 229 003c 12B1     		cbz	r2, .L24
 891:..\FreeRTOS\Source/tasks.c **** 	{
 230              		.loc 1 891 0 discriminator 2
 231 003e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 71


 232              	.LVL24:
 233              	.L23:
 891:..\FreeRTOS\Source/tasks.c **** 	{
 234              		.loc 1 891 0 is_stmt 0 discriminator 1
 235 0040 0B2B     		cmp	r3, #11
 236 0042 F6D9     		bls	.L25
 237              	.L24:
 910:..\FreeRTOS\Source/tasks.c **** 
 238              		.loc 1 910 0 is_stmt 1
 239 0044 0023     		movs	r3, #0
 240              	.LVL25:
 241 0046 84F83F30 		strb	r3, [r4, #63]
 914:..\FreeRTOS\Source/tasks.c **** 	{
 242              		.loc 1 914 0
 243 004a 042E     		cmp	r6, #4
 244 004c 00D9     		bls	.L26
 916:..\FreeRTOS\Source/tasks.c **** 	}
 245              		.loc 1 916 0
 246 004e 0426     		movs	r6, #4
 247              	.L26:
 248              	.LVL26:
 923:..\FreeRTOS\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 249              		.loc 1 923 0
 250 0050 E662     		str	r6, [r4, #44]
 926:..\FreeRTOS\Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 251              		.loc 1 926 0
 252 0052 A664     		str	r6, [r4, #72]
 927:..\FreeRTOS\Source/tasks.c **** 	}
 253              		.loc 1 927 0
 254 0054 0025     		movs	r5, #0
 255              	.LVL27:
 256 0056 E564     		str	r5, [r4, #76]
 931:..\FreeRTOS\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 257              		.loc 1 931 0
 258 0058 201D     		adds	r0, r4, #4
 259 005a FFF7FEFF 		bl	vListInitialiseItem
 260              	.LVL28:
 932:..\FreeRTOS\Source/tasks.c **** 
 261              		.loc 1 932 0
 262 005e 04F11800 		add	r0, r4, #24
 263 0062 FFF7FEFF 		bl	vListInitialiseItem
 264              	.LVL29:
 936:..\FreeRTOS\Source/tasks.c **** 
 265              		.loc 1 936 0
 266 0066 2461     		str	r4, [r4, #16]
 939:..\FreeRTOS\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 267              		.loc 1 939 0
 268 0068 C6F10506 		rsb	r6, r6, #5
 269              	.LVL30:
 270 006c A661     		str	r6, [r4, #24]
 940:..\FreeRTOS\Source/tasks.c **** 
 271              		.loc 1 940 0
 272 006e 6462     		str	r4, [r4, #36]
 956:..\FreeRTOS\Source/tasks.c **** 	}
 273              		.loc 1 956 0
 274 0070 2565     		str	r5, [r4, #80]
 982:..\FreeRTOS\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 72


 275              		.loc 1 982 0
 276 0072 C4F88054 		str	r5, [r4, #1152]
 983:..\FreeRTOS\Source/tasks.c **** 	}
 277              		.loc 1 983 0
 278 0076 84F88454 		strb	r5, [r4, #1156]
 990:..\FreeRTOS\Source/tasks.c **** 	}
 279              		.loc 1 990 0
 280 007a 4FF48562 		mov	r2, #1064
 281 007e 2946     		mov	r1, r5
 282 0080 04F15800 		add	r0, r4, #88
 283 0084 FFF7FEFF 		bl	memset
 284              	.LVL31:
 285 0088 04F55173 		add	r3, r4, #836
 286 008c E365     		str	r3, [r4, #92]
 287 008e 04F56B73 		add	r3, r4, #940
 288 0092 2366     		str	r3, [r4, #96]
 289 0094 04F21443 		addw	r3, r4, #1044
 290 0098 6366     		str	r3, [r4, #100]
 291 009a 184B     		ldr	r3, .L30
 292 009c C4F88C30 		str	r3, [r4, #140]
 293 00a0 04F58073 		add	r3, r4, #256
 294 00a4 0120     		movs	r0, #1
 295 00a6 0021     		movs	r1, #0
 296 00a8 C3E90001 		strd	r0, [r3]
 297 00ac 43F20E33 		movw	r3, #13070
 298 00b0 A4F80831 		strh	r3, [r4, #264]	@ movhi
 299 00b4 4AF6CD33 		movw	r3, #43981
 300 00b8 A4F80A31 		strh	r3, [r4, #266]	@ movhi
 301 00bc 41F23423 		movw	r3, #4660
 302 00c0 A4F80C31 		strh	r3, [r4, #268]	@ movhi
 303 00c4 4EF26D63 		movw	r3, #58989
 304 00c8 A4F80E31 		strh	r3, [r4, #270]	@ movhi
 305 00cc 4DF6EC63 		movw	r3, #57068
 306 00d0 A4F81031 		strh	r3, [r4, #272]	@ movhi
 307 00d4 0523     		movs	r3, #5
 308 00d6 A4F81231 		strh	r3, [r4, #274]	@ movhi
 309 00da 0B23     		movs	r3, #11
 310 00dc A4F81431 		strh	r3, [r4, #276]	@ movhi
1010:..\FreeRTOS\Source/tasks.c **** 	}
 311              		.loc 1 1010 0
 312 00e0 5246     		mov	r2, r10
 313 00e2 4946     		mov	r1, r9
 314 00e4 3846     		mov	r0, r7
 315 00e6 FFF7FEFF 		bl	pxPortInitialiseStack
 316              	.LVL32:
 317 00ea 2060     		str	r0, [r4]
1014:..\FreeRTOS\Source/tasks.c **** 	{
 318              		.loc 1 1014 0
 319 00ec B8F1000F 		cmp	r8, #0
 320 00f0 01D0     		beq	.L22
1018:..\FreeRTOS\Source/tasks.c **** 	}
 321              		.loc 1 1018 0
 322 00f2 C8F80040 		str	r4, [r8]
 323              	.L22:
 324 00f6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 325              	.LVL33:
 326              	.L31:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 73


 327 00fa 00BF     		.align	2
 328              	.L30:
 329 00fc 00000000 		.word	.LC0
 330              		.cfi_endproc
 331              	.LFE70:
 332              		.size	prvInitialiseNewTask, .-prvInitialiseNewTask
 333              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 334              		.align	2
 335              		.thumb
 336              		.thumb_func
 337              		.type	prvInitialiseTaskLists, %function
 338              	prvInitialiseTaskLists:
 339              	.LFB105:
3437:..\FreeRTOS\Source/tasks.c **** UBaseType_t uxPriority;
 340              		.loc 1 3437 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344 0000 70B5     		push	{r4, r5, r6, lr}
 345              		.cfi_def_cfa_offset 16
 346              		.cfi_offset 4, -16
 347              		.cfi_offset 5, -12
 348              		.cfi_offset 6, -8
 349              		.cfi_offset 14, -4
 350              	.LVL34:
3440:..\FreeRTOS\Source/tasks.c **** 	{
 351              		.loc 1 3440 0
 352 0002 0024     		movs	r4, #0
 353 0004 07E0     		b	.L33
 354              	.LVL35:
 355              	.L34:
3442:..\FreeRTOS\Source/tasks.c **** 	}
 356              		.loc 1 3442 0 discriminator 3
 357 0006 04EB8402 		add	r2, r4, r4, lsl #2
 358 000a 9300     		lsls	r3, r2, #2
 359 000c 1048     		ldr	r0, .L36
 360 000e 1844     		add	r0, r0, r3
 361 0010 FFF7FEFF 		bl	vListInitialise
 362              	.LVL36:
3440:..\FreeRTOS\Source/tasks.c **** 	{
 363              		.loc 1 3440 0 discriminator 3
 364 0014 0134     		adds	r4, r4, #1
 365              	.LVL37:
 366              	.L33:
3440:..\FreeRTOS\Source/tasks.c **** 	{
 367              		.loc 1 3440 0 is_stmt 0 discriminator 1
 368 0016 042C     		cmp	r4, #4
 369 0018 F5D9     		bls	.L34
3445:..\FreeRTOS\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 370              		.loc 1 3445 0 is_stmt 1
 371 001a 0E4C     		ldr	r4, .L36+4
 372              	.LVL38:
 373 001c 04F19406 		add	r6, r4, #148
 374 0020 3046     		mov	r0, r6
 375 0022 FFF7FEFF 		bl	vListInitialise
 376              	.LVL39:
3446:..\FreeRTOS\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 74


 377              		.loc 1 3446 0
 378 0026 04F1A805 		add	r5, r4, #168
 379 002a 2846     		mov	r0, r5
 380 002c FFF7FEFF 		bl	vListInitialise
 381              	.LVL40:
3447:..\FreeRTOS\Source/tasks.c **** 
 382              		.loc 1 3447 0
 383 0030 04F11400 		add	r0, r4, #20
 384 0034 FFF7FEFF 		bl	vListInitialise
 385              	.LVL41:
3451:..\FreeRTOS\Source/tasks.c **** 	}
 386              		.loc 1 3451 0
 387 0038 04F1BC00 		add	r0, r4, #188
 388 003c FFF7FEFF 		bl	vListInitialise
 389              	.LVL42:
3457:..\FreeRTOS\Source/tasks.c **** 	}
 390              		.loc 1 3457 0
 391 0040 2046     		mov	r0, r4
 392 0042 FFF7FEFF 		bl	vListInitialise
 393              	.LVL43:
3463:..\FreeRTOS\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 394              		.loc 1 3463 0
 395 0046 A662     		str	r6, [r4, #40]
3464:..\FreeRTOS\Source/tasks.c **** }
 396              		.loc 1 3464 0
 397 0048 C4F8D050 		str	r5, [r4, #208]
 398 004c 70BD     		pop	{r4, r5, r6, pc}
 399              	.L37:
 400 004e 00BF     		.align	2
 401              	.L36:
 402 0050 30000000 		.word	.LANCHOR0+48
 403 0054 00000000 		.word	.LANCHOR0
 404              		.cfi_endproc
 405              	.LFE105:
 406              		.size	prvInitialiseTaskLists, .-prvInitialiseTaskLists
 407              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 408              		.align	2
 409              		.thumb
 410              		.thumb_func
 411              		.type	prvAddNewTaskToReadyList, %function
 412              	prvAddNewTaskToReadyList:
 413              	.LFB71:
1028:..\FreeRTOS\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 414              		.loc 1 1028 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              	.LVL44:
 419 0000 38B5     		push	{r3, r4, r5, lr}
 420              		.cfi_def_cfa_offset 16
 421              		.cfi_offset 3, -16
 422              		.cfi_offset 4, -12
 423              		.cfi_offset 5, -8
 424              		.cfi_offset 14, -4
 425 0002 0546     		mov	r5, r0
1031:..\FreeRTOS\Source/tasks.c **** 	{
 426              		.loc 1 1031 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 75


 427 0004 FFF7FEFF 		bl	vPortEnterCritical
 428              	.LVL45:
1033:..\FreeRTOS\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 429              		.loc 1 1033 0
 430 0008 264B     		ldr	r3, .L43
 431 000a D3F8D420 		ldr	r2, [r3, #212]
 432 000e 0132     		adds	r2, r2, #1
 433 0010 C3F8D420 		str	r2, [r3, #212]
1034:..\FreeRTOS\Source/tasks.c **** 		{
 434              		.loc 1 1034 0
 435 0014 D3F8D830 		ldr	r3, [r3, #216]
 436 0018 4BB9     		cbnz	r3, .L39
1038:..\FreeRTOS\Source/tasks.c **** 
 437              		.loc 1 1038 0
 438 001a 224B     		ldr	r3, .L43
 439 001c C3F8D850 		str	r5, [r3, #216]
1040:..\FreeRTOS\Source/tasks.c **** 			{
 440              		.loc 1 1040 0
 441 0020 D3F8D430 		ldr	r3, [r3, #212]
 442 0024 012B     		cmp	r3, #1
 443 0026 10D1     		bne	.L40
1045:..\FreeRTOS\Source/tasks.c **** 			}
 444              		.loc 1 1045 0
 445 0028 FFF7FEFF 		bl	prvInitialiseTaskLists
 446              	.LVL46:
 447 002c 0DE0     		b	.L40
 448              	.L39:
1057:..\FreeRTOS\Source/tasks.c **** 			{
 449              		.loc 1 1057 0
 450 002e 1D4B     		ldr	r3, .L43
 451 0030 D3F8DC30 		ldr	r3, [r3, #220]
 452 0034 4BB9     		cbnz	r3, .L40
1059:..\FreeRTOS\Source/tasks.c **** 				{
 453              		.loc 1 1059 0
 454 0036 1B4B     		ldr	r3, .L43
 455 0038 D3F8D830 		ldr	r3, [r3, #216]
 456 003c DA6A     		ldr	r2, [r3, #44]
 457 003e EB6A     		ldr	r3, [r5, #44]
 458 0040 9A42     		cmp	r2, r3
 459 0042 02D8     		bhi	.L40
1061:..\FreeRTOS\Source/tasks.c **** 				}
 460              		.loc 1 1061 0
 461 0044 174B     		ldr	r3, .L43
 462 0046 C3F8D850 		str	r5, [r3, #216]
 463              	.L40:
1074:..\FreeRTOS\Source/tasks.c **** 
 464              		.loc 1 1074 0
 465 004a 164C     		ldr	r4, .L43
 466 004c D4F8E030 		ldr	r3, [r4, #224]
 467 0050 0133     		adds	r3, r3, #1
 468 0052 C4F8E030 		str	r3, [r4, #224]
1079:..\FreeRTOS\Source/tasks.c **** 		}
 469              		.loc 1 1079 0
 470 0056 2B64     		str	r3, [r5, #64]
1084:..\FreeRTOS\Source/tasks.c **** 
 471              		.loc 1 1084 0
 472 0058 EB6A     		ldr	r3, [r5, #44]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 76


 473 005a 0122     		movs	r2, #1
 474 005c 02FA03F1 		lsl	r1, r2, r3
 475 0060 D4F8E420 		ldr	r2, [r4, #228]
 476 0064 0A43     		orrs	r2, r2, r1
 477 0066 C4F8E420 		str	r2, [r4, #228]
 478 006a 04F13000 		add	r0, r4, #48
 479 006e 03EB8303 		add	r3, r3, r3, lsl #2
 480 0072 9A00     		lsls	r2, r3, #2
 481 0074 291D     		adds	r1, r5, #4
 482 0076 1044     		add	r0, r0, r2
 483 0078 FFF7FEFF 		bl	vListInsertEnd
 484              	.LVL47:
1088:..\FreeRTOS\Source/tasks.c **** 
 485              		.loc 1 1088 0
 486 007c FFF7FEFF 		bl	vPortExitCritical
 487              	.LVL48:
1090:..\FreeRTOS\Source/tasks.c **** 	{
 488              		.loc 1 1090 0
 489 0080 D4F8DC30 		ldr	r3, [r4, #220]
 490 0084 6BB1     		cbz	r3, .L38
1094:..\FreeRTOS\Source/tasks.c **** 		{
 491              		.loc 1 1094 0
 492 0086 D4F8D830 		ldr	r3, [r4, #216]
 493 008a DA6A     		ldr	r2, [r3, #44]
 494 008c EB6A     		ldr	r3, [r5, #44]
 495 008e 9A42     		cmp	r2, r3
 496 0090 07D2     		bcs	.L38
1096:..\FreeRTOS\Source/tasks.c **** 		}
 497              		.loc 1 1096 0
 498 0092 4FF08052 		mov	r2, #268435456
 499 0096 044B     		ldr	r3, .L43+4
 500 0098 1A60     		str	r2, [r3]
 501              		.syntax unified
 502              	@ 1096 "..\FreeRTOS\Source\tasks.c" 1
 503 009a BFF34F8F 		dsb
 504              	@ 0 "" 2
 505              	@ 1096 "..\FreeRTOS\Source\tasks.c" 1
 506 009e BFF36F8F 		isb
 507              	@ 0 "" 2
 508              		.thumb
 509              		.syntax unified
 510              	.L38:
 511 00a2 38BD     		pop	{r3, r4, r5, pc}
 512              	.LVL49:
 513              	.L44:
 514              		.align	2
 515              	.L43:
 516 00a4 00000000 		.word	.LANCHOR0
 517 00a8 04ED00E0 		.word	-536810236
 518              		.cfi_endproc
 519              	.LFE71:
 520              		.size	prvAddNewTaskToReadyList, .-prvAddNewTaskToReadyList
 521              		.section	.text.prvDeleteTCB,"ax",%progbits
 522              		.align	2
 523              		.thumb
 524              		.thumb_func
 525              		.type	prvDeleteTCB, %function
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 77


 526              	prvDeleteTCB:
 527              	.LFB111:
3677:..\FreeRTOS\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 528              		.loc 1 3677 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532              	.LVL50:
 533 0000 10B5     		push	{r4, lr}
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 4, -8
 536              		.cfi_offset 14, -4
 537 0002 0446     		mov	r4, r0
3687:..\FreeRTOS\Source/tasks.c **** 		}
 538              		.loc 1 3687 0
 539 0004 5830     		adds	r0, r0, #88
 540              	.LVL51:
 541 0006 FFF7FEFF 		bl	_reclaim_reent
 542              	.LVL52:
3695:..\FreeRTOS\Source/tasks.c **** 			vPortFree( pxTCB );
 543              		.loc 1 3695 0
 544 000a 206B     		ldr	r0, [r4, #48]
 545 000c FFF7FEFF 		bl	vPortFree
 546              	.LVL53:
3696:..\FreeRTOS\Source/tasks.c **** 		}
 547              		.loc 1 3696 0
 548 0010 2046     		mov	r0, r4
 549 0012 FFF7FEFF 		bl	vPortFree
 550              	.LVL54:
 551 0016 10BD     		pop	{r4, pc}
 552              		.cfi_endproc
 553              	.LFE111:
 554              		.size	prvDeleteTCB, .-prvDeleteTCB
 555              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 556              		.align	2
 557              		.thumb
 558              		.thumb_func
 559              		.type	prvCheckTasksWaitingTermination, %function
 560              	prvCheckTasksWaitingTermination:
 561              	.LFB106:
3469:..\FreeRTOS\Source/tasks.c **** 
 562              		.loc 1 3469 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566 0000 38B5     		push	{r3, r4, r5, lr}
 567              		.cfi_def_cfa_offset 16
 568              		.cfi_offset 3, -16
 569              		.cfi_offset 4, -12
 570              		.cfi_offset 5, -8
 571              		.cfi_offset 14, -4
 572              	.LBB27:
3479:..\FreeRTOS\Source/tasks.c **** 		{
 573              		.loc 1 3479 0
 574 0002 17E0     		b	.L48
 575              	.L49:
3481:..\FreeRTOS\Source/tasks.c **** 			{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 78


 576              		.loc 1 3481 0
 577 0004 FFF7FEFF 		bl	vPortEnterCritical
 578              	.LVL55:
3483:..\FreeRTOS\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 579              		.loc 1 3483 0
 580 0008 0D4C     		ldr	r4, .L51
 581 000a D4F8C830 		ldr	r3, [r4, #200]
 582 000e DD68     		ldr	r5, [r3, #12]
 583              	.LVL56:
3484:..\FreeRTOS\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 584              		.loc 1 3484 0
 585 0010 281D     		adds	r0, r5, #4
 586 0012 FFF7FEFF 		bl	uxListRemove
 587              	.LVL57:
3485:..\FreeRTOS\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 588              		.loc 1 3485 0
 589 0016 D4F8D430 		ldr	r3, [r4, #212]
 590 001a 013B     		subs	r3, r3, #1
 591 001c C4F8D430 		str	r3, [r4, #212]
3486:..\FreeRTOS\Source/tasks.c **** 			}
 592              		.loc 1 3486 0
 593 0020 D4F8E830 		ldr	r3, [r4, #232]
 594 0024 013B     		subs	r3, r3, #1
 595 0026 C4F8E830 		str	r3, [r4, #232]
3488:..\FreeRTOS\Source/tasks.c **** 
 596              		.loc 1 3488 0
 597 002a FFF7FEFF 		bl	vPortExitCritical
 598              	.LVL58:
3490:..\FreeRTOS\Source/tasks.c **** 		}
 599              		.loc 1 3490 0
 600 002e 2846     		mov	r0, r5
 601 0030 FFF7FEFF 		bl	prvDeleteTCB
 602              	.LVL59:
 603              	.L48:
3479:..\FreeRTOS\Source/tasks.c **** 		{
 604              		.loc 1 3479 0
 605 0034 024B     		ldr	r3, .L51
 606 0036 D3F8E830 		ldr	r3, [r3, #232]
 607 003a 002B     		cmp	r3, #0
 608 003c E2D1     		bne	.L49
 609              	.LBE27:
3494:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 610              		.loc 1 3494 0
 611 003e 38BD     		pop	{r3, r4, r5, pc}
 612              	.L52:
 613              		.align	2
 614              	.L51:
 615 0040 00000000 		.word	.LANCHOR0
 616              		.cfi_endproc
 617              	.LFE106:
 618              		.size	prvCheckTasksWaitingTermination, .-prvCheckTasksWaitingTermination
 619              		.section	.text.prvIdleTask,"ax",%progbits
 620              		.align	2
 621              		.thumb
 622              		.thumb_func
 623              		.type	prvIdleTask, %function
 624              	prvIdleTask:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 79


 625              	.LFB104:
3225:..\FreeRTOS\Source/tasks.c **** 	/* Stop warnings. */
 626              		.loc 1 3225 0
 627              		.cfi_startproc
 628              		@ Volatile: function does not return.
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              	.LVL60:
 632 0000 08B5     		push	{r3, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 3, -8
 635              		.cfi_offset 14, -4
 636              	.LVL61:
 637              	.L54:
3241:..\FreeRTOS\Source/tasks.c **** 
 638              		.loc 1 3241 0 discriminator 1
 639 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 640              	.LVL62:
 641 0006 FCE7     		b	.L54
 642              		.cfi_endproc
 643              	.LFE104:
 644              		.size	prvIdleTask, .-prvIdleTask
 645              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 646              		.align	2
 647              		.thumb
 648              		.thumb_func
 649              		.type	prvAddCurrentTaskToDelayedList, %function
 650              	prvAddCurrentTaskToDelayedList:
 651              	.LFB128:
3750:..\FreeRTOS\Source/tasks.c **** 	}
3751:..\FreeRTOS\Source/tasks.c **** }
3752:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3753:..\FreeRTOS\Source/tasks.c **** 
3754:..\FreeRTOS\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3755:..\FreeRTOS\Source/tasks.c **** 
3756:..\FreeRTOS\Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3757:..\FreeRTOS\Source/tasks.c **** 	{
3758:..\FreeRTOS\Source/tasks.c **** 	TaskHandle_t xReturn;
3759:..\FreeRTOS\Source/tasks.c **** 
3760:..\FreeRTOS\Source/tasks.c **** 		/* A critical section is not required as this is not called from
3761:..\FreeRTOS\Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3762:..\FreeRTOS\Source/tasks.c **** 		individual execution thread. */
3763:..\FreeRTOS\Source/tasks.c **** 		xReturn = pxCurrentTCB;
3764:..\FreeRTOS\Source/tasks.c **** 
3765:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
3766:..\FreeRTOS\Source/tasks.c **** 	}
3767:..\FreeRTOS\Source/tasks.c **** 
3768:..\FreeRTOS\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3769:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3770:..\FreeRTOS\Source/tasks.c **** 
3771:..\FreeRTOS\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3772:..\FreeRTOS\Source/tasks.c **** 
3773:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3774:..\FreeRTOS\Source/tasks.c **** 	{
3775:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xReturn;
3776:..\FreeRTOS\Source/tasks.c **** 
3777:..\FreeRTOS\Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 80


3778:..\FreeRTOS\Source/tasks.c **** 		{
3779:..\FreeRTOS\Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3780:..\FreeRTOS\Source/tasks.c **** 		}
3781:..\FreeRTOS\Source/tasks.c **** 		else
3782:..\FreeRTOS\Source/tasks.c **** 		{
3783:..\FreeRTOS\Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3784:..\FreeRTOS\Source/tasks.c **** 			{
3785:..\FreeRTOS\Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3786:..\FreeRTOS\Source/tasks.c **** 			}
3787:..\FreeRTOS\Source/tasks.c **** 			else
3788:..\FreeRTOS\Source/tasks.c **** 			{
3789:..\FreeRTOS\Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3790:..\FreeRTOS\Source/tasks.c **** 			}
3791:..\FreeRTOS\Source/tasks.c **** 		}
3792:..\FreeRTOS\Source/tasks.c **** 
3793:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
3794:..\FreeRTOS\Source/tasks.c **** 	}
3795:..\FreeRTOS\Source/tasks.c **** 
3796:..\FreeRTOS\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3797:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3798:..\FreeRTOS\Source/tasks.c **** 
3799:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3800:..\FreeRTOS\Source/tasks.c **** 
3801:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3802:..\FreeRTOS\Source/tasks.c **** 	{
3803:..\FreeRTOS\Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
3804:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3805:..\FreeRTOS\Source/tasks.c **** 
3806:..\FreeRTOS\Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3807:..\FreeRTOS\Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3808:..\FreeRTOS\Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3809:..\FreeRTOS\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3810:..\FreeRTOS\Source/tasks.c **** 		{
3811:..\FreeRTOS\Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3812:..\FreeRTOS\Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3813:..\FreeRTOS\Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3814:..\FreeRTOS\Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3815:..\FreeRTOS\Source/tasks.c **** 			{
3816:..\FreeRTOS\Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3817:..\FreeRTOS\Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3818:..\FreeRTOS\Source/tasks.c **** 				not being used for anything else. */
3819:..\FreeRTOS\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3820:..\FreeRTOS\Source/tasks.c **** 				{
3821:..\FreeRTOS\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3822:..\FreeRTOS\Source/tasks.c **** 				}
3823:..\FreeRTOS\Source/tasks.c **** 				else
3824:..\FreeRTOS\Source/tasks.c **** 				{
3825:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3826:..\FreeRTOS\Source/tasks.c **** 				}
3827:..\FreeRTOS\Source/tasks.c **** 
3828:..\FreeRTOS\Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3829:..\FreeRTOS\Source/tasks.c **** 				to be moved into a new list. */
3830:..\FreeRTOS\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3831:..\FreeRTOS\Source/tasks.c **** 				{
3832:..\FreeRTOS\Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3833:..\FreeRTOS\Source/tasks.c **** 					{
3834:..\FreeRTOS\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 81


3835:..\FreeRTOS\Source/tasks.c **** 					}
3836:..\FreeRTOS\Source/tasks.c **** 					else
3837:..\FreeRTOS\Source/tasks.c **** 					{
3838:..\FreeRTOS\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3839:..\FreeRTOS\Source/tasks.c **** 					}
3840:..\FreeRTOS\Source/tasks.c **** 
3841:..\FreeRTOS\Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3842:..\FreeRTOS\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3843:..\FreeRTOS\Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3844:..\FreeRTOS\Source/tasks.c **** 				}
3845:..\FreeRTOS\Source/tasks.c **** 				else
3846:..\FreeRTOS\Source/tasks.c **** 				{
3847:..\FreeRTOS\Source/tasks.c **** 					/* Just inherit the priority. */
3848:..\FreeRTOS\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3849:..\FreeRTOS\Source/tasks.c **** 				}
3850:..\FreeRTOS\Source/tasks.c **** 
3851:..\FreeRTOS\Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3852:..\FreeRTOS\Source/tasks.c **** 
3853:..\FreeRTOS\Source/tasks.c **** 				/* Inheritance occurred. */
3854:..\FreeRTOS\Source/tasks.c **** 				xReturn = pdTRUE;
3855:..\FreeRTOS\Source/tasks.c **** 			}
3856:..\FreeRTOS\Source/tasks.c **** 			else
3857:..\FreeRTOS\Source/tasks.c **** 			{
3858:..\FreeRTOS\Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
3859:..\FreeRTOS\Source/tasks.c **** 				{
3860:..\FreeRTOS\Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3861:..\FreeRTOS\Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3862:..\FreeRTOS\Source/tasks.c **** 					current priority of the mutex holder is not lower than the
3863:..\FreeRTOS\Source/tasks.c **** 					priority of the task attempting to take the mutex.
3864:..\FreeRTOS\Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3865:..\FreeRTOS\Source/tasks.c **** 					priority, but inheritance would have occurred if that had
3866:..\FreeRTOS\Source/tasks.c **** 					not been the case. */
3867:..\FreeRTOS\Source/tasks.c **** 					xReturn = pdTRUE;
3868:..\FreeRTOS\Source/tasks.c **** 				}
3869:..\FreeRTOS\Source/tasks.c **** 				else
3870:..\FreeRTOS\Source/tasks.c **** 				{
3871:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3872:..\FreeRTOS\Source/tasks.c **** 				}
3873:..\FreeRTOS\Source/tasks.c **** 			}
3874:..\FreeRTOS\Source/tasks.c **** 		}
3875:..\FreeRTOS\Source/tasks.c **** 		else
3876:..\FreeRTOS\Source/tasks.c **** 		{
3877:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3878:..\FreeRTOS\Source/tasks.c **** 		}
3879:..\FreeRTOS\Source/tasks.c **** 
3880:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
3881:..\FreeRTOS\Source/tasks.c **** 	}
3882:..\FreeRTOS\Source/tasks.c **** 
3883:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3884:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3885:..\FreeRTOS\Source/tasks.c **** 
3886:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3887:..\FreeRTOS\Source/tasks.c **** 
3888:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3889:..\FreeRTOS\Source/tasks.c **** 	{
3890:..\FreeRTOS\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3891:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 82


3892:..\FreeRTOS\Source/tasks.c **** 
3893:..\FreeRTOS\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3894:..\FreeRTOS\Source/tasks.c **** 		{
3895:..\FreeRTOS\Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3896:..\FreeRTOS\Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3897:..\FreeRTOS\Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3898:..\FreeRTOS\Source/tasks.c **** 			be the running state task. */
3899:..\FreeRTOS\Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3900:..\FreeRTOS\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3901:..\FreeRTOS\Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3902:..\FreeRTOS\Source/tasks.c **** 
3903:..\FreeRTOS\Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3904:..\FreeRTOS\Source/tasks.c **** 			task? */
3905:..\FreeRTOS\Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3906:..\FreeRTOS\Source/tasks.c **** 			{
3907:..\FreeRTOS\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3908:..\FreeRTOS\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3909:..\FreeRTOS\Source/tasks.c **** 				{
3910:..\FreeRTOS\Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3911:..\FreeRTOS\Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3912:..\FreeRTOS\Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3913:..\FreeRTOS\Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3914:..\FreeRTOS\Source/tasks.c **** 					the holding task from the ready list. */
3915:..\FreeRTOS\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3916:..\FreeRTOS\Source/tasks.c **** 					{
3917:..\FreeRTOS\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3918:..\FreeRTOS\Source/tasks.c **** 					}
3919:..\FreeRTOS\Source/tasks.c **** 					else
3920:..\FreeRTOS\Source/tasks.c **** 					{
3921:..\FreeRTOS\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3922:..\FreeRTOS\Source/tasks.c **** 					}
3923:..\FreeRTOS\Source/tasks.c **** 
3924:..\FreeRTOS\Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3925:..\FreeRTOS\Source/tasks.c **** 					new	ready list. */
3926:..\FreeRTOS\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3927:..\FreeRTOS\Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3928:..\FreeRTOS\Source/tasks.c **** 
3929:..\FreeRTOS\Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3930:..\FreeRTOS\Source/tasks.c **** 					any other purpose if this task is running, and it must be
3931:..\FreeRTOS\Source/tasks.c **** 					running to give back the mutex. */
3932:..\FreeRTOS\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3933:..\FreeRTOS\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3934:..\FreeRTOS\Source/tasks.c **** 
3935:..\FreeRTOS\Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3936:..\FreeRTOS\Source/tasks.c **** 					This is only actually required in the corner case whereby
3937:..\FreeRTOS\Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3938:..\FreeRTOS\Source/tasks.c **** 					in an order different to that in which they were taken.
3939:..\FreeRTOS\Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3940:..\FreeRTOS\Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3941:..\FreeRTOS\Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3942:..\FreeRTOS\Source/tasks.c **** 					a task is waiting on it or not. */
3943:..\FreeRTOS\Source/tasks.c **** 					xReturn = pdTRUE;
3944:..\FreeRTOS\Source/tasks.c **** 				}
3945:..\FreeRTOS\Source/tasks.c **** 				else
3946:..\FreeRTOS\Source/tasks.c **** 				{
3947:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3948:..\FreeRTOS\Source/tasks.c **** 				}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 83


3949:..\FreeRTOS\Source/tasks.c **** 			}
3950:..\FreeRTOS\Source/tasks.c **** 			else
3951:..\FreeRTOS\Source/tasks.c **** 			{
3952:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3953:..\FreeRTOS\Source/tasks.c **** 			}
3954:..\FreeRTOS\Source/tasks.c **** 		}
3955:..\FreeRTOS\Source/tasks.c **** 		else
3956:..\FreeRTOS\Source/tasks.c **** 		{
3957:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3958:..\FreeRTOS\Source/tasks.c **** 		}
3959:..\FreeRTOS\Source/tasks.c **** 
3960:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
3961:..\FreeRTOS\Source/tasks.c **** 	}
3962:..\FreeRTOS\Source/tasks.c **** 
3963:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3964:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
3965:..\FreeRTOS\Source/tasks.c **** 
3966:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3967:..\FreeRTOS\Source/tasks.c **** 
3968:..\FreeRTOS\Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3969:..\FreeRTOS\Source/tasks.c **** 	{
3970:..\FreeRTOS\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3971:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
3972:..\FreeRTOS\Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
3973:..\FreeRTOS\Source/tasks.c **** 
3974:..\FreeRTOS\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3975:..\FreeRTOS\Source/tasks.c **** 		{
3976:..\FreeRTOS\Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3977:..\FreeRTOS\Source/tasks.c **** 			one mutex. */
3978:..\FreeRTOS\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3979:..\FreeRTOS\Source/tasks.c **** 
3980:..\FreeRTOS\Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
3981:..\FreeRTOS\Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3982:..\FreeRTOS\Source/tasks.c **** 			holding task's base priority and the priority of the highest
3983:..\FreeRTOS\Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3984:..\FreeRTOS\Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
3985:..\FreeRTOS\Source/tasks.c **** 			{
3986:..\FreeRTOS\Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
3987:..\FreeRTOS\Source/tasks.c **** 			}
3988:..\FreeRTOS\Source/tasks.c **** 			else
3989:..\FreeRTOS\Source/tasks.c **** 			{
3990:..\FreeRTOS\Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
3991:..\FreeRTOS\Source/tasks.c **** 			}
3992:..\FreeRTOS\Source/tasks.c **** 
3993:..\FreeRTOS\Source/tasks.c **** 			/* Does the priority need to change? */
3994:..\FreeRTOS\Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
3995:..\FreeRTOS\Source/tasks.c **** 			{
3996:..\FreeRTOS\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
3997:..\FreeRTOS\Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
3998:..\FreeRTOS\Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
3999:..\FreeRTOS\Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4000:..\FreeRTOS\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4001:..\FreeRTOS\Source/tasks.c **** 				{
4002:..\FreeRTOS\Source/tasks.c **** 					/* If a task has timed out because it already holds the
4003:..\FreeRTOS\Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4004:..\FreeRTOS\Source/tasks.c **** 					its own priority. */
4005:..\FreeRTOS\Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 84


4006:..\FreeRTOS\Source/tasks.c **** 
4007:..\FreeRTOS\Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4008:..\FreeRTOS\Source/tasks.c **** 					priority to facilitate determining the subject task's
4009:..\FreeRTOS\Source/tasks.c **** 					state. */
4010:..\FreeRTOS\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4011:..\FreeRTOS\Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4012:..\FreeRTOS\Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4013:..\FreeRTOS\Source/tasks.c **** 
4014:..\FreeRTOS\Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4015:..\FreeRTOS\Source/tasks.c **** 					being used for anything else. */
4016:..\FreeRTOS\Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4017:..\FreeRTOS\Source/tasks.c **** 					{
4018:..\FreeRTOS\Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4019:..\FreeRTOS\Source/tasks.c **** 					}
4020:..\FreeRTOS\Source/tasks.c **** 					else
4021:..\FreeRTOS\Source/tasks.c **** 					{
4022:..\FreeRTOS\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4023:..\FreeRTOS\Source/tasks.c **** 					}
4024:..\FreeRTOS\Source/tasks.c **** 
4025:..\FreeRTOS\Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4026:..\FreeRTOS\Source/tasks.c **** 					then the task that holds the mutex could be in either the
4027:..\FreeRTOS\Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4028:..\FreeRTOS\Source/tasks.c **** 					from its current state list if it is in the Ready state as
4029:..\FreeRTOS\Source/tasks.c **** 					the task's priority is going to change and there is one
4030:..\FreeRTOS\Source/tasks.c **** 					Ready list per priority. */
4031:..\FreeRTOS\Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4032:..\FreeRTOS\Source/tasks.c **** 					{
4033:..\FreeRTOS\Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4034:..\FreeRTOS\Source/tasks.c **** 						{
4035:..\FreeRTOS\Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4036:..\FreeRTOS\Source/tasks.c **** 						}
4037:..\FreeRTOS\Source/tasks.c **** 						else
4038:..\FreeRTOS\Source/tasks.c **** 						{
4039:..\FreeRTOS\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4040:..\FreeRTOS\Source/tasks.c **** 						}
4041:..\FreeRTOS\Source/tasks.c **** 
4042:..\FreeRTOS\Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4043:..\FreeRTOS\Source/tasks.c **** 					}
4044:..\FreeRTOS\Source/tasks.c **** 					else
4045:..\FreeRTOS\Source/tasks.c **** 					{
4046:..\FreeRTOS\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4047:..\FreeRTOS\Source/tasks.c **** 					}
4048:..\FreeRTOS\Source/tasks.c **** 				}
4049:..\FreeRTOS\Source/tasks.c **** 				else
4050:..\FreeRTOS\Source/tasks.c **** 				{
4051:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4052:..\FreeRTOS\Source/tasks.c **** 				}
4053:..\FreeRTOS\Source/tasks.c **** 			}
4054:..\FreeRTOS\Source/tasks.c **** 			else
4055:..\FreeRTOS\Source/tasks.c **** 			{
4056:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4057:..\FreeRTOS\Source/tasks.c **** 			}
4058:..\FreeRTOS\Source/tasks.c **** 		}
4059:..\FreeRTOS\Source/tasks.c **** 		else
4060:..\FreeRTOS\Source/tasks.c **** 		{
4061:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4062:..\FreeRTOS\Source/tasks.c **** 		}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 85


4063:..\FreeRTOS\Source/tasks.c **** 	}
4064:..\FreeRTOS\Source/tasks.c **** 
4065:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4066:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
4067:..\FreeRTOS\Source/tasks.c **** 
4068:..\FreeRTOS\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4069:..\FreeRTOS\Source/tasks.c **** 
4070:..\FreeRTOS\Source/tasks.c **** 	void vTaskEnterCritical( void )
4071:..\FreeRTOS\Source/tasks.c **** 	{
4072:..\FreeRTOS\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4073:..\FreeRTOS\Source/tasks.c **** 
4074:..\FreeRTOS\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4075:..\FreeRTOS\Source/tasks.c **** 		{
4076:..\FreeRTOS\Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4077:..\FreeRTOS\Source/tasks.c **** 
4078:..\FreeRTOS\Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4079:..\FreeRTOS\Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4080:..\FreeRTOS\Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4081:..\FreeRTOS\Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4082:..\FreeRTOS\Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4083:..\FreeRTOS\Source/tasks.c **** 			critical section. */
4084:..\FreeRTOS\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4085:..\FreeRTOS\Source/tasks.c **** 			{
4086:..\FreeRTOS\Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4087:..\FreeRTOS\Source/tasks.c **** 			}
4088:..\FreeRTOS\Source/tasks.c **** 		}
4089:..\FreeRTOS\Source/tasks.c **** 		else
4090:..\FreeRTOS\Source/tasks.c **** 		{
4091:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4092:..\FreeRTOS\Source/tasks.c **** 		}
4093:..\FreeRTOS\Source/tasks.c **** 	}
4094:..\FreeRTOS\Source/tasks.c **** 
4095:..\FreeRTOS\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4096:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
4097:..\FreeRTOS\Source/tasks.c **** 
4098:..\FreeRTOS\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4099:..\FreeRTOS\Source/tasks.c **** 
4100:..\FreeRTOS\Source/tasks.c **** 	void vTaskExitCritical( void )
4101:..\FreeRTOS\Source/tasks.c **** 	{
4102:..\FreeRTOS\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4103:..\FreeRTOS\Source/tasks.c **** 		{
4104:..\FreeRTOS\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4105:..\FreeRTOS\Source/tasks.c **** 			{
4106:..\FreeRTOS\Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4107:..\FreeRTOS\Source/tasks.c **** 
4108:..\FreeRTOS\Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4109:..\FreeRTOS\Source/tasks.c **** 				{
4110:..\FreeRTOS\Source/tasks.c **** 					portENABLE_INTERRUPTS();
4111:..\FreeRTOS\Source/tasks.c **** 				}
4112:..\FreeRTOS\Source/tasks.c **** 				else
4113:..\FreeRTOS\Source/tasks.c **** 				{
4114:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4115:..\FreeRTOS\Source/tasks.c **** 				}
4116:..\FreeRTOS\Source/tasks.c **** 			}
4117:..\FreeRTOS\Source/tasks.c **** 			else
4118:..\FreeRTOS\Source/tasks.c **** 			{
4119:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 86


4120:..\FreeRTOS\Source/tasks.c **** 			}
4121:..\FreeRTOS\Source/tasks.c **** 		}
4122:..\FreeRTOS\Source/tasks.c **** 		else
4123:..\FreeRTOS\Source/tasks.c **** 		{
4124:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4125:..\FreeRTOS\Source/tasks.c **** 		}
4126:..\FreeRTOS\Source/tasks.c **** 	}
4127:..\FreeRTOS\Source/tasks.c **** 
4128:..\FreeRTOS\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4129:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
4130:..\FreeRTOS\Source/tasks.c **** 
4131:..\FreeRTOS\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4132:..\FreeRTOS\Source/tasks.c **** 
4133:..\FreeRTOS\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4134:..\FreeRTOS\Source/tasks.c **** 	{
4135:..\FreeRTOS\Source/tasks.c **** 	size_t x;
4136:..\FreeRTOS\Source/tasks.c **** 
4137:..\FreeRTOS\Source/tasks.c **** 		/* Start by copying the entire string. */
4138:..\FreeRTOS\Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4139:..\FreeRTOS\Source/tasks.c **** 
4140:..\FreeRTOS\Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4141:..\FreeRTOS\Source/tasks.c **** 		printed out. */
4142:..\FreeRTOS\Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4143:..\FreeRTOS\Source/tasks.c **** 		{
4144:..\FreeRTOS\Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4145:..\FreeRTOS\Source/tasks.c **** 		}
4146:..\FreeRTOS\Source/tasks.c **** 
4147:..\FreeRTOS\Source/tasks.c **** 		/* Terminate. */
4148:..\FreeRTOS\Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
4149:..\FreeRTOS\Source/tasks.c **** 
4150:..\FreeRTOS\Source/tasks.c **** 		/* Return the new end of string. */
4151:..\FreeRTOS\Source/tasks.c **** 		return &( pcBuffer[ x ] );
4152:..\FreeRTOS\Source/tasks.c **** 	}
4153:..\FreeRTOS\Source/tasks.c **** 
4154:..\FreeRTOS\Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4155:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
4156:..\FreeRTOS\Source/tasks.c **** 
4157:..\FreeRTOS\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4158:..\FreeRTOS\Source/tasks.c **** 
4159:..\FreeRTOS\Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4160:..\FreeRTOS\Source/tasks.c **** 	{
4161:..\FreeRTOS\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4162:..\FreeRTOS\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4163:..\FreeRTOS\Source/tasks.c **** 	char cStatus;
4164:..\FreeRTOS\Source/tasks.c **** 
4165:..\FreeRTOS\Source/tasks.c **** 		/*
4166:..\FreeRTOS\Source/tasks.c **** 		 * PLEASE NOTE:
4167:..\FreeRTOS\Source/tasks.c **** 		 *
4168:..\FreeRTOS\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4169:..\FreeRTOS\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4170:..\FreeRTOS\Source/tasks.c **** 		 * scheduler.
4171:..\FreeRTOS\Source/tasks.c **** 		 *
4172:..\FreeRTOS\Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4173:..\FreeRTOS\Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4174:..\FreeRTOS\Source/tasks.c **** 		 * displays task names, states and stack usage.
4175:..\FreeRTOS\Source/tasks.c **** 		 *
4176:..\FreeRTOS\Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 87


4177:..\FreeRTOS\Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4178:..\FreeRTOS\Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4179:..\FreeRTOS\Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4180:..\FreeRTOS\Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4181:..\FreeRTOS\Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4182:..\FreeRTOS\Source/tasks.c **** 		 * snprintf() implementation!).
4183:..\FreeRTOS\Source/tasks.c **** 		 *
4184:..\FreeRTOS\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4185:..\FreeRTOS\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4186:..\FreeRTOS\Source/tasks.c **** 		 * through a call to vTaskList().
4187:..\FreeRTOS\Source/tasks.c **** 		 */
4188:..\FreeRTOS\Source/tasks.c **** 
4189:..\FreeRTOS\Source/tasks.c **** 
4190:..\FreeRTOS\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4191:..\FreeRTOS\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4192:..\FreeRTOS\Source/tasks.c **** 
4193:..\FreeRTOS\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4194:..\FreeRTOS\Source/tasks.c **** 		function is executing. */
4195:..\FreeRTOS\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4196:..\FreeRTOS\Source/tasks.c **** 
4197:..\FreeRTOS\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4198:..\FreeRTOS\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4199:..\FreeRTOS\Source/tasks.c **** 		equate to NULL. */
4200:..\FreeRTOS\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4201:..\FreeRTOS\Source/tasks.c **** 
4202:..\FreeRTOS\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4203:..\FreeRTOS\Source/tasks.c **** 		{
4204:..\FreeRTOS\Source/tasks.c **** 			/* Generate the (binary) data. */
4205:..\FreeRTOS\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4206:..\FreeRTOS\Source/tasks.c **** 
4207:..\FreeRTOS\Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4208:..\FreeRTOS\Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4209:..\FreeRTOS\Source/tasks.c **** 			{
4210:..\FreeRTOS\Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4211:..\FreeRTOS\Source/tasks.c **** 				{
4212:..\FreeRTOS\Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4213:..\FreeRTOS\Source/tasks.c **** 										break;
4214:..\FreeRTOS\Source/tasks.c **** 
4215:..\FreeRTOS\Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4216:..\FreeRTOS\Source/tasks.c **** 										break;
4217:..\FreeRTOS\Source/tasks.c **** 
4218:..\FreeRTOS\Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4219:..\FreeRTOS\Source/tasks.c **** 										break;
4220:..\FreeRTOS\Source/tasks.c **** 
4221:..\FreeRTOS\Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4222:..\FreeRTOS\Source/tasks.c **** 										break;
4223:..\FreeRTOS\Source/tasks.c **** 
4224:..\FreeRTOS\Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4225:..\FreeRTOS\Source/tasks.c **** 										break;
4226:..\FreeRTOS\Source/tasks.c **** 
4227:..\FreeRTOS\Source/tasks.c **** 					default:			/* Should not get here, but it is included
4228:..\FreeRTOS\Source/tasks.c **** 										to prevent static checking errors. */
4229:..\FreeRTOS\Source/tasks.c **** 										cStatus = 0x00;
4230:..\FreeRTOS\Source/tasks.c **** 										break;
4231:..\FreeRTOS\Source/tasks.c **** 				}
4232:..\FreeRTOS\Source/tasks.c **** 
4233:..\FreeRTOS\Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 88


4234:..\FreeRTOS\Source/tasks.c **** 				can be printed in tabular form more easily. */
4235:..\FreeRTOS\Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4236:..\FreeRTOS\Source/tasks.c **** 
4237:..\FreeRTOS\Source/tasks.c **** 				/* Write the rest of the string. */
4238:..\FreeRTOS\Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4239:..\FreeRTOS\Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4240:..\FreeRTOS\Source/tasks.c **** 			}
4241:..\FreeRTOS\Source/tasks.c **** 
4242:..\FreeRTOS\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4243:..\FreeRTOS\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4244:..\FreeRTOS\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4245:..\FreeRTOS\Source/tasks.c **** 		}
4246:..\FreeRTOS\Source/tasks.c **** 		else
4247:..\FreeRTOS\Source/tasks.c **** 		{
4248:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4249:..\FreeRTOS\Source/tasks.c **** 		}
4250:..\FreeRTOS\Source/tasks.c **** 	}
4251:..\FreeRTOS\Source/tasks.c **** 
4252:..\FreeRTOS\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4253:..\FreeRTOS\Source/tasks.c **** /*----------------------------------------------------------*/
4254:..\FreeRTOS\Source/tasks.c **** 
4255:..\FreeRTOS\Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4256:..\FreeRTOS\Source/tasks.c **** 
4257:..\FreeRTOS\Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4258:..\FreeRTOS\Source/tasks.c **** 	{
4259:..\FreeRTOS\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4260:..\FreeRTOS\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4261:..\FreeRTOS\Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4262:..\FreeRTOS\Source/tasks.c **** 
4263:..\FreeRTOS\Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4264:..\FreeRTOS\Source/tasks.c **** 		{
4265:..\FreeRTOS\Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4266:..\FreeRTOS\Source/tasks.c **** 		}
4267:..\FreeRTOS\Source/tasks.c **** 		#endif
4268:..\FreeRTOS\Source/tasks.c **** 
4269:..\FreeRTOS\Source/tasks.c **** 		/*
4270:..\FreeRTOS\Source/tasks.c **** 		 * PLEASE NOTE:
4271:..\FreeRTOS\Source/tasks.c **** 		 *
4272:..\FreeRTOS\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4273:..\FreeRTOS\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4274:..\FreeRTOS\Source/tasks.c **** 		 * scheduler.
4275:..\FreeRTOS\Source/tasks.c **** 		 *
4276:..\FreeRTOS\Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4277:..\FreeRTOS\Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4278:..\FreeRTOS\Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4279:..\FreeRTOS\Source/tasks.c **** 		 * in both absolute and percentage terms.
4280:..\FreeRTOS\Source/tasks.c **** 		 *
4281:..\FreeRTOS\Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4282:..\FreeRTOS\Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4283:..\FreeRTOS\Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4284:..\FreeRTOS\Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4285:..\FreeRTOS\Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4286:..\FreeRTOS\Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4287:..\FreeRTOS\Source/tasks.c **** 		 * a full snprintf() implementation!).
4288:..\FreeRTOS\Source/tasks.c **** 		 *
4289:..\FreeRTOS\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4290:..\FreeRTOS\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 89


4291:..\FreeRTOS\Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4292:..\FreeRTOS\Source/tasks.c **** 		 */
4293:..\FreeRTOS\Source/tasks.c **** 
4294:..\FreeRTOS\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4295:..\FreeRTOS\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4296:..\FreeRTOS\Source/tasks.c **** 
4297:..\FreeRTOS\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4298:..\FreeRTOS\Source/tasks.c **** 		function is executing. */
4299:..\FreeRTOS\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4300:..\FreeRTOS\Source/tasks.c **** 
4301:..\FreeRTOS\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4302:..\FreeRTOS\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4303:..\FreeRTOS\Source/tasks.c **** 		equate to NULL. */
4304:..\FreeRTOS\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4305:..\FreeRTOS\Source/tasks.c **** 
4306:..\FreeRTOS\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4307:..\FreeRTOS\Source/tasks.c **** 		{
4308:..\FreeRTOS\Source/tasks.c **** 			/* Generate the (binary) data. */
4309:..\FreeRTOS\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4310:..\FreeRTOS\Source/tasks.c **** 
4311:..\FreeRTOS\Source/tasks.c **** 			/* For percentage calculations. */
4312:..\FreeRTOS\Source/tasks.c **** 			ulTotalTime /= 100UL;
4313:..\FreeRTOS\Source/tasks.c **** 
4314:..\FreeRTOS\Source/tasks.c **** 			/* Avoid divide by zero errors. */
4315:..\FreeRTOS\Source/tasks.c **** 			if( ulTotalTime > 0 )
4316:..\FreeRTOS\Source/tasks.c **** 			{
4317:..\FreeRTOS\Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4318:..\FreeRTOS\Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4319:..\FreeRTOS\Source/tasks.c **** 				{
4320:..\FreeRTOS\Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4321:..\FreeRTOS\Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4322:..\FreeRTOS\Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4323:..\FreeRTOS\Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4324:..\FreeRTOS\Source/tasks.c **** 
4325:..\FreeRTOS\Source/tasks.c **** 					/* Write the task name to the string, padding with
4326:..\FreeRTOS\Source/tasks.c **** 					spaces so it can be printed in tabular form more
4327:..\FreeRTOS\Source/tasks.c **** 					easily. */
4328:..\FreeRTOS\Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4329:..\FreeRTOS\Source/tasks.c **** 
4330:..\FreeRTOS\Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4331:..\FreeRTOS\Source/tasks.c **** 					{
4332:..\FreeRTOS\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4333:..\FreeRTOS\Source/tasks.c **** 						{
4334:..\FreeRTOS\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4335:..\FreeRTOS\Source/tasks.c **** 						}
4336:..\FreeRTOS\Source/tasks.c **** 						#else
4337:..\FreeRTOS\Source/tasks.c **** 						{
4338:..\FreeRTOS\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4339:..\FreeRTOS\Source/tasks.c **** 							printf() library can be used. */
4340:..\FreeRTOS\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4341:..\FreeRTOS\Source/tasks.c **** 						}
4342:..\FreeRTOS\Source/tasks.c **** 						#endif
4343:..\FreeRTOS\Source/tasks.c **** 					}
4344:..\FreeRTOS\Source/tasks.c **** 					else
4345:..\FreeRTOS\Source/tasks.c **** 					{
4346:..\FreeRTOS\Source/tasks.c **** 						/* If the percentage is zero here then the task has
4347:..\FreeRTOS\Source/tasks.c **** 						consumed less than 1% of the total run time. */
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 90


4348:..\FreeRTOS\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4349:..\FreeRTOS\Source/tasks.c **** 						{
4350:..\FreeRTOS\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4351:..\FreeRTOS\Source/tasks.c **** 						}
4352:..\FreeRTOS\Source/tasks.c **** 						#else
4353:..\FreeRTOS\Source/tasks.c **** 						{
4354:..\FreeRTOS\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4355:..\FreeRTOS\Source/tasks.c **** 							printf() library can be used. */
4356:..\FreeRTOS\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4357:..\FreeRTOS\Source/tasks.c **** 						}
4358:..\FreeRTOS\Source/tasks.c **** 						#endif
4359:..\FreeRTOS\Source/tasks.c **** 					}
4360:..\FreeRTOS\Source/tasks.c **** 
4361:..\FreeRTOS\Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4362:..\FreeRTOS\Source/tasks.c **** 				}
4363:..\FreeRTOS\Source/tasks.c **** 			}
4364:..\FreeRTOS\Source/tasks.c **** 			else
4365:..\FreeRTOS\Source/tasks.c **** 			{
4366:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4367:..\FreeRTOS\Source/tasks.c **** 			}
4368:..\FreeRTOS\Source/tasks.c **** 
4369:..\FreeRTOS\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4370:..\FreeRTOS\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4371:..\FreeRTOS\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4372:..\FreeRTOS\Source/tasks.c **** 		}
4373:..\FreeRTOS\Source/tasks.c **** 		else
4374:..\FreeRTOS\Source/tasks.c **** 		{
4375:..\FreeRTOS\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4376:..\FreeRTOS\Source/tasks.c **** 		}
4377:..\FreeRTOS\Source/tasks.c **** 	}
4378:..\FreeRTOS\Source/tasks.c **** 
4379:..\FreeRTOS\Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4380:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
4381:..\FreeRTOS\Source/tasks.c **** 
4382:..\FreeRTOS\Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4383:..\FreeRTOS\Source/tasks.c **** {
4384:..\FreeRTOS\Source/tasks.c **** TickType_t uxReturn;
4385:..\FreeRTOS\Source/tasks.c **** 
4386:..\FreeRTOS\Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4387:..\FreeRTOS\Source/tasks.c **** 
4388:..\FreeRTOS\Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4389:..\FreeRTOS\Source/tasks.c **** 	queues and semaphores. */
4390:..\FreeRTOS\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4391:..\FreeRTOS\Source/tasks.c **** 
4392:..\FreeRTOS\Source/tasks.c **** 	return uxReturn;
4393:..\FreeRTOS\Source/tasks.c **** }
4394:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
4395:..\FreeRTOS\Source/tasks.c **** 
4396:..\FreeRTOS\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4397:..\FreeRTOS\Source/tasks.c **** 
4398:..\FreeRTOS\Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4399:..\FreeRTOS\Source/tasks.c **** 	{
4400:..\FreeRTOS\Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4401:..\FreeRTOS\Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4402:..\FreeRTOS\Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4403:..\FreeRTOS\Source/tasks.c **** 		{
4404:..\FreeRTOS\Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 91


4405:..\FreeRTOS\Source/tasks.c **** 		}
4406:..\FreeRTOS\Source/tasks.c **** 
4407:..\FreeRTOS\Source/tasks.c **** 		return pxCurrentTCB;
4408:..\FreeRTOS\Source/tasks.c **** 	}
4409:..\FreeRTOS\Source/tasks.c **** 
4410:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4411:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
4412:..\FreeRTOS\Source/tasks.c **** 
4413:..\FreeRTOS\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4414:..\FreeRTOS\Source/tasks.c **** 
4415:..\FreeRTOS\Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4416:..\FreeRTOS\Source/tasks.c **** 	{
4417:..\FreeRTOS\Source/tasks.c **** 	uint32_t ulReturn;
4418:..\FreeRTOS\Source/tasks.c **** 
4419:..\FreeRTOS\Source/tasks.c **** 		taskENTER_CRITICAL();
4420:..\FreeRTOS\Source/tasks.c **** 		{
4421:..\FreeRTOS\Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4422:..\FreeRTOS\Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4423:..\FreeRTOS\Source/tasks.c **** 			{
4424:..\FreeRTOS\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4425:..\FreeRTOS\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4426:..\FreeRTOS\Source/tasks.c **** 
4427:..\FreeRTOS\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4428:..\FreeRTOS\Source/tasks.c **** 				{
4429:..\FreeRTOS\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4430:..\FreeRTOS\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4431:..\FreeRTOS\Source/tasks.c **** 
4432:..\FreeRTOS\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4433:..\FreeRTOS\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4434:..\FreeRTOS\Source/tasks.c **** 					critical section exits) - but it is not something that
4435:..\FreeRTOS\Source/tasks.c **** 					application code should ever do. */
4436:..\FreeRTOS\Source/tasks.c **** 					portYIELD_WITHIN_API();
4437:..\FreeRTOS\Source/tasks.c **** 				}
4438:..\FreeRTOS\Source/tasks.c **** 				else
4439:..\FreeRTOS\Source/tasks.c **** 				{
4440:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4441:..\FreeRTOS\Source/tasks.c **** 				}
4442:..\FreeRTOS\Source/tasks.c **** 			}
4443:..\FreeRTOS\Source/tasks.c **** 			else
4444:..\FreeRTOS\Source/tasks.c **** 			{
4445:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4446:..\FreeRTOS\Source/tasks.c **** 			}
4447:..\FreeRTOS\Source/tasks.c **** 		}
4448:..\FreeRTOS\Source/tasks.c **** 		taskEXIT_CRITICAL();
4449:..\FreeRTOS\Source/tasks.c **** 
4450:..\FreeRTOS\Source/tasks.c **** 		taskENTER_CRITICAL();
4451:..\FreeRTOS\Source/tasks.c **** 		{
4452:..\FreeRTOS\Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4453:..\FreeRTOS\Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4454:..\FreeRTOS\Source/tasks.c **** 
4455:..\FreeRTOS\Source/tasks.c **** 			if( ulReturn != 0UL )
4456:..\FreeRTOS\Source/tasks.c **** 			{
4457:..\FreeRTOS\Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4458:..\FreeRTOS\Source/tasks.c **** 				{
4459:..\FreeRTOS\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4460:..\FreeRTOS\Source/tasks.c **** 				}
4461:..\FreeRTOS\Source/tasks.c **** 				else
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 92


4462:..\FreeRTOS\Source/tasks.c **** 				{
4463:..\FreeRTOS\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4464:..\FreeRTOS\Source/tasks.c **** 				}
4465:..\FreeRTOS\Source/tasks.c **** 			}
4466:..\FreeRTOS\Source/tasks.c **** 			else
4467:..\FreeRTOS\Source/tasks.c **** 			{
4468:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4469:..\FreeRTOS\Source/tasks.c **** 			}
4470:..\FreeRTOS\Source/tasks.c **** 
4471:..\FreeRTOS\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4472:..\FreeRTOS\Source/tasks.c **** 		}
4473:..\FreeRTOS\Source/tasks.c **** 		taskEXIT_CRITICAL();
4474:..\FreeRTOS\Source/tasks.c **** 
4475:..\FreeRTOS\Source/tasks.c **** 		return ulReturn;
4476:..\FreeRTOS\Source/tasks.c **** 	}
4477:..\FreeRTOS\Source/tasks.c **** 
4478:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4479:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
4480:..\FreeRTOS\Source/tasks.c **** 
4481:..\FreeRTOS\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4482:..\FreeRTOS\Source/tasks.c **** 
4483:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4484:..\FreeRTOS\Source/tasks.c **** 	{
4485:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xReturn;
4486:..\FreeRTOS\Source/tasks.c **** 
4487:..\FreeRTOS\Source/tasks.c **** 		taskENTER_CRITICAL();
4488:..\FreeRTOS\Source/tasks.c **** 		{
4489:..\FreeRTOS\Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4490:..\FreeRTOS\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4491:..\FreeRTOS\Source/tasks.c **** 			{
4492:..\FreeRTOS\Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4493:..\FreeRTOS\Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4494:..\FreeRTOS\Source/tasks.c **** 				clear the value to zero. */
4495:..\FreeRTOS\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4496:..\FreeRTOS\Source/tasks.c **** 
4497:..\FreeRTOS\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4498:..\FreeRTOS\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4499:..\FreeRTOS\Source/tasks.c **** 
4500:..\FreeRTOS\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4501:..\FreeRTOS\Source/tasks.c **** 				{
4502:..\FreeRTOS\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4503:..\FreeRTOS\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4504:..\FreeRTOS\Source/tasks.c **** 
4505:..\FreeRTOS\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4506:..\FreeRTOS\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4507:..\FreeRTOS\Source/tasks.c **** 					critical section exits) - but it is not something that
4508:..\FreeRTOS\Source/tasks.c **** 					application code should ever do. */
4509:..\FreeRTOS\Source/tasks.c **** 					portYIELD_WITHIN_API();
4510:..\FreeRTOS\Source/tasks.c **** 				}
4511:..\FreeRTOS\Source/tasks.c **** 				else
4512:..\FreeRTOS\Source/tasks.c **** 				{
4513:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4514:..\FreeRTOS\Source/tasks.c **** 				}
4515:..\FreeRTOS\Source/tasks.c **** 			}
4516:..\FreeRTOS\Source/tasks.c **** 			else
4517:..\FreeRTOS\Source/tasks.c **** 			{
4518:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 93


4519:..\FreeRTOS\Source/tasks.c **** 			}
4520:..\FreeRTOS\Source/tasks.c **** 		}
4521:..\FreeRTOS\Source/tasks.c **** 		taskEXIT_CRITICAL();
4522:..\FreeRTOS\Source/tasks.c **** 
4523:..\FreeRTOS\Source/tasks.c **** 		taskENTER_CRITICAL();
4524:..\FreeRTOS\Source/tasks.c **** 		{
4525:..\FreeRTOS\Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4526:..\FreeRTOS\Source/tasks.c **** 
4527:..\FreeRTOS\Source/tasks.c **** 			if( pulNotificationValue != NULL )
4528:..\FreeRTOS\Source/tasks.c **** 			{
4529:..\FreeRTOS\Source/tasks.c **** 				/* Output the current notification value, which may or may not
4530:..\FreeRTOS\Source/tasks.c **** 				have changed. */
4531:..\FreeRTOS\Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4532:..\FreeRTOS\Source/tasks.c **** 			}
4533:..\FreeRTOS\Source/tasks.c **** 
4534:..\FreeRTOS\Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4535:..\FreeRTOS\Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4536:..\FreeRTOS\Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4537:..\FreeRTOS\Source/tasks.c **** 			unblocked because of a timeout. */
4538:..\FreeRTOS\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4539:..\FreeRTOS\Source/tasks.c **** 			{
4540:..\FreeRTOS\Source/tasks.c **** 				/* A notification was not received. */
4541:..\FreeRTOS\Source/tasks.c **** 				xReturn = pdFALSE;
4542:..\FreeRTOS\Source/tasks.c **** 			}
4543:..\FreeRTOS\Source/tasks.c **** 			else
4544:..\FreeRTOS\Source/tasks.c **** 			{
4545:..\FreeRTOS\Source/tasks.c **** 				/* A notification was already pending or a notification was
4546:..\FreeRTOS\Source/tasks.c **** 				received while the task was waiting. */
4547:..\FreeRTOS\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4548:..\FreeRTOS\Source/tasks.c **** 				xReturn = pdTRUE;
4549:..\FreeRTOS\Source/tasks.c **** 			}
4550:..\FreeRTOS\Source/tasks.c **** 
4551:..\FreeRTOS\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4552:..\FreeRTOS\Source/tasks.c **** 		}
4553:..\FreeRTOS\Source/tasks.c **** 		taskEXIT_CRITICAL();
4554:..\FreeRTOS\Source/tasks.c **** 
4555:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
4556:..\FreeRTOS\Source/tasks.c **** 	}
4557:..\FreeRTOS\Source/tasks.c **** 
4558:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4559:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
4560:..\FreeRTOS\Source/tasks.c **** 
4561:..\FreeRTOS\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4562:..\FreeRTOS\Source/tasks.c **** 
4563:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4564:..\FreeRTOS\Source/tasks.c **** 	{
4565:..\FreeRTOS\Source/tasks.c **** 	TCB_t * pxTCB;
4566:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4567:..\FreeRTOS\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4568:..\FreeRTOS\Source/tasks.c **** 
4569:..\FreeRTOS\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4570:..\FreeRTOS\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4571:..\FreeRTOS\Source/tasks.c **** 
4572:..\FreeRTOS\Source/tasks.c **** 		taskENTER_CRITICAL();
4573:..\FreeRTOS\Source/tasks.c **** 		{
4574:..\FreeRTOS\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4575:..\FreeRTOS\Source/tasks.c **** 			{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 94


4576:..\FreeRTOS\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4577:..\FreeRTOS\Source/tasks.c **** 			}
4578:..\FreeRTOS\Source/tasks.c **** 
4579:..\FreeRTOS\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4580:..\FreeRTOS\Source/tasks.c **** 
4581:..\FreeRTOS\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4582:..\FreeRTOS\Source/tasks.c **** 
4583:..\FreeRTOS\Source/tasks.c **** 			switch( eAction )
4584:..\FreeRTOS\Source/tasks.c **** 			{
4585:..\FreeRTOS\Source/tasks.c **** 				case eSetBits	:
4586:..\FreeRTOS\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4587:..\FreeRTOS\Source/tasks.c **** 					break;
4588:..\FreeRTOS\Source/tasks.c **** 
4589:..\FreeRTOS\Source/tasks.c **** 				case eIncrement	:
4590:..\FreeRTOS\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4591:..\FreeRTOS\Source/tasks.c **** 					break;
4592:..\FreeRTOS\Source/tasks.c **** 
4593:..\FreeRTOS\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4594:..\FreeRTOS\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4595:..\FreeRTOS\Source/tasks.c **** 					break;
4596:..\FreeRTOS\Source/tasks.c **** 
4597:..\FreeRTOS\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4598:..\FreeRTOS\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4599:..\FreeRTOS\Source/tasks.c **** 					{
4600:..\FreeRTOS\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4601:..\FreeRTOS\Source/tasks.c **** 					}
4602:..\FreeRTOS\Source/tasks.c **** 					else
4603:..\FreeRTOS\Source/tasks.c **** 					{
4604:..\FreeRTOS\Source/tasks.c **** 						/* The value could not be written to the task. */
4605:..\FreeRTOS\Source/tasks.c **** 						xReturn = pdFAIL;
4606:..\FreeRTOS\Source/tasks.c **** 					}
4607:..\FreeRTOS\Source/tasks.c **** 					break;
4608:..\FreeRTOS\Source/tasks.c **** 
4609:..\FreeRTOS\Source/tasks.c **** 				case eNoAction:
4610:..\FreeRTOS\Source/tasks.c **** 					/* The task is being notified without its notify value being
4611:..\FreeRTOS\Source/tasks.c **** 					updated. */
4612:..\FreeRTOS\Source/tasks.c **** 					break;
4613:..\FreeRTOS\Source/tasks.c **** 			}
4614:..\FreeRTOS\Source/tasks.c **** 
4615:..\FreeRTOS\Source/tasks.c **** 			traceTASK_NOTIFY();
4616:..\FreeRTOS\Source/tasks.c **** 
4617:..\FreeRTOS\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4618:..\FreeRTOS\Source/tasks.c **** 			notification then unblock it now. */
4619:..\FreeRTOS\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4620:..\FreeRTOS\Source/tasks.c **** 			{
4621:..\FreeRTOS\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4622:..\FreeRTOS\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4623:..\FreeRTOS\Source/tasks.c **** 
4624:..\FreeRTOS\Source/tasks.c **** 				/* The task should not have been on an event list. */
4625:..\FreeRTOS\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4626:..\FreeRTOS\Source/tasks.c **** 
4627:..\FreeRTOS\Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4628:..\FreeRTOS\Source/tasks.c **** 				{
4629:..\FreeRTOS\Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4630:..\FreeRTOS\Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4631:..\FreeRTOS\Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4632:..\FreeRTOS\Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 95


4633:..\FreeRTOS\Source/tasks.c **** 					because it will automatically get reset to a new value when
4634:..\FreeRTOS\Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4635:..\FreeRTOS\Source/tasks.c **** 					tickless idling is used it might be more important to enter
4636:..\FreeRTOS\Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4637:..\FreeRTOS\Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4638:..\FreeRTOS\Source/tasks.c **** 					earliest possible time. */
4639:..\FreeRTOS\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4640:..\FreeRTOS\Source/tasks.c **** 				}
4641:..\FreeRTOS\Source/tasks.c **** 				#endif
4642:..\FreeRTOS\Source/tasks.c **** 
4643:..\FreeRTOS\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4644:..\FreeRTOS\Source/tasks.c **** 				{
4645:..\FreeRTOS\Source/tasks.c **** 					/* The notified task has a priority above the currently
4646:..\FreeRTOS\Source/tasks.c **** 					executing task so a yield is required. */
4647:..\FreeRTOS\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4648:..\FreeRTOS\Source/tasks.c **** 				}
4649:..\FreeRTOS\Source/tasks.c **** 				else
4650:..\FreeRTOS\Source/tasks.c **** 				{
4651:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4652:..\FreeRTOS\Source/tasks.c **** 				}
4653:..\FreeRTOS\Source/tasks.c **** 			}
4654:..\FreeRTOS\Source/tasks.c **** 			else
4655:..\FreeRTOS\Source/tasks.c **** 			{
4656:..\FreeRTOS\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4657:..\FreeRTOS\Source/tasks.c **** 			}
4658:..\FreeRTOS\Source/tasks.c **** 		}
4659:..\FreeRTOS\Source/tasks.c **** 		taskEXIT_CRITICAL();
4660:..\FreeRTOS\Source/tasks.c **** 
4661:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
4662:..\FreeRTOS\Source/tasks.c **** 	}
4663:..\FreeRTOS\Source/tasks.c **** 
4664:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4665:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
4666:..\FreeRTOS\Source/tasks.c **** 
4667:..\FreeRTOS\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4668:..\FreeRTOS\Source/tasks.c **** 
4669:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4670:..\FreeRTOS\Source/tasks.c **** 	{
4671:..\FreeRTOS\Source/tasks.c **** 	TCB_t * pxTCB;
4672:..\FreeRTOS\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4673:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4674:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4675:..\FreeRTOS\Source/tasks.c **** 
4676:..\FreeRTOS\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4677:..\FreeRTOS\Source/tasks.c **** 
4678:..\FreeRTOS\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4679:..\FreeRTOS\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4680:..\FreeRTOS\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4681:..\FreeRTOS\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4682:..\FreeRTOS\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4683:..\FreeRTOS\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4684:..\FreeRTOS\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4685:..\FreeRTOS\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4686:..\FreeRTOS\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4687:..\FreeRTOS\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4688:..\FreeRTOS\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4689:..\FreeRTOS\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 96


4690:..\FreeRTOS\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4691:..\FreeRTOS\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4692:..\FreeRTOS\Source/tasks.c **** 		provided on the following link:
4693:..\FreeRTOS\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4694:..\FreeRTOS\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4695:..\FreeRTOS\Source/tasks.c **** 
4696:..\FreeRTOS\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4697:..\FreeRTOS\Source/tasks.c **** 
4698:..\FreeRTOS\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4699:..\FreeRTOS\Source/tasks.c **** 		{
4700:..\FreeRTOS\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4701:..\FreeRTOS\Source/tasks.c **** 			{
4702:..\FreeRTOS\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4703:..\FreeRTOS\Source/tasks.c **** 			}
4704:..\FreeRTOS\Source/tasks.c **** 
4705:..\FreeRTOS\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4706:..\FreeRTOS\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4707:..\FreeRTOS\Source/tasks.c **** 
4708:..\FreeRTOS\Source/tasks.c **** 			switch( eAction )
4709:..\FreeRTOS\Source/tasks.c **** 			{
4710:..\FreeRTOS\Source/tasks.c **** 				case eSetBits	:
4711:..\FreeRTOS\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4712:..\FreeRTOS\Source/tasks.c **** 					break;
4713:..\FreeRTOS\Source/tasks.c **** 
4714:..\FreeRTOS\Source/tasks.c **** 				case eIncrement	:
4715:..\FreeRTOS\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4716:..\FreeRTOS\Source/tasks.c **** 					break;
4717:..\FreeRTOS\Source/tasks.c **** 
4718:..\FreeRTOS\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4719:..\FreeRTOS\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4720:..\FreeRTOS\Source/tasks.c **** 					break;
4721:..\FreeRTOS\Source/tasks.c **** 
4722:..\FreeRTOS\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4723:..\FreeRTOS\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4724:..\FreeRTOS\Source/tasks.c **** 					{
4725:..\FreeRTOS\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4726:..\FreeRTOS\Source/tasks.c **** 					}
4727:..\FreeRTOS\Source/tasks.c **** 					else
4728:..\FreeRTOS\Source/tasks.c **** 					{
4729:..\FreeRTOS\Source/tasks.c **** 						/* The value could not be written to the task. */
4730:..\FreeRTOS\Source/tasks.c **** 						xReturn = pdFAIL;
4731:..\FreeRTOS\Source/tasks.c **** 					}
4732:..\FreeRTOS\Source/tasks.c **** 					break;
4733:..\FreeRTOS\Source/tasks.c **** 
4734:..\FreeRTOS\Source/tasks.c **** 				case eNoAction :
4735:..\FreeRTOS\Source/tasks.c **** 					/* The task is being notified without its notify value being
4736:..\FreeRTOS\Source/tasks.c **** 					updated. */
4737:..\FreeRTOS\Source/tasks.c **** 					break;
4738:..\FreeRTOS\Source/tasks.c **** 			}
4739:..\FreeRTOS\Source/tasks.c **** 
4740:..\FreeRTOS\Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4741:..\FreeRTOS\Source/tasks.c **** 
4742:..\FreeRTOS\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4743:..\FreeRTOS\Source/tasks.c **** 			notification then unblock it now. */
4744:..\FreeRTOS\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4745:..\FreeRTOS\Source/tasks.c **** 			{
4746:..\FreeRTOS\Source/tasks.c **** 				/* The task should not have been on an event list. */
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 97


4747:..\FreeRTOS\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4748:..\FreeRTOS\Source/tasks.c **** 
4749:..\FreeRTOS\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4750:..\FreeRTOS\Source/tasks.c **** 				{
4751:..\FreeRTOS\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4752:..\FreeRTOS\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4753:..\FreeRTOS\Source/tasks.c **** 				}
4754:..\FreeRTOS\Source/tasks.c **** 				else
4755:..\FreeRTOS\Source/tasks.c **** 				{
4756:..\FreeRTOS\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4757:..\FreeRTOS\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4758:..\FreeRTOS\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4759:..\FreeRTOS\Source/tasks.c **** 				}
4760:..\FreeRTOS\Source/tasks.c **** 
4761:..\FreeRTOS\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4762:..\FreeRTOS\Source/tasks.c **** 				{
4763:..\FreeRTOS\Source/tasks.c **** 					/* The notified task has a priority above the currently
4764:..\FreeRTOS\Source/tasks.c **** 					executing task so a yield is required. */
4765:..\FreeRTOS\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4766:..\FreeRTOS\Source/tasks.c **** 					{
4767:..\FreeRTOS\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4768:..\FreeRTOS\Source/tasks.c **** 					}
4769:..\FreeRTOS\Source/tasks.c **** 					else
4770:..\FreeRTOS\Source/tasks.c **** 					{
4771:..\FreeRTOS\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4772:..\FreeRTOS\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4773:..\FreeRTOS\Source/tasks.c **** 						safe FreeRTOS function. */
4774:..\FreeRTOS\Source/tasks.c **** 						xYieldPending = pdTRUE;
4775:..\FreeRTOS\Source/tasks.c **** 					}
4776:..\FreeRTOS\Source/tasks.c **** 				}
4777:..\FreeRTOS\Source/tasks.c **** 				else
4778:..\FreeRTOS\Source/tasks.c **** 				{
4779:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4780:..\FreeRTOS\Source/tasks.c **** 				}
4781:..\FreeRTOS\Source/tasks.c **** 			}
4782:..\FreeRTOS\Source/tasks.c **** 		}
4783:..\FreeRTOS\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4784:..\FreeRTOS\Source/tasks.c **** 
4785:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
4786:..\FreeRTOS\Source/tasks.c **** 	}
4787:..\FreeRTOS\Source/tasks.c **** 
4788:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4789:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
4790:..\FreeRTOS\Source/tasks.c **** 
4791:..\FreeRTOS\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4792:..\FreeRTOS\Source/tasks.c **** 
4793:..\FreeRTOS\Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4794:..\FreeRTOS\Source/tasks.c **** 	{
4795:..\FreeRTOS\Source/tasks.c **** 	TCB_t * pxTCB;
4796:..\FreeRTOS\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4797:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4798:..\FreeRTOS\Source/tasks.c **** 
4799:..\FreeRTOS\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4800:..\FreeRTOS\Source/tasks.c **** 
4801:..\FreeRTOS\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4802:..\FreeRTOS\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4803:..\FreeRTOS\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 98


4804:..\FreeRTOS\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4805:..\FreeRTOS\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4806:..\FreeRTOS\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4807:..\FreeRTOS\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4808:..\FreeRTOS\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4809:..\FreeRTOS\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4810:..\FreeRTOS\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4811:..\FreeRTOS\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4812:..\FreeRTOS\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4813:..\FreeRTOS\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4814:..\FreeRTOS\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4815:..\FreeRTOS\Source/tasks.c **** 		provided on the following link:
4816:..\FreeRTOS\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4817:..\FreeRTOS\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4818:..\FreeRTOS\Source/tasks.c **** 
4819:..\FreeRTOS\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4820:..\FreeRTOS\Source/tasks.c **** 
4821:..\FreeRTOS\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4822:..\FreeRTOS\Source/tasks.c **** 		{
4823:..\FreeRTOS\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4824:..\FreeRTOS\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4825:..\FreeRTOS\Source/tasks.c **** 
4826:..\FreeRTOS\Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4827:..\FreeRTOS\Source/tasks.c **** 			semaphore. */
4828:..\FreeRTOS\Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4829:..\FreeRTOS\Source/tasks.c **** 
4830:..\FreeRTOS\Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4831:..\FreeRTOS\Source/tasks.c **** 
4832:..\FreeRTOS\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4833:..\FreeRTOS\Source/tasks.c **** 			notification then unblock it now. */
4834:..\FreeRTOS\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4835:..\FreeRTOS\Source/tasks.c **** 			{
4836:..\FreeRTOS\Source/tasks.c **** 				/* The task should not have been on an event list. */
4837:..\FreeRTOS\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4838:..\FreeRTOS\Source/tasks.c **** 
4839:..\FreeRTOS\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4840:..\FreeRTOS\Source/tasks.c **** 				{
4841:..\FreeRTOS\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4842:..\FreeRTOS\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4843:..\FreeRTOS\Source/tasks.c **** 				}
4844:..\FreeRTOS\Source/tasks.c **** 				else
4845:..\FreeRTOS\Source/tasks.c **** 				{
4846:..\FreeRTOS\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4847:..\FreeRTOS\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4848:..\FreeRTOS\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4849:..\FreeRTOS\Source/tasks.c **** 				}
4850:..\FreeRTOS\Source/tasks.c **** 
4851:..\FreeRTOS\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4852:..\FreeRTOS\Source/tasks.c **** 				{
4853:..\FreeRTOS\Source/tasks.c **** 					/* The notified task has a priority above the currently
4854:..\FreeRTOS\Source/tasks.c **** 					executing task so a yield is required. */
4855:..\FreeRTOS\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4856:..\FreeRTOS\Source/tasks.c **** 					{
4857:..\FreeRTOS\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4858:..\FreeRTOS\Source/tasks.c **** 					}
4859:..\FreeRTOS\Source/tasks.c **** 					else
4860:..\FreeRTOS\Source/tasks.c **** 					{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 99


4861:..\FreeRTOS\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4862:..\FreeRTOS\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4863:..\FreeRTOS\Source/tasks.c **** 						safe FreeRTOS function. */
4864:..\FreeRTOS\Source/tasks.c **** 						xYieldPending = pdTRUE;
4865:..\FreeRTOS\Source/tasks.c **** 					}
4866:..\FreeRTOS\Source/tasks.c **** 				}
4867:..\FreeRTOS\Source/tasks.c **** 				else
4868:..\FreeRTOS\Source/tasks.c **** 				{
4869:..\FreeRTOS\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4870:..\FreeRTOS\Source/tasks.c **** 				}
4871:..\FreeRTOS\Source/tasks.c **** 			}
4872:..\FreeRTOS\Source/tasks.c **** 		}
4873:..\FreeRTOS\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4874:..\FreeRTOS\Source/tasks.c **** 	}
4875:..\FreeRTOS\Source/tasks.c **** 
4876:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4877:..\FreeRTOS\Source/tasks.c **** 
4878:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
4879:..\FreeRTOS\Source/tasks.c **** 
4880:..\FreeRTOS\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4881:..\FreeRTOS\Source/tasks.c **** 
4882:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4883:..\FreeRTOS\Source/tasks.c **** 	{
4884:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
4885:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xReturn;
4886:..\FreeRTOS\Source/tasks.c **** 
4887:..\FreeRTOS\Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4888:..\FreeRTOS\Source/tasks.c **** 		its notification state cleared. */
4889:..\FreeRTOS\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4890:..\FreeRTOS\Source/tasks.c **** 
4891:..\FreeRTOS\Source/tasks.c **** 		taskENTER_CRITICAL();
4892:..\FreeRTOS\Source/tasks.c **** 		{
4893:..\FreeRTOS\Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4894:..\FreeRTOS\Source/tasks.c **** 			{
4895:..\FreeRTOS\Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4896:..\FreeRTOS\Source/tasks.c **** 				xReturn = pdPASS;
4897:..\FreeRTOS\Source/tasks.c **** 			}
4898:..\FreeRTOS\Source/tasks.c **** 			else
4899:..\FreeRTOS\Source/tasks.c **** 			{
4900:..\FreeRTOS\Source/tasks.c **** 				xReturn = pdFAIL;
4901:..\FreeRTOS\Source/tasks.c **** 			}
4902:..\FreeRTOS\Source/tasks.c **** 		}
4903:..\FreeRTOS\Source/tasks.c **** 		taskEXIT_CRITICAL();
4904:..\FreeRTOS\Source/tasks.c **** 
4905:..\FreeRTOS\Source/tasks.c **** 		return xReturn;
4906:..\FreeRTOS\Source/tasks.c **** 	}
4907:..\FreeRTOS\Source/tasks.c **** 
4908:..\FreeRTOS\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4909:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
4910:..\FreeRTOS\Source/tasks.c **** 
4911:..\FreeRTOS\Source/tasks.c **** 
4912:..\FreeRTOS\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4913:..\FreeRTOS\Source/tasks.c **** {
 652              		.loc 1 4913 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 100


 656              	.LVL63:
 657 0000 70B5     		push	{r4, r5, r6, lr}
 658              		.cfi_def_cfa_offset 16
 659              		.cfi_offset 4, -16
 660              		.cfi_offset 5, -12
 661              		.cfi_offset 6, -8
 662              		.cfi_offset 14, -4
 663 0002 0446     		mov	r4, r0
 664 0004 0E46     		mov	r6, r1
4914:..\FreeRTOS\Source/tasks.c **** TickType_t xTimeToWake;
4915:..\FreeRTOS\Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 665              		.loc 1 4915 0
 666 0006 1E4B     		ldr	r3, .L62
 667 0008 D3F8EC50 		ldr	r5, [r3, #236]
 668              	.LVL64:
4916:..\FreeRTOS\Source/tasks.c **** 
4917:..\FreeRTOS\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4918:..\FreeRTOS\Source/tasks.c **** 	{
4919:..\FreeRTOS\Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4920:..\FreeRTOS\Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4921:..\FreeRTOS\Source/tasks.c **** 		when the task leaves the Blocked state. */
4922:..\FreeRTOS\Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4923:..\FreeRTOS\Source/tasks.c **** 	}
4924:..\FreeRTOS\Source/tasks.c **** 	#endif
4925:..\FreeRTOS\Source/tasks.c **** 
4926:..\FreeRTOS\Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4927:..\FreeRTOS\Source/tasks.c **** 	as the same list item is used for both lists. */
4928:..\FreeRTOS\Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 669              		.loc 1 4928 0
 670 000c D3F8D800 		ldr	r0, [r3, #216]
 671              	.LVL65:
 672 0010 0430     		adds	r0, r0, #4
 673 0012 FFF7FEFF 		bl	uxListRemove
 674              	.LVL66:
 675 0016 60B9     		cbnz	r0, .L57
4929:..\FreeRTOS\Source/tasks.c **** 	{
4930:..\FreeRTOS\Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4931:..\FreeRTOS\Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4932:..\FreeRTOS\Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
 676              		.loc 1 4932 0
 677 0018 194B     		ldr	r3, .L62
 678 001a D3F8D820 		ldr	r2, [r3, #216]
 679 001e D16A     		ldr	r1, [r2, #44]
 680 0020 0122     		movs	r2, #1
 681 0022 02FA01F1 		lsl	r1, r2, r1
 682 0026 D3F8E420 		ldr	r2, [r3, #228]
 683 002a 22EA0102 		bic	r2, r2, r1
 684 002e C3F8E420 		str	r2, [r3, #228]
 685              	.L57:
4933:..\FreeRTOS\Source/tasks.c **** 	}
4934:..\FreeRTOS\Source/tasks.c **** 	else
4935:..\FreeRTOS\Source/tasks.c **** 	{
4936:..\FreeRTOS\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
4937:..\FreeRTOS\Source/tasks.c **** 	}
4938:..\FreeRTOS\Source/tasks.c **** 
4939:..\FreeRTOS\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4940:..\FreeRTOS\Source/tasks.c **** 	{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 101


4941:..\FreeRTOS\Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 686              		.loc 1 4941 0
 687 0032 B4F1FF3F 		cmp	r4, #-1
 688 0036 07D1     		bne	.L58
 689              		.loc 1 4941 0 is_stmt 0 discriminator 1
 690 0038 36B1     		cbz	r6, .L58
4942:..\FreeRTOS\Source/tasks.c **** 		{
4943:..\FreeRTOS\Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4944:..\FreeRTOS\Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4945:..\FreeRTOS\Source/tasks.c **** 			indefinitely. */
4946:..\FreeRTOS\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 691              		.loc 1 4946 0 is_stmt 1
 692 003a 1148     		ldr	r0, .L62
 693 003c D0F8D810 		ldr	r1, [r0, #216]
 694 0040 0431     		adds	r1, r1, #4
 695 0042 FFF7FEFF 		bl	vListInsertEnd
 696              	.LVL67:
 697 0046 70BD     		pop	{r4, r5, r6, pc}
 698              	.LVL68:
 699              	.L58:
4947:..\FreeRTOS\Source/tasks.c **** 		}
4948:..\FreeRTOS\Source/tasks.c **** 		else
4949:..\FreeRTOS\Source/tasks.c **** 		{
4950:..\FreeRTOS\Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4951:..\FreeRTOS\Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4952:..\FreeRTOS\Source/tasks.c **** 			kernel will manage it correctly. */
4953:..\FreeRTOS\Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 700              		.loc 1 4953 0
 701 0048 2C44     		add	r4, r4, r5
 702              	.LVL69:
4954:..\FreeRTOS\Source/tasks.c **** 
4955:..\FreeRTOS\Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4956:..\FreeRTOS\Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 703              		.loc 1 4956 0
 704 004a 0D4B     		ldr	r3, .L62
 705 004c D3F8D830 		ldr	r3, [r3, #216]
 706 0050 5C60     		str	r4, [r3, #4]
4957:..\FreeRTOS\Source/tasks.c **** 
4958:..\FreeRTOS\Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 707              		.loc 1 4958 0
 708 0052 A542     		cmp	r5, r4
 709 0054 08D9     		bls	.L60
4959:..\FreeRTOS\Source/tasks.c **** 			{
4960:..\FreeRTOS\Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4961:..\FreeRTOS\Source/tasks.c **** 				list. */
4962:..\FreeRTOS\Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 710              		.loc 1 4962 0
 711 0056 0A4B     		ldr	r3, .L62
 712 0058 D3F8D000 		ldr	r0, [r3, #208]
 713 005c D3F8D810 		ldr	r1, [r3, #216]
 714 0060 0431     		adds	r1, r1, #4
 715 0062 FFF7FEFF 		bl	vListInsert
 716              	.LVL70:
 717 0066 70BD     		pop	{r4, r5, r6, pc}
 718              	.LVL71:
 719              	.L60:
4963:..\FreeRTOS\Source/tasks.c **** 			}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 102


4964:..\FreeRTOS\Source/tasks.c **** 			else
4965:..\FreeRTOS\Source/tasks.c **** 			{
4966:..\FreeRTOS\Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4967:..\FreeRTOS\Source/tasks.c **** 				is used. */
4968:..\FreeRTOS\Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 720              		.loc 1 4968 0
 721 0068 054D     		ldr	r5, .L62
 722              	.LVL72:
 723 006a A86A     		ldr	r0, [r5, #40]
 724 006c D5F8D810 		ldr	r1, [r5, #216]
 725 0070 0431     		adds	r1, r1, #4
 726 0072 FFF7FEFF 		bl	vListInsert
 727              	.LVL73:
4969:..\FreeRTOS\Source/tasks.c **** 
4970:..\FreeRTOS\Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4971:..\FreeRTOS\Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4972:..\FreeRTOS\Source/tasks.c **** 				needs to be updated too. */
4973:..\FreeRTOS\Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
 728              		.loc 1 4973 0
 729 0076 EB6A     		ldr	r3, [r5, #44]
 730 0078 9C42     		cmp	r4, r3
 731 007a 00D2     		bcs	.L56
4974:..\FreeRTOS\Source/tasks.c **** 				{
4975:..\FreeRTOS\Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
 732              		.loc 1 4975 0
 733 007c EC62     		str	r4, [r5, #44]
 734              	.L56:
 735 007e 70BD     		pop	{r4, r5, r6, pc}
 736              	.LVL74:
 737              	.L63:
 738              		.align	2
 739              	.L62:
 740 0080 00000000 		.word	.LANCHOR0
 741              		.cfi_endproc
 742              	.LFE128:
 743              		.size	prvAddCurrentTaskToDelayedList, .-prvAddCurrentTaskToDelayedList
 744              		.section	.text.prvWriteNameToBuffer,"ax",%progbits
 745              		.align	2
 746              		.thumb
 747              		.thumb_func
 748              		.type	prvWriteNameToBuffer, %function
 749              	prvWriteNameToBuffer:
 750              	.LFB117:
4134:..\FreeRTOS\Source/tasks.c **** 	size_t x;
 751              		.loc 1 4134 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              	.LVL75:
 756 0000 10B5     		push	{r4, lr}
 757              		.cfi_def_cfa_offset 8
 758              		.cfi_offset 4, -8
 759              		.cfi_offset 14, -4
 760 0002 0446     		mov	r4, r0
4138:..\FreeRTOS\Source/tasks.c **** 
 761              		.loc 1 4138 0
 762 0004 FFF7FEFF 		bl	strcpy
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 103


 763              	.LVL76:
4142:..\FreeRTOS\Source/tasks.c **** 		{
 764              		.loc 1 4142 0
 765 0008 2046     		mov	r0, r4
 766 000a FFF7FEFF 		bl	strlen
 767              	.LVL77:
 768 000e 02E0     		b	.L65
 769              	.L66:
4144:..\FreeRTOS\Source/tasks.c **** 		}
 770              		.loc 1 4144 0 discriminator 3
 771 0010 2023     		movs	r3, #32
 772 0012 2354     		strb	r3, [r4, r0]
4142:..\FreeRTOS\Source/tasks.c **** 		{
 773              		.loc 1 4142 0 discriminator 3
 774 0014 0130     		adds	r0, r0, #1
 775              	.LVL78:
 776              	.L65:
4142:..\FreeRTOS\Source/tasks.c **** 		{
 777              		.loc 1 4142 0 is_stmt 0 discriminator 1
 778 0016 0A28     		cmp	r0, #10
 779 0018 FAD9     		bls	.L66
4148:..\FreeRTOS\Source/tasks.c **** 
 780              		.loc 1 4148 0 is_stmt 1
 781 001a 0023     		movs	r3, #0
 782 001c 2354     		strb	r3, [r4, r0]
4152:..\FreeRTOS\Source/tasks.c **** 
 783              		.loc 1 4152 0
 784 001e 2044     		add	r0, r0, r4
 785              	.LVL79:
 786 0020 10BD     		pop	{r4, pc}
 787              		.cfi_endproc
 788              	.LFE117:
 789              		.size	prvWriteNameToBuffer, .-prvWriteNameToBuffer
 790 0022 00BF     		.section	.text.xTaskCreate,"ax",%progbits
 791              		.align	2
 792              		.global	xTaskCreate
 793              		.thumb
 794              		.thumb_func
 795              		.type	xTaskCreate, %function
 796              	xTaskCreate:
 797              	.LFB69:
 738:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxNewTCB;
 798              		.loc 1 738 0
 799              		.cfi_startproc
 800              		@ args = 8, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              	.LVL80:
 803 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 804              		.cfi_def_cfa_offset 28
 805              		.cfi_offset 4, -28
 806              		.cfi_offset 5, -24
 807              		.cfi_offset 6, -20
 808              		.cfi_offset 7, -16
 809              		.cfi_offset 8, -12
 810              		.cfi_offset 9, -8
 811              		.cfi_offset 14, -4
 812 0004 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 104


 813              		.cfi_def_cfa_offset 48
 814 0006 0646     		mov	r6, r0
 815 0008 0F46     		mov	r7, r1
 816 000a 1546     		mov	r5, r2
 817 000c 9846     		mov	r8, r3
 818              	.LBB28:
 772:..\FreeRTOS\Source/tasks.c **** 
 819              		.loc 1 772 0
 820 000e 9000     		lsls	r0, r2, #2
 821              	.LVL81:
 822 0010 FFF7FEFF 		bl	pvPortMalloc
 823              	.LVL82:
 774:..\FreeRTOS\Source/tasks.c **** 			{
 824              		.loc 1 774 0
 825 0014 68B1     		cbz	r0, .L72
 826 0016 8146     		mov	r9, r0
 777:..\FreeRTOS\Source/tasks.c **** 
 827              		.loc 1 777 0
 828 0018 4FF49160 		mov	r0, #1160
 829              	.LVL83:
 830 001c FFF7FEFF 		bl	pvPortMalloc
 831              	.LVL84:
 779:..\FreeRTOS\Source/tasks.c **** 				{
 832              		.loc 1 779 0
 833 0020 0446     		mov	r4, r0
 834 0022 10B1     		cbz	r0, .L70
 782:..\FreeRTOS\Source/tasks.c **** 				}
 835              		.loc 1 782 0
 836 0024 C0F83090 		str	r9, [r0, #48]
 837 0028 04E0     		b	.L69
 838              	.L70:
 788:..\FreeRTOS\Source/tasks.c **** 				}
 839              		.loc 1 788 0
 840 002a 4846     		mov	r0, r9
 841              	.LVL85:
 842 002c FFF7FEFF 		bl	vPortFree
 843              	.LVL86:
 844 0030 00E0     		b	.L69
 845              	.LVL87:
 846              	.L72:
 793:..\FreeRTOS\Source/tasks.c **** 			}
 847              		.loc 1 793 0
 848 0032 0024     		movs	r4, #0
 849              	.LVL88:
 850              	.L69:
 851              	.LBE28:
 798:..\FreeRTOS\Source/tasks.c **** 		{
 852              		.loc 1 798 0
 853 0034 8CB1     		cbz	r4, .L73
 808:..\FreeRTOS\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 854              		.loc 1 808 0
 855 0036 0023     		movs	r3, #0
 856 0038 0393     		str	r3, [sp, #12]
 857 003a 0294     		str	r4, [sp, #8]
 858 003c 0D9B     		ldr	r3, [sp, #52]
 859 003e 0193     		str	r3, [sp, #4]
 860 0040 0C9B     		ldr	r3, [sp, #48]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 105


 861 0042 0093     		str	r3, [sp]
 862 0044 4346     		mov	r3, r8
 863 0046 2A46     		mov	r2, r5
 864 0048 3946     		mov	r1, r7
 865 004a 3046     		mov	r0, r6
 866 004c FFF7FEFF 		bl	prvInitialiseNewTask
 867              	.LVL89:
 809:..\FreeRTOS\Source/tasks.c **** 			xReturn = pdPASS;
 868              		.loc 1 809 0
 869 0050 2046     		mov	r0, r4
 870 0052 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 871              	.LVL90:
 810:..\FreeRTOS\Source/tasks.c **** 		}
 872              		.loc 1 810 0
 873 0056 0120     		movs	r0, #1
 874 0058 01E0     		b	.L71
 875              	.LVL91:
 876              	.L73:
 814:..\FreeRTOS\Source/tasks.c **** 		}
 877              		.loc 1 814 0
 878 005a 4FF0FF30 		mov	r0, #-1
 879              	.L71:
 880              	.LVL92:
 818:..\FreeRTOS\Source/tasks.c **** 
 881              		.loc 1 818 0
 882 005e 05B0     		add	sp, sp, #20
 883              		.cfi_def_cfa_offset 28
 884              		@ sp needed
 885 0060 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 886              		.cfi_endproc
 887              	.LFE69:
 888              		.size	xTaskCreate, .-xTaskCreate
 889              		.section	.text.vTaskDelete,"ax",%progbits
 890              		.align	2
 891              		.global	vTaskDelete
 892              		.thumb
 893              		.thumb_func
 894              		.type	vTaskDelete, %function
 895              	vTaskDelete:
 896              	.LFB72:
1113:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
 897              		.loc 1 1113 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901              	.LVL93:
 902 0000 70B5     		push	{r4, r5, r6, lr}
 903              		.cfi_def_cfa_offset 16
 904              		.cfi_offset 4, -16
 905              		.cfi_offset 5, -12
 906              		.cfi_offset 6, -8
 907              		.cfi_offset 14, -4
 908 0002 0446     		mov	r4, r0
1116:..\FreeRTOS\Source/tasks.c **** 		{
 909              		.loc 1 1116 0
 910 0004 FFF7FEFF 		bl	vPortEnterCritical
 911              	.LVL94:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 106


1120:..\FreeRTOS\Source/tasks.c **** 
 912              		.loc 1 1120 0
 913 0008 14B9     		cbnz	r4, .L76
1120:..\FreeRTOS\Source/tasks.c **** 
 914              		.loc 1 1120 0 is_stmt 0 discriminator 1
 915 000a 2A4B     		ldr	r3, .L83
 916 000c D3F8D840 		ldr	r4, [r3, #216]
 917              	.LVL95:
 918              	.L76:
1123:..\FreeRTOS\Source/tasks.c **** 			{
 919              		.loc 1 1123 0 is_stmt 1 discriminator 4
 920 0010 251D     		adds	r5, r4, #4
 921 0012 2846     		mov	r0, r5
 922 0014 FFF7FEFF 		bl	uxListRemove
 923              	.LVL96:
 924 0018 80B9     		cbnz	r0, .L77
1125:..\FreeRTOS\Source/tasks.c **** 			}
 925              		.loc 1 1125 0
 926 001a E26A     		ldr	r2, [r4, #44]
 927 001c 02EB8201 		add	r1, r2, r2, lsl #2
 928 0020 8B00     		lsls	r3, r1, #2
 929 0022 2449     		ldr	r1, .L83
 930 0024 0B44     		add	r3, r3, r1
 931 0026 1B6B     		ldr	r3, [r3, #48]
 932 0028 43B9     		cbnz	r3, .L77
1125:..\FreeRTOS\Source/tasks.c **** 			}
 933              		.loc 1 1125 0 is_stmt 0 discriminator 1
 934 002a 0123     		movs	r3, #1
 935 002c 03FA02F2 		lsl	r2, r3, r2
 936 0030 D1F8E430 		ldr	r3, [r1, #228]
 937 0034 23EA0202 		bic	r2, r3, r2
 938 0038 C1F8E420 		str	r2, [r1, #228]
 939              	.L77:
1133:..\FreeRTOS\Source/tasks.c **** 			{
 940              		.loc 1 1133 0 is_stmt 1
 941 003c A36A     		ldr	r3, [r4, #40]
 942 003e 1BB1     		cbz	r3, .L78
1135:..\FreeRTOS\Source/tasks.c **** 			}
 943              		.loc 1 1135 0
 944 0040 04F11800 		add	r0, r4, #24
 945 0044 FFF7FEFF 		bl	uxListRemove
 946              	.LVL97:
 947              	.L78:
1146:..\FreeRTOS\Source/tasks.c **** 
 948              		.loc 1 1146 0
 949 0048 1A4B     		ldr	r3, .L83
 950 004a D3F8E020 		ldr	r2, [r3, #224]
 951 004e 0132     		adds	r2, r2, #1
 952 0050 C3F8E020 		str	r2, [r3, #224]
1148:..\FreeRTOS\Source/tasks.c **** 			{
 953              		.loc 1 1148 0
 954 0054 D3F8D830 		ldr	r3, [r3, #216]
 955 0058 9C42     		cmp	r4, r3
 956 005a 0BD1     		bne	.L79
1155:..\FreeRTOS\Source/tasks.c **** 
 957              		.loc 1 1155 0
 958 005c 154E     		ldr	r6, .L83
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 107


 959 005e 2946     		mov	r1, r5
 960 0060 06F1BC00 		add	r0, r6, #188
 961 0064 FFF7FEFF 		bl	vListInsertEnd
 962              	.LVL98:
1160:..\FreeRTOS\Source/tasks.c **** 
 963              		.loc 1 1160 0
 964 0068 D6F8E830 		ldr	r3, [r6, #232]
 965 006c 0133     		adds	r3, r3, #1
 966 006e C6F8E830 		str	r3, [r6, #232]
 967 0072 0AE0     		b	.L80
 968              	.L79:
1171:..\FreeRTOS\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 969              		.loc 1 1171 0
 970 0074 0F4A     		ldr	r2, .L83
 971 0076 D2F8D430 		ldr	r3, [r2, #212]
 972 007a 013B     		subs	r3, r3, #1
 973 007c C2F8D430 		str	r3, [r2, #212]
1172:..\FreeRTOS\Source/tasks.c **** 
 974              		.loc 1 1172 0
 975 0080 2046     		mov	r0, r4
 976 0082 FFF7FEFF 		bl	prvDeleteTCB
 977              	.LVL99:
1176:..\FreeRTOS\Source/tasks.c **** 			}
 978              		.loc 1 1176 0
 979 0086 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 980              	.LVL100:
 981              	.L80:
1181:..\FreeRTOS\Source/tasks.c **** 
 982              		.loc 1 1181 0
 983 008a FFF7FEFF 		bl	vPortExitCritical
 984              	.LVL101:
1185:..\FreeRTOS\Source/tasks.c **** 		{
 985              		.loc 1 1185 0
 986 008e 094B     		ldr	r3, .L83
 987 0090 D3F8DC30 		ldr	r3, [r3, #220]
 988 0094 63B1     		cbz	r3, .L75
1187:..\FreeRTOS\Source/tasks.c **** 			{
 989              		.loc 1 1187 0
 990 0096 074B     		ldr	r3, .L83
 991 0098 D3F8D830 		ldr	r3, [r3, #216]
 992 009c 9C42     		cmp	r4, r3
 993 009e 07D1     		bne	.L75
1190:..\FreeRTOS\Source/tasks.c **** 			}
 994              		.loc 1 1190 0
 995 00a0 4FF08052 		mov	r2, #268435456
 996 00a4 044B     		ldr	r3, .L83+4
 997 00a6 1A60     		str	r2, [r3]
 998              		.syntax unified
 999              	@ 1190 "..\FreeRTOS\Source\tasks.c" 1
 1000 00a8 BFF34F8F 		dsb
 1001              	@ 0 "" 2
 1002              	@ 1190 "..\FreeRTOS\Source\tasks.c" 1
 1003 00ac BFF36F8F 		isb
 1004              	@ 0 "" 2
 1005              		.thumb
 1006              		.syntax unified
 1007              	.L75:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 108


 1008 00b0 70BD     		pop	{r4, r5, r6, pc}
 1009              	.LVL102:
 1010              	.L84:
 1011 00b2 00BF     		.align	2
 1012              	.L83:
 1013 00b4 00000000 		.word	.LANCHOR0
 1014 00b8 04ED00E0 		.word	-536810236
 1015              		.cfi_endproc
 1016              	.LFE72:
 1017              		.size	vTaskDelete, .-vTaskDelete
 1018              		.section	.text.eTaskGetState,"ax",%progbits
 1019              		.align	2
 1020              		.global	eTaskGetState
 1021              		.thumb
 1022              		.thumb_func
 1023              		.type	eTaskGetState, %function
 1024              	eTaskGetState:
 1025              	.LFB75:
1334:..\FreeRTOS\Source/tasks.c **** 	eTaskState eReturn;
 1026              		.loc 1 1334 0
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 1030              	.LVL103:
 1031 0000 38B5     		push	{r3, r4, r5, lr}
 1032              		.cfi_def_cfa_offset 16
 1033              		.cfi_offset 3, -16
 1034              		.cfi_offset 4, -12
 1035              		.cfi_offset 5, -8
 1036              		.cfi_offset 14, -4
 1037              	.LVL104:
1341:..\FreeRTOS\Source/tasks.c **** 		{
 1038              		.loc 1 1341 0
 1039 0002 164B     		ldr	r3, .L95
 1040 0004 D3F8D830 		ldr	r3, [r3, #216]
 1041 0008 9842     		cmp	r0, r3
 1042 000a 1BD0     		beq	.L88
 1043 000c 0446     		mov	r4, r0
1348:..\FreeRTOS\Source/tasks.c **** 			{
 1044              		.loc 1 1348 0
 1045 000e FFF7FEFF 		bl	vPortEnterCritical
 1046              	.LVL105:
1350:..\FreeRTOS\Source/tasks.c **** 			}
 1047              		.loc 1 1350 0
 1048 0012 6569     		ldr	r5, [r4, #20]
 1049              	.LVL106:
1352:..\FreeRTOS\Source/tasks.c **** 
 1050              		.loc 1 1352 0
 1051 0014 FFF7FEFF 		bl	vPortExitCritical
 1052              	.LVL107:
1354:..\FreeRTOS\Source/tasks.c **** 			{
 1053              		.loc 1 1354 0
 1054 0018 104B     		ldr	r3, .L95
 1055 001a 9B6A     		ldr	r3, [r3, #40]
 1056 001c 9D42     		cmp	r5, r3
 1057 001e 13D0     		beq	.L89
1354:..\FreeRTOS\Source/tasks.c **** 			{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 109


 1058              		.loc 1 1354 0 is_stmt 0 discriminator 1
 1059 0020 0E4B     		ldr	r3, .L95
 1060 0022 D3F8D030 		ldr	r3, [r3, #208]
 1061 0026 9D42     		cmp	r5, r3
 1062 0028 10D0     		beq	.L90
1362:..\FreeRTOS\Source/tasks.c **** 				{
 1063              		.loc 1 1362 0 is_stmt 1
 1064 002a 0C4B     		ldr	r3, .L95
 1065 002c 9D42     		cmp	r5, r3
 1066 002e 03D1     		bne	.L87
1367:..\FreeRTOS\Source/tasks.c **** 					{
 1067              		.loc 1 1367 0
 1068 0030 A36A     		ldr	r3, [r4, #40]
 1069 0032 6BB9     		cbnz	r3, .L91
1369:..\FreeRTOS\Source/tasks.c **** 					}
 1070              		.loc 1 1369 0
 1071 0034 0320     		movs	r0, #3
 1072 0036 38BD     		pop	{r3, r4, r5, pc}
 1073              	.LVL108:
 1074              	.L87:
1379:..\FreeRTOS\Source/tasks.c **** 				{
 1075              		.loc 1 1379 0
 1076 0038 094B     		ldr	r3, .L95+4
 1077 003a 9D42     		cmp	r5, r3
 1078 003c 0AD0     		beq	.L92
1379:..\FreeRTOS\Source/tasks.c **** 				{
 1079              		.loc 1 1379 0 is_stmt 0 discriminator 1
 1080 003e 5DB9     		cbnz	r5, .L93
1384:..\FreeRTOS\Source/tasks.c **** 				}
 1081              		.loc 1 1384 0 is_stmt 1
 1082 0040 0420     		movs	r0, #4
 1083 0042 38BD     		pop	{r3, r4, r5, pc}
 1084              	.LVL109:
 1085              	.L88:
1344:..\FreeRTOS\Source/tasks.c **** 		}
 1086              		.loc 1 1344 0
 1087 0044 0020     		movs	r0, #0
 1088              	.LVL110:
 1089 0046 38BD     		pop	{r3, r4, r5, pc}
 1090              	.LVL111:
 1091              	.L89:
1358:..\FreeRTOS\Source/tasks.c **** 			}
 1092              		.loc 1 1358 0
 1093 0048 0220     		movs	r0, #2
 1094 004a 38BD     		pop	{r3, r4, r5, pc}
 1095              	.LVL112:
 1096              	.L90:
 1097 004c 0220     		movs	r0, #2
 1098 004e 38BD     		pop	{r3, r4, r5, pc}
 1099              	.LVL113:
 1100              	.L91:
1373:..\FreeRTOS\Source/tasks.c **** 					}
 1101              		.loc 1 1373 0
 1102 0050 0220     		movs	r0, #2
 1103 0052 38BD     		pop	{r3, r4, r5, pc}
 1104              	.LVL114:
 1105              	.L92:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 110


1384:..\FreeRTOS\Source/tasks.c **** 				}
 1106              		.loc 1 1384 0
 1107 0054 0420     		movs	r0, #4
 1108 0056 38BD     		pop	{r3, r4, r5, pc}
 1109              	.LVL115:
 1110              	.L93:
1392:..\FreeRTOS\Source/tasks.c **** 			}
 1111              		.loc 1 1392 0
 1112 0058 0120     		movs	r0, #1
 1113              	.LVL116:
1397:..\FreeRTOS\Source/tasks.c **** 
 1114              		.loc 1 1397 0
 1115 005a 38BD     		pop	{r3, r4, r5, pc}
 1116              	.LVL117:
 1117              	.L96:
 1118              		.align	2
 1119              	.L95:
 1120 005c 00000000 		.word	.LANCHOR0
 1121 0060 BC000000 		.word	.LANCHOR0+188
 1122              		.cfi_endproc
 1123              	.LFE75:
 1124              		.size	eTaskGetState, .-eTaskGetState
 1125              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1126              		.align	2
 1127              		.global	uxTaskPriorityGet
 1128              		.thumb
 1129              		.thumb_func
 1130              		.type	uxTaskPriorityGet, %function
 1131              	uxTaskPriorityGet:
 1132              	.LFB76:
1405:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
 1133              		.loc 1 1405 0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 1137              	.LVL118:
 1138 0000 10B5     		push	{r4, lr}
 1139              		.cfi_def_cfa_offset 8
 1140              		.cfi_offset 4, -8
 1141              		.cfi_offset 14, -4
 1142 0002 0446     		mov	r4, r0
1409:..\FreeRTOS\Source/tasks.c **** 		{
 1143              		.loc 1 1409 0
 1144 0004 FFF7FEFF 		bl	vPortEnterCritical
 1145              	.LVL119:
1413:..\FreeRTOS\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1146              		.loc 1 1413 0
 1147 0008 14B9     		cbnz	r4, .L98
1413:..\FreeRTOS\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1148              		.loc 1 1413 0 is_stmt 0 discriminator 1
 1149 000a 044B     		ldr	r3, .L100
 1150 000c D3F8D840 		ldr	r4, [r3, #216]
 1151              	.LVL120:
 1152              	.L98:
1414:..\FreeRTOS\Source/tasks.c **** 		}
 1153              		.loc 1 1414 0 is_stmt 1 discriminator 4
 1154 0010 E46A     		ldr	r4, [r4, #44]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 111


 1155              	.LVL121:
1416:..\FreeRTOS\Source/tasks.c **** 
 1156              		.loc 1 1416 0 discriminator 4
 1157 0012 FFF7FEFF 		bl	vPortExitCritical
 1158              	.LVL122:
1419:..\FreeRTOS\Source/tasks.c **** 
 1159              		.loc 1 1419 0 discriminator 4
 1160 0016 2046     		mov	r0, r4
 1161 0018 10BD     		pop	{r4, pc}
 1162              	.LVL123:
 1163              	.L101:
 1164 001a 00BF     		.align	2
 1165              	.L100:
 1166 001c 00000000 		.word	.LANCHOR0
 1167              		.cfi_endproc
 1168              	.LFE76:
 1169              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 1170              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1171              		.align	2
 1172              		.global	uxTaskPriorityGetFromISR
 1173              		.thumb
 1174              		.thumb_func
 1175              		.type	uxTaskPriorityGetFromISR, %function
 1176              	uxTaskPriorityGetFromISR:
 1177              	.LFB77:
1427:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
 1178              		.loc 1 1427 0
 1179              		.cfi_startproc
 1180              		@ args = 0, pretend = 0, frame = 0
 1181              		@ frame_needed = 0, uses_anonymous_args = 0
 1182              		@ link register save eliminated.
 1183              	.LVL124:
 1184              	.LBB29:
 1185              	.LBB30:
 1186              		.file 2 "..\\FreeRTOS\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  15:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  22:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 112


  23:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  25:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  27:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  28:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  29:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  32:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  34:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  35:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  36:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  39:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  42:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  45:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  46:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  47:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  48:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  51:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  52:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  55:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #else
  63:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  66:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  70:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  72:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 113


  80:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  81:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  84:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
  89:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  90:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  96:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
  97:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 106:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 115:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 120:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 122:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 126:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 127:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 129:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 132:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 134:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 136:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 114


 137:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 142:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 143:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 147:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 149:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 151:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 153:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 155:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 159:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 160:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 162:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 163:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 165:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 171:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 174:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 177:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 179:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 181:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 182:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 183:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 185:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 186:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 187:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 188:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 189:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 193:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 115


 194:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 195:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 196:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 197:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	);
 203:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 204:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 205:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 206:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 207:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 209:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 211:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 1187              		.loc 2 211 0
 1188              		.syntax unified
 1189              	@ 211 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1190 0000 EFF31183 			mrs r3, basepri											
 1191 0004 4FF0A002 		mov r2, #160												
 1192 0008 82F31188 		msr basepri, r2											
 1193 000c BFF36F8F 		isb														
 1194 0010 BFF34F8F 		dsb														
 1195              	
 1196              	@ 0 "" 2
 1197              		.thumb
 1198              		.syntax unified
 1199              	.LBE30:
 1200              	.LBE29:
1453:..\FreeRTOS\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1201              		.loc 1 1453 0
 1202 0014 10B9     		cbnz	r0, .L103
1453:..\FreeRTOS\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1203              		.loc 1 1453 0 is_stmt 0 discriminator 1
 1204 0016 034A     		ldr	r2, .L104
 1205 0018 D2F8D800 		ldr	r0, [r2, #216]
 1206              	.LVL125:
 1207              	.L103:
1454:..\FreeRTOS\Source/tasks.c **** 		}
 1208              		.loc 1 1454 0 is_stmt 1 discriminator 4
 1209 001c C06A     		ldr	r0, [r0, #44]
 1210              	.LVL126:
 1211              	.LBB31:
 1212              	.LBB32:
 212:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 213:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 215:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 217:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 218:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	);
 220:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 221:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 116


 222:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	warnings. */
 223:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 224:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 225:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 226:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 227:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 229:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 1213              		.loc 2 229 0 discriminator 4
 1214              		.syntax unified
 1215              	@ 229 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1216 001e 83F31188 			msr basepri, r3	
 1217              	@ 0 "" 2
 1218              	.LVL127:
 1219              		.thumb
 1220              		.syntax unified
 1221              	.LBE32:
 1222              	.LBE31:
1459:..\FreeRTOS\Source/tasks.c **** 
 1223              		.loc 1 1459 0 discriminator 4
 1224 0022 7047     		bx	lr
 1225              	.L105:
 1226              		.align	2
 1227              	.L104:
 1228 0024 00000000 		.word	.LANCHOR0
 1229              		.cfi_endproc
 1230              	.LFE77:
 1231              		.size	uxTaskPriorityGetFromISR, .-uxTaskPriorityGetFromISR
 1232              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1233              		.align	2
 1234              		.global	vTaskPrioritySet
 1235              		.thumb
 1236              		.thumb_func
 1237              		.type	vTaskPrioritySet, %function
 1238              	vTaskPrioritySet:
 1239              	.LFB78:
1467:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
 1240              		.loc 1 1467 0
 1241              		.cfi_startproc
 1242              		@ args = 0, pretend = 0, frame = 0
 1243              		@ frame_needed = 0, uses_anonymous_args = 0
 1244              	.LVL128:
 1245 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1246              		.cfi_def_cfa_offset 24
 1247              		.cfi_offset 3, -24
 1248              		.cfi_offset 4, -20
 1249              		.cfi_offset 5, -16
 1250              		.cfi_offset 6, -12
 1251              		.cfi_offset 7, -8
 1252              		.cfi_offset 14, -4
 1253 0002 0446     		mov	r4, r0
 1254 0004 0D46     		mov	r5, r1
 1255              	.LVL129:
1475:..\FreeRTOS\Source/tasks.c **** 		{
 1256              		.loc 1 1475 0
 1257 0006 0429     		cmp	r1, #4
 1258 0008 00D9     		bls	.L107
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 117


1477:..\FreeRTOS\Source/tasks.c **** 		}
 1259              		.loc 1 1477 0
 1260 000a 0425     		movs	r5, #4
 1261              	.L107:
 1262              	.LVL130:
1484:..\FreeRTOS\Source/tasks.c **** 		{
 1263              		.loc 1 1484 0
 1264 000c FFF7FEFF 		bl	vPortEnterCritical
 1265              	.LVL131:
1488:..\FreeRTOS\Source/tasks.c **** 
 1266              		.loc 1 1488 0
 1267 0010 14B9     		cbnz	r4, .L108
1488:..\FreeRTOS\Source/tasks.c **** 
 1268              		.loc 1 1488 0 is_stmt 0 discriminator 1
 1269 0012 324B     		ldr	r3, .L123
 1270 0014 D3F8D840 		ldr	r4, [r3, #216]
 1271              	.LVL132:
 1272              	.L108:
1494:..\FreeRTOS\Source/tasks.c **** 			}
 1273              		.loc 1 1494 0 is_stmt 1 discriminator 4
 1274 0018 A36C     		ldr	r3, [r4, #72]
 1275              	.LVL133:
1502:..\FreeRTOS\Source/tasks.c **** 			{
 1276              		.loc 1 1502 0 discriminator 4
 1277 001a 9D42     		cmp	r5, r3
 1278 001c 5AD0     		beq	.L109
1506:..\FreeRTOS\Source/tasks.c **** 				{
 1279              		.loc 1 1506 0
 1280 001e 0CD9     		bls	.L110
1508:..\FreeRTOS\Source/tasks.c **** 					{
 1281              		.loc 1 1508 0
 1282 0020 2E4A     		ldr	r2, .L123
 1283 0022 D2F8D820 		ldr	r2, [r2, #216]
 1284 0026 9442     		cmp	r4, r2
 1285 0028 0ED0     		beq	.L118
1513:..\FreeRTOS\Source/tasks.c **** 						{
 1286              		.loc 1 1513 0
 1287 002a 2C4A     		ldr	r2, .L123
 1288 002c D2F8D820 		ldr	r2, [r2, #216]
 1289 0030 D26A     		ldr	r2, [r2, #44]
 1290 0032 9542     		cmp	r5, r2
 1291 0034 0AD2     		bcs	.L119
1470:..\FreeRTOS\Source/tasks.c **** 
 1292              		.loc 1 1470 0
 1293 0036 0027     		movs	r7, #0
 1294 0038 0BE0     		b	.L111
 1295              	.L110:
1529:..\FreeRTOS\Source/tasks.c **** 				{
 1296              		.loc 1 1529 0
 1297 003a 284A     		ldr	r2, .L123
 1298 003c D2F8D820 		ldr	r2, [r2, #216]
 1299 0040 9442     		cmp	r4, r2
 1300 0042 05D0     		beq	.L120
1470:..\FreeRTOS\Source/tasks.c **** 
 1301              		.loc 1 1470 0
 1302 0044 0027     		movs	r7, #0
 1303 0046 04E0     		b	.L111
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 118


 1304              	.L118:
 1305 0048 0027     		movs	r7, #0
 1306 004a 02E0     		b	.L111
 1307              	.L119:
1515:..\FreeRTOS\Source/tasks.c **** 						}
 1308              		.loc 1 1515 0
 1309 004c 0127     		movs	r7, #1
 1310 004e 00E0     		b	.L111
 1311              	.L120:
1534:..\FreeRTOS\Source/tasks.c **** 				}
 1312              		.loc 1 1534 0
 1313 0050 0127     		movs	r7, #1
 1314              	.L111:
 1315              	.LVL134:
1546:..\FreeRTOS\Source/tasks.c **** 
 1316              		.loc 1 1546 0
 1317 0052 E66A     		ldr	r6, [r4, #44]
 1318              	.LVL135:
1552:..\FreeRTOS\Source/tasks.c **** 					{
 1319              		.loc 1 1552 0
 1320 0054 B342     		cmp	r3, r6
 1321 0056 00D1     		bne	.L112
1554:..\FreeRTOS\Source/tasks.c **** 					}
 1322              		.loc 1 1554 0
 1323 0058 E562     		str	r5, [r4, #44]
 1324              	.L112:
1562:..\FreeRTOS\Source/tasks.c **** 				}
 1325              		.loc 1 1562 0
 1326 005a A564     		str	r5, [r4, #72]
1572:..\FreeRTOS\Source/tasks.c **** 				{
 1327              		.loc 1 1572 0
 1328 005c A369     		ldr	r3, [r4, #24]
 1329              	.LVL136:
 1330 005e 002B     		cmp	r3, #0
 1331 0060 02DB     		blt	.L113
1574:..\FreeRTOS\Source/tasks.c **** 				}
 1332              		.loc 1 1574 0
 1333 0062 C5F10505 		rsb	r5, r5, #5
 1334              	.LVL137:
 1335 0066 A561     		str	r5, [r4, #24]
 1336              	.L113:
1585:..\FreeRTOS\Source/tasks.c **** 				{
 1337              		.loc 1 1585 0
 1338 0068 6169     		ldr	r1, [r4, #20]
 1339 006a 06EB8602 		add	r2, r6, r6, lsl #2
 1340 006e 9300     		lsls	r3, r2, #2
 1341 0070 1B4A     		ldr	r2, .L123+4
 1342 0072 1344     		add	r3, r3, r2
 1343 0074 9942     		cmp	r1, r3
 1344 0076 01D1     		bne	.L121
 1345 0078 0123     		movs	r3, #1
 1346 007a 00E0     		b	.L114
 1347              	.L121:
 1348 007c 0023     		movs	r3, #0
 1349              	.L114:
1585:..\FreeRTOS\Source/tasks.c **** 				{
 1350              		.loc 1 1585 0 is_stmt 0 discriminator 4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 119


 1351 007e 03B3     		cbz	r3, .L115
1590:..\FreeRTOS\Source/tasks.c **** 					{
 1352              		.loc 1 1590 0 is_stmt 1
 1353 0080 251D     		adds	r5, r4, #4
 1354 0082 2846     		mov	r0, r5
 1355 0084 FFF7FEFF 		bl	uxListRemove
 1356              	.LVL138:
 1357 0088 48B9     		cbnz	r0, .L116
1595:..\FreeRTOS\Source/tasks.c **** 					}
 1358              		.loc 1 1595 0
 1359 008a 0123     		movs	r3, #1
 1360 008c 03FA06F6 		lsl	r6, r3, r6
 1361              	.LVL139:
 1362 0090 124A     		ldr	r2, .L123
 1363 0092 D2F8E430 		ldr	r3, [r2, #228]
 1364 0096 23EA0606 		bic	r6, r3, r6
 1365 009a C2F8E460 		str	r6, [r2, #228]
 1366              	.L116:
1601:..\FreeRTOS\Source/tasks.c **** 				}
 1367              		.loc 1 1601 0
 1368 009e E36A     		ldr	r3, [r4, #44]
 1369 00a0 0122     		movs	r2, #1
 1370 00a2 02FA03F1 		lsl	r1, r2, r3
 1371 00a6 0D48     		ldr	r0, .L123
 1372 00a8 D0F8E420 		ldr	r2, [r0, #228]
 1373 00ac 0A43     		orrs	r2, r2, r1
 1374 00ae C0F8E420 		str	r2, [r0, #228]
 1375 00b2 3030     		adds	r0, r0, #48
 1376 00b4 03EB8303 		add	r3, r3, r3, lsl #2
 1377 00b8 9A00     		lsls	r2, r3, #2
 1378 00ba 2946     		mov	r1, r5
 1379 00bc 1044     		add	r0, r0, r2
 1380 00be FFF7FEFF 		bl	vListInsertEnd
 1381              	.LVL140:
 1382              	.L115:
1608:..\FreeRTOS\Source/tasks.c **** 				{
 1383              		.loc 1 1608 0
 1384 00c2 3FB1     		cbz	r7, .L109
1610:..\FreeRTOS\Source/tasks.c **** 				}
 1385              		.loc 1 1610 0
 1386 00c4 4FF08052 		mov	r2, #268435456
 1387 00c8 064B     		ldr	r3, .L123+8
 1388 00ca 1A60     		str	r2, [r3]
 1389              		.syntax unified
 1390              	@ 1610 "..\FreeRTOS\Source\tasks.c" 1
 1391 00cc BFF34F8F 		dsb
 1392              	@ 0 "" 2
 1393              	@ 1610 "..\FreeRTOS\Source\tasks.c" 1
 1394 00d0 BFF36F8F 		isb
 1395              	@ 0 "" 2
 1396              	.LVL141:
 1397              		.thumb
 1398              		.syntax unified
 1399              	.L109:
1622:..\FreeRTOS\Source/tasks.c **** 	}
 1400              		.loc 1 1622 0
 1401 00d4 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 120


 1402              	.LVL142:
 1403 00d8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1404              	.LVL143:
 1405              	.L124:
 1406 00da 00BF     		.align	2
 1407              	.L123:
 1408 00dc 00000000 		.word	.LANCHOR0
 1409 00e0 30000000 		.word	.LANCHOR0+48
 1410 00e4 04ED00E0 		.word	-536810236
 1411              		.cfi_endproc
 1412              	.LFE78:
 1413              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1414              		.section	.text.vTaskResume,"ax",%progbits
 1415              		.align	2
 1416              		.global	vTaskResume
 1417              		.thumb
 1418              		.thumb_func
 1419              		.type	vTaskResume, %function
 1420              	vTaskResume:
 1421              	.LFB81:
1778:..\FreeRTOS\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1422              		.loc 1 1778 0
 1423              		.cfi_startproc
 1424              		@ args = 0, pretend = 0, frame = 0
 1425              		@ frame_needed = 0, uses_anonymous_args = 0
 1426              	.LVL144:
1786:..\FreeRTOS\Source/tasks.c **** 		{
 1427              		.loc 1 1786 0
 1428 0000 A0B3     		cbz	r0, .L129
1786:..\FreeRTOS\Source/tasks.c **** 		{
 1429              		.loc 1 1786 0 is_stmt 0 discriminator 1
 1430 0002 1B4A     		ldr	r2, .L130
 1431 0004 D2F8D820 		ldr	r2, [r2, #216]
 1432 0008 9042     		cmp	r0, r2
 1433 000a 2FD0     		beq	.L129
1778:..\FreeRTOS\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1434              		.loc 1 1778 0 is_stmt 1
 1435 000c 70B5     		push	{r4, r5, r6, lr}
 1436              		.cfi_def_cfa_offset 16
 1437              		.cfi_offset 4, -16
 1438              		.cfi_offset 5, -12
 1439              		.cfi_offset 6, -8
 1440              		.cfi_offset 14, -4
 1441 000e 0446     		mov	r4, r0
1788:..\FreeRTOS\Source/tasks.c **** 			{
 1442              		.loc 1 1788 0
 1443 0010 FFF7FEFF 		bl	vPortEnterCritical
 1444              	.LVL145:
1790:..\FreeRTOS\Source/tasks.c **** 				{
 1445              		.loc 1 1790 0
 1446 0014 2046     		mov	r0, r4
 1447 0016 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1448              	.LVL146:
 1449 001a 20B3     		cbz	r0, .L127
1796:..\FreeRTOS\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1450              		.loc 1 1796 0
 1451 001c 261D     		adds	r6, r4, #4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 121


 1452 001e 3046     		mov	r0, r6
 1453 0020 FFF7FEFF 		bl	uxListRemove
 1454              	.LVL147:
1797:..\FreeRTOS\Source/tasks.c **** 
 1455              		.loc 1 1797 0
 1456 0024 E36A     		ldr	r3, [r4, #44]
 1457 0026 0122     		movs	r2, #1
 1458 0028 02FA03F1 		lsl	r1, r2, r3
 1459 002c 104D     		ldr	r5, .L130
 1460 002e D5F8E420 		ldr	r2, [r5, #228]
 1461 0032 0A43     		orrs	r2, r2, r1
 1462 0034 C5F8E420 		str	r2, [r5, #228]
 1463 0038 05F13000 		add	r0, r5, #48
 1464 003c 03EB8303 		add	r3, r3, r3, lsl #2
 1465 0040 9A00     		lsls	r2, r3, #2
 1466 0042 3146     		mov	r1, r6
 1467 0044 1044     		add	r0, r0, r2
 1468 0046 FFF7FEFF 		bl	vListInsertEnd
 1469              	.LVL148:
1800:..\FreeRTOS\Source/tasks.c **** 					{
 1470              		.loc 1 1800 0
 1471 004a E26A     		ldr	r2, [r4, #44]
 1472 004c D5F8D830 		ldr	r3, [r5, #216]
 1473 0050 DB6A     		ldr	r3, [r3, #44]
 1474 0052 9A42     		cmp	r2, r3
 1475 0054 07D3     		bcc	.L127
1805:..\FreeRTOS\Source/tasks.c **** 					}
 1476              		.loc 1 1805 0
 1477 0056 4FF08052 		mov	r2, #268435456
 1478 005a 064B     		ldr	r3, .L130+4
 1479 005c 1A60     		str	r2, [r3]
 1480              		.syntax unified
 1481              	@ 1805 "..\FreeRTOS\Source\tasks.c" 1
 1482 005e BFF34F8F 		dsb
 1483              	@ 0 "" 2
 1484              	@ 1805 "..\FreeRTOS\Source\tasks.c" 1
 1485 0062 BFF36F8F 		isb
 1486              	@ 0 "" 2
 1487              		.thumb
 1488              		.syntax unified
 1489              	.L127:
1817:..\FreeRTOS\Source/tasks.c **** 		}
 1490              		.loc 1 1817 0
 1491 0066 FFF7FEFF 		bl	vPortExitCritical
 1492              	.LVL149:
 1493 006a 70BD     		pop	{r4, r5, r6, pc}
 1494              	.LVL150:
 1495              	.L129:
 1496              		.cfi_def_cfa_offset 0
 1497              		.cfi_restore 4
 1498              		.cfi_restore 5
 1499              		.cfi_restore 6
 1500              		.cfi_restore 14
 1501 006c 7047     		bx	lr
 1502              	.L131:
 1503 006e 00BF     		.align	2
 1504              	.L130:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 122


 1505 0070 00000000 		.word	.LANCHOR0
 1506 0074 04ED00E0 		.word	-536810236
 1507              		.cfi_endproc
 1508              	.LFE81:
 1509              		.size	vTaskResume, .-vTaskResume
 1510              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1511              		.align	2
 1512              		.global	xTaskResumeFromISR
 1513              		.thumb
 1514              		.thumb_func
 1515              		.type	xTaskResumeFromISR, %function
 1516              	xTaskResumeFromISR:
 1517              	.LFB82:
1832:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1518              		.loc 1 1832 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 0
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
 1522              	.LVL151:
 1523 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1524              		.cfi_def_cfa_offset 24
 1525              		.cfi_offset 3, -24
 1526              		.cfi_offset 4, -20
 1527              		.cfi_offset 5, -16
 1528              		.cfi_offset 6, -12
 1529              		.cfi_offset 7, -8
 1530              		.cfi_offset 14, -4
 1531 0002 0446     		mov	r4, r0
 1532              	.LVL152:
 1533              	.LBB33:
 1534              	.LBB34:
 211:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1535              		.loc 2 211 0
 1536              		.syntax unified
 1537              	@ 211 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1538 0004 EFF31185 			mrs r5, basepri											
 1539 0008 4FF0A003 		mov r3, #160												
 1540 000c 83F31188 		msr basepri, r3											
 1541 0010 BFF36F8F 		isb														
 1542 0014 BFF34F8F 		dsb														
 1543              	
 1544              	@ 0 "" 2
 1545              		.thumb
 1546              		.syntax unified
 1547              	.LBE34:
 1548              	.LBE33:
1859:..\FreeRTOS\Source/tasks.c **** 			{
 1549              		.loc 1 1859 0
 1550 0018 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1551              	.LVL153:
 1552 001c 58B3     		cbz	r0, .L136
1864:..\FreeRTOS\Source/tasks.c **** 				{
 1553              		.loc 1 1864 0
 1554 001e 184B     		ldr	r3, .L139
 1555 0020 D3F8F030 		ldr	r3, [r3, #240]
 1556 0024 03BB     		cbnz	r3, .L134
1868:..\FreeRTOS\Source/tasks.c **** 					{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 123


 1557              		.loc 1 1868 0
 1558 0026 E26A     		ldr	r2, [r4, #44]
 1559 0028 154B     		ldr	r3, .L139
 1560 002a D3F8D830 		ldr	r3, [r3, #216]
 1561 002e DB6A     		ldr	r3, [r3, #44]
 1562 0030 9A42     		cmp	r2, r3
 1563 0032 01D2     		bcs	.L137
1833:..\FreeRTOS\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1564              		.loc 1 1833 0
 1565 0034 0026     		movs	r6, #0
 1566 0036 00E0     		b	.L135
 1567              	.L137:
1870:..\FreeRTOS\Source/tasks.c **** 					}
 1568              		.loc 1 1870 0
 1569 0038 0126     		movs	r6, #1
 1570              	.L135:
 1571              	.LVL154:
1877:..\FreeRTOS\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1572              		.loc 1 1877 0
 1573 003a 271D     		adds	r7, r4, #4
 1574 003c 3846     		mov	r0, r7
 1575 003e FFF7FEFF 		bl	uxListRemove
 1576              	.LVL155:
1878:..\FreeRTOS\Source/tasks.c **** 				}
 1577              		.loc 1 1878 0
 1578 0042 E36A     		ldr	r3, [r4, #44]
 1579 0044 0122     		movs	r2, #1
 1580 0046 02FA03F1 		lsl	r1, r2, r3
 1581 004a 0D48     		ldr	r0, .L139
 1582 004c D0F8E420 		ldr	r2, [r0, #228]
 1583 0050 0A43     		orrs	r2, r2, r1
 1584 0052 C0F8E420 		str	r2, [r0, #228]
 1585 0056 3030     		adds	r0, r0, #48
 1586 0058 03EB8303 		add	r3, r3, r3, lsl #2
 1587 005c 9A00     		lsls	r2, r3, #2
 1588 005e 3946     		mov	r1, r7
 1589 0060 1044     		add	r0, r0, r2
 1590 0062 FFF7FEFF 		bl	vListInsertEnd
 1591              	.LVL156:
 1592 0066 07E0     		b	.L133
 1593              	.LVL157:
 1594              	.L134:
1885:..\FreeRTOS\Source/tasks.c **** 				}
 1595              		.loc 1 1885 0
 1596 0068 04F11801 		add	r1, r4, #24
 1597 006c 0548     		ldr	r0, .L139+4
 1598 006e FFF7FEFF 		bl	vListInsertEnd
 1599              	.LVL158:
1833:..\FreeRTOS\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1600              		.loc 1 1833 0
 1601 0072 0026     		movs	r6, #0
 1602 0074 00E0     		b	.L133
 1603              	.L136:
 1604 0076 0026     		movs	r6, #0
 1605              	.LVL159:
 1606              	.L133:
 1607              	.LBB35:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 124


 1608              	.LBB36:
 1609              		.loc 2 229 0
 1610              		.syntax unified
 1611              	@ 229 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1612 0078 85F31188 			msr basepri, r5	
 1613              	@ 0 "" 2
 1614              	.LVL160:
 1615              		.thumb
 1616              		.syntax unified
 1617              	.LBE36:
 1618              	.LBE35:
1896:..\FreeRTOS\Source/tasks.c **** 
 1619              		.loc 1 1896 0
 1620 007c 3046     		mov	r0, r6
 1621 007e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1622              	.LVL161:
 1623              	.L140:
 1624              		.align	2
 1625              	.L139:
 1626 0080 00000000 		.word	.LANCHOR0
 1627 0084 14000000 		.word	.LANCHOR0+20
 1628              		.cfi_endproc
 1629              	.LFE82:
 1630              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 1631              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1632              		.align	2
 1633              		.global	vTaskStartScheduler
 1634              		.thumb
 1635              		.thumb_func
 1636              		.type	vTaskStartScheduler, %function
 1637              	vTaskStartScheduler:
 1638              	.LFB83:
1902:..\FreeRTOS\Source/tasks.c **** BaseType_t xReturn;
 1639              		.loc 1 1902 0
 1640              		.cfi_startproc
 1641              		@ args = 0, pretend = 0, frame = 0
 1642              		@ frame_needed = 0, uses_anonymous_args = 0
 1643 0000 00B5     		push	{lr}
 1644              		.cfi_def_cfa_offset 4
 1645              		.cfi_offset 14, -4
 1646 0002 83B0     		sub	sp, sp, #12
 1647              		.cfi_def_cfa_offset 16
1935:..\FreeRTOS\Source/tasks.c **** 								configIDLE_TASK_NAME,
 1648              		.loc 1 1935 0
 1649 0004 144B     		ldr	r3, .L144
 1650 0006 0193     		str	r3, [sp, #4]
 1651 0008 0023     		movs	r3, #0
 1652 000a 0093     		str	r3, [sp]
 1653 000c 6422     		movs	r2, #100
 1654 000e 1349     		ldr	r1, .L144+4
 1655 0010 1348     		ldr	r0, .L144+8
 1656 0012 FFF7FEFF 		bl	xTaskCreate
 1657              	.LVL162:
1957:..\FreeRTOS\Source/tasks.c **** 	{
 1658              		.loc 1 1957 0
 1659 0016 0128     		cmp	r0, #1
 1660 0018 1AD1     		bne	.L141
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 125


 1661              	.LBB37:
 1662              	.LBB38:
 195:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1663              		.loc 2 195 0
 1664              		.syntax unified
 1665              	@ 195 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1666 001a 4FF0A003 			mov r3, #160												
 1667 001e 83F31188 		msr basepri, r3											
 1668 0022 BFF36F8F 		isb														
 1669 0026 BFF34F8F 		dsb														
 1670              	
 1671              	@ 0 "" 2
 1672              		.thumb
 1673              		.syntax unified
 1674              	.LBE38:
 1675              	.LBE37:
1979:..\FreeRTOS\Source/tasks.c **** 		}
 1676              		.loc 1 1979 0
 1677 002a 0E4B     		ldr	r3, .L144+12
 1678 002c D3F8D820 		ldr	r2, [r3, #216]
 1679 0030 5832     		adds	r2, r2, #88
 1680 0032 0D49     		ldr	r1, .L144+16
 1681 0034 0A60     		str	r2, [r1]
1983:..\FreeRTOS\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1682              		.loc 1 1983 0
 1683 0036 4FF0FF32 		mov	r2, #-1
 1684 003a DA62     		str	r2, [r3, #44]
1984:..\FreeRTOS\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1685              		.loc 1 1984 0
 1686 003c 0122     		movs	r2, #1
 1687 003e C3F8DC20 		str	r2, [r3, #220]
1985:..\FreeRTOS\Source/tasks.c **** 
 1688              		.loc 1 1985 0
 1689 0042 0022     		movs	r2, #0
 1690 0044 C3F8EC20 		str	r2, [r3, #236]
1993:..\FreeRTOS\Source/tasks.c **** 
 1691              		.loc 1 1993 0
 1692 0048 FFF7FEFF 		bl	StatisticsCounter_Start
 1693              	.LVL163:
1997:..\FreeRTOS\Source/tasks.c **** 		{
 1694              		.loc 1 1997 0
 1695 004c FFF7FEFF 		bl	xPortStartScheduler
 1696              	.LVL164:
 1697              	.L141:
2018:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 1698              		.loc 1 2018 0
 1699 0050 03B0     		add	sp, sp, #12
 1700              		.cfi_def_cfa_offset 4
 1701              		@ sp needed
 1702 0052 5DF804FB 		ldr	pc, [sp], #4
 1703              	.L145:
 1704 0056 00BF     		.align	2
 1705              	.L144:
 1706 0058 F4000000 		.word	.LANCHOR0+244
 1707 005c 04000000 		.word	.LC1
 1708 0060 00000000 		.word	prvIdleTask
 1709 0064 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 126


 1710 0068 00000000 		.word	_impure_ptr
 1711              		.cfi_endproc
 1712              	.LFE83:
 1713              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1714              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1715              		.align	2
 1716              		.global	vTaskEndScheduler
 1717              		.thumb
 1718              		.thumb_func
 1719              		.type	vTaskEndScheduler, %function
 1720              	vTaskEndScheduler:
 1721              	.LFB84:
2022:..\FreeRTOS\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1722              		.loc 1 2022 0
 1723              		.cfi_startproc
 1724              		@ args = 0, pretend = 0, frame = 0
 1725              		@ frame_needed = 0, uses_anonymous_args = 0
 1726 0000 08B5     		push	{r3, lr}
 1727              		.cfi_def_cfa_offset 8
 1728              		.cfi_offset 3, -8
 1729              		.cfi_offset 14, -4
 1730              	.LBB39:
 1731              	.LBB40:
 195:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1732              		.loc 2 195 0
 1733              		.syntax unified
 1734              	@ 195 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1735 0002 4FF0A003 			mov r3, #160												
 1736 0006 83F31188 		msr basepri, r3											
 1737 000a BFF36F8F 		isb														
 1738 000e BFF34F8F 		dsb														
 1739              	
 1740              	@ 0 "" 2
 1741              		.thumb
 1742              		.syntax unified
 1743              	.LBE40:
 1744              	.LBE39:
2027:..\FreeRTOS\Source/tasks.c **** 	vPortEndScheduler();
 1745              		.loc 1 2027 0
 1746 0012 0022     		movs	r2, #0
 1747 0014 024B     		ldr	r3, .L148
 1748 0016 C3F8DC20 		str	r2, [r3, #220]
2028:..\FreeRTOS\Source/tasks.c **** }
 1749              		.loc 1 2028 0
 1750 001a FFF7FEFF 		bl	vPortEndScheduler
 1751              	.LVL165:
 1752 001e 08BD     		pop	{r3, pc}
 1753              	.L149:
 1754              		.align	2
 1755              	.L148:
 1756 0020 00000000 		.word	.LANCHOR0
 1757              		.cfi_endproc
 1758              	.LFE84:
 1759              		.size	vTaskEndScheduler, .-vTaskEndScheduler
 1760              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1761              		.align	2
 1762              		.global	vTaskSuspendAll
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 127


 1763              		.thumb
 1764              		.thumb_func
 1765              		.type	vTaskSuspendAll, %function
 1766              	vTaskSuspendAll:
 1767              	.LFB85:
2033:..\FreeRTOS\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1768              		.loc 1 2033 0
 1769              		.cfi_startproc
 1770              		@ args = 0, pretend = 0, frame = 0
 1771              		@ frame_needed = 0, uses_anonymous_args = 0
 1772              		@ link register save eliminated.
2038:..\FreeRTOS\Source/tasks.c **** }
 1773              		.loc 1 2038 0
 1774 0000 034A     		ldr	r2, .L151
 1775 0002 D2F8F030 		ldr	r3, [r2, #240]
 1776 0006 0133     		adds	r3, r3, #1
 1777 0008 C2F8F030 		str	r3, [r2, #240]
 1778 000c 7047     		bx	lr
 1779              	.L152:
 1780 000e 00BF     		.align	2
 1781              	.L151:
 1782 0010 00000000 		.word	.LANCHOR0
 1783              		.cfi_endproc
 1784              	.LFE85:
 1785              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 1786              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1787              		.align	2
 1788              		.global	xTaskGetTickCount
 1789              		.thumb
 1790              		.thumb_func
 1791              		.type	xTaskGetTickCount, %function
 1792              	xTaskGetTickCount:
 1793              	.LFB87:
2216:..\FreeRTOS\Source/tasks.c **** TickType_t xTicks;
 1794              		.loc 1 2216 0
 1795              		.cfi_startproc
 1796              		@ args = 0, pretend = 0, frame = 0
 1797              		@ frame_needed = 0, uses_anonymous_args = 0
 1798              		@ link register save eliminated.
2222:..\FreeRTOS\Source/tasks.c **** 	}
 1799              		.loc 1 2222 0
 1800 0000 014B     		ldr	r3, .L154
 1801 0002 D3F8EC00 		ldr	r0, [r3, #236]
 1802              	.LVL166:
2227:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 1803              		.loc 1 2227 0
 1804 0006 7047     		bx	lr
 1805              	.L155:
 1806              		.align	2
 1807              	.L154:
 1808 0008 00000000 		.word	.LANCHOR0
 1809              		.cfi_endproc
 1810              	.LFE87:
 1811              		.size	xTaskGetTickCount, .-xTaskGetTickCount
 1812              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1813              		.align	2
 1814              		.global	xTaskGetTickCountFromISR
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 128


 1815              		.thumb
 1816              		.thumb_func
 1817              		.type	xTaskGetTickCountFromISR, %function
 1818              	xTaskGetTickCountFromISR:
 1819              	.LFB88:
2231:..\FreeRTOS\Source/tasks.c **** TickType_t xReturn;
 1820              		.loc 1 2231 0
 1821              		.cfi_startproc
 1822              		@ args = 0, pretend = 0, frame = 0
 1823              		@ frame_needed = 0, uses_anonymous_args = 0
 1824              		@ link register save eliminated.
 1825              	.LVL167:
2253:..\FreeRTOS\Source/tasks.c **** 	}
 1826              		.loc 1 2253 0
 1827 0000 014B     		ldr	r3, .L157
 1828 0002 D3F8EC00 		ldr	r0, [r3, #236]
 1829              	.LVL168:
2258:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 1830              		.loc 1 2258 0
 1831 0006 7047     		bx	lr
 1832              	.L158:
 1833              		.align	2
 1834              	.L157:
 1835 0008 00000000 		.word	.LANCHOR0
 1836              		.cfi_endproc
 1837              	.LFE88:
 1838              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 1839              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1840              		.align	2
 1841              		.global	uxTaskGetNumberOfTasks
 1842              		.thumb
 1843              		.thumb_func
 1844              		.type	uxTaskGetNumberOfTasks, %function
 1845              	uxTaskGetNumberOfTasks:
 1846              	.LFB89:
2262:..\FreeRTOS\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 1847              		.loc 1 2262 0
 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 0
 1850              		@ frame_needed = 0, uses_anonymous_args = 0
 1851              		@ link register save eliminated.
2265:..\FreeRTOS\Source/tasks.c **** }
 1852              		.loc 1 2265 0
 1853 0000 014B     		ldr	r3, .L160
 1854 0002 D3F8D400 		ldr	r0, [r3, #212]
2266:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 1855              		.loc 1 2266 0
 1856 0006 7047     		bx	lr
 1857              	.L161:
 1858              		.align	2
 1859              	.L160:
 1860 0008 00000000 		.word	.LANCHOR0
 1861              		.cfi_endproc
 1862              	.LFE89:
 1863              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 1864              		.section	.text.pcTaskGetName,"ax",%progbits
 1865              		.align	2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 129


 1866              		.global	pcTaskGetName
 1867              		.thumb
 1868              		.thumb_func
 1869              		.type	pcTaskGetName, %function
 1870              	pcTaskGetName:
 1871              	.LFB90:
2270:..\FreeRTOS\Source/tasks.c **** TCB_t *pxTCB;
 1872              		.loc 1 2270 0
 1873              		.cfi_startproc
 1874              		@ args = 0, pretend = 0, frame = 0
 1875              		@ frame_needed = 0, uses_anonymous_args = 0
 1876              		@ link register save eliminated.
 1877              	.LVL169:
2275:..\FreeRTOS\Source/tasks.c **** 	configASSERT( pxTCB );
 1878              		.loc 1 2275 0
 1879 0000 0346     		mov	r3, r0
 1880 0002 10B9     		cbnz	r0, .L163
2275:..\FreeRTOS\Source/tasks.c **** 	configASSERT( pxTCB );
 1881              		.loc 1 2275 0 is_stmt 0 discriminator 1
 1882 0004 024B     		ldr	r3, .L164
 1883 0006 D3F8D830 		ldr	r3, [r3, #216]
 1884              	.LVL170:
 1885              	.L163:
2278:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 1886              		.loc 1 2278 0 is_stmt 1 discriminator 4
 1887 000a 03F13400 		add	r0, r3, #52
 1888 000e 7047     		bx	lr
 1889              	.L165:
 1890              		.align	2
 1891              	.L164:
 1892 0010 00000000 		.word	.LANCHOR0
 1893              		.cfi_endproc
 1894              	.LFE90:
 1895              		.size	pcTaskGetName, .-pcTaskGetName
 1896              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1897              		.align	2
 1898              		.global	xTaskIncrementTick
 1899              		.thumb
 1900              		.thumb_func
 1901              		.type	xTaskIncrementTick, %function
 1902              	xTaskIncrementTick:
 1903              	.LFB92:
2590:..\FreeRTOS\Source/tasks.c **** TCB_t * pxTCB;
 1904              		.loc 1 2590 0
 1905              		.cfi_startproc
 1906              		@ args = 0, pretend = 0, frame = 0
 1907              		@ frame_needed = 0, uses_anonymous_args = 0
 1908 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1909              		.cfi_def_cfa_offset 24
 1910              		.cfi_offset 4, -24
 1911              		.cfi_offset 5, -20
 1912              		.cfi_offset 6, -16
 1913              		.cfi_offset 7, -12
 1914              		.cfi_offset 8, -8
 1915              		.cfi_offset 14, -4
 1916              	.LVL171:
2599:..\FreeRTOS\Source/tasks.c **** 	{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 130


 1917              		.loc 1 2599 0
 1918 0004 3F4B     		ldr	r3, .L185
 1919 0006 D3F8F030 		ldr	r3, [r3, #240]
 1920 000a 002B     		cmp	r3, #0
 1921 000c 66D1     		bne	.L167
 1922              	.LBB41:
2603:..\FreeRTOS\Source/tasks.c **** 
 1923              		.loc 1 2603 0
 1924 000e 3D4B     		ldr	r3, .L185
 1925 0010 D3F8EC70 		ldr	r7, [r3, #236]
 1926 0014 0137     		adds	r7, r7, #1
 1927              	.LVL172:
2607:..\FreeRTOS\Source/tasks.c **** 
 1928              		.loc 1 2607 0
 1929 0016 C3F8EC70 		str	r7, [r3, #236]
2609:..\FreeRTOS\Source/tasks.c **** 		{
 1930              		.loc 1 2609 0
 1931 001a 67B9     		cbnz	r7, .L168
 1932              	.LBB42:
2611:..\FreeRTOS\Source/tasks.c **** 		}
 1933              		.loc 1 2611 0
 1934 001c 9A6A     		ldr	r2, [r3, #40]
 1935              	.LVL173:
 1936 001e D3F8D010 		ldr	r1, [r3, #208]
 1937 0022 9962     		str	r1, [r3, #40]
 1938 0024 C3F8D020 		str	r2, [r3, #208]
 1939 0028 D3F8F820 		ldr	r2, [r3, #248]
 1940              	.LVL174:
 1941 002c 0132     		adds	r2, r2, #1
 1942 002e C3F8F820 		str	r2, [r3, #248]
 1943              	.LVL175:
 1944 0032 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1945              	.LVL176:
 1946              	.L168:
 1947              	.LBE42:
2622:..\FreeRTOS\Source/tasks.c **** 		{
 1948              		.loc 1 2622 0
 1949 0036 334B     		ldr	r3, .L185
 1950 0038 DB6A     		ldr	r3, [r3, #44]
 1951 003a 9F42     		cmp	r7, r3
 1952 003c 05D2     		bcs	.L179
 1953              	.LBE41:
2593:..\FreeRTOS\Source/tasks.c **** 
 1954              		.loc 1 2593 0
 1955 003e 4FF00008 		mov	r8, #0
 1956 0042 3FE0     		b	.L170
 1957              	.LVL177:
 1958              	.L181:
 1959              	.LBB43:
2688:..\FreeRTOS\Source/tasks.c **** 						}
 1960              		.loc 1 2688 0
 1961 0044 4FF00108 		mov	r8, #1
 1962              	.LVL178:
 1963 0048 01E0     		b	.L169
 1964              	.LVL179:
 1965              	.L179:
 1966 004a 4FF00008 		mov	r8, #0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 131


 1967              	.LVL180:
 1968              	.L169:
2626:..\FreeRTOS\Source/tasks.c **** 				{
 1969              		.loc 1 2626 0
 1970 004e 2D4B     		ldr	r3, .L185
 1971 0050 9B6A     		ldr	r3, [r3, #40]
 1972 0052 1B68     		ldr	r3, [r3]
 1973 0054 0BB9     		cbnz	r3, .L180
 1974 0056 0123     		movs	r3, #1
 1975 0058 00E0     		b	.L171
 1976              	.L180:
 1977 005a 0023     		movs	r3, #0
 1978              	.L171:
2626:..\FreeRTOS\Source/tasks.c **** 				{
 1979              		.loc 1 2626 0 is_stmt 0 discriminator 4
 1980 005c 23B1     		cbz	r3, .L172
2633:..\FreeRTOS\Source/tasks.c **** 					break;
 1981              		.loc 1 2633 0 is_stmt 1
 1982 005e 4FF0FF32 		mov	r2, #-1
 1983 0062 284B     		ldr	r3, .L185
 1984 0064 DA62     		str	r2, [r3, #44]
2634:..\FreeRTOS\Source/tasks.c **** 				}
 1985              		.loc 1 2634 0
 1986 0066 2DE0     		b	.L170
 1987              	.L172:
2642:..\FreeRTOS\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1988              		.loc 1 2642 0
 1989 0068 264B     		ldr	r3, .L185
 1990 006a 9B6A     		ldr	r3, [r3, #40]
 1991 006c DB68     		ldr	r3, [r3, #12]
 1992 006e DC68     		ldr	r4, [r3, #12]
 1993              	.LVL181:
2643:..\FreeRTOS\Source/tasks.c **** 
 1994              		.loc 1 2643 0
 1995 0070 6368     		ldr	r3, [r4, #4]
 1996              	.LVL182:
2645:..\FreeRTOS\Source/tasks.c **** 					{
 1997              		.loc 1 2645 0
 1998 0072 9F42     		cmp	r7, r3
 1999 0074 02D2     		bcs	.L173
2652:..\FreeRTOS\Source/tasks.c **** 						break;
 2000              		.loc 1 2652 0
 2001 0076 234A     		ldr	r2, .L185
 2002 0078 D362     		str	r3, [r2, #44]
2653:..\FreeRTOS\Source/tasks.c **** 					}
 2003              		.loc 1 2653 0
 2004 007a 23E0     		b	.L170
 2005              	.L173:
2661:..\FreeRTOS\Source/tasks.c **** 
 2006              		.loc 1 2661 0
 2007 007c 261D     		adds	r6, r4, #4
 2008 007e 3046     		mov	r0, r6
 2009 0080 FFF7FEFF 		bl	uxListRemove
 2010              	.LVL183:
2665:..\FreeRTOS\Source/tasks.c **** 					{
 2011              		.loc 1 2665 0
 2012 0084 A36A     		ldr	r3, [r4, #40]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 132


 2013 0086 1BB1     		cbz	r3, .L174
2667:..\FreeRTOS\Source/tasks.c **** 					}
 2014              		.loc 1 2667 0
 2015 0088 04F11800 		add	r0, r4, #24
 2016 008c FFF7FEFF 		bl	uxListRemove
 2017              	.LVL184:
 2018              	.L174:
2676:..\FreeRTOS\Source/tasks.c **** 
 2019              		.loc 1 2676 0
 2020 0090 E36A     		ldr	r3, [r4, #44]
 2021 0092 0122     		movs	r2, #1
 2022 0094 02FA03F1 		lsl	r1, r2, r3
 2023 0098 1A4D     		ldr	r5, .L185
 2024 009a D5F8E420 		ldr	r2, [r5, #228]
 2025 009e 0A43     		orrs	r2, r2, r1
 2026 00a0 C5F8E420 		str	r2, [r5, #228]
 2027 00a4 05F13000 		add	r0, r5, #48
 2028 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 2029 00ac 9A00     		lsls	r2, r3, #2
 2030 00ae 3146     		mov	r1, r6
 2031 00b0 1044     		add	r0, r0, r2
 2032 00b2 FFF7FEFF 		bl	vListInsertEnd
 2033              	.LVL185:
2686:..\FreeRTOS\Source/tasks.c **** 						{
 2034              		.loc 1 2686 0
 2035 00b6 E26A     		ldr	r2, [r4, #44]
 2036 00b8 D5F8D830 		ldr	r3, [r5, #216]
 2037 00bc DB6A     		ldr	r3, [r3, #44]
 2038 00be 9A42     		cmp	r2, r3
 2039 00c0 C0D2     		bcs	.L181
 2040 00c2 C4E7     		b	.L169
 2041              	.LVL186:
 2042              	.L170:
2705:..\FreeRTOS\Source/tasks.c **** 			{
 2043              		.loc 1 2705 0
 2044 00c4 0F49     		ldr	r1, .L185
 2045 00c6 D1F8D830 		ldr	r3, [r1, #216]
 2046 00ca DB6A     		ldr	r3, [r3, #44]
 2047 00cc 03EB8303 		add	r3, r3, r3, lsl #2
 2048 00d0 9A00     		lsls	r2, r3, #2
 2049 00d2 0A44     		add	r2, r2, r1
 2050 00d4 136B     		ldr	r3, [r2, #48]
 2051 00d6 012B     		cmp	r3, #1
 2052 00d8 09D8     		bhi	.L182
 2053 00da 0AE0     		b	.L177
 2054              	.LVL187:
 2055              	.L167:
 2056              	.LBE43:
2733:..\FreeRTOS\Source/tasks.c **** 
 2057              		.loc 1 2733 0
 2058 00dc 094A     		ldr	r2, .L185
 2059 00de D2F8FC30 		ldr	r3, [r2, #252]
 2060 00e2 0133     		adds	r3, r3, #1
 2061 00e4 C2F8FC30 		str	r3, [r2, #252]
2593:..\FreeRTOS\Source/tasks.c **** 
 2062              		.loc 1 2593 0
 2063 00e8 4FF00008 		mov	r8, #0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 133


 2064 00ec 01E0     		b	.L177
 2065              	.LVL188:
 2066              	.L182:
 2067              	.LBB44:
2707:..\FreeRTOS\Source/tasks.c **** 			}
 2068              		.loc 1 2707 0
 2069 00ee 4FF00108 		mov	r8, #1
 2070              	.LVL189:
 2071              	.L177:
 2072              	.LBE44:
2746:..\FreeRTOS\Source/tasks.c **** 		{
 2073              		.loc 1 2746 0
 2074 00f2 044B     		ldr	r3, .L185
 2075 00f4 D3F80031 		ldr	r3, [r3, #256]
 2076 00f8 0BB1     		cbz	r3, .L178
2748:..\FreeRTOS\Source/tasks.c **** 		}
 2077              		.loc 1 2748 0
 2078 00fa 4FF00108 		mov	r8, #1
 2079              	.LVL190:
 2080              	.L178:
2758:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 2081              		.loc 1 2758 0
 2082 00fe 4046     		mov	r0, r8
 2083 0100 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2084              	.LVL191:
 2085              	.L186:
 2086              		.align	2
 2087              	.L185:
 2088 0104 00000000 		.word	.LANCHOR0
 2089              		.cfi_endproc
 2090              	.LFE92:
 2091              		.size	xTaskIncrementTick, .-xTaskIncrementTick
 2092              		.section	.text.xTaskResumeAll,"ax",%progbits
 2093              		.align	2
 2094              		.global	xTaskResumeAll
 2095              		.thumb
 2096              		.thumb_func
 2097              		.type	xTaskResumeAll, %function
 2098              	xTaskResumeAll:
 2099              	.LFB86:
2106:..\FreeRTOS\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2100              		.loc 1 2106 0
 2101              		.cfi_startproc
 2102              		@ args = 0, pretend = 0, frame = 0
 2103              		@ frame_needed = 0, uses_anonymous_args = 0
 2104 0000 70B5     		push	{r4, r5, r6, lr}
 2105              		.cfi_def_cfa_offset 16
 2106              		.cfi_offset 4, -16
 2107              		.cfi_offset 5, -12
 2108              		.cfi_offset 6, -8
 2109              		.cfi_offset 14, -4
 2110              	.LVL192:
2119:..\FreeRTOS\Source/tasks.c **** 	{
 2111              		.loc 1 2119 0
 2112 0002 FFF7FEFF 		bl	vPortEnterCritical
 2113              	.LVL193:
2121:..\FreeRTOS\Source/tasks.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 134


 2114              		.loc 1 2121 0
 2115 0006 324B     		ldr	r3, .L200
 2116 0008 D3F8F020 		ldr	r2, [r3, #240]
 2117 000c 013A     		subs	r2, r2, #1
 2118 000e C3F8F020 		str	r2, [r3, #240]
2123:..\FreeRTOS\Source/tasks.c **** 		{
 2119              		.loc 1 2123 0
 2120 0012 D3F8F030 		ldr	r3, [r3, #240]
 2121 0016 002B     		cmp	r3, #0
 2122 0018 53D1     		bne	.L196
2125:..\FreeRTOS\Source/tasks.c **** 			{
 2123              		.loc 1 2125 0
 2124 001a 2D4B     		ldr	r3, .L200
 2125 001c D3F8D430 		ldr	r3, [r3, #212]
 2126 0020 43BB     		cbnz	r3, .L197
2108:..\FreeRTOS\Source/tasks.c **** 
 2127              		.loc 1 2108 0
 2128 0022 0024     		movs	r4, #0
 2129 0024 50E0     		b	.L188
 2130              	.LVL194:
 2131              	.L191:
2131:..\FreeRTOS\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2132              		.loc 1 2131 0
 2133 0026 2A4C     		ldr	r4, .L200
 2134 0028 236A     		ldr	r3, [r4, #32]
 2135 002a DD68     		ldr	r5, [r3, #12]
 2136              	.LVL195:
2132:..\FreeRTOS\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2137              		.loc 1 2132 0
 2138 002c 05F11800 		add	r0, r5, #24
 2139 0030 FFF7FEFF 		bl	uxListRemove
 2140              	.LVL196:
2133:..\FreeRTOS\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2141              		.loc 1 2133 0
 2142 0034 2E1D     		adds	r6, r5, #4
 2143 0036 3046     		mov	r0, r6
 2144 0038 FFF7FEFF 		bl	uxListRemove
 2145              	.LVL197:
2134:..\FreeRTOS\Source/tasks.c **** 
 2146              		.loc 1 2134 0
 2147 003c EB6A     		ldr	r3, [r5, #44]
 2148 003e 0122     		movs	r2, #1
 2149 0040 02FA03F1 		lsl	r1, r2, r3
 2150 0044 D4F8E420 		ldr	r2, [r4, #228]
 2151 0048 0A43     		orrs	r2, r2, r1
 2152 004a C4F8E420 		str	r2, [r4, #228]
 2153 004e 04F13000 		add	r0, r4, #48
 2154 0052 03EB8303 		add	r3, r3, r3, lsl #2
 2155 0056 9A00     		lsls	r2, r3, #2
 2156 0058 3146     		mov	r1, r6
 2157 005a 1044     		add	r0, r0, r2
 2158 005c FFF7FEFF 		bl	vListInsertEnd
 2159              	.LVL198:
2138:..\FreeRTOS\Source/tasks.c **** 					{
 2160              		.loc 1 2138 0
 2161 0060 EA6A     		ldr	r2, [r5, #44]
 2162 0062 D4F8D830 		ldr	r3, [r4, #216]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 135


 2163 0066 DB6A     		ldr	r3, [r3, #44]
 2164 0068 9A42     		cmp	r2, r3
 2165 006a 04D3     		bcc	.L189
2140:..\FreeRTOS\Source/tasks.c **** 					}
 2166              		.loc 1 2140 0
 2167 006c 0122     		movs	r2, #1
 2168 006e C4F80021 		str	r2, [r4, #256]
 2169 0072 00E0     		b	.L189
 2170              	.LVL199:
 2171              	.L197:
 2172 0074 0025     		movs	r5, #0
 2173              	.LVL200:
 2174              	.L189:
2129:..\FreeRTOS\Source/tasks.c **** 				{
 2175              		.loc 1 2129 0
 2176 0076 164B     		ldr	r3, .L200
 2177 0078 5B69     		ldr	r3, [r3, #20]
 2178 007a 002B     		cmp	r3, #0
 2179 007c D3D1     		bne	.L191
2148:..\FreeRTOS\Source/tasks.c **** 				{
 2180              		.loc 1 2148 0
 2181 007e 0DB1     		cbz	r5, .L192
2156:..\FreeRTOS\Source/tasks.c **** 				}
 2182              		.loc 1 2156 0
 2183 0080 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2184              	.LVL201:
 2185              	.L192:
 2186              	.LBB45:
2164:..\FreeRTOS\Source/tasks.c **** 
 2187              		.loc 1 2164 0
 2188 0084 124B     		ldr	r3, .L200
 2189 0086 D3F8FC40 		ldr	r4, [r3, #252]
 2190              	.LVL202:
2166:..\FreeRTOS\Source/tasks.c **** 					{
 2191              		.loc 1 2166 0
 2192 008a 64B1     		cbz	r4, .L193
 2193              	.L195:
2170:..\FreeRTOS\Source/tasks.c **** 							{
 2194              		.loc 1 2170 0
 2195 008c FFF7FEFF 		bl	xTaskIncrementTick
 2196              	.LVL203:
 2197 0090 18B1     		cbz	r0, .L194
2172:..\FreeRTOS\Source/tasks.c **** 							}
 2198              		.loc 1 2172 0
 2199 0092 0122     		movs	r2, #1
 2200 0094 0E4B     		ldr	r3, .L200
 2201 0096 C3F80021 		str	r2, [r3, #256]
 2202              	.L194:
 2203              	.LVL204:
2179:..\FreeRTOS\Source/tasks.c **** 
 2204              		.loc 1 2179 0
 2205 009a 013C     		subs	r4, r4, #1
 2206              	.LVL205:
 2207 009c F6D1     		bne	.L195
2181:..\FreeRTOS\Source/tasks.c **** 					}
 2208              		.loc 1 2181 0
 2209 009e 0022     		movs	r2, #0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 136


 2210 00a0 0B4B     		ldr	r3, .L200
 2211 00a2 C3F8FC20 		str	r2, [r3, #252]
 2212              	.L193:
 2213              	.LBE45:
2189:..\FreeRTOS\Source/tasks.c **** 				{
 2214              		.loc 1 2189 0
 2215 00a6 0A4B     		ldr	r3, .L200
 2216 00a8 D3F80031 		ldr	r3, [r3, #256]
 2217 00ac 5BB1     		cbz	r3, .L198
 2218              	.LVL206:
2196:..\FreeRTOS\Source/tasks.c **** 				}
 2219              		.loc 1 2196 0
 2220 00ae 4FF08052 		mov	r2, #268435456
 2221 00b2 084B     		ldr	r3, .L200+4
 2222 00b4 1A60     		str	r2, [r3]
 2223              		.syntax unified
 2224              	@ 2196 "..\FreeRTOS\Source\tasks.c" 1
 2225 00b6 BFF34F8F 		dsb
 2226              	@ 0 "" 2
 2227              	@ 2196 "..\FreeRTOS\Source\tasks.c" 1
 2228 00ba BFF36F8F 		isb
 2229              	@ 0 "" 2
2193:..\FreeRTOS\Source/tasks.c **** 					}
 2230              		.loc 1 2193 0
 2231              		.thumb
 2232              		.syntax unified
 2233 00be 0124     		movs	r4, #1
 2234              	.LVL207:
 2235 00c0 02E0     		b	.L188
 2236              	.LVL208:
 2237              	.L196:
2108:..\FreeRTOS\Source/tasks.c **** 
 2238              		.loc 1 2108 0
 2239 00c2 0024     		movs	r4, #0
 2240 00c4 00E0     		b	.L188
 2241              	.LVL209:
 2242              	.L198:
 2243 00c6 0024     		movs	r4, #0
 2244              	.LVL210:
 2245              	.L188:
2209:..\FreeRTOS\Source/tasks.c **** 
 2246              		.loc 1 2209 0
 2247 00c8 FFF7FEFF 		bl	vPortExitCritical
 2248              	.LVL211:
2212:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 2249              		.loc 1 2212 0
 2250 00cc 2046     		mov	r0, r4
 2251 00ce 70BD     		pop	{r4, r5, r6, pc}
 2252              	.LVL212:
 2253              	.L201:
 2254              		.align	2
 2255              	.L200:
 2256 00d0 00000000 		.word	.LANCHOR0
 2257 00d4 04ED00E0 		.word	-536810236
 2258              		.cfi_endproc
 2259              	.LFE86:
 2260              		.size	xTaskResumeAll, .-xTaskResumeAll
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 137


 2261              		.section	.text.vTaskDelayUntil,"ax",%progbits
 2262              		.align	2
 2263              		.global	vTaskDelayUntil
 2264              		.thumb
 2265              		.thumb_func
 2266              		.type	vTaskDelayUntil, %function
 2267              	vTaskDelayUntil:
 2268              	.LFB73:
1205:..\FreeRTOS\Source/tasks.c **** 	TickType_t xTimeToWake;
 2269              		.loc 1 1205 0
 2270              		.cfi_startproc
 2271              		@ args = 0, pretend = 0, frame = 0
 2272              		@ frame_needed = 0, uses_anonymous_args = 0
 2273              	.LVL213:
 2274 0000 38B5     		push	{r3, r4, r5, lr}
 2275              		.cfi_def_cfa_offset 16
 2276              		.cfi_offset 3, -16
 2277              		.cfi_offset 4, -12
 2278              		.cfi_offset 5, -8
 2279              		.cfi_offset 14, -4
 2280 0002 0546     		mov	r5, r0
 2281 0004 0C46     		mov	r4, r1
 2282              	.LVL214:
1213:..\FreeRTOS\Source/tasks.c **** 		{
 2283              		.loc 1 1213 0
 2284 0006 FFF7FEFF 		bl	vTaskSuspendAll
 2285              	.LVL215:
 2286              	.LBB46:
1217:..\FreeRTOS\Source/tasks.c **** 
 2287              		.loc 1 1217 0
 2288 000a 164B     		ldr	r3, .L212
 2289 000c D3F8EC00 		ldr	r0, [r3, #236]
 2290              	.LVL216:
1220:..\FreeRTOS\Source/tasks.c **** 
 2291              		.loc 1 1220 0
 2292 0010 2A68     		ldr	r2, [r5]
 2293 0012 1319     		adds	r3, r2, r4
 2294              	.LVL217:
1222:..\FreeRTOS\Source/tasks.c **** 			{
 2295              		.loc 1 1222 0
 2296 0014 9042     		cmp	r0, r2
 2297 0016 05D2     		bcs	.L203
1229:..\FreeRTOS\Source/tasks.c **** 				{
 2298              		.loc 1 1229 0
 2299 0018 9A42     		cmp	r2, r3
 2300 001a 09D9     		bls	.L207
1229:..\FreeRTOS\Source/tasks.c **** 				{
 2301              		.loc 1 1229 0 is_stmt 0 discriminator 1
 2302 001c 9842     		cmp	r0, r3
 2303 001e 09D3     		bcc	.L208
 2304              	.LBE46:
1207:..\FreeRTOS\Source/tasks.c **** 
 2305              		.loc 1 1207 0 is_stmt 1
 2306 0020 0022     		movs	r2, #0
 2307 0022 0CE0     		b	.L204
 2308              	.L203:
 2309              	.LBB47:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 138


1243:..\FreeRTOS\Source/tasks.c **** 				{
 2310              		.loc 1 1243 0
 2311 0024 9A42     		cmp	r2, r3
 2312 0026 07D8     		bhi	.L209
1243:..\FreeRTOS\Source/tasks.c **** 				{
 2313              		.loc 1 1243 0 is_stmt 0 discriminator 1
 2314 0028 9842     		cmp	r0, r3
 2315 002a 07D3     		bcc	.L210
 2316              	.LBE47:
1207:..\FreeRTOS\Source/tasks.c **** 
 2317              		.loc 1 1207 0 is_stmt 1
 2318 002c 0022     		movs	r2, #0
 2319 002e 06E0     		b	.L204
 2320              	.L207:
 2321 0030 0022     		movs	r2, #0
 2322 0032 04E0     		b	.L204
 2323              	.L208:
 2324              	.LBB48:
1231:..\FreeRTOS\Source/tasks.c **** 				}
 2325              		.loc 1 1231 0
 2326 0034 0122     		movs	r2, #1
 2327 0036 02E0     		b	.L204
 2328              	.L209:
1245:..\FreeRTOS\Source/tasks.c **** 				}
 2329              		.loc 1 1245 0
 2330 0038 0122     		movs	r2, #1
 2331 003a 00E0     		b	.L204
 2332              	.L210:
 2333 003c 0122     		movs	r2, #1
 2334              	.L204:
 2335              	.LVL218:
1254:..\FreeRTOS\Source/tasks.c **** 
 2336              		.loc 1 1254 0
 2337 003e 2B60     		str	r3, [r5]
1256:..\FreeRTOS\Source/tasks.c **** 			{
 2338              		.loc 1 1256 0
 2339 0040 1AB1     		cbz	r2, .L205
1262:..\FreeRTOS\Source/tasks.c **** 			}
 2340              		.loc 1 1262 0
 2341 0042 0021     		movs	r1, #0
 2342 0044 181A     		subs	r0, r3, r0
 2343              	.LVL219:
 2344 0046 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2345              	.LVL220:
 2346              	.L205:
 2347              	.LBE48:
1269:..\FreeRTOS\Source/tasks.c **** 
 2348              		.loc 1 1269 0
 2349 004a FFF7FEFF 		bl	xTaskResumeAll
 2350              	.LVL221:
1273:..\FreeRTOS\Source/tasks.c **** 		{
 2351              		.loc 1 1273 0
 2352 004e 38B9     		cbnz	r0, .L202
1275:..\FreeRTOS\Source/tasks.c **** 		}
 2353              		.loc 1 1275 0
 2354 0050 4FF08052 		mov	r2, #268435456
 2355 0054 044B     		ldr	r3, .L212+4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 139


 2356 0056 1A60     		str	r2, [r3]
 2357              		.syntax unified
 2358              	@ 1275 "..\FreeRTOS\Source\tasks.c" 1
 2359 0058 BFF34F8F 		dsb
 2360              	@ 0 "" 2
 2361              	@ 1275 "..\FreeRTOS\Source\tasks.c" 1
 2362 005c BFF36F8F 		isb
 2363              	@ 0 "" 2
 2364              		.thumb
 2365              		.syntax unified
 2366              	.L202:
 2367 0060 38BD     		pop	{r3, r4, r5, pc}
 2368              	.LVL222:
 2369              	.L213:
 2370 0062 00BF     		.align	2
 2371              	.L212:
 2372 0064 00000000 		.word	.LANCHOR0
 2373 0068 04ED00E0 		.word	-536810236
 2374              		.cfi_endproc
 2375              	.LFE73:
 2376              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 2377              		.section	.text.vTaskDelay,"ax",%progbits
 2378              		.align	2
 2379              		.global	vTaskDelay
 2380              		.thumb
 2381              		.thumb_func
 2382              		.type	vTaskDelay, %function
 2383              	vTaskDelay:
 2384              	.LFB74:
1289:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2385              		.loc 1 1289 0
 2386              		.cfi_startproc
 2387              		@ args = 0, pretend = 0, frame = 0
 2388              		@ frame_needed = 0, uses_anonymous_args = 0
 2389              	.LVL223:
 2390 0000 10B5     		push	{r4, lr}
 2391              		.cfi_def_cfa_offset 8
 2392              		.cfi_offset 4, -8
 2393              		.cfi_offset 14, -4
 2394              	.LVL224:
1293:..\FreeRTOS\Source/tasks.c **** 		{
 2395              		.loc 1 1293 0
 2396 0002 48B1     		cbz	r0, .L217
 2397 0004 0446     		mov	r4, r0
1296:..\FreeRTOS\Source/tasks.c **** 			{
 2398              		.loc 1 1296 0
 2399 0006 FFF7FEFF 		bl	vTaskSuspendAll
 2400              	.LVL225:
1307:..\FreeRTOS\Source/tasks.c **** 			}
 2401              		.loc 1 1307 0
 2402 000a 0021     		movs	r1, #0
 2403 000c 2046     		mov	r0, r4
 2404 000e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2405              	.LVL226:
1309:..\FreeRTOS\Source/tasks.c **** 		}
 2406              		.loc 1 1309 0
 2407 0012 FFF7FEFF 		bl	xTaskResumeAll
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 140


 2408              	.LVL227:
 2409 0016 00E0     		b	.L215
 2410              	.LVL228:
 2411              	.L217:
1290:..\FreeRTOS\Source/tasks.c **** 
 2412              		.loc 1 1290 0
 2413 0018 0020     		movs	r0, #0
 2414              	.LVL229:
 2415              	.L215:
1318:..\FreeRTOS\Source/tasks.c **** 		{
 2416              		.loc 1 1318 0
 2417 001a 38B9     		cbnz	r0, .L214
1320:..\FreeRTOS\Source/tasks.c **** 		}
 2418              		.loc 1 1320 0
 2419 001c 4FF08052 		mov	r2, #268435456
 2420 0020 034B     		ldr	r3, .L219
 2421 0022 1A60     		str	r2, [r3]
 2422              		.syntax unified
 2423              	@ 1320 "..\FreeRTOS\Source\tasks.c" 1
 2424 0024 BFF34F8F 		dsb
 2425              	@ 0 "" 2
 2426              	@ 1320 "..\FreeRTOS\Source\tasks.c" 1
 2427 0028 BFF36F8F 		isb
 2428              	@ 0 "" 2
 2429              		.thumb
 2430              		.syntax unified
 2431              	.L214:
 2432 002c 10BD     		pop	{r4, pc}
 2433              	.L220:
 2434 002e 00BF     		.align	2
 2435              	.L219:
 2436 0030 04ED00E0 		.word	-536810236
 2437              		.cfi_endproc
 2438              	.LFE74:
 2439              		.size	vTaskDelay, .-vTaskDelay
 2440              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2441              		.align	2
 2442              		.global	vTaskSwitchContext
 2443              		.thumb
 2444              		.thumb_func
 2445              		.type	vTaskSwitchContext, %function
 2446              	vTaskSwitchContext:
 2447              	.LFB93:
2852:..\FreeRTOS\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2448              		.loc 1 2852 0
 2449              		.cfi_startproc
 2450              		@ args = 0, pretend = 0, frame = 0
 2451              		@ frame_needed = 0, uses_anonymous_args = 0
2853:..\FreeRTOS\Source/tasks.c **** 	{
 2452              		.loc 1 2853 0
 2453 0000 324B     		ldr	r3, .L229
 2454 0002 D3F8F030 		ldr	r3, [r3, #240]
 2455 0006 23B1     		cbz	r3, .L222
2857:..\FreeRTOS\Source/tasks.c **** 	}
 2456              		.loc 1 2857 0
 2457 0008 0122     		movs	r2, #1
 2458 000a 304B     		ldr	r3, .L229
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 141


 2459 000c C3F80021 		str	r2, [r3, #256]
 2460 0010 7047     		bx	lr
 2461              	.L222:
2852:..\FreeRTOS\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2462              		.loc 1 2852 0
 2463 0012 10B5     		push	{r4, lr}
 2464              		.cfi_def_cfa_offset 8
 2465              		.cfi_offset 4, -8
 2466              		.cfi_offset 14, -4
2861:..\FreeRTOS\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2467              		.loc 1 2861 0
 2468 0014 2D4C     		ldr	r4, .L229
 2469 0016 0023     		movs	r3, #0
 2470 0018 C4F80031 		str	r3, [r4, #256]
2869:..\FreeRTOS\Source/tasks.c **** 				#endif
 2471              		.loc 1 2869 0
 2472 001c FFF7FEFF 		bl	StatisticsCounter_ReadCounter
 2473              	.LVL230:
2879:..\FreeRTOS\Source/tasks.c **** 				{
 2474              		.loc 1 2879 0
 2475 0020 D4F80431 		ldr	r3, [r4, #260]
 2476 0024 9842     		cmp	r0, r3
 2477 0026 05D9     		bls	.L224
2881:..\FreeRTOS\Source/tasks.c **** 				}
 2478              		.loc 1 2881 0
 2479 0028 D4F8D820 		ldr	r2, [r4, #216]
 2480 002c C31A     		subs	r3, r0, r3
 2481 002e 116D     		ldr	r1, [r2, #80]
 2482 0030 0B44     		add	r3, r3, r1
 2483 0032 1365     		str	r3, [r2, #80]
 2484              	.L224:
2887:..\FreeRTOS\Source/tasks.c **** 		}
 2485              		.loc 1 2887 0
 2486 0034 254B     		ldr	r3, .L229
 2487 0036 C3F80401 		str	r0, [r3, #260]
 2488              	.LBB49:
2892:..\FreeRTOS\Source/tasks.c **** 
 2489              		.loc 1 2892 0
 2490 003a D3F8D830 		ldr	r3, [r3, #216]
 2491 003e 1B6B     		ldr	r3, [r3, #48]
 2492              	.LVL231:
 2493 0040 1A68     		ldr	r2, [r3]
 2494 0042 B2F1A53F 		cmp	r2, #-1515870811
 2495 0046 0BD1     		bne	.L225
2892:..\FreeRTOS\Source/tasks.c **** 
 2496              		.loc 1 2892 0 is_stmt 0 discriminator 2
 2497 0048 5A68     		ldr	r2, [r3, #4]
 2498 004a B2F1A53F 		cmp	r2, #-1515870811
 2499 004e 07D1     		bne	.L225
2892:..\FreeRTOS\Source/tasks.c **** 
 2500              		.loc 1 2892 0 discriminator 4
 2501 0050 9A68     		ldr	r2, [r3, #8]
 2502 0052 B2F1A53F 		cmp	r2, #-1515870811
 2503 0056 03D1     		bne	.L225
2892:..\FreeRTOS\Source/tasks.c **** 
 2504              		.loc 1 2892 0 discriminator 6
 2505 0058 DB68     		ldr	r3, [r3, #12]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 142


 2506              	.LVL232:
 2507 005a B3F1A53F 		cmp	r3, #-1515870811
 2508 005e 07D0     		beq	.L226
 2509              	.L225:
2892:..\FreeRTOS\Source/tasks.c **** 
 2510              		.loc 1 2892 0 discriminator 7
 2511 0060 1A4B     		ldr	r3, .L229
 2512 0062 D3F8D800 		ldr	r0, [r3, #216]
 2513 0066 D3F8D810 		ldr	r1, [r3, #216]
 2514 006a 3431     		adds	r1, r1, #52
 2515 006c FFF7FEFF 		bl	vApplicationStackOverflowHook
 2516              	.LVL233:
 2517              	.L226:
 2518              	.LBE49:
 2519              	.LBB50:
2896:..\FreeRTOS\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2520              		.loc 1 2896 0 is_stmt 1
 2521 0070 164A     		ldr	r2, .L229
 2522 0072 D2F8E430 		ldr	r3, [r2, #228]
 2523              	.LVL234:
 2524              	.LBB51:
 2525              	.LBB52:
 134:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 2526              		.loc 2 134 0
 2527              		.syntax unified
 2528              	@ 134 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 2529 0076 B3FA83F3 		clz r3, r3
 2530              	@ 0 "" 2
 2531              	.LVL235:
 2532              		.thumb
 2533              		.syntax unified
 2534 007a DBB2     		uxtb	r3, r3
 2535              	.LBE52:
 2536              	.LBE51:
2896:..\FreeRTOS\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2537              		.loc 1 2896 0
 2538 007c C3F11F03 		rsb	r3, r3, #31
 2539              	.LVL236:
 2540              	.LBB53:
 2541 0080 9800     		lsls	r0, r3, #2
 2542 0082 C418     		adds	r4, r0, r3
 2543 0084 A100     		lsls	r1, r4, #2
 2544 0086 1144     		add	r1, r1, r2
 2545 0088 4C6B     		ldr	r4, [r1, #52]
 2546 008a 6468     		ldr	r4, [r4, #4]
 2547 008c 4C63     		str	r4, [r1, #52]
 2548 008e 02F13001 		add	r1, r2, #48
 2549 0092 1844     		add	r0, r0, r3
 2550 0094 8200     		lsls	r2, r0, #2
 2551 0096 0832     		adds	r2, r2, #8
 2552 0098 0A44     		add	r2, r2, r1
 2553 009a 9442     		cmp	r4, r2
 2554 009c 06D1     		bne	.L227
2896:..\FreeRTOS\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2555              		.loc 1 2896 0 is_stmt 0 discriminator 1
 2556 009e 6068     		ldr	r0, [r4, #4]
 2557 00a0 03EB8301 		add	r1, r3, r3, lsl #2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 143


 2558 00a4 8A00     		lsls	r2, r1, #2
 2559 00a6 0949     		ldr	r1, .L229
 2560 00a8 0A44     		add	r2, r2, r1
 2561 00aa 5063     		str	r0, [r2, #52]
 2562              	.L227:
2896:..\FreeRTOS\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2563              		.loc 1 2896 0 discriminator 3
 2564 00ac 0749     		ldr	r1, .L229
 2565 00ae 03EB8303 		add	r3, r3, r3, lsl #2
 2566              	.LVL237:
 2567 00b2 9A00     		lsls	r2, r3, #2
 2568 00b4 0A44     		add	r2, r2, r1
 2569 00b6 536B     		ldr	r3, [r2, #52]
 2570 00b8 DB68     		ldr	r3, [r3, #12]
 2571 00ba C1F8D830 		str	r3, [r1, #216]
 2572              	.LBE53:
 2573              	.LBE50:
2903:..\FreeRTOS\Source/tasks.c **** 		}
 2574              		.loc 1 2903 0 is_stmt 1 discriminator 3
 2575 00be D1F8D830 		ldr	r3, [r1, #216]
 2576 00c2 5833     		adds	r3, r3, #88
 2577 00c4 024A     		ldr	r2, .L229+4
 2578 00c6 1360     		str	r3, [r2]
 2579 00c8 10BD     		pop	{r4, pc}
 2580              	.L230:
 2581 00ca 00BF     		.align	2
 2582              	.L229:
 2583 00cc 00000000 		.word	.LANCHOR0
 2584 00d0 00000000 		.word	_impure_ptr
 2585              		.cfi_endproc
 2586              	.LFE93:
 2587              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 2588              		.section	.text.vTaskSuspend,"ax",%progbits
 2589              		.align	2
 2590              		.global	vTaskSuspend
 2591              		.thumb
 2592              		.thumb_func
 2593              		.type	vTaskSuspend, %function
 2594              	vTaskSuspend:
 2595              	.LFB79:
1631:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
 2596              		.loc 1 1631 0
 2597              		.cfi_startproc
 2598              		@ args = 0, pretend = 0, frame = 0
 2599              		@ frame_needed = 0, uses_anonymous_args = 0
 2600              	.LVL238:
 2601 0000 38B5     		push	{r3, r4, r5, lr}
 2602              		.cfi_def_cfa_offset 16
 2603              		.cfi_offset 3, -16
 2604              		.cfi_offset 4, -12
 2605              		.cfi_offset 5, -8
 2606              		.cfi_offset 14, -4
 2607 0002 0446     		mov	r4, r0
1634:..\FreeRTOS\Source/tasks.c **** 		{
 2608              		.loc 1 1634 0
 2609 0004 FFF7FEFF 		bl	vPortEnterCritical
 2610              	.LVL239:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 144


1638:..\FreeRTOS\Source/tasks.c **** 
 2611              		.loc 1 1638 0
 2612 0008 14B9     		cbnz	r4, .L232
1638:..\FreeRTOS\Source/tasks.c **** 
 2613              		.loc 1 1638 0 is_stmt 0 discriminator 1
 2614 000a 2B4B     		ldr	r3, .L241
 2615 000c D3F8D840 		ldr	r4, [r3, #216]
 2616              	.LVL240:
 2617              	.L232:
1644:..\FreeRTOS\Source/tasks.c **** 			{
 2618              		.loc 1 1644 0 is_stmt 1 discriminator 4
 2619 0010 251D     		adds	r5, r4, #4
 2620 0012 2846     		mov	r0, r5
 2621 0014 FFF7FEFF 		bl	uxListRemove
 2622              	.LVL241:
 2623 0018 80B9     		cbnz	r0, .L233
1646:..\FreeRTOS\Source/tasks.c **** 			}
 2624              		.loc 1 1646 0
 2625 001a E26A     		ldr	r2, [r4, #44]
 2626 001c 02EB8201 		add	r1, r2, r2, lsl #2
 2627 0020 8B00     		lsls	r3, r1, #2
 2628 0022 2549     		ldr	r1, .L241
 2629 0024 0B44     		add	r3, r3, r1
 2630 0026 1B6B     		ldr	r3, [r3, #48]
 2631 0028 43B9     		cbnz	r3, .L233
1646:..\FreeRTOS\Source/tasks.c **** 			}
 2632              		.loc 1 1646 0 is_stmt 0 discriminator 1
 2633 002a 0123     		movs	r3, #1
 2634 002c 03FA02F2 		lsl	r2, r3, r2
 2635 0030 D1F8E430 		ldr	r3, [r1, #228]
 2636 0034 23EA0202 		bic	r2, r3, r2
 2637 0038 C1F8E420 		str	r2, [r1, #228]
 2638              	.L233:
1654:..\FreeRTOS\Source/tasks.c **** 			{
 2639              		.loc 1 1654 0 is_stmt 1
 2640 003c A36A     		ldr	r3, [r4, #40]
 2641 003e 1BB1     		cbz	r3, .L234
1656:..\FreeRTOS\Source/tasks.c **** 			}
 2642              		.loc 1 1656 0
 2643 0040 04F11800 		add	r0, r4, #24
 2644 0044 FFF7FEFF 		bl	uxListRemove
 2645              	.LVL242:
 2646              	.L234:
1663:..\FreeRTOS\Source/tasks.c **** 
 2647              		.loc 1 1663 0
 2648 0048 2946     		mov	r1, r5
 2649 004a 1B48     		ldr	r0, .L241
 2650 004c FFF7FEFF 		bl	vListInsertEnd
 2651              	.LVL243:
1667:..\FreeRTOS\Source/tasks.c **** 				{
 2652              		.loc 1 1667 0
 2653 0050 94F88434 		ldrb	r3, [r4, #1156]	@ zero_extendqisi2
 2654 0054 DBB2     		uxtb	r3, r3
 2655 0056 012B     		cmp	r3, #1
 2656 0058 02D1     		bne	.L235
1671:..\FreeRTOS\Source/tasks.c **** 				}
 2657              		.loc 1 1671 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 145


 2658 005a 0023     		movs	r3, #0
 2659 005c 84F88434 		strb	r3, [r4, #1156]
 2660              	.L235:
1676:..\FreeRTOS\Source/tasks.c **** 
 2661              		.loc 1 1676 0
 2662 0060 FFF7FEFF 		bl	vPortExitCritical
 2663              	.LVL244:
1678:..\FreeRTOS\Source/tasks.c **** 		{
 2664              		.loc 1 1678 0
 2665 0064 144B     		ldr	r3, .L241
 2666 0066 D3F8DC30 		ldr	r3, [r3, #220]
 2667 006a 2BB1     		cbz	r3, .L236
1682:..\FreeRTOS\Source/tasks.c **** 			{
 2668              		.loc 1 1682 0
 2669 006c FFF7FEFF 		bl	vPortEnterCritical
 2670              	.LVL245:
1684:..\FreeRTOS\Source/tasks.c **** 			}
 2671              		.loc 1 1684 0
 2672 0070 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2673              	.LVL246:
1686:..\FreeRTOS\Source/tasks.c **** 		}
 2674              		.loc 1 1686 0
 2675 0074 FFF7FEFF 		bl	vPortExitCritical
 2676              	.LVL247:
 2677              	.L236:
1693:..\FreeRTOS\Source/tasks.c **** 		{
 2678              		.loc 1 1693 0
 2679 0078 0F4B     		ldr	r3, .L241
 2680 007a D3F8D830 		ldr	r3, [r3, #216]
 2681 007e 9C42     		cmp	r4, r3
 2682 0080 19D1     		bne	.L231
1695:..\FreeRTOS\Source/tasks.c **** 			{
 2683              		.loc 1 1695 0
 2684 0082 0D4B     		ldr	r3, .L241
 2685 0084 D3F8DC30 		ldr	r3, [r3, #220]
 2686 0088 43B1     		cbz	r3, .L238
1699:..\FreeRTOS\Source/tasks.c **** 			}
 2687              		.loc 1 1699 0
 2688 008a 4FF08052 		mov	r2, #268435456
 2689 008e 0B4B     		ldr	r3, .L241+4
 2690 0090 1A60     		str	r2, [r3]
 2691              		.syntax unified
 2692              	@ 1699 "..\FreeRTOS\Source\tasks.c" 1
 2693 0092 BFF34F8F 		dsb
 2694              	@ 0 "" 2
 2695              	@ 1699 "..\FreeRTOS\Source\tasks.c" 1
 2696 0096 BFF36F8F 		isb
 2697              	@ 0 "" 2
 2698              		.thumb
 2699              		.syntax unified
 2700 009a 38BD     		pop	{r3, r4, r5, pc}
 2701              	.LVL248:
 2702              	.L238:
1706:..\FreeRTOS\Source/tasks.c **** 				{
 2703              		.loc 1 1706 0
 2704 009c 064B     		ldr	r3, .L241
 2705 009e 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 146


 2706 00a0 D3F8D430 		ldr	r3, [r3, #212]
 2707 00a4 9A42     		cmp	r2, r3
 2708 00a6 04D1     		bne	.L239
1712:..\FreeRTOS\Source/tasks.c **** 				}
 2709              		.loc 1 1712 0
 2710 00a8 0022     		movs	r2, #0
 2711 00aa 034B     		ldr	r3, .L241
 2712 00ac C3F8D820 		str	r2, [r3, #216]
 2713 00b0 38BD     		pop	{r3, r4, r5, pc}
 2714              	.LVL249:
 2715              	.L239:
1716:..\FreeRTOS\Source/tasks.c **** 				}
 2716              		.loc 1 1716 0
 2717 00b2 FFF7FEFF 		bl	vTaskSwitchContext
 2718              	.LVL250:
 2719              	.L231:
 2720 00b6 38BD     		pop	{r3, r4, r5, pc}
 2721              	.LVL251:
 2722              	.L242:
 2723              		.align	2
 2724              	.L241:
 2725 00b8 00000000 		.word	.LANCHOR0
 2726 00bc 04ED00E0 		.word	-536810236
 2727              		.cfi_endproc
 2728              	.LFE79:
 2729              		.size	vTaskSuspend, .-vTaskSuspend
 2730              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2731              		.align	2
 2732              		.global	vTaskPlaceOnEventList
 2733              		.thumb
 2734              		.thumb_func
 2735              		.type	vTaskPlaceOnEventList, %function
 2736              	vTaskPlaceOnEventList:
 2737              	.LFB94:
2911:..\FreeRTOS\Source/tasks.c **** 	configASSERT( pxEventList );
 2738              		.loc 1 2911 0
 2739              		.cfi_startproc
 2740              		@ args = 0, pretend = 0, frame = 0
 2741              		@ frame_needed = 0, uses_anonymous_args = 0
 2742              	.LVL252:
 2743 0000 10B5     		push	{r4, lr}
 2744              		.cfi_def_cfa_offset 8
 2745              		.cfi_offset 4, -8
 2746              		.cfi_offset 14, -4
 2747 0002 0C46     		mov	r4, r1
2921:..\FreeRTOS\Source/tasks.c **** 
 2748              		.loc 1 2921 0
 2749 0004 054B     		ldr	r3, .L245
 2750 0006 D3F8D810 		ldr	r1, [r3, #216]
 2751              	.LVL253:
 2752 000a 1831     		adds	r1, r1, #24
 2753 000c FFF7FEFF 		bl	vListInsert
 2754              	.LVL254:
2923:..\FreeRTOS\Source/tasks.c **** }
 2755              		.loc 1 2923 0
 2756 0010 0121     		movs	r1, #1
 2757 0012 2046     		mov	r0, r4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 147


 2758 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2759              	.LVL255:
 2760 0018 10BD     		pop	{r4, pc}
 2761              	.LVL256:
 2762              	.L246:
 2763 001a 00BF     		.align	2
 2764              	.L245:
 2765 001c 00000000 		.word	.LANCHOR0
 2766              		.cfi_endproc
 2767              	.LFE94:
 2768              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 2769              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2770              		.align	2
 2771              		.global	vTaskPlaceOnUnorderedEventList
 2772              		.thumb
 2773              		.thumb_func
 2774              		.type	vTaskPlaceOnUnorderedEventList, %function
 2775              	vTaskPlaceOnUnorderedEventList:
 2776              	.LFB95:
2928:..\FreeRTOS\Source/tasks.c **** 	configASSERT( pxEventList );
 2777              		.loc 1 2928 0
 2778              		.cfi_startproc
 2779              		@ args = 0, pretend = 0, frame = 0
 2780              		@ frame_needed = 0, uses_anonymous_args = 0
 2781              	.LVL257:
 2782 0000 10B5     		push	{r4, lr}
 2783              		.cfi_def_cfa_offset 8
 2784              		.cfi_offset 4, -8
 2785              		.cfi_offset 14, -4
 2786 0002 1446     		mov	r4, r2
2938:..\FreeRTOS\Source/tasks.c **** 
 2787              		.loc 1 2938 0
 2788 0004 074B     		ldr	r3, .L249
 2789 0006 D3F8D820 		ldr	r2, [r3, #216]
 2790              	.LVL258:
 2791 000a 41F00041 		orr	r1, r1, #-2147483648
 2792              	.LVL259:
 2793 000e 9161     		str	r1, [r2, #24]
2945:..\FreeRTOS\Source/tasks.c **** 
 2794              		.loc 1 2945 0
 2795 0010 D3F8D810 		ldr	r1, [r3, #216]
 2796 0014 1831     		adds	r1, r1, #24
 2797 0016 FFF7FEFF 		bl	vListInsertEnd
 2798              	.LVL260:
2947:..\FreeRTOS\Source/tasks.c **** }
 2799              		.loc 1 2947 0
 2800 001a 0121     		movs	r1, #1
 2801 001c 2046     		mov	r0, r4
 2802 001e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2803              	.LVL261:
 2804 0022 10BD     		pop	{r4, pc}
 2805              	.LVL262:
 2806              	.L250:
 2807              		.align	2
 2808              	.L249:
 2809 0024 00000000 		.word	.LANCHOR0
 2810              		.cfi_endproc
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 148


 2811              	.LFE95:
 2812              		.size	vTaskPlaceOnUnorderedEventList, .-vTaskPlaceOnUnorderedEventList
 2813              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 2814              		.align	2
 2815              		.global	xTaskRemoveFromEventList
 2816              		.thumb
 2817              		.thumb_func
 2818              		.type	xTaskRemoveFromEventList, %function
 2819              	xTaskRemoveFromEventList:
 2820              	.LFB96:
2985:..\FreeRTOS\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2821              		.loc 1 2985 0
 2822              		.cfi_startproc
 2823              		@ args = 0, pretend = 0, frame = 0
 2824              		@ frame_needed = 0, uses_anonymous_args = 0
 2825              	.LVL263:
 2826 0000 38B5     		push	{r3, r4, r5, lr}
 2827              		.cfi_def_cfa_offset 16
 2828              		.cfi_offset 3, -16
 2829              		.cfi_offset 4, -12
 2830              		.cfi_offset 5, -8
 2831              		.cfi_offset 14, -4
3002:..\FreeRTOS\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2832              		.loc 1 3002 0
 2833 0002 C368     		ldr	r3, [r0, #12]
 2834 0004 DC68     		ldr	r4, [r3, #12]
 2835              	.LVL264:
3004:..\FreeRTOS\Source/tasks.c **** 
 2836              		.loc 1 3004 0
 2837 0006 04F11805 		add	r5, r4, #24
 2838 000a 2846     		mov	r0, r5
 2839              	.LVL265:
 2840 000c FFF7FEFF 		bl	uxListRemove
 2841              	.LVL266:
3006:..\FreeRTOS\Source/tasks.c **** 	{
 2842              		.loc 1 3006 0
 2843 0010 164B     		ldr	r3, .L257
 2844 0012 D3F8F030 		ldr	r3, [r3, #240]
 2845 0016 B3B9     		cbnz	r3, .L252
3008:..\FreeRTOS\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 2846              		.loc 1 3008 0
 2847 0018 251D     		adds	r5, r4, #4
 2848 001a 2846     		mov	r0, r5
 2849 001c FFF7FEFF 		bl	uxListRemove
 2850              	.LVL267:
3009:..\FreeRTOS\Source/tasks.c **** 	}
 2851              		.loc 1 3009 0
 2852 0020 E36A     		ldr	r3, [r4, #44]
 2853 0022 0122     		movs	r2, #1
 2854 0024 02FA03F1 		lsl	r1, r2, r3
 2855 0028 1048     		ldr	r0, .L257
 2856 002a D0F8E420 		ldr	r2, [r0, #228]
 2857 002e 0A43     		orrs	r2, r2, r1
 2858 0030 C0F8E420 		str	r2, [r0, #228]
 2859 0034 3030     		adds	r0, r0, #48
 2860 0036 03EB8303 		add	r3, r3, r3, lsl #2
 2861 003a 9A00     		lsls	r2, r3, #2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 149


 2862 003c 2946     		mov	r1, r5
 2863 003e 1044     		add	r0, r0, r2
 2864 0040 FFF7FEFF 		bl	vListInsertEnd
 2865              	.LVL268:
 2866 0044 03E0     		b	.L253
 2867              	.L252:
3015:..\FreeRTOS\Source/tasks.c **** 	}
 2868              		.loc 1 3015 0
 2869 0046 2946     		mov	r1, r5
 2870 0048 0948     		ldr	r0, .L257+4
 2871 004a FFF7FEFF 		bl	vListInsertEnd
 2872              	.LVL269:
 2873              	.L253:
3018:..\FreeRTOS\Source/tasks.c **** 	{
 2874              		.loc 1 3018 0
 2875 004e E26A     		ldr	r2, [r4, #44]
 2876 0050 064B     		ldr	r3, .L257
 2877 0052 D3F8D830 		ldr	r3, [r3, #216]
 2878 0056 DB6A     		ldr	r3, [r3, #44]
 2879 0058 9A42     		cmp	r2, r3
 2880 005a 04D9     		bls	.L255
 2881              	.LVL270:
3027:..\FreeRTOS\Source/tasks.c **** 	}
 2882              		.loc 1 3027 0
 2883 005c 0120     		movs	r0, #1
 2884 005e 034B     		ldr	r3, .L257
 2885 0060 C3F80001 		str	r0, [r3, #256]
 2886 0064 38BD     		pop	{r3, r4, r5, pc}
 2887              	.LVL271:
 2888              	.L255:
3031:..\FreeRTOS\Source/tasks.c **** 	}
 2889              		.loc 1 3031 0
 2890 0066 0020     		movs	r0, #0
 2891              	.LVL272:
3049:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 2892              		.loc 1 3049 0
 2893 0068 38BD     		pop	{r3, r4, r5, pc}
 2894              	.LVL273:
 2895              	.L258:
 2896 006a 00BF     		.align	2
 2897              	.L257:
 2898 006c 00000000 		.word	.LANCHOR0
 2899 0070 14000000 		.word	.LANCHOR0+20
 2900              		.cfi_endproc
 2901              	.LFE96:
 2902              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 2903              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 2904              		.align	2
 2905              		.global	vTaskRemoveFromUnorderedEventList
 2906              		.thumb
 2907              		.thumb_func
 2908              		.type	vTaskRemoveFromUnorderedEventList, %function
 2909              	vTaskRemoveFromUnorderedEventList:
 2910              	.LFB97:
3053:..\FreeRTOS\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2911              		.loc 1 3053 0
 2912              		.cfi_startproc
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 150


 2913              		@ args = 0, pretend = 0, frame = 0
 2914              		@ frame_needed = 0, uses_anonymous_args = 0
 2915              	.LVL274:
 2916 0000 70B5     		push	{r4, r5, r6, lr}
 2917              		.cfi_def_cfa_offset 16
 2918              		.cfi_offset 4, -16
 2919              		.cfi_offset 5, -12
 2920              		.cfi_offset 6, -8
 2921              		.cfi_offset 14, -4
3061:..\FreeRTOS\Source/tasks.c **** 
 2922              		.loc 1 3061 0
 2923 0002 41F00041 		orr	r1, r1, #-2147483648
 2924              	.LVL275:
 2925 0006 0160     		str	r1, [r0]
3065:..\FreeRTOS\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2926              		.loc 1 3065 0
 2927 0008 C568     		ldr	r5, [r0, #12]
 2928              	.LVL276:
3067:..\FreeRTOS\Source/tasks.c **** 
 2929              		.loc 1 3067 0
 2930 000a FFF7FEFF 		bl	uxListRemove
 2931              	.LVL277:
3072:..\FreeRTOS\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 2932              		.loc 1 3072 0
 2933 000e 2E1D     		adds	r6, r5, #4
 2934 0010 3046     		mov	r0, r6
 2935 0012 FFF7FEFF 		bl	uxListRemove
 2936              	.LVL278:
3073:..\FreeRTOS\Source/tasks.c **** 
 2937              		.loc 1 3073 0
 2938 0016 EB6A     		ldr	r3, [r5, #44]
 2939 0018 0122     		movs	r2, #1
 2940 001a 02FA03F1 		lsl	r1, r2, r3
 2941 001e 0C4C     		ldr	r4, .L262
 2942 0020 D4F8E420 		ldr	r2, [r4, #228]
 2943 0024 0A43     		orrs	r2, r2, r1
 2944 0026 C4F8E420 		str	r2, [r4, #228]
 2945 002a 04F13000 		add	r0, r4, #48
 2946 002e 03EB8303 		add	r3, r3, r3, lsl #2
 2947 0032 9A00     		lsls	r2, r3, #2
 2948 0034 3146     		mov	r1, r6
 2949 0036 1044     		add	r0, r0, r2
 2950 0038 FFF7FEFF 		bl	vListInsertEnd
 2951              	.LVL279:
3075:..\FreeRTOS\Source/tasks.c **** 	{
 2952              		.loc 1 3075 0
 2953 003c EA6A     		ldr	r2, [r5, #44]
 2954 003e D4F8D830 		ldr	r3, [r4, #216]
 2955 0042 DB6A     		ldr	r3, [r3, #44]
 2956 0044 9A42     		cmp	r2, r3
 2957 0046 02D9     		bls	.L259
3081:..\FreeRTOS\Source/tasks.c **** 	}
 2958              		.loc 1 3081 0
 2959 0048 0122     		movs	r2, #1
 2960 004a C4F80021 		str	r2, [r4, #256]
 2961              	.L259:
 2962 004e 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 151


 2963              	.LVL280:
 2964              	.L263:
 2965              		.align	2
 2966              	.L262:
 2967 0050 00000000 		.word	.LANCHOR0
 2968              		.cfi_endproc
 2969              	.LFE97:
 2970              		.size	vTaskRemoveFromUnorderedEventList, .-vTaskRemoveFromUnorderedEventList
 2971              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 2972              		.align	2
 2973              		.global	vTaskSetTimeOutState
 2974              		.thumb
 2975              		.thumb_func
 2976              		.type	vTaskSetTimeOutState, %function
 2977              	vTaskSetTimeOutState:
 2978              	.LFB98:
3087:..\FreeRTOS\Source/tasks.c **** 	configASSERT( pxTimeOut );
 2979              		.loc 1 3087 0
 2980              		.cfi_startproc
 2981              		@ args = 0, pretend = 0, frame = 0
 2982              		@ frame_needed = 0, uses_anonymous_args = 0
 2983              	.LVL281:
 2984 0000 10B5     		push	{r4, lr}
 2985              		.cfi_def_cfa_offset 8
 2986              		.cfi_offset 4, -8
 2987              		.cfi_offset 14, -4
 2988 0002 0446     		mov	r4, r0
3089:..\FreeRTOS\Source/tasks.c **** 	{
 2989              		.loc 1 3089 0
 2990 0004 FFF7FEFF 		bl	vPortEnterCritical
 2991              	.LVL282:
3091:..\FreeRTOS\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 2992              		.loc 1 3091 0
 2993 0008 044B     		ldr	r3, .L266
 2994 000a D3F8F820 		ldr	r2, [r3, #248]
 2995 000e 2260     		str	r2, [r4]
3092:..\FreeRTOS\Source/tasks.c **** 	}
 2996              		.loc 1 3092 0
 2997 0010 D3F8EC30 		ldr	r3, [r3, #236]
 2998 0014 6360     		str	r3, [r4, #4]
3094:..\FreeRTOS\Source/tasks.c **** }
 2999              		.loc 1 3094 0
 3000 0016 FFF7FEFF 		bl	vPortExitCritical
 3001              	.LVL283:
 3002 001a 10BD     		pop	{r4, pc}
 3003              	.LVL284:
 3004              	.L267:
 3005              		.align	2
 3006              	.L266:
 3007 001c 00000000 		.word	.LANCHOR0
 3008              		.cfi_endproc
 3009              	.LFE98:
 3010              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 3011              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 3012              		.align	2
 3013              		.global	vTaskInternalSetTimeOutState
 3014              		.thumb
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 152


 3015              		.thumb_func
 3016              		.type	vTaskInternalSetTimeOutState, %function
 3017              	vTaskInternalSetTimeOutState:
 3018              	.LFB99:
3099:..\FreeRTOS\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 3019              		.loc 1 3099 0
 3020              		.cfi_startproc
 3021              		@ args = 0, pretend = 0, frame = 0
 3022              		@ frame_needed = 0, uses_anonymous_args = 0
 3023              		@ link register save eliminated.
 3024              	.LVL285:
3101:..\FreeRTOS\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3025              		.loc 1 3101 0
 3026 0000 034B     		ldr	r3, .L269
 3027 0002 D3F8F820 		ldr	r2, [r3, #248]
 3028 0006 0260     		str	r2, [r0]
3102:..\FreeRTOS\Source/tasks.c **** }
 3029              		.loc 1 3102 0
 3030 0008 D3F8EC30 		ldr	r3, [r3, #236]
 3031 000c 4360     		str	r3, [r0, #4]
 3032 000e 7047     		bx	lr
 3033              	.L270:
 3034              		.align	2
 3035              	.L269:
 3036 0010 00000000 		.word	.LANCHOR0
 3037              		.cfi_endproc
 3038              	.LFE99:
 3039              		.size	vTaskInternalSetTimeOutState, .-vTaskInternalSetTimeOutState
 3040              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3041              		.align	2
 3042              		.global	xTaskCheckForTimeOut
 3043              		.thumb
 3044              		.thumb_func
 3045              		.type	xTaskCheckForTimeOut, %function
 3046              	xTaskCheckForTimeOut:
 3047              	.LFB100:
3107:..\FreeRTOS\Source/tasks.c **** BaseType_t xReturn;
 3048              		.loc 1 3107 0
 3049              		.cfi_startproc
 3050              		@ args = 0, pretend = 0, frame = 0
 3051              		@ frame_needed = 0, uses_anonymous_args = 0
 3052              	.LVL286:
 3053 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3054              		.cfi_def_cfa_offset 24
 3055              		.cfi_offset 3, -24
 3056              		.cfi_offset 4, -20
 3057              		.cfi_offset 5, -16
 3058              		.cfi_offset 6, -12
 3059              		.cfi_offset 7, -8
 3060              		.cfi_offset 14, -4
 3061 0002 0446     		mov	r4, r0
 3062 0004 0D46     		mov	r5, r1
3113:..\FreeRTOS\Source/tasks.c **** 	{
 3063              		.loc 1 3113 0
 3064 0006 FFF7FEFF 		bl	vPortEnterCritical
 3065              	.LVL287:
 3066              	.LBB54:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 153


3116:..\FreeRTOS\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3067              		.loc 1 3116 0
 3068 000a 124B     		ldr	r3, .L278
 3069 000c D3F8EC10 		ldr	r1, [r3, #236]
 3070              	.LVL288:
3117:..\FreeRTOS\Source/tasks.c **** 
 3071              		.loc 1 3117 0
 3072 0010 6268     		ldr	r2, [r4, #4]
 3073 0012 881A     		subs	r0, r1, r2
 3074              	.LVL289:
3131:..\FreeRTOS\Source/tasks.c **** 			{
 3075              		.loc 1 3131 0
 3076 0014 2B68     		ldr	r3, [r5]
 3077 0016 B3F1FF3F 		cmp	r3, #-1
 3078 001a 14D0     		beq	.L275
3141:..\FreeRTOS\Source/tasks.c **** 		{
 3079              		.loc 1 3141 0
 3080 001c 2768     		ldr	r7, [r4]
 3081 001e 0D4E     		ldr	r6, .L278
 3082 0020 D6F8F860 		ldr	r6, [r6, #248]
 3083 0024 B742     		cmp	r7, r6
 3084 0026 01D0     		beq	.L273
3141:..\FreeRTOS\Source/tasks.c **** 		{
 3085              		.loc 1 3141 0 is_stmt 0 discriminator 1
 3086 0028 9142     		cmp	r1, r2
 3087 002a 0ED2     		bcs	.L276
 3088              	.L273:
3150:..\FreeRTOS\Source/tasks.c **** 		{
 3089              		.loc 1 3150 0 is_stmt 1
 3090 002c 9842     		cmp	r0, r3
 3091 002e 06D2     		bcs	.L274
3153:..\FreeRTOS\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3092              		.loc 1 3153 0
 3093 0030 1B1A     		subs	r3, r3, r0
 3094 0032 2B60     		str	r3, [r5]
3154:..\FreeRTOS\Source/tasks.c **** 			xReturn = pdFALSE;
 3095              		.loc 1 3154 0
 3096 0034 2046     		mov	r0, r4
 3097              	.LVL290:
 3098 0036 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3099              	.LVL291:
3155:..\FreeRTOS\Source/tasks.c **** 		}
 3100              		.loc 1 3155 0
 3101 003a 0024     		movs	r4, #0
 3102              	.LVL292:
 3103 003c 06E0     		b	.L272
 3104              	.LVL293:
 3105              	.L274:
3159:..\FreeRTOS\Source/tasks.c **** 			xReturn = pdTRUE;
 3106              		.loc 1 3159 0
 3107 003e 0023     		movs	r3, #0
 3108 0040 2B60     		str	r3, [r5]
 3109              	.LVL294:
3160:..\FreeRTOS\Source/tasks.c **** 		}
 3110              		.loc 1 3160 0
 3111 0042 0124     		movs	r4, #1
 3112              	.LVL295:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 154


 3113 0044 02E0     		b	.L272
 3114              	.LVL296:
 3115              	.L275:
3136:..\FreeRTOS\Source/tasks.c **** 			}
 3116              		.loc 1 3136 0
 3117 0046 0024     		movs	r4, #0
 3118              	.LVL297:
 3119 0048 00E0     		b	.L272
 3120              	.LVL298:
 3121              	.L276:
3148:..\FreeRTOS\Source/tasks.c **** 		}
 3122              		.loc 1 3148 0
 3123 004a 0124     		movs	r4, #1
 3124              	.LVL299:
 3125              	.L272:
 3126              	.LBE54:
3163:..\FreeRTOS\Source/tasks.c **** 
 3127              		.loc 1 3163 0
 3128 004c FFF7FEFF 		bl	vPortExitCritical
 3129              	.LVL300:
3166:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 3130              		.loc 1 3166 0
 3131 0050 2046     		mov	r0, r4
 3132 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3133              	.LVL301:
 3134              	.L279:
 3135              		.align	2
 3136              	.L278:
 3137 0054 00000000 		.word	.LANCHOR0
 3138              		.cfi_endproc
 3139              	.LFE100:
 3140              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 3141              		.section	.text.vTaskMissedYield,"ax",%progbits
 3142              		.align	2
 3143              		.global	vTaskMissedYield
 3144              		.thumb
 3145              		.thumb_func
 3146              		.type	vTaskMissedYield, %function
 3147              	vTaskMissedYield:
 3148              	.LFB101:
3170:..\FreeRTOS\Source/tasks.c **** 	xYieldPending = pdTRUE;
 3149              		.loc 1 3170 0
 3150              		.cfi_startproc
 3151              		@ args = 0, pretend = 0, frame = 0
 3152              		@ frame_needed = 0, uses_anonymous_args = 0
 3153              		@ link register save eliminated.
3171:..\FreeRTOS\Source/tasks.c **** }
 3154              		.loc 1 3171 0
 3155 0000 0122     		movs	r2, #1
 3156 0002 024B     		ldr	r3, .L281
 3157 0004 C3F80021 		str	r2, [r3, #256]
 3158 0008 7047     		bx	lr
 3159              	.L282:
 3160 000a 00BF     		.align	2
 3161              	.L281:
 3162 000c 00000000 		.word	.LANCHOR0
 3163              		.cfi_endproc
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 155


 3164              	.LFE101:
 3165              		.size	vTaskMissedYield, .-vTaskMissedYield
 3166              		.section	.text.uxTaskGetTaskNumber,"ax",%progbits
 3167              		.align	2
 3168              		.global	uxTaskGetTaskNumber
 3169              		.thumb
 3170              		.thumb_func
 3171              		.type	uxTaskGetTaskNumber, %function
 3172              	uxTaskGetTaskNumber:
 3173              	.LFB102:
3178:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxReturn;
 3174              		.loc 1 3178 0
 3175              		.cfi_startproc
 3176              		@ args = 0, pretend = 0, frame = 0
 3177              		@ frame_needed = 0, uses_anonymous_args = 0
 3178              		@ link register save eliminated.
 3179              	.LVL302:
3182:..\FreeRTOS\Source/tasks.c **** 		{
 3180              		.loc 1 3182 0
 3181 0000 08B1     		cbz	r0, .L285
 3182              	.LVL303:
3185:..\FreeRTOS\Source/tasks.c **** 		}
 3183              		.loc 1 3185 0
 3184 0002 406C     		ldr	r0, [r0, #68]
 3185              	.LVL304:
 3186 0004 7047     		bx	lr
 3187              	.LVL305:
 3188              	.L285:
3189:..\FreeRTOS\Source/tasks.c **** 		}
 3189              		.loc 1 3189 0
 3190 0006 0020     		movs	r0, #0
 3191              	.LVL306:
3193:..\FreeRTOS\Source/tasks.c **** 
 3192              		.loc 1 3193 0
 3193 0008 7047     		bx	lr
 3194              		.cfi_endproc
 3195              	.LFE102:
 3196              		.size	uxTaskGetTaskNumber, .-uxTaskGetTaskNumber
 3197 000a 00BF     		.section	.text.vTaskSetTaskNumber,"ax",%progbits
 3198              		.align	2
 3199              		.global	vTaskSetTaskNumber
 3200              		.thumb
 3201              		.thumb_func
 3202              		.type	vTaskSetTaskNumber, %function
 3203              	vTaskSetTaskNumber:
 3204              	.LFB103:
3201:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
 3205              		.loc 1 3201 0
 3206              		.cfi_startproc
 3207              		@ args = 0, pretend = 0, frame = 0
 3208              		@ frame_needed = 0, uses_anonymous_args = 0
 3209              		@ link register save eliminated.
 3210              	.LVL307:
3204:..\FreeRTOS\Source/tasks.c **** 		{
 3211              		.loc 1 3204 0
 3212 0000 00B1     		cbz	r0, .L286
 3213              	.LVL308:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 156


3207:..\FreeRTOS\Source/tasks.c **** 		}
 3214              		.loc 1 3207 0
 3215 0002 4164     		str	r1, [r0, #68]
 3216              	.LVL309:
 3217              	.L286:
 3218 0004 7047     		bx	lr
 3219              		.cfi_endproc
 3220              	.LFE103:
 3221              		.size	vTaskSetTaskNumber, .-vTaskSetTaskNumber
 3222 0006 00BF     		.section	.text.vTaskGetInfo,"ax",%progbits
 3223              		.align	2
 3224              		.global	vTaskGetInfo
 3225              		.thumb
 3226              		.thumb_func
 3227              		.type	vTaskGetInfo, %function
 3228              	vTaskGetInfo:
 3229              	.LFB107:
3500:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
 3230              		.loc 1 3500 0
 3231              		.cfi_startproc
 3232              		@ args = 0, pretend = 0, frame = 0
 3233              		@ frame_needed = 0, uses_anonymous_args = 0
 3234              	.LVL310:
 3235 0000 70B5     		push	{r4, r5, r6, lr}
 3236              		.cfi_def_cfa_offset 16
 3237              		.cfi_offset 4, -16
 3238              		.cfi_offset 5, -12
 3239              		.cfi_offset 6, -8
 3240              		.cfi_offset 14, -4
 3241 0002 0C46     		mov	r4, r1
 3242 0004 1646     		mov	r6, r2
3504:..\FreeRTOS\Source/tasks.c **** 
 3243              		.loc 1 3504 0
 3244 0006 0546     		mov	r5, r0
 3245 0008 10B9     		cbnz	r0, .L289
3504:..\FreeRTOS\Source/tasks.c **** 
 3246              		.loc 1 3504 0 is_stmt 0 discriminator 1
 3247 000a 1A4A     		ldr	r2, .L297
 3248              	.LVL311:
 3249 000c D2F8D850 		ldr	r5, [r2, #216]
 3250              	.LVL312:
 3251              	.L289:
3506:..\FreeRTOS\Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
 3252              		.loc 1 3506 0 is_stmt 1 discriminator 4
 3253 0010 2560     		str	r5, [r4]
3507:..\FreeRTOS\Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 3254              		.loc 1 3507 0 discriminator 4
 3255 0012 05F13402 		add	r2, r5, #52
 3256 0016 6260     		str	r2, [r4, #4]
3508:..\FreeRTOS\Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
 3257              		.loc 1 3508 0 discriminator 4
 3258 0018 EA6A     		ldr	r2, [r5, #44]
 3259 001a 2261     		str	r2, [r4, #16]
3509:..\FreeRTOS\Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
 3260              		.loc 1 3509 0 discriminator 4
 3261 001c 2A6B     		ldr	r2, [r5, #48]
 3262 001e E261     		str	r2, [r4, #28]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 157


3510:..\FreeRTOS\Source/tasks.c **** 
 3263              		.loc 1 3510 0 discriminator 4
 3264 0020 2A6C     		ldr	r2, [r5, #64]
 3265 0022 A260     		str	r2, [r4, #8]
3514:..\FreeRTOS\Source/tasks.c **** 		}
 3266              		.loc 1 3514 0 discriminator 4
 3267 0024 AA6C     		ldr	r2, [r5, #72]
 3268 0026 6261     		str	r2, [r4, #20]
3524:..\FreeRTOS\Source/tasks.c **** 		}
 3269              		.loc 1 3524 0 discriminator 4
 3270 0028 2A6D     		ldr	r2, [r5, #80]
 3271 002a A261     		str	r2, [r4, #24]
3535:..\FreeRTOS\Source/tasks.c **** 		{
 3272              		.loc 1 3535 0 discriminator 4
 3273 002c 052B     		cmp	r3, #5
 3274 002e 13D0     		beq	.L290
3537:..\FreeRTOS\Source/tasks.c **** 			{
 3275              		.loc 1 3537 0
 3276 0030 104A     		ldr	r2, .L297
 3277 0032 D2F8D820 		ldr	r2, [r2, #216]
 3278 0036 9542     		cmp	r5, r2
 3279 0038 02D1     		bne	.L291
3539:..\FreeRTOS\Source/tasks.c **** 			}
 3280              		.loc 1 3539 0
 3281 003a 0023     		movs	r3, #0
 3282              	.LVL313:
 3283 003c 2373     		strb	r3, [r4, #12]
 3284 003e 0FE0     		b	.L292
 3285              	.LVL314:
 3286              	.L291:
3543:..\FreeRTOS\Source/tasks.c **** 
 3287              		.loc 1 3543 0
 3288 0040 2373     		strb	r3, [r4, #12]
3550:..\FreeRTOS\Source/tasks.c **** 					{
 3289              		.loc 1 3550 0
 3290 0042 032B     		cmp	r3, #3
 3291 0044 0CD1     		bne	.L292
3552:..\FreeRTOS\Source/tasks.c **** 						{
 3292              		.loc 1 3552 0
 3293 0046 FFF7FEFF 		bl	vTaskSuspendAll
 3294              	.LVL315:
3554:..\FreeRTOS\Source/tasks.c **** 							{
 3295              		.loc 1 3554 0
 3296 004a AB6A     		ldr	r3, [r5, #40]
 3297 004c 0BB1     		cbz	r3, .L293
3556:..\FreeRTOS\Source/tasks.c **** 							}
 3298              		.loc 1 3556 0
 3299 004e 0223     		movs	r3, #2
 3300 0050 2373     		strb	r3, [r4, #12]
 3301              	.L293:
3559:..\FreeRTOS\Source/tasks.c **** 					}
 3302              		.loc 1 3559 0
 3303 0052 FFF7FEFF 		bl	xTaskResumeAll
 3304              	.LVL316:
 3305 0056 03E0     		b	.L292
 3306              	.LVL317:
 3307              	.L290:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 158


3567:..\FreeRTOS\Source/tasks.c **** 		}
 3308              		.loc 1 3567 0
 3309 0058 2846     		mov	r0, r5
 3310 005a FFF7FEFF 		bl	eTaskGetState
 3311              	.LVL318:
 3312 005e 2073     		strb	r0, [r4, #12]
 3313              	.L292:
3572:..\FreeRTOS\Source/tasks.c **** 		{
 3314              		.loc 1 3572 0
 3315 0060 26B1     		cbz	r6, .L294
3580:..\FreeRTOS\Source/tasks.c **** 			}
 3316              		.loc 1 3580 0
 3317 0062 286B     		ldr	r0, [r5, #48]
 3318 0064 FFF7FEFF 		bl	prvTaskCheckFreeStackSpace
 3319              	.LVL319:
 3320 0068 2084     		strh	r0, [r4, #32]	@ movhi
 3321 006a 70BD     		pop	{r4, r5, r6, pc}
 3322              	.LVL320:
 3323              	.L294:
3586:..\FreeRTOS\Source/tasks.c **** 		}
 3324              		.loc 1 3586 0
 3325 006c 0023     		movs	r3, #0
 3326 006e 2384     		strh	r3, [r4, #32]	@ movhi
 3327 0070 70BD     		pop	{r4, r5, r6, pc}
 3328              	.LVL321:
 3329              	.L298:
 3330 0072 00BF     		.align	2
 3331              	.L297:
 3332 0074 00000000 		.word	.LANCHOR0
 3333              		.cfi_endproc
 3334              	.LFE107:
 3335              		.size	vTaskGetInfo, .-vTaskGetInfo
 3336              		.section	.text.prvListTasksWithinSingleList,"ax",%progbits
 3337              		.align	2
 3338              		.thumb
 3339              		.thumb_func
 3340              		.type	prvListTasksWithinSingleList, %function
 3341              	prvListTasksWithinSingleList:
 3342              	.LFB108:
3596:..\FreeRTOS\Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
 3343              		.loc 1 3596 0
 3344              		.cfi_startproc
 3345              		@ args = 0, pretend = 0, frame = 0
 3346              		@ frame_needed = 0, uses_anonymous_args = 0
 3347              	.LVL322:
 3348 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3349              		.cfi_def_cfa_offset 32
 3350              		.cfi_offset 4, -32
 3351              		.cfi_offset 5, -28
 3352              		.cfi_offset 6, -24
 3353              		.cfi_offset 7, -20
 3354              		.cfi_offset 8, -16
 3355              		.cfi_offset 9, -12
 3356              		.cfi_offset 10, -8
 3357              		.cfi_offset 14, -4
 3358              	.LVL323:
3600:..\FreeRTOS\Source/tasks.c **** 		{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 159


 3359              		.loc 1 3600 0
 3360 0004 0B68     		ldr	r3, [r1]
 3361 0006 2BB3     		cbz	r3, .L304
 3362              	.LVL324:
 3363              	.LBB55:
3602:..\FreeRTOS\Source/tasks.c **** 
 3364              		.loc 1 3602 0
 3365 0008 4B68     		ldr	r3, [r1, #4]
 3366 000a 5B68     		ldr	r3, [r3, #4]
 3367 000c 4B60     		str	r3, [r1, #4]
 3368 000e 01F10809 		add	r9, r1, #8
 3369 0012 4B45     		cmp	r3, r9
 3370 0014 01D1     		bne	.L301
3602:..\FreeRTOS\Source/tasks.c **** 
 3371              		.loc 1 3602 0 is_stmt 0 discriminator 1
 3372 0016 5B68     		ldr	r3, [r3, #4]
 3373 0018 4B60     		str	r3, [r1, #4]
 3374              	.L301:
 3375 001a 9046     		mov	r8, r2
 3376 001c 0D46     		mov	r5, r1
 3377 001e 0746     		mov	r7, r0
3602:..\FreeRTOS\Source/tasks.c **** 
 3378              		.loc 1 3602 0 discriminator 3
 3379 0020 4B68     		ldr	r3, [r1, #4]
 3380 0022 D3F80CA0 		ldr	r10, [r3, #12]
 3381              	.LVL325:
 3382              	.LBE55:
3598:..\FreeRTOS\Source/tasks.c **** 
 3383              		.loc 1 3598 0 is_stmt 1 discriminator 3
 3384 0026 0024     		movs	r4, #0
 3385              	.LVL326:
 3386              	.L303:
 3387              	.LBB56:
3610:..\FreeRTOS\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
 3388              		.loc 1 3610 0
 3389 0028 6B68     		ldr	r3, [r5, #4]
 3390 002a 5B68     		ldr	r3, [r3, #4]
 3391 002c 6B60     		str	r3, [r5, #4]
 3392 002e 9945     		cmp	r9, r3
 3393 0030 01D1     		bne	.L302
3610:..\FreeRTOS\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
 3394              		.loc 1 3610 0 is_stmt 0 discriminator 1
 3395 0032 5B68     		ldr	r3, [r3, #4]
 3396 0034 6B60     		str	r3, [r5, #4]
 3397              	.L302:
3610:..\FreeRTOS\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
 3398              		.loc 1 3610 0 discriminator 3
 3399 0036 6B68     		ldr	r3, [r5, #4]
 3400 0038 DE68     		ldr	r6, [r3, #12]
 3401              	.LVL327:
 3402              	.LBE56:
3611:..\FreeRTOS\Source/tasks.c **** 				uxTask++;
 3403              		.loc 1 3611 0 is_stmt 1 discriminator 3
 3404 003a 04EBC403 		add	r3, r4, r4, lsl #3
 3405 003e 9900     		lsls	r1, r3, #2
 3406 0040 4346     		mov	r3, r8
 3407 0042 0122     		movs	r2, #1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 160


 3408 0044 3944     		add	r1, r1, r7
 3409 0046 3046     		mov	r0, r6
 3410 0048 FFF7FEFF 		bl	vTaskGetInfo
 3411              	.LVL328:
3612:..\FreeRTOS\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
 3412              		.loc 1 3612 0 discriminator 3
 3413 004c 0134     		adds	r4, r4, #1
 3414              	.LVL329:
3613:..\FreeRTOS\Source/tasks.c **** 		}
 3415              		.loc 1 3613 0 discriminator 3
 3416 004e B245     		cmp	r10, r6
 3417 0050 EAD1     		bne	.L303
 3418 0052 00E0     		b	.L300
 3419              	.LVL330:
 3420              	.L304:
3598:..\FreeRTOS\Source/tasks.c **** 
 3421              		.loc 1 3598 0
 3422 0054 0024     		movs	r4, #0
 3423              	.LVL331:
 3424              	.L300:
3621:..\FreeRTOS\Source/tasks.c **** 
 3425              		.loc 1 3621 0
 3426 0056 2046     		mov	r0, r4
 3427 0058 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3428              		.cfi_endproc
 3429              	.LFE108:
 3430              		.size	prvListTasksWithinSingleList, .-prvListTasksWithinSingleList
 3431              		.section	.text.uxTaskGetSystemState,"ax",%progbits
 3432              		.align	2
 3433              		.global	uxTaskGetSystemState
 3434              		.thumb
 3435              		.thumb_func
 3436              		.type	uxTaskGetSystemState, %function
 3437              	uxTaskGetSystemState:
 3438              	.LFB91:
2410:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
 3439              		.loc 1 2410 0
 3440              		.cfi_startproc
 3441              		@ args = 0, pretend = 0, frame = 0
 3442              		@ frame_needed = 0, uses_anonymous_args = 0
 3443              	.LVL332:
 3444 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3445              		.cfi_def_cfa_offset 24
 3446              		.cfi_offset 3, -24
 3447              		.cfi_offset 4, -20
 3448              		.cfi_offset 5, -16
 3449              		.cfi_offset 6, -12
 3450              		.cfi_offset 7, -8
 3451              		.cfi_offset 14, -4
 3452 0002 0746     		mov	r7, r0
 3453 0004 0C46     		mov	r4, r1
 3454 0006 1646     		mov	r6, r2
 3455              	.LVL333:
2413:..\FreeRTOS\Source/tasks.c **** 		{
 3456              		.loc 1 2413 0
 3457 0008 FFF7FEFF 		bl	vTaskSuspendAll
 3458              	.LVL334:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 161


2416:..\FreeRTOS\Source/tasks.c **** 			{
 3459              		.loc 1 2416 0
 3460 000c 234B     		ldr	r3, .L311
 3461 000e D3F8D430 		ldr	r3, [r3, #212]
 3462 0012 A342     		cmp	r3, r4
 3463 0014 3DD8     		bhi	.L309
 3464 0016 0525     		movs	r5, #5
 3465 0018 0024     		movs	r4, #0
 3466              	.LVL335:
 3467              	.L308:
2422:..\FreeRTOS\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
 3468              		.loc 1 2422 0 discriminator 1
 3469 001a 013D     		subs	r5, r5, #1
 3470              	.LVL336:
2423:..\FreeRTOS\Source/tasks.c **** 
 3471              		.loc 1 2423 0 discriminator 1
 3472 001c 04EBC403 		add	r3, r4, r4, lsl #3
 3473 0020 9800     		lsls	r0, r3, #2
 3474 0022 05EB8502 		add	r2, r5, r5, lsl #2
 3475 0026 9300     		lsls	r3, r2, #2
 3476 0028 0122     		movs	r2, #1
 3477 002a 1D49     		ldr	r1, .L311+4
 3478 002c 1944     		add	r1, r1, r3
 3479 002e 3844     		add	r0, r0, r7
 3480 0030 FFF7FEFF 		bl	prvListTasksWithinSingleList
 3481              	.LVL337:
 3482 0034 0444     		add	r4, r4, r0
 3483              	.LVL338:
2425:..\FreeRTOS\Source/tasks.c **** 
 3484              		.loc 1 2425 0 discriminator 1
 3485 0036 002D     		cmp	r5, #0
 3486 0038 EFD1     		bne	.L308
2429:..\FreeRTOS\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
 3487              		.loc 1 2429 0
 3488 003a 04EBC403 		add	r3, r4, r4, lsl #3
 3489 003e 9800     		lsls	r0, r3, #2
 3490 0040 164D     		ldr	r5, .L311
 3491              	.LVL339:
 3492 0042 A96A     		ldr	r1, [r5, #40]
 3493 0044 0222     		movs	r2, #2
 3494 0046 3844     		add	r0, r0, r7
 3495 0048 FFF7FEFF 		bl	prvListTasksWithinSingleList
 3496              	.LVL340:
 3497 004c 0444     		add	r4, r4, r0
 3498              	.LVL341:
2430:..\FreeRTOS\Source/tasks.c **** 
 3499              		.loc 1 2430 0
 3500 004e 04EBC403 		add	r3, r4, r4, lsl #3
 3501 0052 9800     		lsls	r0, r3, #2
 3502 0054 D5F8D010 		ldr	r1, [r5, #208]
 3503 0058 0222     		movs	r2, #2
 3504 005a 3844     		add	r0, r0, r7
 3505 005c FFF7FEFF 		bl	prvListTasksWithinSingleList
 3506              	.LVL342:
 3507 0060 0444     		add	r4, r4, r0
 3508              	.LVL343:
2436:..\FreeRTOS\Source/tasks.c **** 				}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 162


 3509              		.loc 1 2436 0
 3510 0062 04EBC403 		add	r3, r4, r4, lsl #3
 3511 0066 9800     		lsls	r0, r3, #2
 3512 0068 0422     		movs	r2, #4
 3513 006a 05F1BC01 		add	r1, r5, #188
 3514 006e 3844     		add	r0, r0, r7
 3515 0070 FFF7FEFF 		bl	prvListTasksWithinSingleList
 3516              	.LVL344:
 3517 0074 0444     		add	r4, r4, r0
 3518              	.LVL345:
2444:..\FreeRTOS\Source/tasks.c **** 				}
 3519              		.loc 1 2444 0
 3520 0076 04EBC403 		add	r3, r4, r4, lsl #3
 3521 007a 9800     		lsls	r0, r3, #2
 3522 007c 0322     		movs	r2, #3
 3523 007e 2946     		mov	r1, r5
 3524 0080 3844     		add	r0, r0, r7
 3525 0082 FFF7FEFF 		bl	prvListTasksWithinSingleList
 3526              	.LVL346:
 3527 0086 0444     		add	r4, r4, r0
 3528              	.LVL347:
2450:..\FreeRTOS\Source/tasks.c **** 					{
 3529              		.loc 1 2450 0
 3530 0088 26B1     		cbz	r6, .L307
2455:..\FreeRTOS\Source/tasks.c **** 						#endif
 3531              		.loc 1 2455 0
 3532 008a FFF7FEFF 		bl	StatisticsCounter_ReadCounter
 3533              	.LVL348:
 3534 008e 3060     		str	r0, [r6]
 3535 0090 00E0     		b	.L307
 3536              	.LVL349:
 3537              	.L309:
2411:..\FreeRTOS\Source/tasks.c **** 
 3538              		.loc 1 2411 0
 3539 0092 0024     		movs	r4, #0
 3540              	.LVL350:
 3541              	.L307:
2473:..\FreeRTOS\Source/tasks.c **** 
 3542              		.loc 1 2473 0
 3543 0094 FFF7FEFF 		bl	xTaskResumeAll
 3544              	.LVL351:
2476:..\FreeRTOS\Source/tasks.c **** 
 3545              		.loc 1 2476 0
 3546 0098 2046     		mov	r0, r4
 3547 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3548              	.LVL352:
 3549              	.L312:
 3550              		.align	2
 3551              	.L311:
 3552 009c 00000000 		.word	.LANCHOR0
 3553 00a0 30000000 		.word	.LANCHOR0+48
 3554              		.cfi_endproc
 3555              	.LFE91:
 3556              		.size	uxTaskGetSystemState, .-uxTaskGetSystemState
 3557              		.section	.text.uxTaskGetStackHighWaterMark,"ax",%progbits
 3558              		.align	2
 3559              		.global	uxTaskGetStackHighWaterMark
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 163


 3560              		.thumb
 3561              		.thumb_func
 3562              		.type	uxTaskGetStackHighWaterMark, %function
 3563              	uxTaskGetStackHighWaterMark:
 3564              	.LFB110:
3649:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
 3565              		.loc 1 3649 0
 3566              		.cfi_startproc
 3567              		@ args = 0, pretend = 0, frame = 0
 3568              		@ frame_needed = 0, uses_anonymous_args = 0
 3569              	.LVL353:
 3570 0000 08B5     		push	{r3, lr}
 3571              		.cfi_def_cfa_offset 8
 3572              		.cfi_offset 3, -8
 3573              		.cfi_offset 14, -4
3654:..\FreeRTOS\Source/tasks.c **** 
 3574              		.loc 1 3654 0
 3575 0002 0346     		mov	r3, r0
 3576 0004 10B9     		cbnz	r0, .L314
3654:..\FreeRTOS\Source/tasks.c **** 
 3577              		.loc 1 3654 0 is_stmt 0 discriminator 1
 3578 0006 034B     		ldr	r3, .L316
 3579 0008 D3F8D830 		ldr	r3, [r3, #216]
 3580              	.LVL354:
 3581              	.L314:
3666:..\FreeRTOS\Source/tasks.c **** 
 3582              		.loc 1 3666 0 is_stmt 1 discriminator 4
 3583 000c 186B     		ldr	r0, [r3, #48]
 3584 000e FFF7FEFF 		bl	prvTaskCheckFreeStackSpace
 3585              	.LVL355:
3669:..\FreeRTOS\Source/tasks.c **** 
 3586              		.loc 1 3669 0 discriminator 4
 3587 0012 08BD     		pop	{r3, pc}
 3588              	.L317:
 3589              		.align	2
 3590              	.L316:
 3591 0014 00000000 		.word	.LANCHOR0
 3592              		.cfi_endproc
 3593              	.LFE110:
 3594              		.size	uxTaskGetStackHighWaterMark, .-uxTaskGetStackHighWaterMark
 3595              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3596              		.align	2
 3597              		.global	xTaskGetCurrentTaskHandle
 3598              		.thumb
 3599              		.thumb_func
 3600              		.type	xTaskGetCurrentTaskHandle, %function
 3601              	xTaskGetCurrentTaskHandle:
 3602              	.LFB113:
3757:..\FreeRTOS\Source/tasks.c **** 	TaskHandle_t xReturn;
 3603              		.loc 1 3757 0
 3604              		.cfi_startproc
 3605              		@ args = 0, pretend = 0, frame = 0
 3606              		@ frame_needed = 0, uses_anonymous_args = 0
 3607              		@ link register save eliminated.
3763:..\FreeRTOS\Source/tasks.c **** 
 3608              		.loc 1 3763 0
 3609 0000 014B     		ldr	r3, .L319
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 164


 3610 0002 D3F8D800 		ldr	r0, [r3, #216]
 3611              	.LVL356:
3766:..\FreeRTOS\Source/tasks.c **** 
 3612              		.loc 1 3766 0
 3613 0006 7047     		bx	lr
 3614              	.L320:
 3615              		.align	2
 3616              	.L319:
 3617 0008 00000000 		.word	.LANCHOR0
 3618              		.cfi_endproc
 3619              	.LFE113:
 3620              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 3621              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 3622              		.align	2
 3623              		.global	xTaskPriorityInherit
 3624              		.thumb
 3625              		.thumb_func
 3626              		.type	xTaskPriorityInherit, %function
 3627              	xTaskPriorityInherit:
 3628              	.LFB114:
3802:..\FreeRTOS\Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 3629              		.loc 1 3802 0
 3630              		.cfi_startproc
 3631              		@ args = 0, pretend = 0, frame = 0
 3632              		@ frame_needed = 0, uses_anonymous_args = 0
 3633              	.LVL357:
3809:..\FreeRTOS\Source/tasks.c **** 		{
 3634              		.loc 1 3809 0
 3635 0000 0028     		cmp	r0, #0
 3636 0002 5CD0     		beq	.L328
3802:..\FreeRTOS\Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 3637              		.loc 1 3802 0
 3638 0004 38B5     		push	{r3, r4, r5, lr}
 3639              		.cfi_def_cfa_offset 16
 3640              		.cfi_offset 3, -16
 3641              		.cfi_offset 4, -12
 3642              		.cfi_offset 5, -8
 3643              		.cfi_offset 14, -4
 3644 0006 0346     		mov	r3, r0
3814:..\FreeRTOS\Source/tasks.c **** 			{
 3645              		.loc 1 3814 0
 3646 0008 C26A     		ldr	r2, [r0, #44]
 3647 000a 2F49     		ldr	r1, .L332
 3648 000c D1F8D810 		ldr	r1, [r1, #216]
 3649 0010 C96A     		ldr	r1, [r1, #44]
 3650 0012 8A42     		cmp	r2, r1
 3651 0014 4AD2     		bcs	.L323
3819:..\FreeRTOS\Source/tasks.c **** 				{
 3652              		.loc 1 3819 0
 3653 0016 8169     		ldr	r1, [r0, #24]
 3654 0018 0029     		cmp	r1, #0
 3655 001a 06DB     		blt	.L324
3821:..\FreeRTOS\Source/tasks.c **** 				}
 3656              		.loc 1 3821 0
 3657 001c 2A49     		ldr	r1, .L332
 3658 001e D1F8D810 		ldr	r1, [r1, #216]
 3659 0022 C96A     		ldr	r1, [r1, #44]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 165


 3660 0024 C1F10501 		rsb	r1, r1, #5
 3661 0028 8161     		str	r1, [r0, #24]
 3662              	.L324:
3830:..\FreeRTOS\Source/tasks.c **** 				{
 3663              		.loc 1 3830 0
 3664 002a 5869     		ldr	r0, [r3, #20]
 3665              	.LVL358:
 3666 002c 02EB8202 		add	r2, r2, r2, lsl #2
 3667 0030 9100     		lsls	r1, r2, #2
 3668 0032 264A     		ldr	r2, .L332+4
 3669 0034 1144     		add	r1, r1, r2
 3670 0036 8842     		cmp	r0, r1
 3671 0038 01D1     		bne	.L329
 3672 003a 0122     		movs	r2, #1
 3673 003c 00E0     		b	.L325
 3674              	.L329:
 3675 003e 0022     		movs	r2, #0
 3676              	.L325:
3830:..\FreeRTOS\Source/tasks.c **** 				{
 3677              		.loc 1 3830 0 is_stmt 0 discriminator 4
 3678 0040 6AB3     		cbz	r2, .L326
 3679 0042 1C46     		mov	r4, r3
3832:..\FreeRTOS\Source/tasks.c **** 					{
 3680              		.loc 1 3832 0 is_stmt 1
 3681 0044 1D1D     		adds	r5, r3, #4
 3682 0046 2846     		mov	r0, r5
 3683 0048 FFF7FEFF 		bl	uxListRemove
 3684              	.LVL359:
 3685 004c 80B9     		cbnz	r0, .L327
3834:..\FreeRTOS\Source/tasks.c **** 					}
 3686              		.loc 1 3834 0
 3687 004e E26A     		ldr	r2, [r4, #44]
 3688 0050 02EB8201 		add	r1, r2, r2, lsl #2
 3689 0054 8B00     		lsls	r3, r1, #2
 3690 0056 1C49     		ldr	r1, .L332
 3691 0058 0B44     		add	r3, r3, r1
 3692 005a 1B6B     		ldr	r3, [r3, #48]
 3693 005c 43B9     		cbnz	r3, .L327
3834:..\FreeRTOS\Source/tasks.c **** 					}
 3694              		.loc 1 3834 0 is_stmt 0 discriminator 1
 3695 005e 0123     		movs	r3, #1
 3696 0060 03FA02F2 		lsl	r2, r3, r2
 3697 0064 D1F8E430 		ldr	r3, [r1, #228]
 3698 0068 23EA0202 		bic	r2, r3, r2
 3699 006c C1F8E420 		str	r2, [r1, #228]
 3700              	.L327:
3842:..\FreeRTOS\Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 3701              		.loc 1 3842 0 is_stmt 1
 3702 0070 1548     		ldr	r0, .L332
 3703 0072 D0F8D830 		ldr	r3, [r0, #216]
 3704 0076 DB6A     		ldr	r3, [r3, #44]
 3705 0078 E362     		str	r3, [r4, #44]
3843:..\FreeRTOS\Source/tasks.c **** 				}
 3706              		.loc 1 3843 0
 3707 007a 0124     		movs	r4, #1
 3708              	.LVL360:
 3709 007c 04FA03F1 		lsl	r1, r4, r3
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 166


 3710 0080 D0F8E420 		ldr	r2, [r0, #228]
 3711 0084 0A43     		orrs	r2, r2, r1
 3712 0086 C0F8E420 		str	r2, [r0, #228]
 3713 008a 3030     		adds	r0, r0, #48
 3714 008c 03EB8303 		add	r3, r3, r3, lsl #2
 3715 0090 9A00     		lsls	r2, r3, #2
 3716 0092 2946     		mov	r1, r5
 3717 0094 1044     		add	r0, r0, r2
 3718 0096 FFF7FEFF 		bl	vListInsertEnd
 3719              	.LVL361:
3854:..\FreeRTOS\Source/tasks.c **** 			}
 3720              		.loc 1 3854 0
 3721 009a 2046     		mov	r0, r4
 3722 009c 38BD     		pop	{r3, r4, r5, pc}
 3723              	.LVL362:
 3724              	.L326:
3848:..\FreeRTOS\Source/tasks.c **** 				}
 3725              		.loc 1 3848 0
 3726 009e 0A4A     		ldr	r2, .L332
 3727 00a0 D2F8D820 		ldr	r2, [r2, #216]
 3728 00a4 D26A     		ldr	r2, [r2, #44]
 3729 00a6 DA62     		str	r2, [r3, #44]
3854:..\FreeRTOS\Source/tasks.c **** 			}
 3730              		.loc 1 3854 0
 3731 00a8 0120     		movs	r0, #1
 3732 00aa 38BD     		pop	{r3, r4, r5, pc}
 3733              	.LVL363:
 3734              	.L323:
3858:..\FreeRTOS\Source/tasks.c **** 				{
 3735              		.loc 1 3858 0
 3736 00ac 826C     		ldr	r2, [r0, #72]
 3737 00ae 064B     		ldr	r3, .L332
 3738 00b0 D3F8D830 		ldr	r3, [r3, #216]
 3739 00b4 DB6A     		ldr	r3, [r3, #44]
 3740 00b6 9A42     		cmp	r2, r3
 3741 00b8 03D3     		bcc	.L330
3804:..\FreeRTOS\Source/tasks.c **** 
 3742              		.loc 1 3804 0
 3743 00ba 0020     		movs	r0, #0
 3744              	.LVL364:
 3745 00bc 38BD     		pop	{r3, r4, r5, pc}
 3746              	.LVL365:
 3747              	.L328:
 3748              		.cfi_def_cfa_offset 0
 3749              		.cfi_restore 3
 3750              		.cfi_restore 4
 3751              		.cfi_restore 5
 3752              		.cfi_restore 14
 3753 00be 0020     		movs	r0, #0
 3754              	.LVL366:
3881:..\FreeRTOS\Source/tasks.c **** 
 3755              		.loc 1 3881 0
 3756 00c0 7047     		bx	lr
 3757              	.LVL367:
 3758              	.L330:
 3759              		.cfi_def_cfa_offset 16
 3760              		.cfi_offset 3, -16
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 167


 3761              		.cfi_offset 4, -12
 3762              		.cfi_offset 5, -8
 3763              		.cfi_offset 14, -4
3867:..\FreeRTOS\Source/tasks.c **** 				}
 3764              		.loc 1 3867 0
 3765 00c2 0120     		movs	r0, #1
 3766              	.LVL368:
3881:..\FreeRTOS\Source/tasks.c **** 
 3767              		.loc 1 3881 0
 3768 00c4 38BD     		pop	{r3, r4, r5, pc}
 3769              	.L333:
 3770 00c6 00BF     		.align	2
 3771              	.L332:
 3772 00c8 00000000 		.word	.LANCHOR0
 3773 00cc 30000000 		.word	.LANCHOR0+48
 3774              		.cfi_endproc
 3775              	.LFE114:
 3776              		.size	xTaskPriorityInherit, .-xTaskPriorityInherit
 3777              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 3778              		.align	2
 3779              		.global	xTaskPriorityDisinherit
 3780              		.thumb
 3781              		.thumb_func
 3782              		.type	xTaskPriorityDisinherit, %function
 3783              	xTaskPriorityDisinherit:
 3784              	.LFB115:
3889:..\FreeRTOS\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 3785              		.loc 1 3889 0
 3786              		.cfi_startproc
 3787              		@ args = 0, pretend = 0, frame = 0
 3788              		@ frame_needed = 0, uses_anonymous_args = 0
 3789              	.LVL369:
3893:..\FreeRTOS\Source/tasks.c **** 		{
 3790              		.loc 1 3893 0
 3791 0000 0028     		cmp	r0, #0
 3792 0002 38D0     		beq	.L337
3889:..\FreeRTOS\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 3793              		.loc 1 3889 0
 3794 0004 38B5     		push	{r3, r4, r5, lr}
 3795              		.cfi_def_cfa_offset 16
 3796              		.cfi_offset 3, -16
 3797              		.cfi_offset 4, -12
 3798              		.cfi_offset 5, -8
 3799              		.cfi_offset 14, -4
 3800 0006 0346     		mov	r3, r0
3901:..\FreeRTOS\Source/tasks.c **** 
 3801              		.loc 1 3901 0
 3802 0008 C26C     		ldr	r2, [r0, #76]
 3803 000a 013A     		subs	r2, r2, #1
 3804 000c C264     		str	r2, [r0, #76]
3905:..\FreeRTOS\Source/tasks.c **** 			{
 3805              		.loc 1 3905 0
 3806 000e C06A     		ldr	r0, [r0, #44]
 3807              	.LVL370:
 3808 0010 996C     		ldr	r1, [r3, #72]
 3809 0012 8842     		cmp	r0, r1
 3810 0014 31D0     		beq	.L338
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 168


3908:..\FreeRTOS\Source/tasks.c **** 				{
 3811              		.loc 1 3908 0
 3812 0016 92BB     		cbnz	r2, .L339
 3813 0018 1C46     		mov	r4, r3
3915:..\FreeRTOS\Source/tasks.c **** 					{
 3814              		.loc 1 3915 0
 3815 001a 1D1D     		adds	r5, r3, #4
 3816 001c 2846     		mov	r0, r5
 3817 001e FFF7FEFF 		bl	uxListRemove
 3818              	.LVL371:
 3819 0022 80B9     		cbnz	r0, .L336
3917:..\FreeRTOS\Source/tasks.c **** 					}
 3820              		.loc 1 3917 0
 3821 0024 E26A     		ldr	r2, [r4, #44]
 3822 0026 02EB8201 		add	r1, r2, r2, lsl #2
 3823 002a 8B00     		lsls	r3, r1, #2
 3824 002c 1549     		ldr	r1, .L341
 3825 002e 0B44     		add	r3, r3, r1
 3826 0030 1B6B     		ldr	r3, [r3, #48]
 3827 0032 43B9     		cbnz	r3, .L336
3917:..\FreeRTOS\Source/tasks.c **** 					}
 3828              		.loc 1 3917 0 is_stmt 0 discriminator 1
 3829 0034 0123     		movs	r3, #1
 3830 0036 03FA02F2 		lsl	r2, r3, r2
 3831 003a D1F8E430 		ldr	r3, [r1, #228]
 3832 003e 23EA0202 		bic	r2, r3, r2
 3833 0042 C1F8E420 		str	r2, [r1, #228]
 3834              	.L336:
3927:..\FreeRTOS\Source/tasks.c **** 
 3835              		.loc 1 3927 0 is_stmt 1
 3836 0046 A36C     		ldr	r3, [r4, #72]
 3837 0048 E362     		str	r3, [r4, #44]
3932:..\FreeRTOS\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3838              		.loc 1 3932 0
 3839 004a C3F10502 		rsb	r2, r3, #5
 3840 004e A261     		str	r2, [r4, #24]
3933:..\FreeRTOS\Source/tasks.c **** 
 3841              		.loc 1 3933 0
 3842 0050 0124     		movs	r4, #1
 3843              	.LVL372:
 3844 0052 04FA03F1 		lsl	r1, r4, r3
 3845 0056 0B48     		ldr	r0, .L341
 3846 0058 D0F8E420 		ldr	r2, [r0, #228]
 3847 005c 0A43     		orrs	r2, r2, r1
 3848 005e C0F8E420 		str	r2, [r0, #228]
 3849 0062 3030     		adds	r0, r0, #48
 3850 0064 03EB8303 		add	r3, r3, r3, lsl #2
 3851 0068 9A00     		lsls	r2, r3, #2
 3852 006a 2946     		mov	r1, r5
 3853 006c 1044     		add	r0, r0, r2
 3854 006e FFF7FEFF 		bl	vListInsertEnd
 3855              	.LVL373:
3943:..\FreeRTOS\Source/tasks.c **** 				}
 3856              		.loc 1 3943 0
 3857 0072 2046     		mov	r0, r4
 3858 0074 38BD     		pop	{r3, r4, r5, pc}
 3859              	.LVL374:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 169


 3860              	.L337:
 3861              		.cfi_def_cfa_offset 0
 3862              		.cfi_restore 3
 3863              		.cfi_restore 4
 3864              		.cfi_restore 5
 3865              		.cfi_restore 14
3891:..\FreeRTOS\Source/tasks.c **** 
 3866              		.loc 1 3891 0
 3867 0076 0020     		movs	r0, #0
 3868              	.LVL375:
3961:..\FreeRTOS\Source/tasks.c **** 
 3869              		.loc 1 3961 0
 3870 0078 7047     		bx	lr
 3871              	.LVL376:
 3872              	.L338:
 3873              		.cfi_def_cfa_offset 16
 3874              		.cfi_offset 3, -16
 3875              		.cfi_offset 4, -12
 3876              		.cfi_offset 5, -8
 3877              		.cfi_offset 14, -4
3891:..\FreeRTOS\Source/tasks.c **** 
 3878              		.loc 1 3891 0
 3879 007a 0020     		movs	r0, #0
 3880 007c 38BD     		pop	{r3, r4, r5, pc}
 3881              	.LVL377:
 3882              	.L339:
 3883 007e 0020     		movs	r0, #0
 3884              	.LVL378:
3961:..\FreeRTOS\Source/tasks.c **** 
 3885              		.loc 1 3961 0
 3886 0080 38BD     		pop	{r3, r4, r5, pc}
 3887              	.LVL379:
 3888              	.L342:
 3889 0082 00BF     		.align	2
 3890              	.L341:
 3891 0084 00000000 		.word	.LANCHOR0
 3892              		.cfi_endproc
 3893              	.LFE115:
 3894              		.size	xTaskPriorityDisinherit, .-xTaskPriorityDisinherit
 3895              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 3896              		.align	2
 3897              		.global	vTaskPriorityDisinheritAfterTimeout
 3898              		.thumb
 3899              		.thumb_func
 3900              		.type	vTaskPriorityDisinheritAfterTimeout, %function
 3901              	vTaskPriorityDisinheritAfterTimeout:
 3902              	.LFB116:
3969:..\FreeRTOS\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 3903              		.loc 1 3969 0
 3904              		.cfi_startproc
 3905              		@ args = 0, pretend = 0, frame = 0
 3906              		@ frame_needed = 0, uses_anonymous_args = 0
 3907              	.LVL380:
3974:..\FreeRTOS\Source/tasks.c **** 		{
 3908              		.loc 1 3974 0
 3909 0000 0028     		cmp	r0, #0
 3910 0002 48D0     		beq	.L351
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 170


3969:..\FreeRTOS\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 3911              		.loc 1 3969 0
 3912 0004 38B5     		push	{r3, r4, r5, lr}
 3913              		.cfi_def_cfa_offset 16
 3914              		.cfi_offset 3, -16
 3915              		.cfi_offset 4, -12
 3916              		.cfi_offset 5, -8
 3917              		.cfi_offset 14, -4
 3918 0006 0346     		mov	r3, r0
3984:..\FreeRTOS\Source/tasks.c **** 			{
 3919              		.loc 1 3984 0
 3920 0008 826C     		ldr	r2, [r0, #72]
 3921 000a 8A42     		cmp	r2, r1
 3922 000c 00D2     		bcs	.L345
3986:..\FreeRTOS\Source/tasks.c **** 			}
 3923              		.loc 1 3986 0
 3924 000e 0A46     		mov	r2, r1
 3925              	.L345:
 3926              	.LVL381:
3994:..\FreeRTOS\Source/tasks.c **** 			{
 3927              		.loc 1 3994 0
 3928 0010 D96A     		ldr	r1, [r3, #44]
 3929              	.LVL382:
 3930 0012 8A42     		cmp	r2, r1
 3931 0014 3ED0     		beq	.L343
4000:..\FreeRTOS\Source/tasks.c **** 				{
 3932              		.loc 1 4000 0
 3933 0016 D86C     		ldr	r0, [r3, #76]
 3934              	.LVL383:
 3935 0018 0128     		cmp	r0, #1
 3936 001a 3BD1     		bne	.L343
 3937              	.LVL384:
4012:..\FreeRTOS\Source/tasks.c **** 
 3938              		.loc 1 4012 0
 3939 001c DA62     		str	r2, [r3, #44]
4016:..\FreeRTOS\Source/tasks.c **** 					{
 3940              		.loc 1 4016 0
 3941 001e 9869     		ldr	r0, [r3, #24]
 3942 0020 0028     		cmp	r0, #0
 3943 0022 02DB     		blt	.L346
4018:..\FreeRTOS\Source/tasks.c **** 					}
 3944              		.loc 1 4018 0
 3945 0024 C2F10502 		rsb	r2, r2, #5
 3946              	.LVL385:
 3947 0028 9A61     		str	r2, [r3, #24]
 3948              	.L346:
4031:..\FreeRTOS\Source/tasks.c **** 					{
 3949              		.loc 1 4031 0
 3950 002a 5869     		ldr	r0, [r3, #20]
 3951 002c 01EB8101 		add	r1, r1, r1, lsl #2
 3952              	.LVL386:
 3953 0030 8A00     		lsls	r2, r1, #2
 3954 0032 1949     		ldr	r1, .L352
 3955 0034 0A44     		add	r2, r2, r1
 3956 0036 9042     		cmp	r0, r2
 3957 0038 01D1     		bne	.L349
 3958 003a 0122     		movs	r2, #1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 171


 3959 003c 00E0     		b	.L347
 3960              	.L349:
 3961 003e 0022     		movs	r2, #0
 3962              	.L347:
4031:..\FreeRTOS\Source/tasks.c **** 					{
 3963              		.loc 1 4031 0 is_stmt 0 discriminator 4
 3964 0040 42B3     		cbz	r2, .L343
 3965 0042 1C46     		mov	r4, r3
4033:..\FreeRTOS\Source/tasks.c **** 						{
 3966              		.loc 1 4033 0 is_stmt 1
 3967 0044 1D1D     		adds	r5, r3, #4
 3968 0046 2846     		mov	r0, r5
 3969 0048 FFF7FEFF 		bl	uxListRemove
 3970              	.LVL387:
 3971 004c 80B9     		cbnz	r0, .L348
4035:..\FreeRTOS\Source/tasks.c **** 						}
 3972              		.loc 1 4035 0
 3973 004e E26A     		ldr	r2, [r4, #44]
 3974 0050 02EB8201 		add	r1, r2, r2, lsl #2
 3975 0054 8B00     		lsls	r3, r1, #2
 3976 0056 1149     		ldr	r1, .L352+4
 3977 0058 0B44     		add	r3, r3, r1
 3978 005a 1B6B     		ldr	r3, [r3, #48]
 3979 005c 43B9     		cbnz	r3, .L348
4035:..\FreeRTOS\Source/tasks.c **** 						}
 3980              		.loc 1 4035 0 is_stmt 0 discriminator 1
 3981 005e 0123     		movs	r3, #1
 3982 0060 03FA02F2 		lsl	r2, r3, r2
 3983 0064 D1F8E430 		ldr	r3, [r1, #228]
 3984 0068 23EA0202 		bic	r2, r3, r2
 3985 006c C1F8E420 		str	r2, [r1, #228]
 3986              	.L348:
4042:..\FreeRTOS\Source/tasks.c **** 					}
 3987              		.loc 1 4042 0 is_stmt 1
 3988 0070 E36A     		ldr	r3, [r4, #44]
 3989 0072 0122     		movs	r2, #1
 3990 0074 02FA03F1 		lsl	r1, r2, r3
 3991 0078 0848     		ldr	r0, .L352+4
 3992 007a D0F8E420 		ldr	r2, [r0, #228]
 3993 007e 0A43     		orrs	r2, r2, r1
 3994 0080 C0F8E420 		str	r2, [r0, #228]
 3995 0084 3030     		adds	r0, r0, #48
 3996 0086 03EB8303 		add	r3, r3, r3, lsl #2
 3997 008a 9A00     		lsls	r2, r3, #2
 3998 008c 2946     		mov	r1, r5
 3999 008e 1044     		add	r0, r0, r2
 4000 0090 FFF7FEFF 		bl	vListInsertEnd
 4001              	.LVL388:
 4002              	.L343:
 4003 0094 38BD     		pop	{r3, r4, r5, pc}
 4004              	.LVL389:
 4005              	.L351:
 4006              		.cfi_def_cfa_offset 0
 4007              		.cfi_restore 3
 4008              		.cfi_restore 4
 4009              		.cfi_restore 5
 4010              		.cfi_restore 14
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 172


 4011 0096 7047     		bx	lr
 4012              	.L353:
 4013              		.align	2
 4014              	.L352:
 4015 0098 30000000 		.word	.LANCHOR0+48
 4016 009c 00000000 		.word	.LANCHOR0
 4017              		.cfi_endproc
 4018              	.LFE116:
 4019              		.size	vTaskPriorityDisinheritAfterTimeout, .-vTaskPriorityDisinheritAfterTimeout
 4020              		.section	.text.vTaskList,"ax",%progbits
 4021              		.align	2
 4022              		.global	vTaskList
 4023              		.thumb
 4024              		.thumb_func
 4025              		.type	vTaskList, %function
 4026              	vTaskList:
 4027              	.LFB118:
4160:..\FreeRTOS\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
 4028              		.loc 1 4160 0
 4029              		.cfi_startproc
 4030              		@ args = 0, pretend = 0, frame = 8
 4031              		@ frame_needed = 0, uses_anonymous_args = 0
 4032              	.LVL390:
 4033 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4034              		.cfi_def_cfa_offset 20
 4035              		.cfi_offset 4, -20
 4036              		.cfi_offset 5, -16
 4037              		.cfi_offset 6, -12
 4038              		.cfi_offset 7, -8
 4039              		.cfi_offset 14, -4
 4040 0002 85B0     		sub	sp, sp, #20
 4041              		.cfi_def_cfa_offset 40
 4042 0004 0546     		mov	r5, r0
4191:..\FreeRTOS\Source/tasks.c **** 
 4043              		.loc 1 4191 0
 4044 0006 0023     		movs	r3, #0
 4045 0008 0370     		strb	r3, [r0]
4195:..\FreeRTOS\Source/tasks.c **** 
 4046              		.loc 1 4195 0
 4047 000a 304B     		ldr	r3, .L367
 4048 000c D3F8D420 		ldr	r2, [r3, #212]
 4049 0010 0392     		str	r2, [sp, #12]
4200:..\FreeRTOS\Source/tasks.c **** 
 4050              		.loc 1 4200 0
 4051 0012 D3F8D430 		ldr	r3, [r3, #212]
 4052 0016 03EBC303 		add	r3, r3, r3, lsl #3
 4053 001a 9800     		lsls	r0, r3, #2
 4054              	.LVL391:
 4055 001c FFF7FEFF 		bl	pvPortMalloc
 4056              	.LVL392:
4202:..\FreeRTOS\Source/tasks.c **** 		{
 4057              		.loc 1 4202 0
 4058 0020 0028     		cmp	r0, #0
 4059 0022 50D0     		beq	.L354
 4060 0024 0446     		mov	r4, r0
4205:..\FreeRTOS\Source/tasks.c **** 
 4061              		.loc 1 4205 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 173


 4062 0026 0399     		ldr	r1, [sp, #12]
 4063 0028 0022     		movs	r2, #0
 4064 002a FFF7FEFF 		bl	uxTaskGetSystemState
 4065              	.LVL393:
 4066 002e 0390     		str	r0, [sp, #12]
4208:..\FreeRTOS\Source/tasks.c **** 			{
 4067              		.loc 1 4208 0
 4068 0030 0023     		movs	r3, #0
 4069 0032 0293     		str	r3, [sp, #8]
 4070 0034 40E0     		b	.L356
 4071              	.L364:
4210:..\FreeRTOS\Source/tasks.c **** 				{
 4072              		.loc 1 4210 0
 4073 0036 029B     		ldr	r3, [sp, #8]
 4074 0038 03EBC303 		add	r3, r3, r3, lsl #3
 4075 003c 9A00     		lsls	r2, r3, #2
 4076 003e 2244     		add	r2, r2, r4
 4077 0040 137B     		ldrb	r3, [r2, #12]	@ zero_extendqisi2
 4078 0042 042B     		cmp	r3, #4
 4079 0044 0CD8     		bhi	.L357
 4080 0046 DFE803F0 		tbb	[pc, r3]
 4081              	.L359:
 4082 004a 03       		.byte	(.L358-.L359)/2
 4083 004b 0D       		.byte	(.L365-.L359)/2
 4084 004c 05       		.byte	(.L361-.L359)/2
 4085 004d 07       		.byte	(.L362-.L359)/2
 4086 004e 09       		.byte	(.L363-.L359)/2
 4087 004f 00       		.p2align 1
 4088              	.L358:
4212:..\FreeRTOS\Source/tasks.c **** 										break;
 4089              		.loc 1 4212 0
 4090 0050 5826     		movs	r6, #88
 4091 0052 08E0     		b	.L360
 4092              	.L361:
 4093              	.LVL394:
4218:..\FreeRTOS\Source/tasks.c **** 										break;
 4094              		.loc 1 4218 0
 4095 0054 4226     		movs	r6, #66
4219:..\FreeRTOS\Source/tasks.c **** 
 4096              		.loc 1 4219 0
 4097 0056 06E0     		b	.L360
 4098              	.LVL395:
 4099              	.L362:
4221:..\FreeRTOS\Source/tasks.c **** 										break;
 4100              		.loc 1 4221 0
 4101 0058 5326     		movs	r6, #83
4222:..\FreeRTOS\Source/tasks.c **** 
 4102              		.loc 1 4222 0
 4103 005a 04E0     		b	.L360
 4104              	.LVL396:
 4105              	.L363:
4224:..\FreeRTOS\Source/tasks.c **** 										break;
 4106              		.loc 1 4224 0
 4107 005c 4426     		movs	r6, #68
4225:..\FreeRTOS\Source/tasks.c **** 
 4108              		.loc 1 4225 0
 4109 005e 02E0     		b	.L360
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 174


 4110              	.LVL397:
 4111              	.L357:
4229:..\FreeRTOS\Source/tasks.c **** 										break;
 4112              		.loc 1 4229 0
 4113 0060 0026     		movs	r6, #0
4230:..\FreeRTOS\Source/tasks.c **** 				}
 4114              		.loc 1 4230 0
 4115 0062 00E0     		b	.L360
 4116              	.LVL398:
 4117              	.L365:
4215:..\FreeRTOS\Source/tasks.c **** 										break;
 4118              		.loc 1 4215 0
 4119 0064 5226     		movs	r6, #82
 4120              	.L360:
 4121              	.LVL399:
4235:..\FreeRTOS\Source/tasks.c **** 
 4122              		.loc 1 4235 0 discriminator 2
 4123 0066 029B     		ldr	r3, [sp, #8]
 4124 0068 03EBC303 		add	r3, r3, r3, lsl #3
 4125 006c 9A00     		lsls	r2, r3, #2
 4126 006e 2244     		add	r2, r2, r4
 4127 0070 5168     		ldr	r1, [r2, #4]
 4128 0072 2846     		mov	r0, r5
 4129 0074 FFF7FEFF 		bl	prvWriteNameToBuffer
 4130              	.LVL400:
 4131 0078 0546     		mov	r5, r0
 4132              	.LVL401:
4238:..\FreeRTOS\Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
 4133              		.loc 1 4238 0 discriminator 2
 4134 007a 029B     		ldr	r3, [sp, #8]
 4135 007c 03EBC303 		add	r3, r3, r3, lsl #3
 4136 0080 9A00     		lsls	r2, r3, #2
 4137 0082 2244     		add	r2, r2, r4
 4138 0084 1369     		ldr	r3, [r2, #16]
 4139 0086 029A     		ldr	r2, [sp, #8]
 4140 0088 02EBC202 		add	r2, r2, r2, lsl #3
 4141 008c 9100     		lsls	r1, r2, #2
 4142 008e 2144     		add	r1, r1, r4
 4143 0090 0F8C     		ldrh	r7, [r1, #32]
 4144 0092 029A     		ldr	r2, [sp, #8]
 4145 0094 02EBC202 		add	r2, r2, r2, lsl #3
 4146 0098 9100     		lsls	r1, r2, #2
 4147 009a 2144     		add	r1, r1, r4
 4148 009c 8A68     		ldr	r2, [r1, #8]
 4149 009e 0192     		str	r2, [sp, #4]
 4150 00a0 0097     		str	r7, [sp]
 4151 00a2 3246     		mov	r2, r6
 4152 00a4 0A49     		ldr	r1, .L367+4
 4153 00a6 FFF7FEFF 		bl	sprintf
 4154              	.LVL402:
4239:..\FreeRTOS\Source/tasks.c **** 			}
 4155              		.loc 1 4239 0 discriminator 2
 4156 00aa 2846     		mov	r0, r5
 4157 00ac FFF7FEFF 		bl	strlen
 4158              	.LVL403:
 4159 00b0 0544     		add	r5, r5, r0
 4160              	.LVL404:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 175


4208:..\FreeRTOS\Source/tasks.c **** 			{
 4161              		.loc 1 4208 0 discriminator 2
 4162 00b2 029B     		ldr	r3, [sp, #8]
 4163 00b4 0133     		adds	r3, r3, #1
 4164 00b6 0293     		str	r3, [sp, #8]
 4165              	.LVL405:
 4166              	.L356:
4208:..\FreeRTOS\Source/tasks.c **** 			{
 4167              		.loc 1 4208 0 is_stmt 0 discriminator 1
 4168 00b8 029A     		ldr	r2, [sp, #8]
 4169 00ba 039B     		ldr	r3, [sp, #12]
 4170 00bc 9A42     		cmp	r2, r3
 4171 00be BAD3     		bcc	.L364
4244:..\FreeRTOS\Source/tasks.c **** 		}
 4172              		.loc 1 4244 0 is_stmt 1
 4173 00c0 2046     		mov	r0, r4
 4174 00c2 FFF7FEFF 		bl	vPortFree
 4175              	.LVL406:
 4176              	.L354:
4250:..\FreeRTOS\Source/tasks.c **** 
 4177              		.loc 1 4250 0
 4178 00c6 05B0     		add	sp, sp, #20
 4179              		.cfi_def_cfa_offset 20
 4180              		@ sp needed
 4181 00c8 F0BD     		pop	{r4, r5, r6, r7, pc}
 4182              	.LVL407:
 4183              	.L368:
 4184 00ca 00BF     		.align	2
 4185              	.L367:
 4186 00cc 00000000 		.word	.LANCHOR0
 4187 00d0 0C000000 		.word	.LC2
 4188              		.cfi_endproc
 4189              	.LFE118:
 4190              		.size	vTaskList, .-vTaskList
 4191              		.section	.text.vTaskGetRunTimeStats,"ax",%progbits
 4192              		.align	2
 4193              		.global	vTaskGetRunTimeStats
 4194              		.thumb
 4195              		.thumb_func
 4196              		.type	vTaskGetRunTimeStats, %function
 4197              	vTaskGetRunTimeStats:
 4198              	.LFB119:
4258:..\FreeRTOS\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
 4199              		.loc 1 4258 0
 4200              		.cfi_startproc
 4201              		@ args = 0, pretend = 0, frame = 16
 4202              		@ frame_needed = 0, uses_anonymous_args = 0
 4203              	.LVL408:
 4204 0000 70B5     		push	{r4, r5, r6, lr}
 4205              		.cfi_def_cfa_offset 16
 4206              		.cfi_offset 4, -16
 4207              		.cfi_offset 5, -12
 4208              		.cfi_offset 6, -8
 4209              		.cfi_offset 14, -4
 4210 0002 84B0     		sub	sp, sp, #16
 4211              		.cfi_def_cfa_offset 32
 4212 0004 0446     		mov	r4, r0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 176


4295:..\FreeRTOS\Source/tasks.c **** 
 4213              		.loc 1 4295 0
 4214 0006 0023     		movs	r3, #0
 4215 0008 0370     		strb	r3, [r0]
4299:..\FreeRTOS\Source/tasks.c **** 
 4216              		.loc 1 4299 0
 4217 000a 2B4B     		ldr	r3, .L377
 4218 000c D3F8D420 		ldr	r2, [r3, #212]
 4219 0010 0392     		str	r2, [sp, #12]
4304:..\FreeRTOS\Source/tasks.c **** 
 4220              		.loc 1 4304 0
 4221 0012 D3F8D430 		ldr	r3, [r3, #212]
 4222 0016 03EBC303 		add	r3, r3, r3, lsl #3
 4223 001a 9800     		lsls	r0, r3, #2
 4224              	.LVL409:
 4225 001c FFF7FEFF 		bl	pvPortMalloc
 4226              	.LVL410:
4306:..\FreeRTOS\Source/tasks.c **** 		{
 4227              		.loc 1 4306 0
 4228 0020 0028     		cmp	r0, #0
 4229 0022 46D0     		beq	.L369
 4230 0024 0546     		mov	r5, r0
4309:..\FreeRTOS\Source/tasks.c **** 
 4231              		.loc 1 4309 0
 4232 0026 0399     		ldr	r1, [sp, #12]
 4233 0028 01AA     		add	r2, sp, #4
 4234 002a FFF7FEFF 		bl	uxTaskGetSystemState
 4235              	.LVL411:
 4236 002e 0390     		str	r0, [sp, #12]
4312:..\FreeRTOS\Source/tasks.c **** 
 4237              		.loc 1 4312 0
 4238 0030 224A     		ldr	r2, .L377+4
 4239 0032 019B     		ldr	r3, [sp, #4]
 4240 0034 A2FB0323 		umull	r2, r3, r2, r3
 4241 0038 5B09     		lsrs	r3, r3, #5
 4242 003a 0193     		str	r3, [sp, #4]
4315:..\FreeRTOS\Source/tasks.c **** 			{
 4243              		.loc 1 4315 0
 4244 003c 002B     		cmp	r3, #0
 4245 003e 35D0     		beq	.L371
4318:..\FreeRTOS\Source/tasks.c **** 				{
 4246              		.loc 1 4318 0
 4247 0040 0023     		movs	r3, #0
 4248 0042 0293     		str	r3, [sp, #8]
 4249 0044 2EE0     		b	.L372
 4250              	.L375:
4323:..\FreeRTOS\Source/tasks.c **** 
 4251              		.loc 1 4323 0
 4252 0046 029B     		ldr	r3, [sp, #8]
 4253 0048 03EBC303 		add	r3, r3, r3, lsl #3
 4254 004c 9A00     		lsls	r2, r3, #2
 4255 004e 2A44     		add	r2, r2, r5
 4256 0050 9669     		ldr	r6, [r2, #24]
 4257 0052 019B     		ldr	r3, [sp, #4]
 4258 0054 B6FBF3F6 		udiv	r6, r6, r3
 4259              	.LVL412:
4328:..\FreeRTOS\Source/tasks.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 177


 4260              		.loc 1 4328 0
 4261 0058 029B     		ldr	r3, [sp, #8]
 4262 005a 03EBC303 		add	r3, r3, r3, lsl #3
 4263 005e 9A00     		lsls	r2, r3, #2
 4264 0060 2A44     		add	r2, r2, r5
 4265 0062 5168     		ldr	r1, [r2, #4]
 4266 0064 2046     		mov	r0, r4
 4267 0066 FFF7FEFF 		bl	prvWriteNameToBuffer
 4268              	.LVL413:
 4269 006a 0446     		mov	r4, r0
 4270              	.LVL414:
4330:..\FreeRTOS\Source/tasks.c **** 					{
 4271              		.loc 1 4330 0
 4272 006c 56B1     		cbz	r6, .L373
4340:..\FreeRTOS\Source/tasks.c **** 						}
 4273              		.loc 1 4340 0
 4274 006e 029B     		ldr	r3, [sp, #8]
 4275 0070 03EBC303 		add	r3, r3, r3, lsl #3
 4276 0074 9A00     		lsls	r2, r3, #2
 4277 0076 2A44     		add	r2, r2, r5
 4278 0078 3346     		mov	r3, r6
 4279 007a 9269     		ldr	r2, [r2, #24]
 4280 007c 1049     		ldr	r1, .L377+8
 4281 007e FFF7FEFF 		bl	sprintf
 4282              	.LVL415:
 4283 0082 08E0     		b	.L374
 4284              	.LVL416:
 4285              	.L373:
4356:..\FreeRTOS\Source/tasks.c **** 						}
 4286              		.loc 1 4356 0
 4287 0084 029B     		ldr	r3, [sp, #8]
 4288 0086 03EBC303 		add	r3, r3, r3, lsl #3
 4289 008a 9A00     		lsls	r2, r3, #2
 4290 008c 2A44     		add	r2, r2, r5
 4291 008e 9269     		ldr	r2, [r2, #24]
 4292 0090 0C49     		ldr	r1, .L377+12
 4293 0092 FFF7FEFF 		bl	sprintf
 4294              	.LVL417:
 4295              	.L374:
4361:..\FreeRTOS\Source/tasks.c **** 				}
 4296              		.loc 1 4361 0 discriminator 2
 4297 0096 2046     		mov	r0, r4
 4298 0098 FFF7FEFF 		bl	strlen
 4299              	.LVL418:
 4300 009c 0444     		add	r4, r4, r0
 4301              	.LVL419:
4318:..\FreeRTOS\Source/tasks.c **** 				{
 4302              		.loc 1 4318 0 discriminator 2
 4303 009e 029B     		ldr	r3, [sp, #8]
 4304 00a0 0133     		adds	r3, r3, #1
 4305 00a2 0293     		str	r3, [sp, #8]
 4306              	.LVL420:
 4307              	.L372:
4318:..\FreeRTOS\Source/tasks.c **** 				{
 4308              		.loc 1 4318 0 is_stmt 0 discriminator 1
 4309 00a4 029A     		ldr	r2, [sp, #8]
 4310 00a6 039B     		ldr	r3, [sp, #12]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 178


 4311 00a8 9A42     		cmp	r2, r3
 4312 00aa CCD3     		bcc	.L375
 4313              	.L371:
4371:..\FreeRTOS\Source/tasks.c **** 		}
 4314              		.loc 1 4371 0 is_stmt 1
 4315 00ac 2846     		mov	r0, r5
 4316 00ae FFF7FEFF 		bl	vPortFree
 4317              	.LVL421:
 4318              	.L369:
4377:..\FreeRTOS\Source/tasks.c **** 
 4319              		.loc 1 4377 0
 4320 00b2 04B0     		add	sp, sp, #16
 4321              		.cfi_def_cfa_offset 16
 4322              		@ sp needed
 4323 00b4 70BD     		pop	{r4, r5, r6, pc}
 4324              	.LVL422:
 4325              	.L378:
 4326 00b6 00BF     		.align	2
 4327              	.L377:
 4328 00b8 00000000 		.word	.LANCHOR0
 4329 00bc 1F85EB51 		.word	1374389535
 4330 00c0 1C000000 		.word	.LC3
 4331 00c4 28000000 		.word	.LC4
 4332              		.cfi_endproc
 4333              	.LFE119:
 4334              		.size	vTaskGetRunTimeStats, .-vTaskGetRunTimeStats
 4335              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 4336              		.align	2
 4337              		.global	uxTaskResetEventItemValue
 4338              		.thumb
 4339              		.thumb_func
 4340              		.type	uxTaskResetEventItemValue, %function
 4341              	uxTaskResetEventItemValue:
 4342              	.LFB120:
4383:..\FreeRTOS\Source/tasks.c **** TickType_t uxReturn;
 4343              		.loc 1 4383 0
 4344              		.cfi_startproc
 4345              		@ args = 0, pretend = 0, frame = 0
 4346              		@ frame_needed = 0, uses_anonymous_args = 0
 4347              		@ link register save eliminated.
4386:..\FreeRTOS\Source/tasks.c **** 
 4348              		.loc 1 4386 0
 4349 0000 064B     		ldr	r3, .L380
 4350 0002 D3F8D820 		ldr	r2, [r3, #216]
 4351 0006 9069     		ldr	r0, [r2, #24]
 4352              	.LVL423:
4390:..\FreeRTOS\Source/tasks.c **** 
 4353              		.loc 1 4390 0
 4354 0008 D3F8D820 		ldr	r2, [r3, #216]
 4355 000c D3F8D830 		ldr	r3, [r3, #216]
 4356 0010 DB6A     		ldr	r3, [r3, #44]
 4357 0012 C3F10503 		rsb	r3, r3, #5
 4358 0016 9361     		str	r3, [r2, #24]
4393:..\FreeRTOS\Source/tasks.c **** /*-----------------------------------------------------------*/
 4359              		.loc 1 4393 0
 4360 0018 7047     		bx	lr
 4361              	.L381:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 179


 4362 001a 00BF     		.align	2
 4363              	.L380:
 4364 001c 00000000 		.word	.LANCHOR0
 4365              		.cfi_endproc
 4366              	.LFE120:
 4367              		.size	uxTaskResetEventItemValue, .-uxTaskResetEventItemValue
 4368              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 4369              		.align	2
 4370              		.global	pvTaskIncrementMutexHeldCount
 4371              		.thumb
 4372              		.thumb_func
 4373              		.type	pvTaskIncrementMutexHeldCount, %function
 4374              	pvTaskIncrementMutexHeldCount:
 4375              	.LFB121:
4399:..\FreeRTOS\Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 4376              		.loc 1 4399 0
 4377              		.cfi_startproc
 4378              		@ args = 0, pretend = 0, frame = 0
 4379              		@ frame_needed = 0, uses_anonymous_args = 0
 4380              		@ link register save eliminated.
4402:..\FreeRTOS\Source/tasks.c **** 		{
 4381              		.loc 1 4402 0
 4382 0000 064B     		ldr	r3, .L384
 4383 0002 D3F8D830 		ldr	r3, [r3, #216]
 4384 0006 2BB1     		cbz	r3, .L383
4404:..\FreeRTOS\Source/tasks.c **** 		}
 4385              		.loc 1 4404 0
 4386 0008 044B     		ldr	r3, .L384
 4387 000a D3F8D820 		ldr	r2, [r3, #216]
 4388 000e D36C     		ldr	r3, [r2, #76]
 4389 0010 0133     		adds	r3, r3, #1
 4390 0012 D364     		str	r3, [r2, #76]
 4391              	.L383:
4407:..\FreeRTOS\Source/tasks.c **** 	}
 4392              		.loc 1 4407 0
 4393 0014 014B     		ldr	r3, .L384
 4394 0016 D3F8D800 		ldr	r0, [r3, #216]
4408:..\FreeRTOS\Source/tasks.c **** 
 4395              		.loc 1 4408 0
 4396 001a 7047     		bx	lr
 4397              	.L385:
 4398              		.align	2
 4399              	.L384:
 4400 001c 00000000 		.word	.LANCHOR0
 4401              		.cfi_endproc
 4402              	.LFE121:
 4403              		.size	pvTaskIncrementMutexHeldCount, .-pvTaskIncrementMutexHeldCount
 4404              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 4405              		.align	2
 4406              		.global	ulTaskNotifyTake
 4407              		.thumb
 4408              		.thumb_func
 4409              		.type	ulTaskNotifyTake, %function
 4410              	ulTaskNotifyTake:
 4411              	.LFB122:
4416:..\FreeRTOS\Source/tasks.c **** 	uint32_t ulReturn;
 4412              		.loc 1 4416 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 180


 4413              		.cfi_startproc
 4414              		@ args = 0, pretend = 0, frame = 0
 4415              		@ frame_needed = 0, uses_anonymous_args = 0
 4416              	.LVL424:
 4417 0000 38B5     		push	{r3, r4, r5, lr}
 4418              		.cfi_def_cfa_offset 16
 4419              		.cfi_offset 3, -16
 4420              		.cfi_offset 4, -12
 4421              		.cfi_offset 5, -8
 4422              		.cfi_offset 14, -4
 4423 0002 0546     		mov	r5, r0
 4424 0004 0C46     		mov	r4, r1
4419:..\FreeRTOS\Source/tasks.c **** 		{
 4425              		.loc 1 4419 0
 4426 0006 FFF7FEFF 		bl	vPortEnterCritical
 4427              	.LVL425:
4422:..\FreeRTOS\Source/tasks.c **** 			{
 4428              		.loc 1 4422 0
 4429 000a 1D4B     		ldr	r3, .L391
 4430 000c D3F8D830 		ldr	r3, [r3, #216]
 4431 0010 D3F88034 		ldr	r3, [r3, #1152]
 4432 0014 93B9     		cbnz	r3, .L387
4425:..\FreeRTOS\Source/tasks.c **** 
 4433              		.loc 1 4425 0
 4434 0016 1A4B     		ldr	r3, .L391
 4435 0018 D3F8D830 		ldr	r3, [r3, #216]
 4436 001c 0122     		movs	r2, #1
 4437 001e 83F88424 		strb	r2, [r3, #1156]
4427:..\FreeRTOS\Source/tasks.c **** 				{
 4438              		.loc 1 4427 0
 4439 0022 5CB1     		cbz	r4, .L387
4429:..\FreeRTOS\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 4440              		.loc 1 4429 0
 4441 0024 1146     		mov	r1, r2
 4442 0026 2046     		mov	r0, r4
 4443 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4444              	.LVL426:
4436:..\FreeRTOS\Source/tasks.c **** 				}
 4445              		.loc 1 4436 0
 4446 002c 4FF08052 		mov	r2, #268435456
 4447 0030 144B     		ldr	r3, .L391+4
 4448 0032 1A60     		str	r2, [r3]
 4449              		.syntax unified
 4450              	@ 4436 "..\FreeRTOS\Source\tasks.c" 1
 4451 0034 BFF34F8F 		dsb
 4452              	@ 0 "" 2
 4453              	@ 4436 "..\FreeRTOS\Source\tasks.c" 1
 4454 0038 BFF36F8F 		isb
 4455              	@ 0 "" 2
 4456              		.thumb
 4457              		.syntax unified
 4458              	.L387:
4448:..\FreeRTOS\Source/tasks.c **** 
 4459              		.loc 1 4448 0
 4460 003c FFF7FEFF 		bl	vPortExitCritical
 4461              	.LVL427:
4450:..\FreeRTOS\Source/tasks.c **** 		{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 181


 4462              		.loc 1 4450 0
 4463 0040 FFF7FEFF 		bl	vPortEnterCritical
 4464              	.LVL428:
4453:..\FreeRTOS\Source/tasks.c **** 
 4465              		.loc 1 4453 0
 4466 0044 0E4B     		ldr	r3, .L391
 4467 0046 D3F8D830 		ldr	r3, [r3, #216]
 4468 004a D3F88044 		ldr	r4, [r3, #1152]
 4469              	.LVL429:
4455:..\FreeRTOS\Source/tasks.c **** 			{
 4470              		.loc 1 4455 0
 4471 004e 6CB1     		cbz	r4, .L388
4457:..\FreeRTOS\Source/tasks.c **** 				{
 4472              		.loc 1 4457 0
 4473 0050 35B1     		cbz	r5, .L389
4459:..\FreeRTOS\Source/tasks.c **** 				}
 4474              		.loc 1 4459 0
 4475 0052 0B4B     		ldr	r3, .L391
 4476 0054 D3F8D830 		ldr	r3, [r3, #216]
 4477 0058 0022     		movs	r2, #0
 4478 005a C3F88024 		str	r2, [r3, #1152]
 4479 005e 05E0     		b	.L388
 4480              	.L389:
4463:..\FreeRTOS\Source/tasks.c **** 				}
 4481              		.loc 1 4463 0
 4482 0060 074B     		ldr	r3, .L391
 4483 0062 D3F8D830 		ldr	r3, [r3, #216]
 4484 0066 621E     		subs	r2, r4, #1
 4485 0068 C3F88024 		str	r2, [r3, #1152]
 4486              	.L388:
4471:..\FreeRTOS\Source/tasks.c **** 		}
 4487              		.loc 1 4471 0
 4488 006c 044B     		ldr	r3, .L391
 4489 006e D3F8D830 		ldr	r3, [r3, #216]
 4490 0072 0022     		movs	r2, #0
 4491 0074 83F88424 		strb	r2, [r3, #1156]
4473:..\FreeRTOS\Source/tasks.c **** 
 4492              		.loc 1 4473 0
 4493 0078 FFF7FEFF 		bl	vPortExitCritical
 4494              	.LVL430:
4476:..\FreeRTOS\Source/tasks.c **** 
 4495              		.loc 1 4476 0
 4496 007c 2046     		mov	r0, r4
 4497 007e 38BD     		pop	{r3, r4, r5, pc}
 4498              	.LVL431:
 4499              	.L392:
 4500              		.align	2
 4501              	.L391:
 4502 0080 00000000 		.word	.LANCHOR0
 4503 0084 04ED00E0 		.word	-536810236
 4504              		.cfi_endproc
 4505              	.LFE122:
 4506              		.size	ulTaskNotifyTake, .-ulTaskNotifyTake
 4507              		.section	.text.xTaskNotifyWait,"ax",%progbits
 4508              		.align	2
 4509              		.global	xTaskNotifyWait
 4510              		.thumb
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 182


 4511              		.thumb_func
 4512              		.type	xTaskNotifyWait, %function
 4513              	xTaskNotifyWait:
 4514              	.LFB123:
4484:..\FreeRTOS\Source/tasks.c **** 	BaseType_t xReturn;
 4515              		.loc 1 4484 0
 4516              		.cfi_startproc
 4517              		@ args = 0, pretend = 0, frame = 0
 4518              		@ frame_needed = 0, uses_anonymous_args = 0
 4519              	.LVL432:
 4520 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4521              		.cfi_def_cfa_offset 24
 4522              		.cfi_offset 3, -24
 4523              		.cfi_offset 4, -20
 4524              		.cfi_offset 5, -16
 4525              		.cfi_offset 6, -12
 4526              		.cfi_offset 7, -8
 4527              		.cfi_offset 14, -4
 4528 0002 0746     		mov	r7, r0
 4529 0004 0D46     		mov	r5, r1
 4530 0006 1446     		mov	r4, r2
 4531 0008 1E46     		mov	r6, r3
4487:..\FreeRTOS\Source/tasks.c **** 		{
 4532              		.loc 1 4487 0
 4533 000a FFF7FEFF 		bl	vPortEnterCritical
 4534              	.LVL433:
4490:..\FreeRTOS\Source/tasks.c **** 			{
 4535              		.loc 1 4490 0
 4536 000e 264B     		ldr	r3, .L399
 4537 0010 D3F8D830 		ldr	r3, [r3, #216]
 4538 0014 93F88434 		ldrb	r3, [r3, #1156]	@ zero_extendqisi2
 4539 0018 DBB2     		uxtb	r3, r3
 4540 001a 022B     		cmp	r3, #2
 4541 001c 1AD0     		beq	.L394
4495:..\FreeRTOS\Source/tasks.c **** 
 4542              		.loc 1 4495 0
 4543 001e 224B     		ldr	r3, .L399
 4544 0020 D3F8D820 		ldr	r2, [r3, #216]
 4545 0024 D2F88004 		ldr	r0, [r2, #1152]
 4546 0028 20EA0700 		bic	r0, r0, r7
 4547 002c C2F88004 		str	r0, [r2, #1152]
4498:..\FreeRTOS\Source/tasks.c **** 
 4548              		.loc 1 4498 0
 4549 0030 D3F8D830 		ldr	r3, [r3, #216]
 4550 0034 0122     		movs	r2, #1
 4551 0036 83F88424 		strb	r2, [r3, #1156]
4500:..\FreeRTOS\Source/tasks.c **** 				{
 4552              		.loc 1 4500 0
 4553 003a 5EB1     		cbz	r6, .L394
4502:..\FreeRTOS\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 4554              		.loc 1 4502 0
 4555 003c 1146     		mov	r1, r2
 4556 003e 3046     		mov	r0, r6
 4557 0040 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4558              	.LVL434:
4509:..\FreeRTOS\Source/tasks.c **** 				}
 4559              		.loc 1 4509 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 183


 4560 0044 4FF08052 		mov	r2, #268435456
 4561 0048 184B     		ldr	r3, .L399+4
 4562 004a 1A60     		str	r2, [r3]
 4563              		.syntax unified
 4564              	@ 4509 "..\FreeRTOS\Source\tasks.c" 1
 4565 004c BFF34F8F 		dsb
 4566              	@ 0 "" 2
 4567              	@ 4509 "..\FreeRTOS\Source\tasks.c" 1
 4568 0050 BFF36F8F 		isb
 4569              	@ 0 "" 2
 4570              		.thumb
 4571              		.syntax unified
 4572              	.L394:
4521:..\FreeRTOS\Source/tasks.c **** 
 4573              		.loc 1 4521 0
 4574 0054 FFF7FEFF 		bl	vPortExitCritical
 4575              	.LVL435:
4523:..\FreeRTOS\Source/tasks.c **** 		{
 4576              		.loc 1 4523 0
 4577 0058 FFF7FEFF 		bl	vPortEnterCritical
 4578              	.LVL436:
4527:..\FreeRTOS\Source/tasks.c **** 			{
 4579              		.loc 1 4527 0
 4580 005c 2CB1     		cbz	r4, .L395
4531:..\FreeRTOS\Source/tasks.c **** 			}
 4581              		.loc 1 4531 0
 4582 005e 124B     		ldr	r3, .L399
 4583 0060 D3F8D830 		ldr	r3, [r3, #216]
 4584 0064 D3F88034 		ldr	r3, [r3, #1152]
 4585 0068 2360     		str	r3, [r4]
 4586              	.L395:
4538:..\FreeRTOS\Source/tasks.c **** 			{
 4587              		.loc 1 4538 0
 4588 006a 0F4B     		ldr	r3, .L399
 4589 006c D3F8D830 		ldr	r3, [r3, #216]
 4590 0070 93F88434 		ldrb	r3, [r3, #1156]	@ zero_extendqisi2
 4591 0074 DBB2     		uxtb	r3, r3
 4592 0076 022B     		cmp	r3, #2
 4593 0078 0AD1     		bne	.L397
4547:..\FreeRTOS\Source/tasks.c **** 				xReturn = pdTRUE;
 4594              		.loc 1 4547 0
 4595 007a 0B4B     		ldr	r3, .L399
 4596 007c D3F8D820 		ldr	r2, [r3, #216]
 4597 0080 D2F88034 		ldr	r3, [r2, #1152]
 4598 0084 23EA0505 		bic	r5, r3, r5
 4599              	.LVL437:
 4600 0088 C2F88054 		str	r5, [r2, #1152]
 4601              	.LVL438:
4548:..\FreeRTOS\Source/tasks.c **** 			}
 4602              		.loc 1 4548 0
 4603 008c 0124     		movs	r4, #1
 4604              	.LVL439:
 4605 008e 00E0     		b	.L396
 4606              	.LVL440:
 4607              	.L397:
4541:..\FreeRTOS\Source/tasks.c **** 			}
 4608              		.loc 1 4541 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 184


 4609 0090 0024     		movs	r4, #0
 4610              	.LVL441:
 4611              	.L396:
4551:..\FreeRTOS\Source/tasks.c **** 		}
 4612              		.loc 1 4551 0
 4613 0092 054B     		ldr	r3, .L399
 4614 0094 D3F8D830 		ldr	r3, [r3, #216]
 4615 0098 0022     		movs	r2, #0
 4616 009a 83F88424 		strb	r2, [r3, #1156]
4553:..\FreeRTOS\Source/tasks.c **** 
 4617              		.loc 1 4553 0
 4618 009e FFF7FEFF 		bl	vPortExitCritical
 4619              	.LVL442:
4556:..\FreeRTOS\Source/tasks.c **** 
 4620              		.loc 1 4556 0
 4621 00a2 2046     		mov	r0, r4
 4622 00a4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4623              	.LVL443:
 4624              	.L400:
 4625 00a6 00BF     		.align	2
 4626              	.L399:
 4627 00a8 00000000 		.word	.LANCHOR0
 4628 00ac 04ED00E0 		.word	-536810236
 4629              		.cfi_endproc
 4630              	.LFE123:
 4631              		.size	xTaskNotifyWait, .-xTaskNotifyWait
 4632              		.section	.text.xTaskGenericNotify,"ax",%progbits
 4633              		.align	2
 4634              		.global	xTaskGenericNotify
 4635              		.thumb
 4636              		.thumb_func
 4637              		.type	xTaskGenericNotify, %function
 4638              	xTaskGenericNotify:
 4639              	.LFB124:
4564:..\FreeRTOS\Source/tasks.c **** 	TCB_t * pxTCB;
 4640              		.loc 1 4564 0
 4641              		.cfi_startproc
 4642              		@ args = 0, pretend = 0, frame = 0
 4643              		@ frame_needed = 0, uses_anonymous_args = 0
 4644              	.LVL444:
 4645 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4646              		.cfi_def_cfa_offset 24
 4647              		.cfi_offset 3, -24
 4648              		.cfi_offset 4, -20
 4649              		.cfi_offset 5, -16
 4650              		.cfi_offset 6, -12
 4651              		.cfi_offset 7, -8
 4652              		.cfi_offset 14, -4
 4653 0002 0446     		mov	r4, r0
 4654 0004 0F46     		mov	r7, r1
 4655 0006 1546     		mov	r5, r2
 4656 0008 1E46     		mov	r6, r3
 4657              	.LVL445:
4572:..\FreeRTOS\Source/tasks.c **** 		{
 4658              		.loc 1 4572 0
 4659 000a FFF7FEFF 		bl	vPortEnterCritical
 4660              	.LVL446:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 185


4574:..\FreeRTOS\Source/tasks.c **** 			{
 4661              		.loc 1 4574 0
 4662 000e 16B1     		cbz	r6, .L402
4576:..\FreeRTOS\Source/tasks.c **** 			}
 4663              		.loc 1 4576 0
 4664 0010 D4F88034 		ldr	r3, [r4, #1152]
 4665 0014 3360     		str	r3, [r6]
 4666              	.L402:
4579:..\FreeRTOS\Source/tasks.c **** 
 4667              		.loc 1 4579 0
 4668 0016 94F88434 		ldrb	r3, [r4, #1156]	@ zero_extendqisi2
 4669 001a DBB2     		uxtb	r3, r3
 4670              	.LVL447:
4581:..\FreeRTOS\Source/tasks.c **** 
 4671              		.loc 1 4581 0
 4672 001c 0222     		movs	r2, #2
 4673 001e 84F88424 		strb	r2, [r4, #1156]
4583:..\FreeRTOS\Source/tasks.c **** 			{
 4674              		.loc 1 4583 0
 4675 0022 6A1E     		subs	r2, r5, #1
 4676 0024 032A     		cmp	r2, #3
 4677 0026 1BD8     		bhi	.L410
 4678 0028 DFE802F0 		tbb	[pc, r2]
 4679              	.L405:
 4680 002c 02       		.byte	(.L404-.L405)/2
 4681 002d 09       		.byte	(.L406-.L405)/2
 4682 002e 10       		.byte	(.L407-.L405)/2
 4683 002f 14       		.byte	(.L408-.L405)/2
 4684              		.p2align 1
 4685              	.L404:
4586:..\FreeRTOS\Source/tasks.c **** 					break;
 4686              		.loc 1 4586 0
 4687 0030 D4F88024 		ldr	r2, [r4, #1152]
 4688 0034 1743     		orrs	r7, r7, r2
 4689              	.LVL448:
 4690 0036 C4F88074 		str	r7, [r4, #1152]
4566:..\FreeRTOS\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4691              		.loc 1 4566 0
 4692 003a 0125     		movs	r5, #1
4587:..\FreeRTOS\Source/tasks.c **** 
 4693              		.loc 1 4587 0
 4694 003c 13E0     		b	.L403
 4695              	.LVL449:
 4696              	.L406:
4590:..\FreeRTOS\Source/tasks.c **** 					break;
 4697              		.loc 1 4590 0
 4698 003e D4F88024 		ldr	r2, [r4, #1152]
 4699 0042 0132     		adds	r2, r2, #1
 4700 0044 C4F88024 		str	r2, [r4, #1152]
4566:..\FreeRTOS\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4701              		.loc 1 4566 0
 4702 0048 0125     		movs	r5, #1
4591:..\FreeRTOS\Source/tasks.c **** 
 4703              		.loc 1 4591 0
 4704 004a 0CE0     		b	.L403
 4705              	.L407:
4594:..\FreeRTOS\Source/tasks.c **** 					break;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 186


 4706              		.loc 1 4594 0
 4707 004c C4F88074 		str	r7, [r4, #1152]
4566:..\FreeRTOS\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4708              		.loc 1 4566 0
 4709 0050 0125     		movs	r5, #1
4595:..\FreeRTOS\Source/tasks.c **** 
 4710              		.loc 1 4595 0
 4711 0052 08E0     		b	.L403
 4712              	.L408:
4598:..\FreeRTOS\Source/tasks.c **** 					{
 4713              		.loc 1 4598 0
 4714 0054 022B     		cmp	r3, #2
 4715 0056 05D0     		beq	.L411
4600:..\FreeRTOS\Source/tasks.c **** 					}
 4716              		.loc 1 4600 0
 4717 0058 C4F88074 		str	r7, [r4, #1152]
4566:..\FreeRTOS\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4718              		.loc 1 4566 0
 4719 005c 0125     		movs	r5, #1
 4720 005e 02E0     		b	.L403
 4721              	.L410:
 4722 0060 0125     		movs	r5, #1
 4723 0062 00E0     		b	.L403
 4724              	.L411:
4605:..\FreeRTOS\Source/tasks.c **** 					}
 4725              		.loc 1 4605 0
 4726 0064 0025     		movs	r5, #0
 4727              	.LVL450:
 4728              	.L403:
4619:..\FreeRTOS\Source/tasks.c **** 			{
 4729              		.loc 1 4619 0
 4730 0066 012B     		cmp	r3, #1
 4731 0068 24D1     		bne	.L409
4621:..\FreeRTOS\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 4732              		.loc 1 4621 0
 4733 006a 271D     		adds	r7, r4, #4
 4734 006c 3846     		mov	r0, r7
 4735 006e FFF7FEFF 		bl	uxListRemove
 4736              	.LVL451:
4622:..\FreeRTOS\Source/tasks.c **** 
 4737              		.loc 1 4622 0
 4738 0072 E36A     		ldr	r3, [r4, #44]
 4739 0074 0122     		movs	r2, #1
 4740 0076 02FA03F1 		lsl	r1, r2, r3
 4741 007a 104E     		ldr	r6, .L413
 4742              	.LVL452:
 4743 007c D6F8E420 		ldr	r2, [r6, #228]
 4744 0080 0A43     		orrs	r2, r2, r1
 4745 0082 C6F8E420 		str	r2, [r6, #228]
 4746 0086 06F13000 		add	r0, r6, #48
 4747 008a 03EB8303 		add	r3, r3, r3, lsl #2
 4748 008e 9A00     		lsls	r2, r3, #2
 4749 0090 3946     		mov	r1, r7
 4750 0092 1044     		add	r0, r0, r2
 4751 0094 FFF7FEFF 		bl	vListInsertEnd
 4752              	.LVL453:
4643:..\FreeRTOS\Source/tasks.c **** 				{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 187


 4753              		.loc 1 4643 0
 4754 0098 E26A     		ldr	r2, [r4, #44]
 4755 009a D6F8D830 		ldr	r3, [r6, #216]
 4756 009e DB6A     		ldr	r3, [r3, #44]
 4757 00a0 9A42     		cmp	r2, r3
 4758 00a2 07D9     		bls	.L409
4647:..\FreeRTOS\Source/tasks.c **** 				}
 4759              		.loc 1 4647 0
 4760 00a4 4FF08052 		mov	r2, #268435456
 4761 00a8 054B     		ldr	r3, .L413+4
 4762 00aa 1A60     		str	r2, [r3]
 4763              		.syntax unified
 4764              	@ 4647 "..\FreeRTOS\Source\tasks.c" 1
 4765 00ac BFF34F8F 		dsb
 4766              	@ 0 "" 2
 4767              	@ 4647 "..\FreeRTOS\Source\tasks.c" 1
 4768 00b0 BFF36F8F 		isb
 4769              	@ 0 "" 2
 4770              		.thumb
 4771              		.syntax unified
 4772              	.L409:
4659:..\FreeRTOS\Source/tasks.c **** 
 4773              		.loc 1 4659 0
 4774 00b4 FFF7FEFF 		bl	vPortExitCritical
 4775              	.LVL454:
4662:..\FreeRTOS\Source/tasks.c **** 
 4776              		.loc 1 4662 0
 4777 00b8 2846     		mov	r0, r5
 4778 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4779              	.LVL455:
 4780              	.L414:
 4781              		.align	2
 4782              	.L413:
 4783 00bc 00000000 		.word	.LANCHOR0
 4784 00c0 04ED00E0 		.word	-536810236
 4785              		.cfi_endproc
 4786              	.LFE124:
 4787              		.size	xTaskGenericNotify, .-xTaskGenericNotify
 4788              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 4789              		.align	2
 4790              		.global	xTaskGenericNotifyFromISR
 4791              		.thumb
 4792              		.thumb_func
 4793              		.type	xTaskGenericNotifyFromISR, %function
 4794              	xTaskGenericNotifyFromISR:
 4795              	.LFB125:
4670:..\FreeRTOS\Source/tasks.c **** 	TCB_t * pxTCB;
 4796              		.loc 1 4670 0
 4797              		.cfi_startproc
 4798              		@ args = 4, pretend = 0, frame = 0
 4799              		@ frame_needed = 0, uses_anonymous_args = 0
 4800              	.LVL456:
 4801 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4802              		.cfi_def_cfa_offset 24
 4803              		.cfi_offset 3, -24
 4804              		.cfi_offset 4, -20
 4805              		.cfi_offset 5, -16
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 188


 4806              		.cfi_offset 6, -12
 4807              		.cfi_offset 7, -8
 4808              		.cfi_offset 14, -4
 4809              	.LVL457:
 4810              	.LBB57:
 4811              	.LBB58:
 211:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 4812              		.loc 2 211 0
 4813              		.syntax unified
 4814              	@ 211 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 4815 0002 EFF31184 			mrs r4, basepri											
 4816 0006 4FF0A005 		mov r5, #160												
 4817 000a 85F31188 		msr basepri, r5											
 4818 000e BFF36F8F 		isb														
 4819 0012 BFF34F8F 		dsb														
 4820              	
 4821              	@ 0 "" 2
 4822              		.thumb
 4823              		.syntax unified
 4824              	.LBE58:
 4825              	.LBE57:
4700:..\FreeRTOS\Source/tasks.c **** 			{
 4826              		.loc 1 4700 0
 4827 0016 13B1     		cbz	r3, .L416
4702:..\FreeRTOS\Source/tasks.c **** 			}
 4828              		.loc 1 4702 0
 4829 0018 D0F88054 		ldr	r5, [r0, #1152]
 4830 001c 1D60     		str	r5, [r3]
 4831              	.L416:
4705:..\FreeRTOS\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4832              		.loc 1 4705 0
 4833 001e 90F88434 		ldrb	r3, [r0, #1156]	@ zero_extendqisi2
 4834              	.LVL458:
 4835 0022 DBB2     		uxtb	r3, r3
 4836              	.LVL459:
4706:..\FreeRTOS\Source/tasks.c **** 
 4837              		.loc 1 4706 0
 4838 0024 0225     		movs	r5, #2
 4839 0026 80F88454 		strb	r5, [r0, #1156]
4708:..\FreeRTOS\Source/tasks.c **** 			{
 4840              		.loc 1 4708 0
 4841 002a 013A     		subs	r2, r2, #1
 4842              	.LVL460:
 4843 002c 032A     		cmp	r2, #3
 4844 002e 1BD8     		bhi	.L427
 4845 0030 DFE802F0 		tbb	[pc, r2]
 4846              	.L419:
 4847 0034 02       		.byte	(.L418-.L419)/2
 4848 0035 09       		.byte	(.L420-.L419)/2
 4849 0036 10       		.byte	(.L421-.L419)/2
 4850 0037 14       		.byte	(.L422-.L419)/2
 4851              		.p2align 1
 4852              	.L418:
4711:..\FreeRTOS\Source/tasks.c **** 					break;
 4853              		.loc 1 4711 0
 4854 0038 D0F88024 		ldr	r2, [r0, #1152]
 4855 003c 1143     		orrs	r1, r1, r2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 189


 4856              	.LVL461:
 4857 003e C0F88014 		str	r1, [r0, #1152]
4673:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4858              		.loc 1 4673 0
 4859 0042 0125     		movs	r5, #1
4712:..\FreeRTOS\Source/tasks.c **** 
 4860              		.loc 1 4712 0
 4861 0044 13E0     		b	.L417
 4862              	.LVL462:
 4863              	.L420:
4715:..\FreeRTOS\Source/tasks.c **** 					break;
 4864              		.loc 1 4715 0
 4865 0046 D0F88024 		ldr	r2, [r0, #1152]
 4866 004a 0132     		adds	r2, r2, #1
 4867 004c C0F88024 		str	r2, [r0, #1152]
4673:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4868              		.loc 1 4673 0
 4869 0050 0125     		movs	r5, #1
4716:..\FreeRTOS\Source/tasks.c **** 
 4870              		.loc 1 4716 0
 4871 0052 0CE0     		b	.L417
 4872              	.L421:
4719:..\FreeRTOS\Source/tasks.c **** 					break;
 4873              		.loc 1 4719 0
 4874 0054 C0F88014 		str	r1, [r0, #1152]
4673:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4875              		.loc 1 4673 0
 4876 0058 0125     		movs	r5, #1
4720:..\FreeRTOS\Source/tasks.c **** 
 4877              		.loc 1 4720 0
 4878 005a 08E0     		b	.L417
 4879              	.L422:
4723:..\FreeRTOS\Source/tasks.c **** 					{
 4880              		.loc 1 4723 0
 4881 005c 022B     		cmp	r3, #2
 4882 005e 05D0     		beq	.L428
4725:..\FreeRTOS\Source/tasks.c **** 					}
 4883              		.loc 1 4725 0
 4884 0060 C0F88014 		str	r1, [r0, #1152]
4673:..\FreeRTOS\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4885              		.loc 1 4673 0
 4886 0064 0125     		movs	r5, #1
 4887 0066 02E0     		b	.L417
 4888              	.L427:
 4889 0068 0125     		movs	r5, #1
 4890 006a 00E0     		b	.L417
 4891              	.L428:
4730:..\FreeRTOS\Source/tasks.c **** 					}
 4892              		.loc 1 4730 0
 4893 006c 0025     		movs	r5, #0
 4894              	.LVL463:
 4895              	.L417:
4744:..\FreeRTOS\Source/tasks.c **** 			{
 4896              		.loc 1 4744 0
 4897 006e 012B     		cmp	r3, #1
 4898 0070 31D1     		bne	.L423
 4899 0072 0646     		mov	r6, r0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 190


4749:..\FreeRTOS\Source/tasks.c **** 				{
 4900              		.loc 1 4749 0
 4901 0074 1A4B     		ldr	r3, .L430
 4902              	.LVL464:
 4903 0076 D3F8F030 		ldr	r3, [r3, #240]
 4904 007a B3B9     		cbnz	r3, .L424
4751:..\FreeRTOS\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4905              		.loc 1 4751 0
 4906 007c 071D     		adds	r7, r0, #4
 4907 007e 3846     		mov	r0, r7
 4908              	.LVL465:
 4909 0080 FFF7FEFF 		bl	uxListRemove
 4910              	.LVL466:
4752:..\FreeRTOS\Source/tasks.c **** 				}
 4911              		.loc 1 4752 0
 4912 0084 F36A     		ldr	r3, [r6, #44]
 4913 0086 0122     		movs	r2, #1
 4914 0088 02FA03F1 		lsl	r1, r2, r3
 4915 008c 1448     		ldr	r0, .L430
 4916 008e D0F8E420 		ldr	r2, [r0, #228]
 4917 0092 0A43     		orrs	r2, r2, r1
 4918 0094 C0F8E420 		str	r2, [r0, #228]
 4919 0098 3030     		adds	r0, r0, #48
 4920 009a 03EB8303 		add	r3, r3, r3, lsl #2
 4921 009e 9A00     		lsls	r2, r3, #2
 4922 00a0 3946     		mov	r1, r7
 4923 00a2 1044     		add	r0, r0, r2
 4924 00a4 FFF7FEFF 		bl	vListInsertEnd
 4925              	.LVL467:
 4926 00a8 04E0     		b	.L425
 4927              	.LVL468:
 4928              	.L424:
4758:..\FreeRTOS\Source/tasks.c **** 				}
 4929              		.loc 1 4758 0
 4930 00aa 00F11801 		add	r1, r0, #24
 4931 00ae 0D48     		ldr	r0, .L430+4
 4932              	.LVL469:
 4933 00b0 FFF7FEFF 		bl	vListInsertEnd
 4934              	.LVL470:
 4935              	.L425:
4761:..\FreeRTOS\Source/tasks.c **** 				{
 4936              		.loc 1 4761 0
 4937 00b4 F26A     		ldr	r2, [r6, #44]
 4938 00b6 0A4B     		ldr	r3, .L430
 4939 00b8 D3F8D830 		ldr	r3, [r3, #216]
 4940 00bc DB6A     		ldr	r3, [r3, #44]
 4941 00be 9A42     		cmp	r2, r3
 4942 00c0 09D9     		bls	.L423
4765:..\FreeRTOS\Source/tasks.c **** 					{
 4943              		.loc 1 4765 0
 4944 00c2 069B     		ldr	r3, [sp, #24]
 4945 00c4 1BB1     		cbz	r3, .L426
4767:..\FreeRTOS\Source/tasks.c **** 					}
 4946              		.loc 1 4767 0
 4947 00c6 0123     		movs	r3, #1
 4948 00c8 069A     		ldr	r2, [sp, #24]
 4949 00ca 1360     		str	r3, [r2]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 191


 4950 00cc 03E0     		b	.L423
 4951              	.L426:
4774:..\FreeRTOS\Source/tasks.c **** 					}
 4952              		.loc 1 4774 0
 4953 00ce 0122     		movs	r2, #1
 4954 00d0 034B     		ldr	r3, .L430
 4955 00d2 C3F80021 		str	r2, [r3, #256]
 4956              	.LVL471:
 4957              	.L423:
 4958              	.LBB59:
 4959              	.LBB60:
 4960              		.loc 2 229 0
 4961              		.syntax unified
 4962              	@ 229 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 4963 00d6 84F31188 			msr basepri, r4	
 4964              	@ 0 "" 2
 4965              	.LVL472:
 4966              		.thumb
 4967              		.syntax unified
 4968              	.LBE60:
 4969              	.LBE59:
4786:..\FreeRTOS\Source/tasks.c **** 
 4970              		.loc 1 4786 0
 4971 00da 2846     		mov	r0, r5
 4972 00dc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4973              	.LVL473:
 4974              	.L431:
 4975 00de 00BF     		.align	2
 4976              	.L430:
 4977 00e0 00000000 		.word	.LANCHOR0
 4978 00e4 14000000 		.word	.LANCHOR0+20
 4979              		.cfi_endproc
 4980              	.LFE125:
 4981              		.size	xTaskGenericNotifyFromISR, .-xTaskGenericNotifyFromISR
 4982              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 4983              		.align	2
 4984              		.global	vTaskNotifyGiveFromISR
 4985              		.thumb
 4986              		.thumb_func
 4987              		.type	vTaskNotifyGiveFromISR, %function
 4988              	vTaskNotifyGiveFromISR:
 4989              	.LFB126:
4794:..\FreeRTOS\Source/tasks.c **** 	TCB_t * pxTCB;
 4990              		.loc 1 4794 0
 4991              		.cfi_startproc
 4992              		@ args = 0, pretend = 0, frame = 0
 4993              		@ frame_needed = 0, uses_anonymous_args = 0
 4994              	.LVL474:
 4995 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4996              		.cfi_def_cfa_offset 24
 4997              		.cfi_offset 3, -24
 4998              		.cfi_offset 4, -20
 4999              		.cfi_offset 5, -16
 5000              		.cfi_offset 6, -12
 5001              		.cfi_offset 7, -8
 5002              		.cfi_offset 14, -4
 5003              	.LVL475:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 192


 5004              	.LBB61:
 5005              	.LBB62:
 211:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 5006              		.loc 2 211 0
 5007              		.syntax unified
 5008              	@ 211 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 5009 0002 EFF31185 			mrs r5, basepri											
 5010 0006 4FF0A003 		mov r3, #160												
 5011 000a 83F31188 		msr basepri, r3											
 5012 000e BFF36F8F 		isb														
 5013 0012 BFF34F8F 		dsb														
 5014              	
 5015              	@ 0 "" 2
 5016              		.thumb
 5017              		.syntax unified
 5018              	.LBE62:
 5019              	.LBE61:
4823:..\FreeRTOS\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5020              		.loc 1 4823 0
 5021 0016 90F88434 		ldrb	r3, [r0, #1156]	@ zero_extendqisi2
 5022 001a DBB2     		uxtb	r3, r3
 5023              	.LVL476:
4824:..\FreeRTOS\Source/tasks.c **** 
 5024              		.loc 1 4824 0
 5025 001c 0222     		movs	r2, #2
 5026 001e 80F88424 		strb	r2, [r0, #1156]
4828:..\FreeRTOS\Source/tasks.c **** 
 5027              		.loc 1 4828 0
 5028 0022 D0F88024 		ldr	r2, [r0, #1152]
 5029 0026 0132     		adds	r2, r2, #1
 5030 0028 C0F88024 		str	r2, [r0, #1152]
4834:..\FreeRTOS\Source/tasks.c **** 			{
 5031              		.loc 1 4834 0
 5032 002c 012B     		cmp	r3, #1
 5033 002e 30D1     		bne	.L433
 5034 0030 0E46     		mov	r6, r1
 5035 0032 0446     		mov	r4, r0
4839:..\FreeRTOS\Source/tasks.c **** 				{
 5036              		.loc 1 4839 0
 5037 0034 184B     		ldr	r3, .L438
 5038              	.LVL477:
 5039 0036 D3F8F030 		ldr	r3, [r3, #240]
 5040 003a B3B9     		cbnz	r3, .L434
4841:..\FreeRTOS\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5041              		.loc 1 4841 0
 5042 003c 071D     		adds	r7, r0, #4
 5043 003e 3846     		mov	r0, r7
 5044              	.LVL478:
 5045 0040 FFF7FEFF 		bl	uxListRemove
 5046              	.LVL479:
4842:..\FreeRTOS\Source/tasks.c **** 				}
 5047              		.loc 1 4842 0
 5048 0044 E36A     		ldr	r3, [r4, #44]
 5049 0046 0122     		movs	r2, #1
 5050 0048 02FA03F1 		lsl	r1, r2, r3
 5051 004c 1248     		ldr	r0, .L438
 5052 004e D0F8E420 		ldr	r2, [r0, #228]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 193


 5053 0052 0A43     		orrs	r2, r2, r1
 5054 0054 C0F8E420 		str	r2, [r0, #228]
 5055 0058 3030     		adds	r0, r0, #48
 5056 005a 03EB8303 		add	r3, r3, r3, lsl #2
 5057 005e 9A00     		lsls	r2, r3, #2
 5058 0060 3946     		mov	r1, r7
 5059 0062 1044     		add	r0, r0, r2
 5060 0064 FFF7FEFF 		bl	vListInsertEnd
 5061              	.LVL480:
 5062 0068 04E0     		b	.L435
 5063              	.LVL481:
 5064              	.L434:
4848:..\FreeRTOS\Source/tasks.c **** 				}
 5065              		.loc 1 4848 0
 5066 006a 00F11801 		add	r1, r0, #24
 5067              	.LVL482:
 5068 006e 0B48     		ldr	r0, .L438+4
 5069              	.LVL483:
 5070 0070 FFF7FEFF 		bl	vListInsertEnd
 5071              	.LVL484:
 5072              	.L435:
4851:..\FreeRTOS\Source/tasks.c **** 				{
 5073              		.loc 1 4851 0
 5074 0074 E26A     		ldr	r2, [r4, #44]
 5075 0076 084B     		ldr	r3, .L438
 5076 0078 D3F8D830 		ldr	r3, [r3, #216]
 5077 007c DB6A     		ldr	r3, [r3, #44]
 5078 007e 9A42     		cmp	r2, r3
 5079 0080 07D9     		bls	.L433
4855:..\FreeRTOS\Source/tasks.c **** 					{
 5080              		.loc 1 4855 0
 5081 0082 16B1     		cbz	r6, .L436
4857:..\FreeRTOS\Source/tasks.c **** 					}
 5082              		.loc 1 4857 0
 5083 0084 0123     		movs	r3, #1
 5084 0086 3360     		str	r3, [r6]
 5085 0088 03E0     		b	.L433
 5086              	.L436:
4864:..\FreeRTOS\Source/tasks.c **** 					}
 5087              		.loc 1 4864 0
 5088 008a 0122     		movs	r2, #1
 5089 008c 024B     		ldr	r3, .L438
 5090 008e C3F80021 		str	r2, [r3, #256]
 5091              	.LVL485:
 5092              	.L433:
 5093              	.LBB63:
 5094              	.LBB64:
 5095              		.loc 2 229 0
 5096              		.syntax unified
 5097              	@ 229 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 5098 0092 85F31188 			msr basepri, r5	
 5099              	@ 0 "" 2
 5100              	.LVL486:
 5101              		.thumb
 5102              		.syntax unified
 5103 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5104              	.L439:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 194


 5105              		.align	2
 5106              	.L438:
 5107 0098 00000000 		.word	.LANCHOR0
 5108 009c 14000000 		.word	.LANCHOR0+20
 5109              	.LBE64:
 5110              	.LBE63:
 5111              		.cfi_endproc
 5112              	.LFE126:
 5113              		.size	vTaskNotifyGiveFromISR, .-vTaskNotifyGiveFromISR
 5114              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 5115              		.align	2
 5116              		.global	xTaskNotifyStateClear
 5117              		.thumb
 5118              		.thumb_func
 5119              		.type	xTaskNotifyStateClear, %function
 5120              	xTaskNotifyStateClear:
 5121              	.LFB127:
4883:..\FreeRTOS\Source/tasks.c **** 	TCB_t *pxTCB;
 5122              		.loc 1 4883 0
 5123              		.cfi_startproc
 5124              		@ args = 0, pretend = 0, frame = 0
 5125              		@ frame_needed = 0, uses_anonymous_args = 0
 5126              	.LVL487:
 5127 0000 10B5     		push	{r4, lr}
 5128              		.cfi_def_cfa_offset 8
 5129              		.cfi_offset 4, -8
 5130              		.cfi_offset 14, -4
4889:..\FreeRTOS\Source/tasks.c **** 
 5131              		.loc 1 4889 0
 5132 0002 0446     		mov	r4, r0
 5133 0004 10B9     		cbnz	r0, .L441
4889:..\FreeRTOS\Source/tasks.c **** 
 5134              		.loc 1 4889 0 is_stmt 0 discriminator 1
 5135 0006 0A4B     		ldr	r3, .L445
 5136 0008 D3F8D840 		ldr	r4, [r3, #216]
 5137              	.LVL488:
 5138              	.L441:
4891:..\FreeRTOS\Source/tasks.c **** 		{
 5139              		.loc 1 4891 0 is_stmt 1 discriminator 4
 5140 000c FFF7FEFF 		bl	vPortEnterCritical
 5141              	.LVL489:
4893:..\FreeRTOS\Source/tasks.c **** 			{
 5142              		.loc 1 4893 0 discriminator 4
 5143 0010 94F88434 		ldrb	r3, [r4, #1156]	@ zero_extendqisi2
 5144 0014 DBB2     		uxtb	r3, r3
 5145 0016 022B     		cmp	r3, #2
 5146 0018 04D1     		bne	.L443
4895:..\FreeRTOS\Source/tasks.c **** 				xReturn = pdPASS;
 5147              		.loc 1 4895 0
 5148 001a 0023     		movs	r3, #0
 5149 001c 84F88434 		strb	r3, [r4, #1156]
 5150              	.LVL490:
4896:..\FreeRTOS\Source/tasks.c **** 			}
 5151              		.loc 1 4896 0
 5152 0020 0124     		movs	r4, #1
 5153              	.LVL491:
 5154 0022 00E0     		b	.L442
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 195


 5155              	.LVL492:
 5156              	.L443:
4900:..\FreeRTOS\Source/tasks.c **** 			}
 5157              		.loc 1 4900 0
 5158 0024 0024     		movs	r4, #0
 5159              	.LVL493:
 5160              	.L442:
4903:..\FreeRTOS\Source/tasks.c **** 
 5161              		.loc 1 4903 0
 5162 0026 FFF7FEFF 		bl	vPortExitCritical
 5163              	.LVL494:
4906:..\FreeRTOS\Source/tasks.c **** 
 5164              		.loc 1 4906 0
 5165 002a 2046     		mov	r0, r4
 5166 002c 10BD     		pop	{r4, pc}
 5167              	.LVL495:
 5168              	.L446:
 5169 002e 00BF     		.align	2
 5170              	.L445:
 5171 0030 00000000 		.word	.LANCHOR0
 5172              		.cfi_endproc
 5173              	.LFE127:
 5174              		.size	xTaskNotifyStateClear, .-xTaskNotifyStateClear
 5175              		.global	pxCurrentTCB
 5176              		.section	.rodata.str1.4,"aMS",%progbits,1
 5177              		.align	2
 5178              	.LC0:
 5179 0000 4300     		.ascii	"C\000"
 5180 0002 0000     		.space	2
 5181              	.LC1:
 5182 0004 49444C45 		.ascii	"IDLE\000"
 5182      00
 5183 0009 000000   		.space	3
 5184              	.LC2:
 5185 000c 09256309 		.ascii	"\011%c\011%u\011%u\011%u\015\012\000"
 5185      25750925 
 5185      75092575 
 5185      0D0A00
 5186 001b 00       		.space	1
 5187              	.LC3:
 5188 001c 09257509 		.ascii	"\011%u\011\011%u%%\015\012\000"
 5188      09257525 
 5188      250D0A00 
 5189              	.LC4:
 5190 0028 09257509 		.ascii	"\011%u\011\011<1%%\015\012\000"
 5190      093C3125 
 5190      250D0A00 
 5191              		.bss
 5192              		.align	2
 5193              		.set	.LANCHOR0,. + 0
 5194              		.type	xSuspendedTaskList, %object
 5195              		.size	xSuspendedTaskList, 20
 5196              	xSuspendedTaskList:
 5197 0000 00000000 		.space	20
 5197      00000000 
 5197      00000000 
 5197      00000000 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 196


 5197      00000000 
 5198              		.type	xPendingReadyList, %object
 5199              		.size	xPendingReadyList, 20
 5200              	xPendingReadyList:
 5201 0014 00000000 		.space	20
 5201      00000000 
 5201      00000000 
 5201      00000000 
 5201      00000000 
 5202              		.type	pxDelayedTaskList, %object
 5203              		.size	pxDelayedTaskList, 4
 5204              	pxDelayedTaskList:
 5205 0028 00000000 		.space	4
 5206              		.type	xNextTaskUnblockTime, %object
 5207              		.size	xNextTaskUnblockTime, 4
 5208              	xNextTaskUnblockTime:
 5209 002c 00000000 		.space	4
 5210              		.type	pxReadyTasksLists, %object
 5211              		.size	pxReadyTasksLists, 100
 5212              	pxReadyTasksLists:
 5213 0030 00000000 		.space	100
 5213      00000000 
 5213      00000000 
 5213      00000000 
 5213      00000000 
 5214              		.type	xDelayedTaskList1, %object
 5215              		.size	xDelayedTaskList1, 20
 5216              	xDelayedTaskList1:
 5217 0094 00000000 		.space	20
 5217      00000000 
 5217      00000000 
 5217      00000000 
 5217      00000000 
 5218              		.type	xDelayedTaskList2, %object
 5219              		.size	xDelayedTaskList2, 20
 5220              	xDelayedTaskList2:
 5221 00a8 00000000 		.space	20
 5221      00000000 
 5221      00000000 
 5221      00000000 
 5221      00000000 
 5222              		.type	xTasksWaitingTermination, %object
 5223              		.size	xTasksWaitingTermination, 20
 5224              	xTasksWaitingTermination:
 5225 00bc 00000000 		.space	20
 5225      00000000 
 5225      00000000 
 5225      00000000 
 5225      00000000 
 5226              		.type	pxOverflowDelayedTaskList, %object
 5227              		.size	pxOverflowDelayedTaskList, 4
 5228              	pxOverflowDelayedTaskList:
 5229 00d0 00000000 		.space	4
 5230              		.type	uxCurrentNumberOfTasks, %object
 5231              		.size	uxCurrentNumberOfTasks, 4
 5232              	uxCurrentNumberOfTasks:
 5233 00d4 00000000 		.space	4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 197


 5234              		.type	pxCurrentTCB, %object
 5235              		.size	pxCurrentTCB, 4
 5236              	pxCurrentTCB:
 5237 00d8 00000000 		.space	4
 5238              		.type	xSchedulerRunning, %object
 5239              		.size	xSchedulerRunning, 4
 5240              	xSchedulerRunning:
 5241 00dc 00000000 		.space	4
 5242              		.type	uxTaskNumber, %object
 5243              		.size	uxTaskNumber, 4
 5244              	uxTaskNumber:
 5245 00e0 00000000 		.space	4
 5246              		.type	uxTopReadyPriority, %object
 5247              		.size	uxTopReadyPriority, 4
 5248              	uxTopReadyPriority:
 5249 00e4 00000000 		.space	4
 5250              		.type	uxDeletedTasksWaitingCleanUp, %object
 5251              		.size	uxDeletedTasksWaitingCleanUp, 4
 5252              	uxDeletedTasksWaitingCleanUp:
 5253 00e8 00000000 		.space	4
 5254              		.type	xTickCount, %object
 5255              		.size	xTickCount, 4
 5256              	xTickCount:
 5257 00ec 00000000 		.space	4
 5258              		.type	uxSchedulerSuspended, %object
 5259              		.size	uxSchedulerSuspended, 4
 5260              	uxSchedulerSuspended:
 5261 00f0 00000000 		.space	4
 5262              		.type	xIdleTaskHandle, %object
 5263              		.size	xIdleTaskHandle, 4
 5264              	xIdleTaskHandle:
 5265 00f4 00000000 		.space	4
 5266              		.type	xNumOfOverflows, %object
 5267              		.size	xNumOfOverflows, 4
 5268              	xNumOfOverflows:
 5269 00f8 00000000 		.space	4
 5270              		.type	uxPendedTicks, %object
 5271              		.size	uxPendedTicks, 4
 5272              	uxPendedTicks:
 5273 00fc 00000000 		.space	4
 5274              		.type	xYieldPending, %object
 5275              		.size	xYieldPending, 4
 5276              	xYieldPending:
 5277 0100 00000000 		.space	4
 5278              		.type	ulTaskSwitchedInTime, %object
 5279              		.size	ulTaskSwitchedInTime, 4
 5280              	ulTaskSwitchedInTime:
 5281 0104 00000000 		.space	4
 5282              		.text
 5283              	.Letext0:
 5284              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 5285              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 5286              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 5287              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 5288              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 5289              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 5290              		.file 9 "..\\FreeRTOS\\Source\\include/projdefs.h"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 198


 5291              		.file 10 "..\\FreeRTOS\\Source\\include/list.h"
 5292              		.file 11 "..\\FreeRTOS\\Source\\include/task.h"
 5293              		.file 12 "Generated_Source\\PSoC5/core_cm3.h"
 5294              		.file 13 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 5295              		.file 14 "..\\FreeRTOS\\Source\\include/portable.h"
 5296              		.file 15 "Generated_Source\\PSoC5/StatisticsCounter.h"
 5297              		.file 16 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 5298              		.section	.debug_info,"",%progbits
 5299              	.Ldebug_info0:
 5300 0000 392F0000 		.4byte	0x2f39
 5301 0004 0400     		.2byte	0x4
 5302 0006 00000000 		.4byte	.Ldebug_abbrev0
 5303 000a 04       		.byte	0x4
 5304 000b 01       		.uleb128 0x1
 5305 000c 91030000 		.4byte	.LASF392
 5306 0010 0C       		.byte	0xc
 5307 0011 F0090000 		.4byte	.LASF393
 5308 0015 69140000 		.4byte	.LASF394
 5309 0019 40000000 		.4byte	.Ldebug_ranges0+0x40
 5310 001d 00000000 		.4byte	0
 5311 0021 00000000 		.4byte	.Ldebug_line0
 5312 0025 02       		.uleb128 0x2
 5313 0026 1D000000 		.4byte	.LASF4
 5314 002a 03       		.byte	0x3
 5315 002b D8       		.byte	0xd8
 5316 002c 30000000 		.4byte	0x30
 5317 0030 03       		.uleb128 0x3
 5318 0031 04       		.byte	0x4
 5319 0032 07       		.byte	0x7
 5320 0033 DA0B0000 		.4byte	.LASF0
 5321 0037 04       		.uleb128 0x4
 5322 0038 04       		.byte	0x4
 5323 0039 05       		.byte	0x5
 5324 003a 696E7400 		.ascii	"int\000"
 5325 003e 03       		.uleb128 0x3
 5326 003f 08       		.byte	0x8
 5327 0040 05       		.byte	0x5
 5328 0041 A70A0000 		.4byte	.LASF1
 5329 0045 03       		.uleb128 0x3
 5330 0046 08       		.byte	0x8
 5331 0047 04       		.byte	0x4
 5332 0048 100E0000 		.4byte	.LASF2
 5333 004c 03       		.uleb128 0x3
 5334 004d 01       		.byte	0x1
 5335 004e 06       		.byte	0x6
 5336 004f BA040000 		.4byte	.LASF3
 5337 0053 02       		.uleb128 0x2
 5338 0054 6E020000 		.4byte	.LASF5
 5339 0058 04       		.byte	0x4
 5340 0059 1D       		.byte	0x1d
 5341 005a 5E000000 		.4byte	0x5e
 5342 005e 03       		.uleb128 0x3
 5343 005f 01       		.byte	0x1
 5344 0060 08       		.byte	0x8
 5345 0061 2C050000 		.4byte	.LASF6
 5346 0065 03       		.uleb128 0x3
 5347 0066 02       		.byte	0x2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 199


 5348 0067 05       		.byte	0x5
 5349 0068 50120000 		.4byte	.LASF7
 5350 006c 02       		.uleb128 0x2
 5351 006d 9E060000 		.4byte	.LASF8
 5352 0071 04       		.byte	0x4
 5353 0072 2B       		.byte	0x2b
 5354 0073 77000000 		.4byte	0x77
 5355 0077 03       		.uleb128 0x3
 5356 0078 02       		.byte	0x2
 5357 0079 07       		.byte	0x7
 5358 007a 9E140000 		.4byte	.LASF9
 5359 007e 02       		.uleb128 0x2
 5360 007f 23150000 		.4byte	.LASF10
 5361 0083 04       		.byte	0x4
 5362 0084 3F       		.byte	0x3f
 5363 0085 89000000 		.4byte	0x89
 5364 0089 03       		.uleb128 0x3
 5365 008a 04       		.byte	0x4
 5366 008b 05       		.byte	0x5
 5367 008c E4020000 		.4byte	.LASF11
 5368 0090 02       		.uleb128 0x2
 5369 0091 910A0000 		.4byte	.LASF12
 5370 0095 04       		.byte	0x4
 5371 0096 41       		.byte	0x41
 5372 0097 9B000000 		.4byte	0x9b
 5373 009b 03       		.uleb128 0x3
 5374 009c 04       		.byte	0x4
 5375 009d 07       		.byte	0x7
 5376 009e B6080000 		.4byte	.LASF13
 5377 00a2 03       		.uleb128 0x3
 5378 00a3 08       		.byte	0x8
 5379 00a4 07       		.byte	0x7
 5380 00a5 3E0F0000 		.4byte	.LASF14
 5381 00a9 02       		.uleb128 0x2
 5382 00aa 50090000 		.4byte	.LASF15
 5383 00ae 05       		.byte	0x5
 5384 00af 07       		.byte	0x7
 5385 00b0 37000000 		.4byte	0x37
 5386 00b4 02       		.uleb128 0x2
 5387 00b5 54140000 		.4byte	.LASF16
 5388 00b9 06       		.byte	0x6
 5389 00ba 2C       		.byte	0x2c
 5390 00bb 89000000 		.4byte	0x89
 5391 00bf 02       		.uleb128 0x2
 5392 00c0 830E0000 		.4byte	.LASF17
 5393 00c4 06       		.byte	0x6
 5394 00c5 72       		.byte	0x72
 5395 00c6 89000000 		.4byte	0x89
 5396 00ca 05       		.uleb128 0x5
 5397 00cb E4100000 		.4byte	.LASF18
 5398 00cf 03       		.byte	0x3
 5399 00d0 6501     		.2byte	0x165
 5400 00d2 30000000 		.4byte	0x30
 5401 00d6 06       		.uleb128 0x6
 5402 00d7 04       		.byte	0x4
 5403 00d8 06       		.byte	0x6
 5404 00d9 A6       		.byte	0xa6
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 200


 5405 00da F5000000 		.4byte	0xf5
 5406 00de 07       		.uleb128 0x7
 5407 00df 68020000 		.4byte	.LASF19
 5408 00e3 06       		.byte	0x6
 5409 00e4 A8       		.byte	0xa8
 5410 00e5 CA000000 		.4byte	0xca
 5411 00e9 07       		.uleb128 0x7
 5412 00ea 8B0E0000 		.4byte	.LASF20
 5413 00ee 06       		.byte	0x6
 5414 00ef A9       		.byte	0xa9
 5415 00f0 F5000000 		.4byte	0xf5
 5416 00f4 00       		.byte	0
 5417 00f5 08       		.uleb128 0x8
 5418 00f6 5E000000 		.4byte	0x5e
 5419 00fa 05010000 		.4byte	0x105
 5420 00fe 09       		.uleb128 0x9
 5421 00ff 05010000 		.4byte	0x105
 5422 0103 03       		.byte	0x3
 5423 0104 00       		.byte	0
 5424 0105 03       		.uleb128 0x3
 5425 0106 04       		.byte	0x4
 5426 0107 07       		.byte	0x7
 5427 0108 24000000 		.4byte	.LASF21
 5428 010c 0A       		.uleb128 0xa
 5429 010d 08       		.byte	0x8
 5430 010e 06       		.byte	0x6
 5431 010f A3       		.byte	0xa3
 5432 0110 2D010000 		.4byte	0x12d
 5433 0114 0B       		.uleb128 0xb
 5434 0115 800D0000 		.4byte	.LASF22
 5435 0119 06       		.byte	0x6
 5436 011a A5       		.byte	0xa5
 5437 011b 37000000 		.4byte	0x37
 5438 011f 00       		.byte	0
 5439 0120 0B       		.uleb128 0xb
 5440 0121 2D000000 		.4byte	.LASF23
 5441 0125 06       		.byte	0x6
 5442 0126 AA       		.byte	0xaa
 5443 0127 D6000000 		.4byte	0xd6
 5444 012b 04       		.byte	0x4
 5445 012c 00       		.byte	0
 5446 012d 02       		.uleb128 0x2
 5447 012e D4100000 		.4byte	.LASF24
 5448 0132 06       		.byte	0x6
 5449 0133 AB       		.byte	0xab
 5450 0134 0C010000 		.4byte	0x10c
 5451 0138 02       		.uleb128 0x2
 5452 0139 8B100000 		.4byte	.LASF25
 5453 013d 06       		.byte	0x6
 5454 013e AF       		.byte	0xaf
 5455 013f A9000000 		.4byte	0xa9
 5456 0143 0C       		.uleb128 0xc
 5457 0144 04       		.byte	0x4
 5458 0145 0D       		.uleb128 0xd
 5459 0146 04       		.byte	0x4
 5460 0147 4B010000 		.4byte	0x14b
 5461 014b 03       		.uleb128 0x3
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 201


 5462 014c 01       		.byte	0x1
 5463 014d 08       		.byte	0x8
 5464 014e 4E060000 		.4byte	.LASF26
 5465 0152 02       		.uleb128 0x2
 5466 0153 9B130000 		.4byte	.LASF27
 5467 0157 07       		.byte	0x7
 5468 0158 16       		.byte	0x16
 5469 0159 9B000000 		.4byte	0x9b
 5470 015d 0E       		.uleb128 0xe
 5471 015e E8090000 		.4byte	.LASF32
 5472 0162 18       		.byte	0x18
 5473 0163 07       		.byte	0x7
 5474 0164 2D       		.byte	0x2d
 5475 0165 B0010000 		.4byte	0x1b0
 5476 0169 0B       		.uleb128 0xb
 5477 016a 07110000 		.4byte	.LASF28
 5478 016e 07       		.byte	0x7
 5479 016f 2F       		.byte	0x2f
 5480 0170 B0010000 		.4byte	0x1b0
 5481 0174 00       		.byte	0
 5482 0175 0F       		.uleb128 0xf
 5483 0176 5F6B00   		.ascii	"_k\000"
 5484 0179 07       		.byte	0x7
 5485 017a 30       		.byte	0x30
 5486 017b 37000000 		.4byte	0x37
 5487 017f 04       		.byte	0x4
 5488 0180 0B       		.uleb128 0xb
 5489 0181 0B0A0000 		.4byte	.LASF29
 5490 0185 07       		.byte	0x7
 5491 0186 30       		.byte	0x30
 5492 0187 37000000 		.4byte	0x37
 5493 018b 08       		.byte	0x8
 5494 018c 0B       		.uleb128 0xb
 5495 018d 610B0000 		.4byte	.LASF30
 5496 0191 07       		.byte	0x7
 5497 0192 30       		.byte	0x30
 5498 0193 37000000 		.4byte	0x37
 5499 0197 0C       		.byte	0xc
 5500 0198 0B       		.uleb128 0xb
 5501 0199 EF070000 		.4byte	.LASF31
 5502 019d 07       		.byte	0x7
 5503 019e 30       		.byte	0x30
 5504 019f 37000000 		.4byte	0x37
 5505 01a3 10       		.byte	0x10
 5506 01a4 0F       		.uleb128 0xf
 5507 01a5 5F7800   		.ascii	"_x\000"
 5508 01a8 07       		.byte	0x7
 5509 01a9 31       		.byte	0x31
 5510 01aa B6010000 		.4byte	0x1b6
 5511 01ae 14       		.byte	0x14
 5512 01af 00       		.byte	0
 5513 01b0 0D       		.uleb128 0xd
 5514 01b1 04       		.byte	0x4
 5515 01b2 5D010000 		.4byte	0x15d
 5516 01b6 08       		.uleb128 0x8
 5517 01b7 52010000 		.4byte	0x152
 5518 01bb C6010000 		.4byte	0x1c6
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 202


 5519 01bf 09       		.uleb128 0x9
 5520 01c0 05010000 		.4byte	0x105
 5521 01c4 00       		.byte	0
 5522 01c5 00       		.byte	0
 5523 01c6 0E       		.uleb128 0xe
 5524 01c7 54010000 		.4byte	.LASF33
 5525 01cb 24       		.byte	0x24
 5526 01cc 07       		.byte	0x7
 5527 01cd 35       		.byte	0x35
 5528 01ce 3F020000 		.4byte	0x23f
 5529 01d2 0B       		.uleb128 0xb
 5530 01d3 70010000 		.4byte	.LASF34
 5531 01d7 07       		.byte	0x7
 5532 01d8 37       		.byte	0x37
 5533 01d9 37000000 		.4byte	0x37
 5534 01dd 00       		.byte	0
 5535 01de 0B       		.uleb128 0xb
 5536 01df 93150000 		.4byte	.LASF35
 5537 01e3 07       		.byte	0x7
 5538 01e4 38       		.byte	0x38
 5539 01e5 37000000 		.4byte	0x37
 5540 01e9 04       		.byte	0x4
 5541 01ea 0B       		.uleb128 0xb
 5542 01eb B1140000 		.4byte	.LASF36
 5543 01ef 07       		.byte	0x7
 5544 01f0 39       		.byte	0x39
 5545 01f1 37000000 		.4byte	0x37
 5546 01f5 08       		.byte	0x8
 5547 01f6 0B       		.uleb128 0xb
 5548 01f7 7A0C0000 		.4byte	.LASF37
 5549 01fb 07       		.byte	0x7
 5550 01fc 3A       		.byte	0x3a
 5551 01fd 37000000 		.4byte	0x37
 5552 0201 0C       		.byte	0xc
 5553 0202 0B       		.uleb128 0xb
 5554 0203 1F040000 		.4byte	.LASF38
 5555 0207 07       		.byte	0x7
 5556 0208 3B       		.byte	0x3b
 5557 0209 37000000 		.4byte	0x37
 5558 020d 10       		.byte	0x10
 5559 020e 0B       		.uleb128 0xb
 5560 020f C5120000 		.4byte	.LASF39
 5561 0213 07       		.byte	0x7
 5562 0214 3C       		.byte	0x3c
 5563 0215 37000000 		.4byte	0x37
 5564 0219 14       		.byte	0x14
 5565 021a 0B       		.uleb128 0xb
 5566 021b 060E0000 		.4byte	.LASF40
 5567 021f 07       		.byte	0x7
 5568 0220 3D       		.byte	0x3d
 5569 0221 37000000 		.4byte	0x37
 5570 0225 18       		.byte	0x18
 5571 0226 0B       		.uleb128 0xb
 5572 0227 360E0000 		.4byte	.LASF41
 5573 022b 07       		.byte	0x7
 5574 022c 3E       		.byte	0x3e
 5575 022d 37000000 		.4byte	0x37
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 203


 5576 0231 1C       		.byte	0x1c
 5577 0232 0B       		.uleb128 0xb
 5578 0233 78150000 		.4byte	.LASF42
 5579 0237 07       		.byte	0x7
 5580 0238 3F       		.byte	0x3f
 5581 0239 37000000 		.4byte	0x37
 5582 023d 20       		.byte	0x20
 5583 023e 00       		.byte	0
 5584 023f 10       		.uleb128 0x10
 5585 0240 94020000 		.4byte	.LASF43
 5586 0244 0801     		.2byte	0x108
 5587 0246 07       		.byte	0x7
 5588 0247 48       		.byte	0x48
 5589 0248 7F020000 		.4byte	0x27f
 5590 024c 0B       		.uleb128 0xb
 5591 024d 70150000 		.4byte	.LASF44
 5592 0251 07       		.byte	0x7
 5593 0252 49       		.byte	0x49
 5594 0253 7F020000 		.4byte	0x27f
 5595 0257 00       		.byte	0
 5596 0258 0B       		.uleb128 0xb
 5597 0259 850F0000 		.4byte	.LASF45
 5598 025d 07       		.byte	0x7
 5599 025e 4A       		.byte	0x4a
 5600 025f 7F020000 		.4byte	0x27f
 5601 0263 80       		.byte	0x80
 5602 0264 11       		.uleb128 0x11
 5603 0265 95120000 		.4byte	.LASF46
 5604 0269 07       		.byte	0x7
 5605 026a 4C       		.byte	0x4c
 5606 026b 52010000 		.4byte	0x152
 5607 026f 0001     		.2byte	0x100
 5608 0271 11       		.uleb128 0x11
 5609 0272 78130000 		.4byte	.LASF47
 5610 0276 07       		.byte	0x7
 5611 0277 4F       		.byte	0x4f
 5612 0278 52010000 		.4byte	0x152
 5613 027c 0401     		.2byte	0x104
 5614 027e 00       		.byte	0
 5615 027f 08       		.uleb128 0x8
 5616 0280 43010000 		.4byte	0x143
 5617 0284 8F020000 		.4byte	0x28f
 5618 0288 09       		.uleb128 0x9
 5619 0289 05010000 		.4byte	0x105
 5620 028d 1F       		.byte	0x1f
 5621 028e 00       		.byte	0
 5622 028f 10       		.uleb128 0x10
 5623 0290 2D0D0000 		.4byte	.LASF48
 5624 0294 9001     		.2byte	0x190
 5625 0296 07       		.byte	0x7
 5626 0297 5B       		.byte	0x5b
 5627 0298 CD020000 		.4byte	0x2cd
 5628 029c 0B       		.uleb128 0xb
 5629 029d 07110000 		.4byte	.LASF28
 5630 02a1 07       		.byte	0x7
 5631 02a2 5C       		.byte	0x5c
 5632 02a3 CD020000 		.4byte	0x2cd
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 204


 5633 02a7 00       		.byte	0
 5634 02a8 0B       		.uleb128 0xb
 5635 02a9 53130000 		.4byte	.LASF49
 5636 02ad 07       		.byte	0x7
 5637 02ae 5D       		.byte	0x5d
 5638 02af 37000000 		.4byte	0x37
 5639 02b3 04       		.byte	0x4
 5640 02b4 0B       		.uleb128 0xb
 5641 02b5 78060000 		.4byte	.LASF50
 5642 02b9 07       		.byte	0x7
 5643 02ba 5F       		.byte	0x5f
 5644 02bb D3020000 		.4byte	0x2d3
 5645 02bf 08       		.byte	0x8
 5646 02c0 0B       		.uleb128 0xb
 5647 02c1 94020000 		.4byte	.LASF43
 5648 02c5 07       		.byte	0x7
 5649 02c6 60       		.byte	0x60
 5650 02c7 3F020000 		.4byte	0x23f
 5651 02cb 88       		.byte	0x88
 5652 02cc 00       		.byte	0
 5653 02cd 0D       		.uleb128 0xd
 5654 02ce 04       		.byte	0x4
 5655 02cf 8F020000 		.4byte	0x28f
 5656 02d3 08       		.uleb128 0x8
 5657 02d4 E3020000 		.4byte	0x2e3
 5658 02d8 E3020000 		.4byte	0x2e3
 5659 02dc 09       		.uleb128 0x9
 5660 02dd 05010000 		.4byte	0x105
 5661 02e1 1F       		.byte	0x1f
 5662 02e2 00       		.byte	0
 5663 02e3 0D       		.uleb128 0xd
 5664 02e4 04       		.byte	0x4
 5665 02e5 E9020000 		.4byte	0x2e9
 5666 02e9 12       		.uleb128 0x12
 5667 02ea 0E       		.uleb128 0xe
 5668 02eb 71130000 		.4byte	.LASF51
 5669 02ef 08       		.byte	0x8
 5670 02f0 07       		.byte	0x7
 5671 02f1 73       		.byte	0x73
 5672 02f2 0F030000 		.4byte	0x30f
 5673 02f6 0B       		.uleb128 0xb
 5674 02f7 10100000 		.4byte	.LASF52
 5675 02fb 07       		.byte	0x7
 5676 02fc 74       		.byte	0x74
 5677 02fd 0F030000 		.4byte	0x30f
 5678 0301 00       		.byte	0
 5679 0302 0B       		.uleb128 0xb
 5680 0303 20030000 		.4byte	.LASF53
 5681 0307 07       		.byte	0x7
 5682 0308 75       		.byte	0x75
 5683 0309 37000000 		.4byte	0x37
 5684 030d 04       		.byte	0x4
 5685 030e 00       		.byte	0
 5686 030f 0D       		.uleb128 0xd
 5687 0310 04       		.byte	0x4
 5688 0311 5E000000 		.4byte	0x5e
 5689 0315 0E       		.uleb128 0xe
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 205


 5690 0316 05090000 		.4byte	.LASF54
 5691 031a 68       		.byte	0x68
 5692 031b 07       		.byte	0x7
 5693 031c B3       		.byte	0xb3
 5694 031d 3F040000 		.4byte	0x43f
 5695 0321 0F       		.uleb128 0xf
 5696 0322 5F7000   		.ascii	"_p\000"
 5697 0325 07       		.byte	0x7
 5698 0326 B4       		.byte	0xb4
 5699 0327 0F030000 		.4byte	0x30f
 5700 032b 00       		.byte	0
 5701 032c 0F       		.uleb128 0xf
 5702 032d 5F7200   		.ascii	"_r\000"
 5703 0330 07       		.byte	0x7
 5704 0331 B5       		.byte	0xb5
 5705 0332 37000000 		.4byte	0x37
 5706 0336 04       		.byte	0x4
 5707 0337 0F       		.uleb128 0xf
 5708 0338 5F7700   		.ascii	"_w\000"
 5709 033b 07       		.byte	0x7
 5710 033c B6       		.byte	0xb6
 5711 033d 37000000 		.4byte	0x37
 5712 0341 08       		.byte	0x8
 5713 0342 0B       		.uleb128 0xb
 5714 0343 0A0D0000 		.4byte	.LASF55
 5715 0347 07       		.byte	0x7
 5716 0348 B7       		.byte	0xb7
 5717 0349 65000000 		.4byte	0x65
 5718 034d 0C       		.byte	0xc
 5719 034e 0B       		.uleb128 0xb
 5720 034f 8E020000 		.4byte	.LASF56
 5721 0353 07       		.byte	0x7
 5722 0354 B8       		.byte	0xb8
 5723 0355 65000000 		.4byte	0x65
 5724 0359 0E       		.byte	0xe
 5725 035a 0F       		.uleb128 0xf
 5726 035b 5F626600 		.ascii	"_bf\000"
 5727 035f 07       		.byte	0x7
 5728 0360 B9       		.byte	0xb9
 5729 0361 EA020000 		.4byte	0x2ea
 5730 0365 10       		.byte	0x10
 5731 0366 0B       		.uleb128 0xb
 5732 0367 36130000 		.4byte	.LASF57
 5733 036b 07       		.byte	0x7
 5734 036c BA       		.byte	0xba
 5735 036d 37000000 		.4byte	0x37
 5736 0371 18       		.byte	0x18
 5737 0372 0B       		.uleb128 0xb
 5738 0373 C6070000 		.4byte	.LASF58
 5739 0377 07       		.byte	0x7
 5740 0378 C1       		.byte	0xc1
 5741 0379 43010000 		.4byte	0x143
 5742 037d 1C       		.byte	0x1c
 5743 037e 0B       		.uleb128 0xb
 5744 037f 64000000 		.4byte	.LASF59
 5745 0383 07       		.byte	0x7
 5746 0384 C3       		.byte	0xc3
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 206


 5747 0385 95050000 		.4byte	0x595
 5748 0389 20       		.byte	0x20
 5749 038a 0B       		.uleb128 0xb
 5750 038b 99000000 		.4byte	.LASF60
 5751 038f 07       		.byte	0x7
 5752 0390 C5       		.byte	0xc5
 5753 0391 C4050000 		.4byte	0x5c4
 5754 0395 24       		.byte	0x24
 5755 0396 0B       		.uleb128 0xb
 5756 0397 7D0E0000 		.4byte	.LASF61
 5757 039b 07       		.byte	0x7
 5758 039c C8       		.byte	0xc8
 5759 039d E8050000 		.4byte	0x5e8
 5760 03a1 28       		.byte	0x28
 5761 03a2 0B       		.uleb128 0xb
 5762 03a3 97060000 		.4byte	.LASF62
 5763 03a7 07       		.byte	0x7
 5764 03a8 C9       		.byte	0xc9
 5765 03a9 02060000 		.4byte	0x602
 5766 03ad 2C       		.byte	0x2c
 5767 03ae 0F       		.uleb128 0xf
 5768 03af 5F756200 		.ascii	"_ub\000"
 5769 03b3 07       		.byte	0x7
 5770 03b4 CC       		.byte	0xcc
 5771 03b5 EA020000 		.4byte	0x2ea
 5772 03b9 30       		.byte	0x30
 5773 03ba 0F       		.uleb128 0xf
 5774 03bb 5F757000 		.ascii	"_up\000"
 5775 03bf 07       		.byte	0x7
 5776 03c0 CD       		.byte	0xcd
 5777 03c1 0F030000 		.4byte	0x30f
 5778 03c5 38       		.byte	0x38
 5779 03c6 0F       		.uleb128 0xf
 5780 03c7 5F757200 		.ascii	"_ur\000"
 5781 03cb 07       		.byte	0x7
 5782 03cc CE       		.byte	0xce
 5783 03cd 37000000 		.4byte	0x37
 5784 03d1 3C       		.byte	0x3c
 5785 03d2 0B       		.uleb128 0xb
 5786 03d3 A50C0000 		.4byte	.LASF63
 5787 03d7 07       		.byte	0x7
 5788 03d8 D1       		.byte	0xd1
 5789 03d9 08060000 		.4byte	0x608
 5790 03dd 40       		.byte	0x40
 5791 03de 0B       		.uleb128 0xb
 5792 03df 6A010000 		.4byte	.LASF64
 5793 03e3 07       		.byte	0x7
 5794 03e4 D2       		.byte	0xd2
 5795 03e5 18060000 		.4byte	0x618
 5796 03e9 43       		.byte	0x43
 5797 03ea 0F       		.uleb128 0xf
 5798 03eb 5F6C6200 		.ascii	"_lb\000"
 5799 03ef 07       		.byte	0x7
 5800 03f0 D5       		.byte	0xd5
 5801 03f1 EA020000 		.4byte	0x2ea
 5802 03f5 44       		.byte	0x44
 5803 03f6 0B       		.uleb128 0xb
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 207


 5804 03f7 EA0F0000 		.4byte	.LASF65
 5805 03fb 07       		.byte	0x7
 5806 03fc D8       		.byte	0xd8
 5807 03fd 37000000 		.4byte	0x37
 5808 0401 4C       		.byte	0x4c
 5809 0402 0B       		.uleb128 0xb
 5810 0403 44080000 		.4byte	.LASF66
 5811 0407 07       		.byte	0x7
 5812 0408 D9       		.byte	0xd9
 5813 0409 B4000000 		.4byte	0xb4
 5814 040d 50       		.byte	0x50
 5815 040e 0B       		.uleb128 0xb
 5816 040f 1D110000 		.4byte	.LASF67
 5817 0413 07       		.byte	0x7
 5818 0414 DC       		.byte	0xdc
 5819 0415 5D040000 		.4byte	0x45d
 5820 0419 54       		.byte	0x54
 5821 041a 0B       		.uleb128 0xb
 5822 041b E6010000 		.4byte	.LASF68
 5823 041f 07       		.byte	0x7
 5824 0420 E0       		.byte	0xe0
 5825 0421 38010000 		.4byte	0x138
 5826 0425 58       		.byte	0x58
 5827 0426 0B       		.uleb128 0xb
 5828 0427 D70C0000 		.4byte	.LASF69
 5829 042b 07       		.byte	0x7
 5830 042c E2       		.byte	0xe2
 5831 042d 2D010000 		.4byte	0x12d
 5832 0431 5C       		.byte	0x5c
 5833 0432 0B       		.uleb128 0xb
 5834 0433 18090000 		.4byte	.LASF70
 5835 0437 07       		.byte	0x7
 5836 0438 E3       		.byte	0xe3
 5837 0439 37000000 		.4byte	0x37
 5838 043d 64       		.byte	0x64
 5839 043e 00       		.byte	0
 5840 043f 13       		.uleb128 0x13
 5841 0440 37000000 		.4byte	0x37
 5842 0444 5D040000 		.4byte	0x45d
 5843 0448 14       		.uleb128 0x14
 5844 0449 5D040000 		.4byte	0x45d
 5845 044d 14       		.uleb128 0x14
 5846 044e 43010000 		.4byte	0x143
 5847 0452 14       		.uleb128 0x14
 5848 0453 45010000 		.4byte	0x145
 5849 0457 14       		.uleb128 0x14
 5850 0458 37000000 		.4byte	0x37
 5851 045c 00       		.byte	0
 5852 045d 0D       		.uleb128 0xd
 5853 045e 04       		.byte	0x4
 5854 045f 63040000 		.4byte	0x463
 5855 0463 15       		.uleb128 0x15
 5856 0464 71050000 		.4byte	.LASF71
 5857 0468 2804     		.2byte	0x428
 5858 046a 07       		.byte	0x7
 5859 046b 3802     		.2byte	0x238
 5860 046d 95050000 		.4byte	0x595
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 208


 5861 0471 16       		.uleb128 0x16
 5862 0472 87090000 		.4byte	.LASF72
 5863 0476 07       		.byte	0x7
 5864 0477 3A02     		.2byte	0x23a
 5865 0479 37000000 		.4byte	0x37
 5866 047d 00       		.byte	0
 5867 047e 16       		.uleb128 0x16
 5868 047f D9060000 		.4byte	.LASF73
 5869 0483 07       		.byte	0x7
 5870 0484 3F02     		.2byte	0x23f
 5871 0486 6F060000 		.4byte	0x66f
 5872 048a 04       		.byte	0x4
 5873 048b 16       		.uleb128 0x16
 5874 048c AC0F0000 		.4byte	.LASF74
 5875 0490 07       		.byte	0x7
 5876 0491 3F02     		.2byte	0x23f
 5877 0493 6F060000 		.4byte	0x66f
 5878 0497 08       		.byte	0x8
 5879 0498 16       		.uleb128 0x16
 5880 0499 AB0C0000 		.4byte	.LASF75
 5881 049d 07       		.byte	0x7
 5882 049e 3F02     		.2byte	0x23f
 5883 04a0 6F060000 		.4byte	0x66f
 5884 04a4 0C       		.byte	0xc
 5885 04a5 16       		.uleb128 0x16
 5886 04a6 4E130000 		.4byte	.LASF76
 5887 04aa 07       		.byte	0x7
 5888 04ab 4102     		.2byte	0x241
 5889 04ad 37000000 		.4byte	0x37
 5890 04b1 10       		.byte	0x10
 5891 04b2 16       		.uleb128 0x16
 5892 04b3 9C0A0000 		.4byte	.LASF77
 5893 04b7 07       		.byte	0x7
 5894 04b8 4202     		.2byte	0x242
 5895 04ba 51080000 		.4byte	0x851
 5896 04be 14       		.byte	0x14
 5897 04bf 16       		.uleb128 0x16
 5898 04c0 5A040000 		.4byte	.LASF78
 5899 04c4 07       		.byte	0x7
 5900 04c5 4402     		.2byte	0x244
 5901 04c7 37000000 		.4byte	0x37
 5902 04cb 30       		.byte	0x30
 5903 04cc 16       		.uleb128 0x16
 5904 04cd 190B0000 		.4byte	.LASF79
 5905 04d1 07       		.byte	0x7
 5906 04d2 4502     		.2byte	0x245
 5907 04d4 B9050000 		.4byte	0x5b9
 5908 04d8 34       		.byte	0x34
 5909 04d9 16       		.uleb128 0x16
 5910 04da 0D090000 		.4byte	.LASF80
 5911 04de 07       		.byte	0x7
 5912 04df 4702     		.2byte	0x247
 5913 04e1 37000000 		.4byte	0x37
 5914 04e5 38       		.byte	0x38
 5915 04e6 16       		.uleb128 0x16
 5916 04e7 1E0A0000 		.4byte	.LASF81
 5917 04eb 07       		.byte	0x7
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 209


 5918 04ec 4902     		.2byte	0x249
 5919 04ee 6C080000 		.4byte	0x86c
 5920 04f2 3C       		.byte	0x3c
 5921 04f3 16       		.uleb128 0x16
 5922 04f4 F6130000 		.4byte	.LASF82
 5923 04f8 07       		.byte	0x7
 5924 04f9 4C02     		.2byte	0x24c
 5925 04fb B0010000 		.4byte	0x1b0
 5926 04ff 40       		.byte	0x40
 5927 0500 16       		.uleb128 0x16
 5928 0501 06030000 		.4byte	.LASF83
 5929 0505 07       		.byte	0x7
 5930 0506 4D02     		.2byte	0x24d
 5931 0508 37000000 		.4byte	0x37
 5932 050c 44       		.byte	0x44
 5933 050d 16       		.uleb128 0x16
 5934 050e B1080000 		.4byte	.LASF84
 5935 0512 07       		.byte	0x7
 5936 0513 4E02     		.2byte	0x24e
 5937 0515 B0010000 		.4byte	0x1b0
 5938 0519 48       		.byte	0x48
 5939 051a 16       		.uleb128 0x16
 5940 051b 3E0B0000 		.4byte	.LASF85
 5941 051f 07       		.byte	0x7
 5942 0520 4F02     		.2byte	0x24f
 5943 0522 72080000 		.4byte	0x872
 5944 0526 4C       		.byte	0x4c
 5945 0527 16       		.uleb128 0x16
 5946 0528 F2000000 		.4byte	.LASF86
 5947 052c 07       		.byte	0x7
 5948 052d 5202     		.2byte	0x252
 5949 052f 37000000 		.4byte	0x37
 5950 0533 50       		.byte	0x50
 5951 0534 16       		.uleb128 0x16
 5952 0535 4C080000 		.4byte	.LASF87
 5953 0539 07       		.byte	0x7
 5954 053a 5302     		.2byte	0x253
 5955 053c 45010000 		.4byte	0x145
 5956 0540 54       		.byte	0x54
 5957 0541 16       		.uleb128 0x16
 5958 0542 A00C0000 		.4byte	.LASF88
 5959 0546 07       		.byte	0x7
 5960 0547 7602     		.2byte	0x276
 5961 0549 2F080000 		.4byte	0x82f
 5962 054d 58       		.byte	0x58
 5963 054e 17       		.uleb128 0x17
 5964 054f 2D0D0000 		.4byte	.LASF48
 5965 0553 07       		.byte	0x7
 5966 0554 7A02     		.2byte	0x27a
 5967 0556 CD020000 		.4byte	0x2cd
 5968 055a 4801     		.2byte	0x148
 5969 055c 17       		.uleb128 0x17
 5970 055d 3E0A0000 		.4byte	.LASF89
 5971 0561 07       		.byte	0x7
 5972 0562 7B02     		.2byte	0x27b
 5973 0564 8F020000 		.4byte	0x28f
 5974 0568 4C01     		.2byte	0x14c
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 210


 5975 056a 17       		.uleb128 0x17
 5976 056b 2E080000 		.4byte	.LASF90
 5977 056f 07       		.byte	0x7
 5978 0570 7F02     		.2byte	0x27f
 5979 0572 83080000 		.4byte	0x883
 5980 0576 DC02     		.2byte	0x2dc
 5981 0578 17       		.uleb128 0x17
 5982 0579 CB0A0000 		.4byte	.LASF91
 5983 057d 07       		.byte	0x7
 5984 057e 8402     		.2byte	0x284
 5985 0580 34060000 		.4byte	0x634
 5986 0584 E002     		.2byte	0x2e0
 5987 0586 17       		.uleb128 0x17
 5988 0587 35000000 		.4byte	.LASF92
 5989 058b 07       		.byte	0x7
 5990 058c 8502     		.2byte	0x285
 5991 058e 8F080000 		.4byte	0x88f
 5992 0592 EC02     		.2byte	0x2ec
 5993 0594 00       		.byte	0
 5994 0595 0D       		.uleb128 0xd
 5995 0596 04       		.byte	0x4
 5996 0597 3F040000 		.4byte	0x43f
 5997 059b 13       		.uleb128 0x13
 5998 059c 37000000 		.4byte	0x37
 5999 05a0 B9050000 		.4byte	0x5b9
 6000 05a4 14       		.uleb128 0x14
 6001 05a5 5D040000 		.4byte	0x45d
 6002 05a9 14       		.uleb128 0x14
 6003 05aa 43010000 		.4byte	0x143
 6004 05ae 14       		.uleb128 0x14
 6005 05af B9050000 		.4byte	0x5b9
 6006 05b3 14       		.uleb128 0x14
 6007 05b4 37000000 		.4byte	0x37
 6008 05b8 00       		.byte	0
 6009 05b9 0D       		.uleb128 0xd
 6010 05ba 04       		.byte	0x4
 6011 05bb BF050000 		.4byte	0x5bf
 6012 05bf 18       		.uleb128 0x18
 6013 05c0 4B010000 		.4byte	0x14b
 6014 05c4 0D       		.uleb128 0xd
 6015 05c5 04       		.byte	0x4
 6016 05c6 9B050000 		.4byte	0x59b
 6017 05ca 13       		.uleb128 0x13
 6018 05cb BF000000 		.4byte	0xbf
 6019 05cf E8050000 		.4byte	0x5e8
 6020 05d3 14       		.uleb128 0x14
 6021 05d4 5D040000 		.4byte	0x45d
 6022 05d8 14       		.uleb128 0x14
 6023 05d9 43010000 		.4byte	0x143
 6024 05dd 14       		.uleb128 0x14
 6025 05de BF000000 		.4byte	0xbf
 6026 05e2 14       		.uleb128 0x14
 6027 05e3 37000000 		.4byte	0x37
 6028 05e7 00       		.byte	0
 6029 05e8 0D       		.uleb128 0xd
 6030 05e9 04       		.byte	0x4
 6031 05ea CA050000 		.4byte	0x5ca
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 211


 6032 05ee 13       		.uleb128 0x13
 6033 05ef 37000000 		.4byte	0x37
 6034 05f3 02060000 		.4byte	0x602
 6035 05f7 14       		.uleb128 0x14
 6036 05f8 5D040000 		.4byte	0x45d
 6037 05fc 14       		.uleb128 0x14
 6038 05fd 43010000 		.4byte	0x143
 6039 0601 00       		.byte	0
 6040 0602 0D       		.uleb128 0xd
 6041 0603 04       		.byte	0x4
 6042 0604 EE050000 		.4byte	0x5ee
 6043 0608 08       		.uleb128 0x8
 6044 0609 5E000000 		.4byte	0x5e
 6045 060d 18060000 		.4byte	0x618
 6046 0611 09       		.uleb128 0x9
 6047 0612 05010000 		.4byte	0x105
 6048 0616 02       		.byte	0x2
 6049 0617 00       		.byte	0
 6050 0618 08       		.uleb128 0x8
 6051 0619 5E000000 		.4byte	0x5e
 6052 061d 28060000 		.4byte	0x628
 6053 0621 09       		.uleb128 0x9
 6054 0622 05010000 		.4byte	0x105
 6055 0626 00       		.byte	0
 6056 0627 00       		.byte	0
 6057 0628 05       		.uleb128 0x5
 6058 0629 B7100000 		.4byte	.LASF93
 6059 062d 07       		.byte	0x7
 6060 062e 1D01     		.2byte	0x11d
 6061 0630 15030000 		.4byte	0x315
 6062 0634 19       		.uleb128 0x19
 6063 0635 4E0B0000 		.4byte	.LASF94
 6064 0639 0C       		.byte	0xc
 6065 063a 07       		.byte	0x7
 6066 063b 2101     		.2byte	0x121
 6067 063d 69060000 		.4byte	0x669
 6068 0641 16       		.uleb128 0x16
 6069 0642 07110000 		.4byte	.LASF28
 6070 0646 07       		.byte	0x7
 6071 0647 2301     		.2byte	0x123
 6072 0649 69060000 		.4byte	0x669
 6073 064d 00       		.byte	0
 6074 064e 16       		.uleb128 0x16
 6075 064f C40A0000 		.4byte	.LASF95
 6076 0653 07       		.byte	0x7
 6077 0654 2401     		.2byte	0x124
 6078 0656 37000000 		.4byte	0x37
 6079 065a 04       		.byte	0x4
 6080 065b 16       		.uleb128 0x16
 6081 065c 480B0000 		.4byte	.LASF96
 6082 0660 07       		.byte	0x7
 6083 0661 2501     		.2byte	0x125
 6084 0663 6F060000 		.4byte	0x66f
 6085 0667 08       		.byte	0x8
 6086 0668 00       		.byte	0
 6087 0669 0D       		.uleb128 0xd
 6088 066a 04       		.byte	0x4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 212


 6089 066b 34060000 		.4byte	0x634
 6090 066f 0D       		.uleb128 0xd
 6091 0670 04       		.byte	0x4
 6092 0671 28060000 		.4byte	0x628
 6093 0675 19       		.uleb128 0x19
 6094 0676 910F0000 		.4byte	.LASF97
 6095 067a 0E       		.byte	0xe
 6096 067b 07       		.byte	0x7
 6097 067c 3D01     		.2byte	0x13d
 6098 067e AA060000 		.4byte	0x6aa
 6099 0682 16       		.uleb128 0x16
 6100 0683 770E0000 		.4byte	.LASF98
 6101 0687 07       		.byte	0x7
 6102 0688 3E01     		.2byte	0x13e
 6103 068a AA060000 		.4byte	0x6aa
 6104 068e 00       		.byte	0
 6105 068f 16       		.uleb128 0x16
 6106 0690 04020000 		.4byte	.LASF99
 6107 0694 07       		.byte	0x7
 6108 0695 3F01     		.2byte	0x13f
 6109 0697 AA060000 		.4byte	0x6aa
 6110 069b 06       		.byte	0x6
 6111 069c 16       		.uleb128 0x16
 6112 069d 64140000 		.4byte	.LASF100
 6113 06a1 07       		.byte	0x7
 6114 06a2 4001     		.2byte	0x140
 6115 06a4 77000000 		.4byte	0x77
 6116 06a8 0C       		.byte	0xc
 6117 06a9 00       		.byte	0
 6118 06aa 08       		.uleb128 0x8
 6119 06ab 77000000 		.4byte	0x77
 6120 06af BA060000 		.4byte	0x6ba
 6121 06b3 09       		.uleb128 0x9
 6122 06b4 05010000 		.4byte	0x105
 6123 06b8 02       		.byte	0x2
 6124 06b9 00       		.byte	0
 6125 06ba 1A       		.uleb128 0x1a
 6126 06bb D0       		.byte	0xd0
 6127 06bc 07       		.byte	0x7
 6128 06bd 5702     		.2byte	0x257
 6129 06bf BB070000 		.4byte	0x7bb
 6130 06c3 16       		.uleb128 0x16
 6131 06c4 88040000 		.4byte	.LASF101
 6132 06c8 07       		.byte	0x7
 6133 06c9 5902     		.2byte	0x259
 6134 06cb 30000000 		.4byte	0x30
 6135 06cf 00       		.byte	0
 6136 06d0 16       		.uleb128 0x16
 6137 06d1 33100000 		.4byte	.LASF102
 6138 06d5 07       		.byte	0x7
 6139 06d6 5A02     		.2byte	0x25a
 6140 06d8 45010000 		.4byte	0x145
 6141 06dc 04       		.byte	0x4
 6142 06dd 16       		.uleb128 0x16
 6143 06de E5000000 		.4byte	.LASF103
 6144 06e2 07       		.byte	0x7
 6145 06e3 5B02     		.2byte	0x25b
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 213


 6146 06e5 BB070000 		.4byte	0x7bb
 6147 06e9 08       		.byte	0x8
 6148 06ea 16       		.uleb128 0x16
 6149 06eb 3A030000 		.4byte	.LASF104
 6150 06ef 07       		.byte	0x7
 6151 06f0 5C02     		.2byte	0x25c
 6152 06f2 C6010000 		.4byte	0x1c6
 6153 06f6 24       		.byte	0x24
 6154 06f7 16       		.uleb128 0x16
 6155 06f8 EF0A0000 		.4byte	.LASF105
 6156 06fc 07       		.byte	0x7
 6157 06fd 5D02     		.2byte	0x25d
 6158 06ff 37000000 		.4byte	0x37
 6159 0703 48       		.byte	0x48
 6160 0704 16       		.uleb128 0x16
 6161 0705 FF0C0000 		.4byte	.LASF106
 6162 0709 07       		.byte	0x7
 6163 070a 5E02     		.2byte	0x25e
 6164 070c A2000000 		.4byte	0xa2
 6165 0710 50       		.byte	0x50
 6166 0711 16       		.uleb128 0x16
 6167 0712 DF100000 		.4byte	.LASF107
 6168 0716 07       		.byte	0x7
 6169 0717 5F02     		.2byte	0x25f
 6170 0719 75060000 		.4byte	0x675
 6171 071d 58       		.byte	0x58
 6172 071e 16       		.uleb128 0x16
 6173 071f 43120000 		.4byte	.LASF108
 6174 0723 07       		.byte	0x7
 6175 0724 6002     		.2byte	0x260
 6176 0726 2D010000 		.4byte	0x12d
 6177 072a 68       		.byte	0x68
 6178 072b 16       		.uleb128 0x16
 6179 072c D70E0000 		.4byte	.LASF109
 6180 0730 07       		.byte	0x7
 6181 0731 6102     		.2byte	0x261
 6182 0733 2D010000 		.4byte	0x12d
 6183 0737 70       		.byte	0x70
 6184 0738 16       		.uleb128 0x16
 6185 0739 C90C0000 		.4byte	.LASF110
 6186 073d 07       		.byte	0x7
 6187 073e 6202     		.2byte	0x262
 6188 0740 2D010000 		.4byte	0x12d
 6189 0744 78       		.byte	0x78
 6190 0745 16       		.uleb128 0x16
 6191 0746 A0010000 		.4byte	.LASF111
 6192 074a 07       		.byte	0x7
 6193 074b 6302     		.2byte	0x263
 6194 074d CB070000 		.4byte	0x7cb
 6195 0751 80       		.byte	0x80
 6196 0752 16       		.uleb128 0x16
 6197 0753 A3090000 		.4byte	.LASF112
 6198 0757 07       		.byte	0x7
 6199 0758 6402     		.2byte	0x264
 6200 075a DB070000 		.4byte	0x7db
 6201 075e 88       		.byte	0x88
 6202 075f 16       		.uleb128 0x16
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 214


 6203 0760 9C150000 		.4byte	.LASF113
 6204 0764 07       		.byte	0x7
 6205 0765 6502     		.2byte	0x265
 6206 0767 37000000 		.4byte	0x37
 6207 076b A0       		.byte	0xa0
 6208 076c 16       		.uleb128 0x16
 6209 076d D6020000 		.4byte	.LASF114
 6210 0771 07       		.byte	0x7
 6211 0772 6602     		.2byte	0x266
 6212 0774 2D010000 		.4byte	0x12d
 6213 0778 A4       		.byte	0xa4
 6214 0779 16       		.uleb128 0x16
 6215 077a 60100000 		.4byte	.LASF115
 6216 077e 07       		.byte	0x7
 6217 077f 6702     		.2byte	0x267
 6218 0781 2D010000 		.4byte	0x12d
 6219 0785 AC       		.byte	0xac
 6220 0786 16       		.uleb128 0x16
 6221 0787 08150000 		.4byte	.LASF116
 6222 078b 07       		.byte	0x7
 6223 078c 6802     		.2byte	0x268
 6224 078e 2D010000 		.4byte	0x12d
 6225 0792 B4       		.byte	0xb4
 6226 0793 16       		.uleb128 0x16
 6227 0794 5C0C0000 		.4byte	.LASF117
 6228 0798 07       		.byte	0x7
 6229 0799 6902     		.2byte	0x269
 6230 079b 2D010000 		.4byte	0x12d
 6231 079f BC       		.byte	0xbc
 6232 07a0 16       		.uleb128 0x16
 6233 07a1 59010000 		.4byte	.LASF118
 6234 07a5 07       		.byte	0x7
 6235 07a6 6A02     		.2byte	0x26a
 6236 07a8 2D010000 		.4byte	0x12d
 6237 07ac C4       		.byte	0xc4
 6238 07ad 16       		.uleb128 0x16
 6239 07ae E70B0000 		.4byte	.LASF119
 6240 07b2 07       		.byte	0x7
 6241 07b3 6B02     		.2byte	0x26b
 6242 07b5 37000000 		.4byte	0x37
 6243 07b9 CC       		.byte	0xcc
 6244 07ba 00       		.byte	0
 6245 07bb 08       		.uleb128 0x8
 6246 07bc 4B010000 		.4byte	0x14b
 6247 07c0 CB070000 		.4byte	0x7cb
 6248 07c4 09       		.uleb128 0x9
 6249 07c5 05010000 		.4byte	0x105
 6250 07c9 19       		.byte	0x19
 6251 07ca 00       		.byte	0
 6252 07cb 08       		.uleb128 0x8
 6253 07cc 4B010000 		.4byte	0x14b
 6254 07d0 DB070000 		.4byte	0x7db
 6255 07d4 09       		.uleb128 0x9
 6256 07d5 05010000 		.4byte	0x105
 6257 07d9 07       		.byte	0x7
 6258 07da 00       		.byte	0
 6259 07db 08       		.uleb128 0x8
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 215


 6260 07dc 4B010000 		.4byte	0x14b
 6261 07e0 EB070000 		.4byte	0x7eb
 6262 07e4 09       		.uleb128 0x9
 6263 07e5 05010000 		.4byte	0x105
 6264 07e9 17       		.byte	0x17
 6265 07ea 00       		.byte	0
 6266 07eb 1A       		.uleb128 0x1a
 6267 07ec F0       		.byte	0xf0
 6268 07ed 07       		.byte	0x7
 6269 07ee 7002     		.2byte	0x270
 6270 07f0 0F080000 		.4byte	0x80f
 6271 07f4 16       		.uleb128 0x16
 6272 07f5 80130000 		.4byte	.LASF120
 6273 07f9 07       		.byte	0x7
 6274 07fa 7302     		.2byte	0x273
 6275 07fc 0F080000 		.4byte	0x80f
 6276 0800 00       		.byte	0
 6277 0801 16       		.uleb128 0x16
 6278 0802 DF0A0000 		.4byte	.LASF121
 6279 0806 07       		.byte	0x7
 6280 0807 7402     		.2byte	0x274
 6281 0809 1F080000 		.4byte	0x81f
 6282 080d 78       		.byte	0x78
 6283 080e 00       		.byte	0
 6284 080f 08       		.uleb128 0x8
 6285 0810 0F030000 		.4byte	0x30f
 6286 0814 1F080000 		.4byte	0x81f
 6287 0818 09       		.uleb128 0x9
 6288 0819 05010000 		.4byte	0x105
 6289 081d 1D       		.byte	0x1d
 6290 081e 00       		.byte	0
 6291 081f 08       		.uleb128 0x8
 6292 0820 30000000 		.4byte	0x30
 6293 0824 2F080000 		.4byte	0x82f
 6294 0828 09       		.uleb128 0x9
 6295 0829 05010000 		.4byte	0x105
 6296 082d 1D       		.byte	0x1d
 6297 082e 00       		.byte	0
 6298 082f 1B       		.uleb128 0x1b
 6299 0830 F0       		.byte	0xf0
 6300 0831 07       		.byte	0x7
 6301 0832 5502     		.2byte	0x255
 6302 0834 51080000 		.4byte	0x851
 6303 0838 1C       		.uleb128 0x1c
 6304 0839 71050000 		.4byte	.LASF71
 6305 083d 07       		.byte	0x7
 6306 083e 6C02     		.2byte	0x26c
 6307 0840 BA060000 		.4byte	0x6ba
 6308 0844 1C       		.uleb128 0x1c
 6309 0845 4C010000 		.4byte	.LASF122
 6310 0849 07       		.byte	0x7
 6311 084a 7502     		.2byte	0x275
 6312 084c EB070000 		.4byte	0x7eb
 6313 0850 00       		.byte	0
 6314 0851 08       		.uleb128 0x8
 6315 0852 4B010000 		.4byte	0x14b
 6316 0856 61080000 		.4byte	0x861
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 216


 6317 085a 09       		.uleb128 0x9
 6318 085b 05010000 		.4byte	0x105
 6319 085f 18       		.byte	0x18
 6320 0860 00       		.byte	0
 6321 0861 1D       		.uleb128 0x1d
 6322 0862 6C080000 		.4byte	0x86c
 6323 0866 14       		.uleb128 0x14
 6324 0867 5D040000 		.4byte	0x45d
 6325 086b 00       		.byte	0
 6326 086c 0D       		.uleb128 0xd
 6327 086d 04       		.byte	0x4
 6328 086e 61080000 		.4byte	0x861
 6329 0872 0D       		.uleb128 0xd
 6330 0873 04       		.byte	0x4
 6331 0874 B0010000 		.4byte	0x1b0
 6332 0878 1D       		.uleb128 0x1d
 6333 0879 83080000 		.4byte	0x883
 6334 087d 14       		.uleb128 0x14
 6335 087e 37000000 		.4byte	0x37
 6336 0882 00       		.byte	0
 6337 0883 0D       		.uleb128 0xd
 6338 0884 04       		.byte	0x4
 6339 0885 89080000 		.4byte	0x889
 6340 0889 0D       		.uleb128 0xd
 6341 088a 04       		.byte	0x4
 6342 088b 78080000 		.4byte	0x878
 6343 088f 08       		.uleb128 0x8
 6344 0890 28060000 		.4byte	0x628
 6345 0894 9F080000 		.4byte	0x89f
 6346 0898 09       		.uleb128 0x9
 6347 0899 05010000 		.4byte	0x105
 6348 089d 02       		.byte	0x2
 6349 089e 00       		.byte	0
 6350 089f 02       		.uleb128 0x2
 6351 08a0 D1040000 		.4byte	.LASF123
 6352 08a4 08       		.byte	0x8
 6353 08a5 18       		.byte	0x18
 6354 08a6 53000000 		.4byte	0x53
 6355 08aa 02       		.uleb128 0x2
 6356 08ab 7C0F0000 		.4byte	.LASF124
 6357 08af 08       		.byte	0x8
 6358 08b0 24       		.byte	0x24
 6359 08b1 6C000000 		.4byte	0x6c
 6360 08b5 02       		.uleb128 0x2
 6361 08b6 D2000000 		.4byte	.LASF125
 6362 08ba 08       		.byte	0x8
 6363 08bb 2C       		.byte	0x2c
 6364 08bc 7E000000 		.4byte	0x7e
 6365 08c0 02       		.uleb128 0x2
 6366 08c1 DF130000 		.4byte	.LASF126
 6367 08c5 08       		.byte	0x8
 6368 08c6 30       		.byte	0x30
 6369 08c7 90000000 		.4byte	0x90
 6370 08cb 03       		.uleb128 0x3
 6371 08cc 04       		.byte	0x4
 6372 08cd 04       		.byte	0x4
 6373 08ce A10B0000 		.4byte	.LASF127
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 217


 6374 08d2 03       		.uleb128 0x3
 6375 08d3 08       		.byte	0x8
 6376 08d4 04       		.byte	0x4
 6377 08d5 E80A0000 		.4byte	.LASF128
 6378 08d9 1E       		.uleb128 0x1e
 6379 08da C0080000 		.4byte	0x8c0
 6380 08de 1E       		.uleb128 0x1e
 6381 08df 9F080000 		.4byte	0x89f
 6382 08e3 02       		.uleb128 0x2
 6383 08e4 B00B0000 		.4byte	.LASF129
 6384 08e8 09       		.byte	0x9
 6385 08e9 23       		.byte	0x23
 6386 08ea EE080000 		.4byte	0x8ee
 6387 08ee 0D       		.uleb128 0xd
 6388 08ef 04       		.byte	0x4
 6389 08f0 F4080000 		.4byte	0x8f4
 6390 08f4 1D       		.uleb128 0x1d
 6391 08f5 FF080000 		.4byte	0x8ff
 6392 08f9 14       		.uleb128 0x14
 6393 08fa 43010000 		.4byte	0x143
 6394 08fe 00       		.byte	0
 6395 08ff 02       		.uleb128 0x2
 6396 0900 48140000 		.4byte	.LASF130
 6397 0904 02       		.byte	0x2
 6398 0905 37       		.byte	0x37
 6399 0906 C0080000 		.4byte	0x8c0
 6400 090a 02       		.uleb128 0x2
 6401 090b 8C010000 		.4byte	.LASF131
 6402 090f 02       		.byte	0x2
 6403 0910 38       		.byte	0x38
 6404 0911 89000000 		.4byte	0x89
 6405 0915 02       		.uleb128 0x2
 6406 0916 D30F0000 		.4byte	.LASF132
 6407 091a 02       		.byte	0x2
 6408 091b 39       		.byte	0x39
 6409 091c 9B000000 		.4byte	0x9b
 6410 0920 02       		.uleb128 0x2
 6411 0921 28100000 		.4byte	.LASF133
 6412 0925 02       		.byte	0x2
 6413 0926 3F       		.byte	0x3f
 6414 0927 C0080000 		.4byte	0x8c0
 6415 092b 0D       		.uleb128 0xd
 6416 092c 04       		.byte	0x4
 6417 092d 9F080000 		.4byte	0x89f
 6418 0931 0E       		.uleb128 0xe
 6419 0932 0E0B0000 		.4byte	.LASF134
 6420 0936 14       		.byte	0x14
 6421 0937 0A       		.byte	0xa
 6422 0938 8B       		.byte	0x8b
 6423 0939 7A090000 		.4byte	0x97a
 6424 093d 0B       		.uleb128 0xb
 6425 093e A9150000 		.4byte	.LASF135
 6426 0942 0A       		.byte	0xa
 6427 0943 8E       		.byte	0x8e
 6428 0944 20090000 		.4byte	0x920
 6429 0948 00       		.byte	0
 6430 0949 0B       		.uleb128 0xb
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 218


 6431 094a 58020000 		.4byte	.LASF136
 6432 094e 0A       		.byte	0xa
 6433 094f 8F       		.byte	0x8f
 6434 0950 7A090000 		.4byte	0x97a
 6435 0954 04       		.byte	0x4
 6436 0955 0B       		.uleb128 0xb
 6437 0956 DF0F0000 		.4byte	.LASF137
 6438 095a 0A       		.byte	0xa
 6439 095b 90       		.byte	0x90
 6440 095c 7A090000 		.4byte	0x97a
 6441 0960 08       		.byte	0x8
 6442 0961 0B       		.uleb128 0xb
 6443 0962 640E0000 		.4byte	.LASF138
 6444 0966 0A       		.byte	0xa
 6445 0967 91       		.byte	0x91
 6446 0968 43010000 		.4byte	0x143
 6447 096c 0C       		.byte	0xc
 6448 096d 0B       		.uleb128 0xb
 6449 096e 850A0000 		.4byte	.LASF139
 6450 0972 0A       		.byte	0xa
 6451 0973 92       		.byte	0x92
 6452 0974 43010000 		.4byte	0x143
 6453 0978 10       		.byte	0x10
 6454 0979 00       		.byte	0
 6455 097a 0D       		.uleb128 0xd
 6456 097b 04       		.byte	0x4
 6457 097c 31090000 		.4byte	0x931
 6458 0980 02       		.uleb128 0x2
 6459 0981 09130000 		.4byte	.LASF140
 6460 0985 0A       		.byte	0xa
 6461 0986 95       		.byte	0x95
 6462 0987 31090000 		.4byte	0x931
 6463 098b 0E       		.uleb128 0xe
 6464 098c 87060000 		.4byte	.LASF141
 6465 0990 0C       		.byte	0xc
 6466 0991 0A       		.byte	0xa
 6467 0992 97       		.byte	0x97
 6468 0993 BC090000 		.4byte	0x9bc
 6469 0997 0B       		.uleb128 0xb
 6470 0998 A9150000 		.4byte	.LASF135
 6471 099c 0A       		.byte	0xa
 6472 099d 9A       		.byte	0x9a
 6473 099e 20090000 		.4byte	0x920
 6474 09a2 00       		.byte	0
 6475 09a3 0B       		.uleb128 0xb
 6476 09a4 58020000 		.4byte	.LASF136
 6477 09a8 0A       		.byte	0xa
 6478 09a9 9B       		.byte	0x9b
 6479 09aa 7A090000 		.4byte	0x97a
 6480 09ae 04       		.byte	0x4
 6481 09af 0B       		.uleb128 0xb
 6482 09b0 DF0F0000 		.4byte	.LASF137
 6483 09b4 0A       		.byte	0xa
 6484 09b5 9C       		.byte	0x9c
 6485 09b6 7A090000 		.4byte	0x97a
 6486 09ba 08       		.byte	0x8
 6487 09bb 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 219


 6488 09bc 02       		.uleb128 0x2
 6489 09bd 52050000 		.4byte	.LASF142
 6490 09c1 0A       		.byte	0xa
 6491 09c2 9E       		.byte	0x9e
 6492 09c3 8B090000 		.4byte	0x98b
 6493 09c7 0E       		.uleb128 0xe
 6494 09c8 34030000 		.4byte	.LASF143
 6495 09cc 14       		.byte	0x14
 6496 09cd 0A       		.byte	0xa
 6497 09ce A3       		.byte	0xa3
 6498 09cf F8090000 		.4byte	0x9f8
 6499 09d3 0B       		.uleb128 0xb
 6500 09d4 210C0000 		.4byte	.LASF144
 6501 09d8 0A       		.byte	0xa
 6502 09d9 A6       		.byte	0xa6
 6503 09da F8090000 		.4byte	0x9f8
 6504 09de 00       		.byte	0
 6505 09df 0B       		.uleb128 0xb
 6506 09e0 10060000 		.4byte	.LASF145
 6507 09e4 0A       		.byte	0xa
 6508 09e5 A7       		.byte	0xa7
 6509 09e6 FD090000 		.4byte	0x9fd
 6510 09ea 04       		.byte	0x4
 6511 09eb 0B       		.uleb128 0xb
 6512 09ec 770D0000 		.4byte	.LASF146
 6513 09f0 0A       		.byte	0xa
 6514 09f1 A8       		.byte	0xa8
 6515 09f2 BC090000 		.4byte	0x9bc
 6516 09f6 08       		.byte	0x8
 6517 09f7 00       		.byte	0
 6518 09f8 1E       		.uleb128 0x1e
 6519 09f9 15090000 		.4byte	0x915
 6520 09fd 0D       		.uleb128 0xd
 6521 09fe 04       		.byte	0x4
 6522 09ff 80090000 		.4byte	0x980
 6523 0a03 02       		.uleb128 0x2
 6524 0a04 F80C0000 		.4byte	.LASF147
 6525 0a08 0A       		.byte	0xa
 6526 0a09 AA       		.byte	0xaa
 6527 0a0a C7090000 		.4byte	0x9c7
 6528 0a0e 02       		.uleb128 0x2
 6529 0a0f A9050000 		.4byte	.LASF148
 6530 0a13 0B       		.byte	0xb
 6531 0a14 3D       		.byte	0x3d
 6532 0a15 43010000 		.4byte	0x143
 6533 0a19 1F       		.uleb128 0x1f
 6534 0a1a 01       		.byte	0x1
 6535 0a1b 5E000000 		.4byte	0x5e
 6536 0a1f 0B       		.byte	0xb
 6537 0a20 47       		.byte	0x47
 6538 0a21 4A0A0000 		.4byte	0xa4a
 6539 0a25 20       		.uleb128 0x20
 6540 0a26 A70B0000 		.4byte	.LASF149
 6541 0a2a 00       		.byte	0
 6542 0a2b 20       		.uleb128 0x20
 6543 0a2c AA080000 		.4byte	.LASF150
 6544 0a30 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 220


 6545 0a31 20       		.uleb128 0x20
 6546 0a32 980D0000 		.4byte	.LASF151
 6547 0a36 02       		.byte	0x2
 6548 0a37 20       		.uleb128 0x20
 6549 0a38 C6040000 		.4byte	.LASF152
 6550 0a3c 03       		.byte	0x3
 6551 0a3d 20       		.uleb128 0x20
 6552 0a3e AA010000 		.4byte	.LASF153
 6553 0a42 04       		.byte	0x4
 6554 0a43 20       		.uleb128 0x20
 6555 0a44 23110000 		.4byte	.LASF154
 6556 0a48 05       		.byte	0x5
 6557 0a49 00       		.byte	0
 6558 0a4a 02       		.uleb128 0x2
 6559 0a4b DA000000 		.4byte	.LASF155
 6560 0a4f 0B       		.byte	0xb
 6561 0a50 4E       		.byte	0x4e
 6562 0a51 190A0000 		.4byte	0xa19
 6563 0a55 1F       		.uleb128 0x1f
 6564 0a56 01       		.byte	0x1
 6565 0a57 5E000000 		.4byte	0x5e
 6566 0a5b 0B       		.byte	0xb
 6567 0a5c 52       		.byte	0x52
 6568 0a5d 800A0000 		.4byte	0xa80
 6569 0a61 20       		.uleb128 0x20
 6570 0a62 2D150000 		.4byte	.LASF156
 6571 0a66 00       		.byte	0
 6572 0a67 20       		.uleb128 0x20
 6573 0a68 6F030000 		.4byte	.LASF157
 6574 0a6c 01       		.byte	0x1
 6575 0a6d 20       		.uleb128 0x20
 6576 0a6e 8A120000 		.4byte	.LASF158
 6577 0a72 02       		.byte	0x2
 6578 0a73 20       		.uleb128 0x20
 6579 0a74 4D0E0000 		.4byte	.LASF159
 6580 0a78 03       		.byte	0x3
 6581 0a79 20       		.uleb128 0x20
 6582 0a7a A9060000 		.4byte	.LASF160
 6583 0a7e 04       		.byte	0x4
 6584 0a7f 00       		.byte	0
 6585 0a80 02       		.uleb128 0x2
 6586 0a81 25140000 		.4byte	.LASF161
 6587 0a85 0B       		.byte	0xb
 6588 0a86 58       		.byte	0x58
 6589 0a87 550A0000 		.4byte	0xa55
 6590 0a8b 0E       		.uleb128 0xe
 6591 0a8c 1F010000 		.4byte	.LASF162
 6592 0a90 08       		.byte	0x8
 6593 0a91 0B       		.byte	0xb
 6594 0a92 5D       		.byte	0x5d
 6595 0a93 B00A0000 		.4byte	0xab0
 6596 0a97 0B       		.uleb128 0xb
 6597 0a98 91080000 		.4byte	.LASF163
 6598 0a9c 0B       		.byte	0xb
 6599 0a9d 5F       		.byte	0x5f
 6600 0a9e 0A090000 		.4byte	0x90a
 6601 0aa2 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 221


 6602 0aa3 0B       		.uleb128 0xb
 6603 0aa4 B6050000 		.4byte	.LASF164
 6604 0aa8 0B       		.byte	0xb
 6605 0aa9 60       		.byte	0x60
 6606 0aaa 20090000 		.4byte	0x920
 6607 0aae 04       		.byte	0x4
 6608 0aaf 00       		.byte	0
 6609 0ab0 02       		.uleb128 0x2
 6610 0ab1 7D060000 		.4byte	.LASF165
 6611 0ab5 0B       		.byte	0xb
 6612 0ab6 61       		.byte	0x61
 6613 0ab7 8B0A0000 		.4byte	0xa8b
 6614 0abb 0E       		.uleb128 0xe
 6615 0abc 78090000 		.4byte	.LASF166
 6616 0ac0 0C       		.byte	0xc
 6617 0ac1 0B       		.byte	0xb
 6618 0ac2 66       		.byte	0x66
 6619 0ac3 EC0A0000 		.4byte	0xaec
 6620 0ac7 0B       		.uleb128 0xb
 6621 0ac8 5B080000 		.4byte	.LASF167
 6622 0acc 0B       		.byte	0xb
 6623 0acd 68       		.byte	0x68
 6624 0ace 43010000 		.4byte	0x143
 6625 0ad2 00       		.byte	0
 6626 0ad3 0B       		.uleb128 0xb
 6627 0ad4 ED110000 		.4byte	.LASF168
 6628 0ad8 0B       		.byte	0xb
 6629 0ad9 69       		.byte	0x69
 6630 0ada C0080000 		.4byte	0x8c0
 6631 0ade 04       		.byte	0x4
 6632 0adf 0B       		.uleb128 0xb
 6633 0ae0 4E150000 		.4byte	.LASF169
 6634 0ae4 0B       		.byte	0xb
 6635 0ae5 6A       		.byte	0x6a
 6636 0ae6 C0080000 		.4byte	0x8c0
 6637 0aea 08       		.byte	0x8
 6638 0aeb 00       		.byte	0
 6639 0aec 02       		.uleb128 0x2
 6640 0aed B4000000 		.4byte	.LASF170
 6641 0af1 0B       		.byte	0xb
 6642 0af2 6B       		.byte	0x6b
 6643 0af3 BB0A0000 		.4byte	0xabb
 6644 0af7 18       		.uleb128 0x18
 6645 0af8 B9050000 		.4byte	0x5b9
 6646 0afc 0D       		.uleb128 0xd
 6647 0afd 04       		.byte	0x4
 6648 0afe FF080000 		.4byte	0x8ff
 6649 0b02 0E       		.uleb128 0xe
 6650 0b03 35090000 		.4byte	.LASF171
 6651 0b07 24       		.byte	0x24
 6652 0b08 0B       		.byte	0xb
 6653 0b09 80       		.byte	0x80
 6654 0b0a 7B0B0000 		.4byte	0xb7b
 6655 0b0e 0B       		.uleb128 0xb
 6656 0b0f C7010000 		.4byte	.LASF172
 6657 0b13 0B       		.byte	0xb
 6658 0b14 82       		.byte	0x82
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 222


 6659 0b15 0E0A0000 		.4byte	0xa0e
 6660 0b19 00       		.byte	0
 6661 0b1a 0B       		.uleb128 0xb
 6662 0b1b 6C0E0000 		.4byte	.LASF173
 6663 0b1f 0B       		.byte	0xb
 6664 0b20 83       		.byte	0x83
 6665 0b21 B9050000 		.4byte	0x5b9
 6666 0b25 04       		.byte	0x4
 6667 0b26 0B       		.uleb128 0xb
 6668 0b27 2A0E0000 		.4byte	.LASF174
 6669 0b2b 0B       		.byte	0xb
 6670 0b2c 84       		.byte	0x84
 6671 0b2d 15090000 		.4byte	0x915
 6672 0b31 08       		.byte	0x8
 6673 0b32 0B       		.uleb128 0xb
 6674 0b33 61110000 		.4byte	.LASF175
 6675 0b37 0B       		.byte	0xb
 6676 0b38 85       		.byte	0x85
 6677 0b39 4A0A0000 		.4byte	0xa4a
 6678 0b3d 0C       		.byte	0xc
 6679 0b3e 0B       		.uleb128 0xb
 6680 0b3f A2020000 		.4byte	.LASF176
 6681 0b43 0B       		.byte	0xb
 6682 0b44 86       		.byte	0x86
 6683 0b45 15090000 		.4byte	0x915
 6684 0b49 10       		.byte	0x10
 6685 0b4a 0B       		.uleb128 0xb
 6686 0b4b 78020000 		.4byte	.LASF177
 6687 0b4f 0B       		.byte	0xb
 6688 0b50 87       		.byte	0x87
 6689 0b51 15090000 		.4byte	0x915
 6690 0b55 14       		.byte	0x14
 6691 0b56 0B       		.uleb128 0xb
 6692 0b57 F4060000 		.4byte	.LASF178
 6693 0b5b 0B       		.byte	0xb
 6694 0b5c 88       		.byte	0x88
 6695 0b5d C0080000 		.4byte	0x8c0
 6696 0b61 18       		.byte	0x18
 6697 0b62 0B       		.uleb128 0xb
 6698 0b63 680F0000 		.4byte	.LASF179
 6699 0b67 0B       		.byte	0xb
 6700 0b68 89       		.byte	0x89
 6701 0b69 FC0A0000 		.4byte	0xafc
 6702 0b6d 1C       		.byte	0x1c
 6703 0b6e 0B       		.uleb128 0xb
 6704 0b6f E40D0000 		.4byte	.LASF180
 6705 0b73 0B       		.byte	0xb
 6706 0b74 8A       		.byte	0x8a
 6707 0b75 AA080000 		.4byte	0x8aa
 6708 0b79 20       		.byte	0x20
 6709 0b7a 00       		.byte	0
 6710 0b7b 02       		.uleb128 0x2
 6711 0b7c 16020000 		.4byte	.LASF181
 6712 0b80 0B       		.byte	0xb
 6713 0b81 8B       		.byte	0x8b
 6714 0b82 020B0000 		.4byte	0xb02
 6715 0b86 15       		.uleb128 0x15
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 223


 6716 0b87 920E0000 		.4byte	.LASF182
 6717 0b8b 8804     		.2byte	0x488
 6718 0b8d 01       		.byte	0x1
 6719 0b8e 0D01     		.2byte	0x10d
 6720 0b90 4D0C0000 		.4byte	0xc4d
 6721 0b94 16       		.uleb128 0x16
 6722 0b95 18060000 		.4byte	.LASF183
 6723 0b99 01       		.byte	0x1
 6724 0b9a 0F01     		.2byte	0x10f
 6725 0b9c 4D0C0000 		.4byte	0xc4d
 6726 0ba0 00       		.byte	0
 6727 0ba1 16       		.uleb128 0x16
 6728 0ba2 C80E0000 		.4byte	.LASF184
 6729 0ba6 01       		.byte	0x1
 6730 0ba7 1501     		.2byte	0x115
 6731 0ba9 80090000 		.4byte	0x980
 6732 0bad 04       		.byte	0x4
 6733 0bae 16       		.uleb128 0x16
 6734 0baf C3000000 		.4byte	.LASF185
 6735 0bb3 01       		.byte	0x1
 6736 0bb4 1601     		.2byte	0x116
 6737 0bb6 80090000 		.4byte	0x980
 6738 0bba 18       		.byte	0x18
 6739 0bbb 16       		.uleb128 0x16
 6740 0bbc BA150000 		.4byte	.LASF186
 6741 0bc0 01       		.byte	0x1
 6742 0bc1 1701     		.2byte	0x117
 6743 0bc3 15090000 		.4byte	0x915
 6744 0bc7 2C       		.byte	0x2c
 6745 0bc8 16       		.uleb128 0x16
 6746 0bc9 B3010000 		.4byte	.LASF187
 6747 0bcd 01       		.byte	0x1
 6748 0bce 1801     		.2byte	0x118
 6749 0bd0 FC0A0000 		.4byte	0xafc
 6750 0bd4 30       		.byte	0x30
 6751 0bd5 16       		.uleb128 0x16
 6752 0bd6 6C0E0000 		.4byte	.LASF173
 6753 0bda 01       		.byte	0x1
 6754 0bdb 1901     		.2byte	0x119
 6755 0bdd 580C0000 		.4byte	0xc58
 6756 0be1 34       		.byte	0x34
 6757 0be2 16       		.uleb128 0x16
 6758 0be3 5F130000 		.4byte	.LASF188
 6759 0be7 01       		.byte	0x1
 6760 0be8 2401     		.2byte	0x124
 6761 0bea 15090000 		.4byte	0x915
 6762 0bee 40       		.byte	0x40
 6763 0bef 16       		.uleb128 0x16
 6764 0bf0 34010000 		.4byte	.LASF189
 6765 0bf4 01       		.byte	0x1
 6766 0bf5 2501     		.2byte	0x125
 6767 0bf7 15090000 		.4byte	0x915
 6768 0bfb 44       		.byte	0x44
 6769 0bfc 16       		.uleb128 0x16
 6770 0bfd 78020000 		.4byte	.LASF177
 6771 0c01 01       		.byte	0x1
 6772 0c02 2901     		.2byte	0x129
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 224


 6773 0c04 15090000 		.4byte	0x915
 6774 0c08 48       		.byte	0x48
 6775 0c09 16       		.uleb128 0x16
 6776 0c0a 300F0000 		.4byte	.LASF190
 6777 0c0e 01       		.byte	0x1
 6778 0c0f 2A01     		.2byte	0x12a
 6779 0c11 15090000 		.4byte	0x915
 6780 0c15 4C       		.byte	0x4c
 6781 0c16 16       		.uleb128 0x16
 6782 0c17 F4060000 		.4byte	.LASF178
 6783 0c1b 01       		.byte	0x1
 6784 0c1c 3601     		.2byte	0x136
 6785 0c1e C0080000 		.4byte	0x8c0
 6786 0c22 50       		.byte	0x50
 6787 0c23 16       		.uleb128 0x16
 6788 0c24 26030000 		.4byte	.LASF191
 6789 0c28 01       		.byte	0x1
 6790 0c29 4101     		.2byte	0x141
 6791 0c2b 63040000 		.4byte	0x463
 6792 0c2f 58       		.byte	0x58
 6793 0c30 17       		.uleb128 0x17
 6794 0c31 8F070000 		.4byte	.LASF192
 6795 0c35 01       		.byte	0x1
 6796 0c36 4501     		.2byte	0x145
 6797 0c38 D9080000 		.4byte	0x8d9
 6798 0c3c 8004     		.2byte	0x480
 6799 0c3e 17       		.uleb128 0x17
 6800 0c3f 7D100000 		.4byte	.LASF193
 6801 0c43 01       		.byte	0x1
 6802 0c44 4601     		.2byte	0x146
 6803 0c46 DE080000 		.4byte	0x8de
 6804 0c4a 8404     		.2byte	0x484
 6805 0c4c 00       		.byte	0
 6806 0c4d 0D       		.uleb128 0xd
 6807 0c4e 04       		.byte	0x4
 6808 0c4f 530C0000 		.4byte	0xc53
 6809 0c53 1E       		.uleb128 0x1e
 6810 0c54 FF080000 		.4byte	0x8ff
 6811 0c58 08       		.uleb128 0x8
 6812 0c59 4B010000 		.4byte	0x14b
 6813 0c5d 680C0000 		.4byte	0xc68
 6814 0c61 09       		.uleb128 0x9
 6815 0c62 05010000 		.4byte	0x105
 6816 0c66 0B       		.byte	0xb
 6817 0c67 00       		.byte	0
 6818 0c68 05       		.uleb128 0x5
 6819 0c69 87020000 		.4byte	.LASF194
 6820 0c6d 01       		.byte	0x1
 6821 0c6e 5301     		.2byte	0x153
 6822 0c70 860B0000 		.4byte	0xb86
 6823 0c74 05       		.uleb128 0x5
 6824 0c75 6B130000 		.4byte	.LASF195
 6825 0c79 01       		.byte	0x1
 6826 0c7a 5701     		.2byte	0x157
 6827 0c7c 680C0000 		.4byte	0xc68
 6828 0c80 21       		.uleb128 0x21
 6829 0c81 DC070000 		.4byte	.LASF200
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 225


 6830 0c85 02       		.byte	0x2
 6831 0c86 CF       		.byte	0xcf
 6832 0c87 C0080000 		.4byte	0x8c0
 6833 0c8b 03       		.byte	0x3
 6834 0c8c A70C0000 		.4byte	0xca7
 6835 0c90 22       		.uleb128 0x22
 6836 0c91 F00B0000 		.4byte	.LASF196
 6837 0c95 02       		.byte	0x2
 6838 0c96 D1       		.byte	0xd1
 6839 0c97 C0080000 		.4byte	0x8c0
 6840 0c9b 22       		.uleb128 0x22
 6841 0c9c F90D0000 		.4byte	.LASF197
 6842 0ca0 02       		.byte	0x2
 6843 0ca1 D1       		.byte	0xd1
 6844 0ca2 C0080000 		.4byte	0x8c0
 6845 0ca6 00       		.byte	0
 6846 0ca7 23       		.uleb128 0x23
 6847 0ca8 61050000 		.4byte	.LASF198
 6848 0cac 02       		.byte	0x2
 6849 0cad E3       		.byte	0xe3
 6850 0cae 03       		.byte	0x3
 6851 0caf BF0C0000 		.4byte	0xcbf
 6852 0cb3 24       		.uleb128 0x24
 6853 0cb4 1D050000 		.4byte	.LASF202
 6854 0cb8 02       		.byte	0x2
 6855 0cb9 E3       		.byte	0xe3
 6856 0cba C0080000 		.4byte	0x8c0
 6857 0cbe 00       		.byte	0
 6858 0cbf 23       		.uleb128 0x23
 6859 0cc0 AB120000 		.4byte	.LASF199
 6860 0cc4 02       		.byte	0x2
 6861 0cc5 BF       		.byte	0xbf
 6862 0cc6 03       		.byte	0x3
 6863 0cc7 D70C0000 		.4byte	0xcd7
 6864 0ccb 22       		.uleb128 0x22
 6865 0ccc F90D0000 		.4byte	.LASF197
 6866 0cd0 02       		.byte	0x2
 6867 0cd1 C1       		.byte	0xc1
 6868 0cd2 C0080000 		.4byte	0x8c0
 6869 0cd6 00       		.byte	0
 6870 0cd7 21       		.uleb128 0x21
 6871 0cd8 77070000 		.4byte	.LASF201
 6872 0cdc 02       		.byte	0x2
 6873 0cdd 82       		.byte	0x82
 6874 0cde 9F080000 		.4byte	0x89f
 6875 0ce2 03       		.byte	0x3
 6876 0ce3 FE0C0000 		.4byte	0xcfe
 6877 0ce7 24       		.uleb128 0x24
 6878 0ce8 5B140000 		.4byte	.LASF203
 6879 0cec 02       		.byte	0x2
 6880 0ced 82       		.byte	0x82
 6881 0cee C0080000 		.4byte	0x8c0
 6882 0cf2 22       		.uleb128 0x22
 6883 0cf3 97010000 		.4byte	.LASF204
 6884 0cf7 02       		.byte	0x2
 6885 0cf8 84       		.byte	0x84
 6886 0cf9 9F080000 		.4byte	0x89f
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 226


 6887 0cfd 00       		.byte	0
 6888 0cfe 25       		.uleb128 0x25
 6889 0cff 37060000 		.4byte	.LASF207
 6890 0d03 01       		.byte	0x1
 6891 0d04 C306     		.2byte	0x6c3
 6892 0d06 0A090000 		.4byte	0x90a
 6893 0d0a 00000000 		.4byte	.LFB80
 6894 0d0e 38000000 		.4byte	.LFE80-.LFB80
 6895 0d12 01       		.uleb128 0x1
 6896 0d13 9C       		.byte	0x9c
 6897 0d14 490D0000 		.4byte	0xd49
 6898 0d18 26       		.uleb128 0x26
 6899 0d19 49020000 		.4byte	.LASF209
 6900 0d1d 01       		.byte	0x1
 6901 0d1e C306     		.2byte	0x6c3
 6902 0d20 490D0000 		.4byte	0xd49
 6903 0d24 00000000 		.4byte	.LLST0
 6904 0d28 27       		.uleb128 0x27
 6905 0d29 4A050000 		.4byte	.LASF205
 6906 0d2d 01       		.byte	0x1
 6907 0d2e C506     		.2byte	0x6c5
 6908 0d30 0A090000 		.4byte	0x90a
 6909 0d34 6C000000 		.4byte	.LLST1
 6910 0d38 27       		.uleb128 0x27
 6911 0d39 B4150000 		.4byte	.LASF206
 6912 0d3d 01       		.byte	0x1
 6913 0d3e C606     		.2byte	0x6c6
 6914 0d40 590D0000 		.4byte	0xd59
 6915 0d44 8B000000 		.4byte	.LLST2
 6916 0d48 00       		.byte	0
 6917 0d49 18       		.uleb128 0x18
 6918 0d4a 0E0A0000 		.4byte	0xa0e
 6919 0d4e 0D       		.uleb128 0xd
 6920 0d4f 04       		.byte	0x4
 6921 0d50 540D0000 		.4byte	0xd54
 6922 0d54 18       		.uleb128 0x18
 6923 0d55 740C0000 		.4byte	0xc74
 6924 0d59 18       		.uleb128 0x18
 6925 0d5a 4E0D0000 		.4byte	0xd4e
 6926 0d5e 25       		.uleb128 0x25
 6927 0d5f 410C0000 		.4byte	.LASF208
 6928 0d63 01       		.byte	0x1
 6929 0d64 2C0E     		.2byte	0xe2c
 6930 0d66 AA080000 		.4byte	0x8aa
 6931 0d6a 00000000 		.4byte	.LFB109
 6932 0d6e 14000000 		.4byte	.LFE109-.LFB109
 6933 0d72 01       		.uleb128 0x1
 6934 0d73 9C       		.byte	0x9c
 6935 0d74 990D0000 		.4byte	0xd99
 6936 0d78 26       		.uleb128 0x26
 6937 0d79 9C110000 		.4byte	.LASF210
 6938 0d7d 01       		.byte	0x1
 6939 0d7e 2C0E     		.2byte	0xe2c
 6940 0d80 990D0000 		.4byte	0xd99
 6941 0d84 F7000000 		.4byte	.LLST3
 6942 0d88 27       		.uleb128 0x27
 6943 0d89 EC060000 		.4byte	.LASF211
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 227


 6944 0d8d 01       		.byte	0x1
 6945 0d8e 2E0E     		.2byte	0xe2e
 6946 0d90 C0080000 		.4byte	0x8c0
 6947 0d94 15010000 		.4byte	.LLST4
 6948 0d98 00       		.byte	0
 6949 0d99 0D       		.uleb128 0xd
 6950 0d9a 04       		.byte	0x4
 6951 0d9b 9F0D0000 		.4byte	0xd9f
 6952 0d9f 18       		.uleb128 0x18
 6953 0da0 9F080000 		.4byte	0x89f
 6954 0da4 28       		.uleb128 0x28
 6955 0da5 78050000 		.4byte	.LASF212
 6956 0da9 01       		.byte	0x1
 6957 0daa 920E     		.2byte	0xe92
 6958 0dac 00000000 		.4byte	.LFB112
 6959 0db0 2C000000 		.4byte	.LFE112-.LFB112
 6960 0db4 01       		.uleb128 0x1
 6961 0db5 9C       		.byte	0x9c
 6962 0db6 CB0D0000 		.4byte	0xdcb
 6963 0dba 27       		.uleb128 0x27
 6964 0dbb B4150000 		.4byte	.LASF206
 6965 0dbf 01       		.byte	0x1
 6966 0dc0 940E     		.2byte	0xe94
 6967 0dc2 CB0D0000 		.4byte	0xdcb
 6968 0dc6 43010000 		.4byte	.LLST5
 6969 0dca 00       		.byte	0
 6970 0dcb 0D       		.uleb128 0xd
 6971 0dcc 04       		.byte	0x4
 6972 0dcd 740C0000 		.4byte	0xc74
 6973 0dd1 28       		.uleb128 0x28
 6974 0dd2 94050000 		.4byte	.LASF213
 6975 0dd6 01       		.byte	0x1
 6976 0dd7 3703     		.2byte	0x337
 6977 0dd9 00000000 		.4byte	.LFB70
 6978 0ddd 00010000 		.4byte	.LFE70-.LFB70
 6979 0de1 01       		.uleb128 0x1
 6980 0de2 9C       		.byte	0x9c
 6981 0de3 080F0000 		.4byte	0xf08
 6982 0de7 26       		.uleb128 0x26
 6983 0de8 41010000 		.4byte	.LASF214
 6984 0dec 01       		.byte	0x1
 6985 0ded 3703     		.2byte	0x337
 6986 0def E3080000 		.4byte	0x8e3
 6987 0df3 56010000 		.4byte	.LLST6
 6988 0df7 26       		.uleb128 0x26
 6989 0df8 43040000 		.4byte	.LASF215
 6990 0dfc 01       		.byte	0x1
 6991 0dfd 3803     		.2byte	0x338
 6992 0dff F70A0000 		.4byte	0xaf7
 6993 0e03 82010000 		.4byte	.LLST7
 6994 0e07 26       		.uleb128 0x26
 6995 0e08 DB090000 		.4byte	.LASF216
 6996 0e0c 01       		.byte	0x1
 6997 0e0d 3903     		.2byte	0x339
 6998 0e0f 080F0000 		.4byte	0xf08
 6999 0e13 AE010000 		.4byte	.LLST8
 7000 0e17 26       		.uleb128 0x26
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 228


 7001 0e18 87130000 		.4byte	.LASF217
 7002 0e1c 01       		.byte	0x1
 7003 0e1d 3A03     		.2byte	0x33a
 7004 0e1f 0D0F0000 		.4byte	0xf0d
 7005 0e23 EB010000 		.4byte	.LLST9
 7006 0e27 26       		.uleb128 0x26
 7007 0e28 BA150000 		.4byte	.LASF186
 7008 0e2c 01       		.byte	0x1
 7009 0e2d 3B03     		.2byte	0x33b
 7010 0e2f 15090000 		.4byte	0x915
 7011 0e33 17020000 		.4byte	.LLST10
 7012 0e37 26       		.uleb128 0x26
 7013 0e38 F4070000 		.4byte	.LASF218
 7014 0e3c 01       		.byte	0x1
 7015 0e3d 3C03     		.2byte	0x33c
 7016 0e3f 180F0000 		.4byte	0xf18
 7017 0e43 36020000 		.4byte	.LLST11
 7018 0e47 26       		.uleb128 0x26
 7019 0e48 5F020000 		.4byte	.LASF219
 7020 0e4c 01       		.byte	0x1
 7021 0e4d 3D03     		.2byte	0x33d
 7022 0e4f CB0D0000 		.4byte	0xdcb
 7023 0e53 56020000 		.4byte	.LLST12
 7024 0e57 26       		.uleb128 0x26
 7025 0e58 FE130000 		.4byte	.LASF220
 7026 0e5c 01       		.byte	0x1
 7027 0e5d 3E03     		.2byte	0x33e
 7028 0e5f 280F0000 		.4byte	0xf28
 7029 0e63 76020000 		.4byte	.LLST13
 7030 0e67 27       		.uleb128 0x27
 7031 0e68 18060000 		.4byte	.LASF183
 7032 0e6c 01       		.byte	0x1
 7033 0e6d 4003     		.2byte	0x340
 7034 0e6f FC0A0000 		.4byte	0xafc
 7035 0e73 96020000 		.4byte	.LLST14
 7036 0e77 29       		.uleb128 0x29
 7037 0e78 7800     		.ascii	"x\000"
 7038 0e7a 01       		.byte	0x1
 7039 0e7b 4103     		.2byte	0x341
 7040 0e7d 15090000 		.4byte	0x915
 7041 0e81 A9020000 		.4byte	.LLST15
 7042 0e85 2A       		.uleb128 0x2a
 7043 0e86 1E000000 		.4byte	.LVL20
 7044 0e8a 502E0000 		.4byte	0x2e50
 7045 0e8e A10E0000 		.4byte	0xea1
 7046 0e92 2B       		.uleb128 0x2b
 7047 0e93 01       		.uleb128 0x1
 7048 0e94 51       		.byte	0x51
 7049 0e95 02       		.uleb128 0x2
 7050 0e96 08       		.byte	0x8
 7051 0e97 A5       		.byte	0xa5
 7052 0e98 2B       		.uleb128 0x2b
 7053 0e99 01       		.uleb128 0x1
 7054 0e9a 52       		.byte	0x52
 7055 0e9b 04       		.uleb128 0x4
 7056 0e9c 77       		.byte	0x77
 7057 0e9d 00       		.sleb128 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 229


 7058 0e9e 32       		.byte	0x32
 7059 0e9f 24       		.byte	0x24
 7060 0ea0 00       		.byte	0
 7061 0ea1 2A       		.uleb128 0x2a
 7062 0ea2 5E000000 		.4byte	.LVL28
 7063 0ea6 5B2E0000 		.4byte	0x2e5b
 7064 0eaa B50E0000 		.4byte	0xeb5
 7065 0eae 2B       		.uleb128 0x2b
 7066 0eaf 01       		.uleb128 0x1
 7067 0eb0 50       		.byte	0x50
 7068 0eb1 02       		.uleb128 0x2
 7069 0eb2 74       		.byte	0x74
 7070 0eb3 04       		.sleb128 4
 7071 0eb4 00       		.byte	0
 7072 0eb5 2A       		.uleb128 0x2a
 7073 0eb6 66000000 		.4byte	.LVL29
 7074 0eba 5B2E0000 		.4byte	0x2e5b
 7075 0ebe C90E0000 		.4byte	0xec9
 7076 0ec2 2B       		.uleb128 0x2b
 7077 0ec3 01       		.uleb128 0x1
 7078 0ec4 50       		.byte	0x50
 7079 0ec5 02       		.uleb128 0x2
 7080 0ec6 74       		.byte	0x74
 7081 0ec7 18       		.sleb128 24
 7082 0ec8 00       		.byte	0
 7083 0ec9 2A       		.uleb128 0x2a
 7084 0eca 88000000 		.4byte	.LVL31
 7085 0ece 672E0000 		.4byte	0x2e67
 7086 0ed2 EB0E0000 		.4byte	0xeeb
 7087 0ed6 2B       		.uleb128 0x2b
 7088 0ed7 01       		.uleb128 0x1
 7089 0ed8 50       		.byte	0x50
 7090 0ed9 03       		.uleb128 0x3
 7091 0eda 74       		.byte	0x74
 7092 0edb D800     		.sleb128 88
 7093 0edd 2B       		.uleb128 0x2b
 7094 0ede 01       		.uleb128 0x1
 7095 0edf 51       		.byte	0x51
 7096 0ee0 02       		.uleb128 0x2
 7097 0ee1 75       		.byte	0x75
 7098 0ee2 00       		.sleb128 0
 7099 0ee3 2B       		.uleb128 0x2b
 7100 0ee4 01       		.uleb128 0x1
 7101 0ee5 52       		.byte	0x52
 7102 0ee6 03       		.uleb128 0x3
 7103 0ee7 0A       		.byte	0xa
 7104 0ee8 2804     		.2byte	0x428
 7105 0eea 00       		.byte	0
 7106 0eeb 2C       		.uleb128 0x2c
 7107 0eec EA000000 		.4byte	.LVL32
 7108 0ef0 702E0000 		.4byte	0x2e70
 7109 0ef4 2B       		.uleb128 0x2b
 7110 0ef5 01       		.uleb128 0x1
 7111 0ef6 50       		.byte	0x50
 7112 0ef7 02       		.uleb128 0x2
 7113 0ef8 77       		.byte	0x77
 7114 0ef9 00       		.sleb128 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 230


 7115 0efa 2B       		.uleb128 0x2b
 7116 0efb 01       		.uleb128 0x1
 7117 0efc 51       		.byte	0x51
 7118 0efd 02       		.uleb128 0x2
 7119 0efe 79       		.byte	0x79
 7120 0eff 00       		.sleb128 0
 7121 0f00 2B       		.uleb128 0x2b
 7122 0f01 01       		.uleb128 0x1
 7123 0f02 52       		.byte	0x52
 7124 0f03 02       		.uleb128 0x2
 7125 0f04 7A       		.byte	0x7a
 7126 0f05 00       		.sleb128 0
 7127 0f06 00       		.byte	0
 7128 0f07 00       		.byte	0
 7129 0f08 18       		.uleb128 0x18
 7130 0f09 C0080000 		.4byte	0x8c0
 7131 0f0d 18       		.uleb128 0x18
 7132 0f0e 43010000 		.4byte	0x143
 7133 0f12 0D       		.uleb128 0xd
 7134 0f13 04       		.byte	0x4
 7135 0f14 0E0A0000 		.4byte	0xa0e
 7136 0f18 18       		.uleb128 0x18
 7137 0f19 120F0000 		.4byte	0xf12
 7138 0f1d 0D       		.uleb128 0xd
 7139 0f1e 04       		.byte	0x4
 7140 0f1f 230F0000 		.4byte	0xf23
 7141 0f23 18       		.uleb128 0x18
 7142 0f24 EC0A0000 		.4byte	0xaec
 7143 0f28 18       		.uleb128 0x18
 7144 0f29 1D0F0000 		.4byte	0xf1d
 7145 0f2d 28       		.uleb128 0x28
 7146 0f2e CD140000 		.4byte	.LASF221
 7147 0f32 01       		.byte	0x1
 7148 0f33 6C0D     		.2byte	0xd6c
 7149 0f35 00000000 		.4byte	.LFB105
 7150 0f39 58000000 		.4byte	.LFE105-.LFB105
 7151 0f3d 01       		.uleb128 0x1
 7152 0f3e 9C       		.byte	0x9c
 7153 0f3f D60F0000 		.4byte	0xfd6
 7154 0f43 27       		.uleb128 0x27
 7155 0f44 BA150000 		.4byte	.LASF186
 7156 0f48 01       		.byte	0x1
 7157 0f49 6E0D     		.2byte	0xd6e
 7158 0f4b 15090000 		.4byte	0x915
 7159 0f4f C8020000 		.4byte	.LLST16
 7160 0f53 2A       		.uleb128 0x2a
 7161 0f54 14000000 		.4byte	.LVL36
 7162 0f58 7B2E0000 		.4byte	0x2e7b
 7163 0f5c 740F0000 		.4byte	0xf74
 7164 0f60 2B       		.uleb128 0x2b
 7165 0f61 01       		.uleb128 0x1
 7166 0f62 50       		.byte	0x50
 7167 0f63 0F       		.uleb128 0xf
 7168 0f64 74       		.byte	0x74
 7169 0f65 00       		.sleb128 0
 7170 0f66 32       		.byte	0x32
 7171 0f67 24       		.byte	0x24
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 231


 7172 0f68 74       		.byte	0x74
 7173 0f69 00       		.sleb128 0
 7174 0f6a 22       		.byte	0x22
 7175 0f6b 32       		.byte	0x32
 7176 0f6c 24       		.byte	0x24
 7177 0f6d 03       		.byte	0x3
 7178 0f6e 30000000 		.4byte	.LANCHOR0+48
 7179 0f72 22       		.byte	0x22
 7180 0f73 00       		.byte	0
 7181 0f74 2A       		.uleb128 0x2a
 7182 0f75 26000000 		.4byte	.LVL39
 7183 0f79 7B2E0000 		.4byte	0x2e7b
 7184 0f7d 880F0000 		.4byte	0xf88
 7185 0f81 2B       		.uleb128 0x2b
 7186 0f82 01       		.uleb128 0x1
 7187 0f83 50       		.byte	0x50
 7188 0f84 02       		.uleb128 0x2
 7189 0f85 76       		.byte	0x76
 7190 0f86 00       		.sleb128 0
 7191 0f87 00       		.byte	0
 7192 0f88 2A       		.uleb128 0x2a
 7193 0f89 30000000 		.4byte	.LVL40
 7194 0f8d 7B2E0000 		.4byte	0x2e7b
 7195 0f91 9C0F0000 		.4byte	0xf9c
 7196 0f95 2B       		.uleb128 0x2b
 7197 0f96 01       		.uleb128 0x1
 7198 0f97 50       		.byte	0x50
 7199 0f98 02       		.uleb128 0x2
 7200 0f99 75       		.byte	0x75
 7201 0f9a 00       		.sleb128 0
 7202 0f9b 00       		.byte	0
 7203 0f9c 2A       		.uleb128 0x2a
 7204 0f9d 38000000 		.4byte	.LVL41
 7205 0fa1 7B2E0000 		.4byte	0x2e7b
 7206 0fa5 B00F0000 		.4byte	0xfb0
 7207 0fa9 2B       		.uleb128 0x2b
 7208 0faa 01       		.uleb128 0x1
 7209 0fab 50       		.byte	0x50
 7210 0fac 02       		.uleb128 0x2
 7211 0fad 74       		.byte	0x74
 7212 0fae 14       		.sleb128 20
 7213 0faf 00       		.byte	0
 7214 0fb0 2A       		.uleb128 0x2a
 7215 0fb1 40000000 		.4byte	.LVL42
 7216 0fb5 7B2E0000 		.4byte	0x2e7b
 7217 0fb9 C50F0000 		.4byte	0xfc5
 7218 0fbd 2B       		.uleb128 0x2b
 7219 0fbe 01       		.uleb128 0x1
 7220 0fbf 50       		.byte	0x50
 7221 0fc0 03       		.uleb128 0x3
 7222 0fc1 74       		.byte	0x74
 7223 0fc2 BC01     		.sleb128 188
 7224 0fc4 00       		.byte	0
 7225 0fc5 2C       		.uleb128 0x2c
 7226 0fc6 46000000 		.4byte	.LVL43
 7227 0fca 7B2E0000 		.4byte	0x2e7b
 7228 0fce 2B       		.uleb128 0x2b
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 232


 7229 0fcf 01       		.uleb128 0x1
 7230 0fd0 50       		.byte	0x50
 7231 0fd1 02       		.uleb128 0x2
 7232 0fd2 74       		.byte	0x74
 7233 0fd3 00       		.sleb128 0
 7234 0fd4 00       		.byte	0
 7235 0fd5 00       		.byte	0
 7236 0fd6 28       		.uleb128 0x28
 7237 0fd7 78030000 		.4byte	.LASF222
 7238 0fdb 01       		.byte	0x1
 7239 0fdc 0304     		.2byte	0x403
 7240 0fde 00000000 		.4byte	.LFB71
 7241 0fe2 AC000000 		.4byte	.LFE71-.LFB71
 7242 0fe6 01       		.uleb128 0x1
 7243 0fe7 9C       		.byte	0x9c
 7244 0fe8 2C100000 		.4byte	0x102c
 7245 0fec 26       		.uleb128 0x26
 7246 0fed 5F020000 		.4byte	.LASF219
 7247 0ff1 01       		.byte	0x1
 7248 0ff2 0304     		.2byte	0x403
 7249 0ff4 CB0D0000 		.4byte	0xdcb
 7250 0ff8 E7020000 		.4byte	.LLST17
 7251 0ffc 2D       		.uleb128 0x2d
 7252 0ffd 08000000 		.4byte	.LVL45
 7253 1001 872E0000 		.4byte	0x2e87
 7254 1005 2D       		.uleb128 0x2d
 7255 1006 2C000000 		.4byte	.LVL46
 7256 100a 2D0F0000 		.4byte	0xf2d
 7257 100e 2A       		.uleb128 0x2a
 7258 100f 7C000000 		.4byte	.LVL47
 7259 1013 922E0000 		.4byte	0x2e92
 7260 1017 22100000 		.4byte	0x1022
 7261 101b 2B       		.uleb128 0x2b
 7262 101c 01       		.uleb128 0x1
 7263 101d 51       		.byte	0x51
 7264 101e 02       		.uleb128 0x2
 7265 101f 75       		.byte	0x75
 7266 1020 04       		.sleb128 4
 7267 1021 00       		.byte	0
 7268 1022 2D       		.uleb128 0x2d
 7269 1023 80000000 		.4byte	.LVL48
 7270 1027 9E2E0000 		.4byte	0x2e9e
 7271 102b 00       		.byte	0
 7272 102c 28       		.uleb128 0x28
 7273 102d 020C0000 		.4byte	.LASF223
 7274 1031 01       		.byte	0x1
 7275 1032 5C0E     		.2byte	0xe5c
 7276 1034 00000000 		.4byte	.LFB111
 7277 1038 18000000 		.4byte	.LFE111-.LFB111
 7278 103c 01       		.uleb128 0x1
 7279 103d 9C       		.byte	0x9c
 7280 103e 81100000 		.4byte	0x1081
 7281 1042 26       		.uleb128 0x26
 7282 1043 B4150000 		.4byte	.LASF206
 7283 1047 01       		.byte	0x1
 7284 1048 5C0E     		.2byte	0xe5c
 7285 104a CB0D0000 		.4byte	0xdcb
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 233


 7286 104e 13030000 		.4byte	.LLST18
 7287 1052 2A       		.uleb128 0x2a
 7288 1053 0A000000 		.4byte	.LVL52
 7289 1057 A92E0000 		.4byte	0x2ea9
 7290 105b 67100000 		.4byte	0x1067
 7291 105f 2B       		.uleb128 0x2b
 7292 1060 01       		.uleb128 0x1
 7293 1061 50       		.byte	0x50
 7294 1062 03       		.uleb128 0x3
 7295 1063 74       		.byte	0x74
 7296 1064 D800     		.sleb128 88
 7297 1066 00       		.byte	0
 7298 1067 2D       		.uleb128 0x2d
 7299 1068 10000000 		.4byte	.LVL53
 7300 106c B52E0000 		.4byte	0x2eb5
 7301 1070 2C       		.uleb128 0x2c
 7302 1071 16000000 		.4byte	.LVL54
 7303 1075 B52E0000 		.4byte	0x2eb5
 7304 1079 2B       		.uleb128 0x2b
 7305 107a 01       		.uleb128 0x1
 7306 107b 50       		.byte	0x50
 7307 107c 02       		.uleb128 0x2
 7308 107d 74       		.byte	0x74
 7309 107e 00       		.sleb128 0
 7310 107f 00       		.byte	0
 7311 1080 00       		.byte	0
 7312 1081 28       		.uleb128 0x28
 7313 1082 40100000 		.4byte	.LASF224
 7314 1086 01       		.byte	0x1
 7315 1087 8C0D     		.2byte	0xd8c
 7316 1089 00000000 		.4byte	.LFB106
 7317 108d 44000000 		.4byte	.LFE106-.LFB106
 7318 1091 01       		.uleb128 0x1
 7319 1092 9C       		.byte	0x9c
 7320 1093 E8100000 		.4byte	0x10e8
 7321 1097 2E       		.uleb128 0x2e
 7322 1098 02000000 		.4byte	.LBB27
 7323 109c 3C000000 		.4byte	.LBE27-.LBB27
 7324 10a0 27       		.uleb128 0x27
 7325 10a1 B4150000 		.4byte	.LASF206
 7326 10a5 01       		.byte	0x1
 7327 10a6 930D     		.2byte	0xd93
 7328 10a8 CB0D0000 		.4byte	0xdcb
 7329 10ac 31030000 		.4byte	.LLST19
 7330 10b0 2D       		.uleb128 0x2d
 7331 10b1 08000000 		.4byte	.LVL55
 7332 10b5 872E0000 		.4byte	0x2e87
 7333 10b9 2A       		.uleb128 0x2a
 7334 10ba 16000000 		.4byte	.LVL57
 7335 10be C02E0000 		.4byte	0x2ec0
 7336 10c2 CD100000 		.4byte	0x10cd
 7337 10c6 2B       		.uleb128 0x2b
 7338 10c7 01       		.uleb128 0x1
 7339 10c8 50       		.byte	0x50
 7340 10c9 02       		.uleb128 0x2
 7341 10ca 75       		.byte	0x75
 7342 10cb 04       		.sleb128 4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 234


 7343 10cc 00       		.byte	0
 7344 10cd 2D       		.uleb128 0x2d
 7345 10ce 2E000000 		.4byte	.LVL58
 7346 10d2 9E2E0000 		.4byte	0x2e9e
 7347 10d6 2C       		.uleb128 0x2c
 7348 10d7 34000000 		.4byte	.LVL59
 7349 10db 2C100000 		.4byte	0x102c
 7350 10df 2B       		.uleb128 0x2b
 7351 10e0 01       		.uleb128 0x1
 7352 10e1 50       		.byte	0x50
 7353 10e2 02       		.uleb128 0x2
 7354 10e3 75       		.byte	0x75
 7355 10e4 00       		.sleb128 0
 7356 10e5 00       		.byte	0
 7357 10e6 00       		.byte	0
 7358 10e7 00       		.byte	0
 7359 10e8 2F       		.uleb128 0x2f
 7360 10e9 5A0A0000 		.4byte	.LASF225
 7361 10ed 01       		.byte	0x1
 7362 10ee 980C     		.2byte	0xc98
 7363 10f0 00000000 		.4byte	.LFB104
 7364 10f4 08000000 		.4byte	.LFE104-.LFB104
 7365 10f8 01       		.uleb128 0x1
 7366 10f9 9C       		.byte	0x9c
 7367 10fa 18110000 		.4byte	0x1118
 7368 10fe 26       		.uleb128 0x26
 7369 10ff 87130000 		.4byte	.LASF217
 7370 1103 01       		.byte	0x1
 7371 1104 980C     		.2byte	0xc98
 7372 1106 43010000 		.4byte	0x143
 7373 110a 44030000 		.4byte	.LLST20
 7374 110e 2D       		.uleb128 0x2d
 7375 110f 06000000 		.4byte	.LVL62
 7376 1113 81100000 		.4byte	0x1081
 7377 1117 00       		.byte	0
 7378 1118 28       		.uleb128 0x28
 7379 1119 B40F0000 		.4byte	.LASF226
 7380 111d 01       		.byte	0x1
 7381 111e 3013     		.2byte	0x1330
 7382 1120 00000000 		.4byte	.LFB128
 7383 1124 84000000 		.4byte	.LFE128-.LFB128
 7384 1128 01       		.uleb128 0x1
 7385 1129 9C       		.byte	0x9c
 7386 112a A1110000 		.4byte	0x11a1
 7387 112e 26       		.uleb128 0x26
 7388 112f 110D0000 		.4byte	.LASF227
 7389 1133 01       		.byte	0x1
 7390 1134 3013     		.2byte	0x1330
 7391 1136 20090000 		.4byte	0x920
 7392 113a 65030000 		.4byte	.LLST21
 7393 113e 26       		.uleb128 0x26
 7394 113f 6A000000 		.4byte	.LASF228
 7395 1143 01       		.byte	0x1
 7396 1144 3013     		.2byte	0x1330
 7397 1146 A1110000 		.4byte	0x11a1
 7398 114a 91030000 		.4byte	.LLST22
 7399 114e 27       		.uleb128 0x27
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 235


 7400 114f CE0B0000 		.4byte	.LASF229
 7401 1153 01       		.byte	0x1
 7402 1154 3213     		.2byte	0x1332
 7403 1156 20090000 		.4byte	0x920
 7404 115a BD030000 		.4byte	.LLST23
 7405 115e 27       		.uleb128 0x27
 7406 115f 880D0000 		.4byte	.LASF230
 7407 1163 01       		.byte	0x1
 7408 1164 3313     		.2byte	0x1333
 7409 1166 A6110000 		.4byte	0x11a6
 7410 116a D0030000 		.4byte	.LLST24
 7411 116e 2D       		.uleb128 0x2d
 7412 116f 16000000 		.4byte	.LVL66
 7413 1173 C02E0000 		.4byte	0x2ec0
 7414 1177 2A       		.uleb128 0x2a
 7415 1178 46000000 		.4byte	.LVL67
 7416 117c 922E0000 		.4byte	0x2e92
 7417 1180 8E110000 		.4byte	0x118e
 7418 1184 2B       		.uleb128 0x2b
 7419 1185 01       		.uleb128 0x1
 7420 1186 50       		.byte	0x50
 7421 1187 05       		.uleb128 0x5
 7422 1188 03       		.byte	0x3
 7423 1189 00000000 		.4byte	.LANCHOR0
 7424 118d 00       		.byte	0
 7425 118e 2D       		.uleb128 0x2d
 7426 118f 66000000 		.4byte	.LVL70
 7427 1193 CC2E0000 		.4byte	0x2ecc
 7428 1197 2D       		.uleb128 0x2d
 7429 1198 76000000 		.4byte	.LVL73
 7430 119c CC2E0000 		.4byte	0x2ecc
 7431 11a0 00       		.byte	0
 7432 11a1 18       		.uleb128 0x18
 7433 11a2 0A090000 		.4byte	0x90a
 7434 11a6 18       		.uleb128 0x18
 7435 11a7 20090000 		.4byte	0x920
 7436 11ab 25       		.uleb128 0x25
 7437 11ac 700A0000 		.4byte	.LASF231
 7438 11b0 01       		.byte	0x1
 7439 11b1 2510     		.2byte	0x1025
 7440 11b3 45010000 		.4byte	0x145
 7441 11b7 00000000 		.4byte	.LFB117
 7442 11bb 22000000 		.4byte	.LFE117-.LFB117
 7443 11bf 01       		.uleb128 0x1
 7444 11c0 9C       		.byte	0x9c
 7445 11c1 1F120000 		.4byte	0x121f
 7446 11c5 26       		.uleb128 0x26
 7447 11c6 FE100000 		.4byte	.LASF232
 7448 11ca 01       		.byte	0x1
 7449 11cb 2510     		.2byte	0x1025
 7450 11cd 45010000 		.4byte	0x145
 7451 11d1 E3030000 		.4byte	.LLST25
 7452 11d5 26       		.uleb128 0x26
 7453 11d6 6C0E0000 		.4byte	.LASF173
 7454 11da 01       		.byte	0x1
 7455 11db 2510     		.2byte	0x1025
 7456 11dd B9050000 		.4byte	0x5b9
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 236


 7457 11e1 01040000 		.4byte	.LLST26
 7458 11e5 29       		.uleb128 0x29
 7459 11e6 7800     		.ascii	"x\000"
 7460 11e8 01       		.byte	0x1
 7461 11e9 2710     		.2byte	0x1027
 7462 11eb 25000000 		.4byte	0x25
 7463 11ef 22040000 		.4byte	.LLST27
 7464 11f3 2A       		.uleb128 0x2a
 7465 11f4 08000000 		.4byte	.LVL76
 7466 11f8 D82E0000 		.4byte	0x2ed8
 7467 11fc 0E120000 		.4byte	0x120e
 7468 1200 2B       		.uleb128 0x2b
 7469 1201 01       		.uleb128 0x1
 7470 1202 50       		.byte	0x50
 7471 1203 02       		.uleb128 0x2
 7472 1204 74       		.byte	0x74
 7473 1205 00       		.sleb128 0
 7474 1206 2B       		.uleb128 0x2b
 7475 1207 01       		.uleb128 0x1
 7476 1208 51       		.byte	0x51
 7477 1209 03       		.uleb128 0x3
 7478 120a F3       		.byte	0xf3
 7479 120b 01       		.uleb128 0x1
 7480 120c 51       		.byte	0x51
 7481 120d 00       		.byte	0
 7482 120e 2C       		.uleb128 0x2c
 7483 120f 0E000000 		.4byte	.LVL77
 7484 1213 E32E0000 		.4byte	0x2ee3
 7485 1217 2B       		.uleb128 0x2b
 7486 1218 01       		.uleb128 0x1
 7487 1219 50       		.byte	0x50
 7488 121a 02       		.uleb128 0x2
 7489 121b 74       		.byte	0x74
 7490 121c 00       		.sleb128 0
 7491 121d 00       		.byte	0
 7492 121e 00       		.byte	0
 7493 121f 30       		.uleb128 0x30
 7494 1220 350D0000 		.4byte	.LASF235
 7495 1224 01       		.byte	0x1
 7496 1225 DC02     		.2byte	0x2dc
 7497 1227 0A090000 		.4byte	0x90a
 7498 122b 00000000 		.4byte	.LFB69
 7499 122f 64000000 		.4byte	.LFE69-.LFB69
 7500 1233 01       		.uleb128 0x1
 7501 1234 9C       		.byte	0x9c
 7502 1235 64130000 		.4byte	0x1364
 7503 1239 26       		.uleb128 0x26
 7504 123a 41010000 		.4byte	.LASF214
 7505 123e 01       		.byte	0x1
 7506 123f DC02     		.2byte	0x2dc
 7507 1241 E3080000 		.4byte	0x8e3
 7508 1245 35040000 		.4byte	.LLST28
 7509 1249 26       		.uleb128 0x26
 7510 124a 43040000 		.4byte	.LASF215
 7511 124e 01       		.byte	0x1
 7512 124f DD02     		.2byte	0x2dd
 7513 1251 F70A0000 		.4byte	0xaf7
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 237


 7514 1255 53040000 		.4byte	.LLST29
 7515 1259 26       		.uleb128 0x26
 7516 125a 57000000 		.4byte	.LASF233
 7517 125e 01       		.byte	0x1
 7518 125f DE02     		.2byte	0x2de
 7519 1261 64130000 		.4byte	0x1364
 7520 1265 71040000 		.4byte	.LLST30
 7521 1269 26       		.uleb128 0x26
 7522 126a 87130000 		.4byte	.LASF217
 7523 126e 01       		.byte	0x1
 7524 126f DF02     		.2byte	0x2df
 7525 1271 0D0F0000 		.4byte	0xf0d
 7526 1275 92040000 		.4byte	.LLST31
 7527 1279 31       		.uleb128 0x31
 7528 127a BA150000 		.4byte	.LASF186
 7529 127e 01       		.byte	0x1
 7530 127f E002     		.2byte	0x2e0
 7531 1281 15090000 		.4byte	0x915
 7532 1285 02       		.uleb128 0x2
 7533 1286 91       		.byte	0x91
 7534 1287 00       		.sleb128 0
 7535 1288 31       		.uleb128 0x31
 7536 1289 F4070000 		.4byte	.LASF218
 7537 128d 01       		.byte	0x1
 7538 128e E102     		.2byte	0x2e1
 7539 1290 180F0000 		.4byte	0xf18
 7540 1294 02       		.uleb128 0x2
 7541 1295 91       		.byte	0x91
 7542 1296 04       		.sleb128 4
 7543 1297 27       		.uleb128 0x27
 7544 1298 5F020000 		.4byte	.LASF219
 7545 129c 01       		.byte	0x1
 7546 129d E302     		.2byte	0x2e3
 7547 129f CB0D0000 		.4byte	0xdcb
 7548 12a3 B0040000 		.4byte	.LLST32
 7549 12a7 27       		.uleb128 0x27
 7550 12a8 4A050000 		.4byte	.LASF205
 7551 12ac 01       		.byte	0x1
 7552 12ad E402     		.2byte	0x2e4
 7553 12af 0A090000 		.4byte	0x90a
 7554 12b3 D9040000 		.4byte	.LLST33
 7555 12b7 32       		.uleb128 0x32
 7556 12b8 0E000000 		.4byte	.LBB28
 7557 12bc 26000000 		.4byte	.LBE28-.LBB28
 7558 12c0 10130000 		.4byte	0x1310
 7559 12c4 27       		.uleb128 0x27
 7560 12c5 B3010000 		.4byte	.LASF187
 7561 12c9 01       		.byte	0x1
 7562 12ca 0103     		.2byte	0x301
 7563 12cc FC0A0000 		.4byte	0xafc
 7564 12d0 F8040000 		.4byte	.LLST34
 7565 12d4 2A       		.uleb128 0x2a
 7566 12d5 14000000 		.4byte	.LVL82
 7567 12d9 EE2E0000 		.4byte	0x2eee
 7568 12dd EA120000 		.4byte	0x12ea
 7569 12e1 2B       		.uleb128 0x2b
 7570 12e2 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 238


 7571 12e3 50       		.byte	0x50
 7572 12e4 04       		.uleb128 0x4
 7573 12e5 75       		.byte	0x75
 7574 12e6 00       		.sleb128 0
 7575 12e7 32       		.byte	0x32
 7576 12e8 24       		.byte	0x24
 7577 12e9 00       		.byte	0
 7578 12ea 2A       		.uleb128 0x2a
 7579 12eb 20000000 		.4byte	.LVL84
 7580 12ef EE2E0000 		.4byte	0x2eee
 7581 12f3 FF120000 		.4byte	0x12ff
 7582 12f7 2B       		.uleb128 0x2b
 7583 12f8 01       		.uleb128 0x1
 7584 12f9 50       		.byte	0x50
 7585 12fa 03       		.uleb128 0x3
 7586 12fb 0A       		.byte	0xa
 7587 12fc 8804     		.2byte	0x488
 7588 12fe 00       		.byte	0
 7589 12ff 2C       		.uleb128 0x2c
 7590 1300 30000000 		.4byte	.LVL86
 7591 1304 B52E0000 		.4byte	0x2eb5
 7592 1308 2B       		.uleb128 0x2b
 7593 1309 01       		.uleb128 0x1
 7594 130a 50       		.byte	0x50
 7595 130b 02       		.uleb128 0x2
 7596 130c 79       		.byte	0x79
 7597 130d 00       		.sleb128 0
 7598 130e 00       		.byte	0
 7599 130f 00       		.byte	0
 7600 1310 2A       		.uleb128 0x2a
 7601 1311 50000000 		.4byte	.LVL89
 7602 1315 D10D0000 		.4byte	0xdd1
 7603 1319 53130000 		.4byte	0x1353
 7604 131d 2B       		.uleb128 0x2b
 7605 131e 01       		.uleb128 0x1
 7606 131f 50       		.byte	0x50
 7607 1320 02       		.uleb128 0x2
 7608 1321 76       		.byte	0x76
 7609 1322 00       		.sleb128 0
 7610 1323 2B       		.uleb128 0x2b
 7611 1324 01       		.uleb128 0x1
 7612 1325 51       		.byte	0x51
 7613 1326 02       		.uleb128 0x2
 7614 1327 77       		.byte	0x77
 7615 1328 00       		.sleb128 0
 7616 1329 2B       		.uleb128 0x2b
 7617 132a 01       		.uleb128 0x1
 7618 132b 52       		.byte	0x52
 7619 132c 02       		.uleb128 0x2
 7620 132d 75       		.byte	0x75
 7621 132e 00       		.sleb128 0
 7622 132f 2B       		.uleb128 0x2b
 7623 1330 01       		.uleb128 0x1
 7624 1331 53       		.byte	0x53
 7625 1332 02       		.uleb128 0x2
 7626 1333 78       		.byte	0x78
 7627 1334 00       		.sleb128 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 239


 7628 1335 2B       		.uleb128 0x2b
 7629 1336 02       		.uleb128 0x2
 7630 1337 7D       		.byte	0x7d
 7631 1338 00       		.sleb128 0
 7632 1339 03       		.uleb128 0x3
 7633 133a 91       		.byte	0x91
 7634 133b 00       		.sleb128 0
 7635 133c 06       		.byte	0x6
 7636 133d 2B       		.uleb128 0x2b
 7637 133e 02       		.uleb128 0x2
 7638 133f 7D       		.byte	0x7d
 7639 1340 04       		.sleb128 4
 7640 1341 03       		.uleb128 0x3
 7641 1342 91       		.byte	0x91
 7642 1343 04       		.sleb128 4
 7643 1344 06       		.byte	0x6
 7644 1345 2B       		.uleb128 0x2b
 7645 1346 02       		.uleb128 0x2
 7646 1347 7D       		.byte	0x7d
 7647 1348 08       		.sleb128 8
 7648 1349 02       		.uleb128 0x2
 7649 134a 74       		.byte	0x74
 7650 134b 00       		.sleb128 0
 7651 134c 2B       		.uleb128 0x2b
 7652 134d 02       		.uleb128 0x2
 7653 134e 7D       		.byte	0x7d
 7654 134f 0C       		.sleb128 12
 7655 1350 01       		.uleb128 0x1
 7656 1351 30       		.byte	0x30
 7657 1352 00       		.byte	0
 7658 1353 2C       		.uleb128 0x2c
 7659 1354 56000000 		.4byte	.LVL90
 7660 1358 D60F0000 		.4byte	0xfd6
 7661 135c 2B       		.uleb128 0x2b
 7662 135d 01       		.uleb128 0x1
 7663 135e 50       		.byte	0x50
 7664 135f 02       		.uleb128 0x2
 7665 1360 74       		.byte	0x74
 7666 1361 00       		.sleb128 0
 7667 1362 00       		.byte	0
 7668 1363 00       		.byte	0
 7669 1364 18       		.uleb128 0x18
 7670 1365 AA080000 		.4byte	0x8aa
 7671 1369 33       		.uleb128 0x33
 7672 136a E0060000 		.4byte	.LASF243
 7673 136e 01       		.byte	0x1
 7674 136f 5804     		.2byte	0x458
 7675 1371 00000000 		.4byte	.LFB72
 7676 1375 BC000000 		.4byte	.LFE72-.LFB72
 7677 1379 01       		.uleb128 0x1
 7678 137a 9C       		.byte	0x9c
 7679 137b 12140000 		.4byte	0x1412
 7680 137f 26       		.uleb128 0x26
 7681 1380 1C0E0000 		.4byte	.LASF234
 7682 1384 01       		.byte	0x1
 7683 1385 5804     		.2byte	0x458
 7684 1387 0E0A0000 		.4byte	0xa0e
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 240


 7685 138b 21050000 		.4byte	.LLST35
 7686 138f 27       		.uleb128 0x27
 7687 1390 B4150000 		.4byte	.LASF206
 7688 1394 01       		.byte	0x1
 7689 1395 5A04     		.2byte	0x45a
 7690 1397 CB0D0000 		.4byte	0xdcb
 7691 139b 3F050000 		.4byte	.LLST36
 7692 139f 2D       		.uleb128 0x2d
 7693 13a0 08000000 		.4byte	.LVL94
 7694 13a4 872E0000 		.4byte	0x2e87
 7695 13a8 2A       		.uleb128 0x2a
 7696 13a9 18000000 		.4byte	.LVL96
 7697 13ad C02E0000 		.4byte	0x2ec0
 7698 13b1 BC130000 		.4byte	0x13bc
 7699 13b5 2B       		.uleb128 0x2b
 7700 13b6 01       		.uleb128 0x1
 7701 13b7 50       		.byte	0x50
 7702 13b8 02       		.uleb128 0x2
 7703 13b9 75       		.byte	0x75
 7704 13ba 00       		.sleb128 0
 7705 13bb 00       		.byte	0
 7706 13bc 2A       		.uleb128 0x2a
 7707 13bd 48000000 		.4byte	.LVL97
 7708 13c1 C02E0000 		.4byte	0x2ec0
 7709 13c5 D0130000 		.4byte	0x13d0
 7710 13c9 2B       		.uleb128 0x2b
 7711 13ca 01       		.uleb128 0x1
 7712 13cb 50       		.byte	0x50
 7713 13cc 02       		.uleb128 0x2
 7714 13cd 74       		.byte	0x74
 7715 13ce 18       		.sleb128 24
 7716 13cf 00       		.byte	0
 7717 13d0 2A       		.uleb128 0x2a
 7718 13d1 68000000 		.4byte	.LVL98
 7719 13d5 922E0000 		.4byte	0x2e92
 7720 13d9 EB130000 		.4byte	0x13eb
 7721 13dd 2B       		.uleb128 0x2b
 7722 13de 01       		.uleb128 0x1
 7723 13df 50       		.byte	0x50
 7724 13e0 03       		.uleb128 0x3
 7725 13e1 76       		.byte	0x76
 7726 13e2 BC01     		.sleb128 188
 7727 13e4 2B       		.uleb128 0x2b
 7728 13e5 01       		.uleb128 0x1
 7729 13e6 51       		.byte	0x51
 7730 13e7 02       		.uleb128 0x2
 7731 13e8 75       		.byte	0x75
 7732 13e9 00       		.sleb128 0
 7733 13ea 00       		.byte	0
 7734 13eb 2A       		.uleb128 0x2a
 7735 13ec 86000000 		.4byte	.LVL99
 7736 13f0 2C100000 		.4byte	0x102c
 7737 13f4 FF130000 		.4byte	0x13ff
 7738 13f8 2B       		.uleb128 0x2b
 7739 13f9 01       		.uleb128 0x1
 7740 13fa 50       		.byte	0x50
 7741 13fb 02       		.uleb128 0x2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 241


 7742 13fc 74       		.byte	0x74
 7743 13fd 00       		.sleb128 0
 7744 13fe 00       		.byte	0
 7745 13ff 2D       		.uleb128 0x2d
 7746 1400 8A000000 		.4byte	.LVL100
 7747 1404 A40D0000 		.4byte	0xda4
 7748 1408 2D       		.uleb128 0x2d
 7749 1409 8E000000 		.4byte	.LVL101
 7750 140d 9E2E0000 		.4byte	0x2e9e
 7751 1411 00       		.byte	0
 7752 1412 30       		.uleb128 0x30
 7753 1413 6F100000 		.4byte	.LASF236
 7754 1417 01       		.byte	0x1
 7755 1418 3505     		.2byte	0x535
 7756 141a 4A0A0000 		.4byte	0xa4a
 7757 141e 00000000 		.4byte	.LFB75
 7758 1422 64000000 		.4byte	.LFE75-.LFB75
 7759 1426 01       		.uleb128 0x1
 7760 1427 9C       		.byte	0x9c
 7761 1428 7D140000 		.4byte	0x147d
 7762 142c 26       		.uleb128 0x26
 7763 142d 49020000 		.4byte	.LASF209
 7764 1431 01       		.byte	0x1
 7765 1432 3505     		.2byte	0x535
 7766 1434 0E0A0000 		.4byte	0xa0e
 7767 1438 52050000 		.4byte	.LLST37
 7768 143c 34       		.uleb128 0x34
 7769 143d 68150000 		.4byte	.LASF237
 7770 1441 01       		.byte	0x1
 7771 1442 3705     		.2byte	0x537
 7772 1444 4A0A0000 		.4byte	0xa4a
 7773 1448 01       		.uleb128 0x1
 7774 1449 50       		.byte	0x50
 7775 144a 27       		.uleb128 0x27
 7776 144b 38080000 		.4byte	.LASF238
 7777 144f 01       		.byte	0x1
 7778 1450 3805     		.2byte	0x538
 7779 1452 7D140000 		.4byte	0x147d
 7780 1456 A2050000 		.4byte	.LLST38
 7781 145a 27       		.uleb128 0x27
 7782 145b B4150000 		.4byte	.LASF206
 7783 145f 01       		.byte	0x1
 7784 1460 3905     		.2byte	0x539
 7785 1462 590D0000 		.4byte	0xd59
 7786 1466 C0050000 		.4byte	.LLST39
 7787 146a 2D       		.uleb128 0x2d
 7788 146b 12000000 		.4byte	.LVL105
 7789 146f 872E0000 		.4byte	0x2e87
 7790 1473 2D       		.uleb128 0x2d
 7791 1474 18000000 		.4byte	.LVL107
 7792 1478 9E2E0000 		.4byte	0x2e9e
 7793 147c 00       		.byte	0
 7794 147d 0D       		.uleb128 0xd
 7795 147e 04       		.byte	0x4
 7796 147f 030A0000 		.4byte	0xa03
 7797 1483 30       		.uleb128 0x30
 7798 1484 D20D0000 		.4byte	.LASF239
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 242


 7799 1488 01       		.byte	0x1
 7800 1489 7C05     		.2byte	0x57c
 7801 148b 15090000 		.4byte	0x915
 7802 148f 00000000 		.4byte	.LFB76
 7803 1493 20000000 		.4byte	.LFE76-.LFB76
 7804 1497 01       		.uleb128 0x1
 7805 1498 9C       		.byte	0x9c
 7806 1499 E0140000 		.4byte	0x14e0
 7807 149d 26       		.uleb128 0x26
 7808 149e 49020000 		.4byte	.LASF209
 7809 14a2 01       		.byte	0x1
 7810 14a3 7C05     		.2byte	0x57c
 7811 14a5 0E0A0000 		.4byte	0xa0e
 7812 14a9 10060000 		.4byte	.LLST40
 7813 14ad 27       		.uleb128 0x27
 7814 14ae B4150000 		.4byte	.LASF206
 7815 14b2 01       		.byte	0x1
 7816 14b3 7E05     		.2byte	0x57e
 7817 14b5 CB0D0000 		.4byte	0xdcb
 7818 14b9 2E060000 		.4byte	.LLST41
 7819 14bd 27       		.uleb128 0x27
 7820 14be 4F020000 		.4byte	.LASF240
 7821 14c2 01       		.byte	0x1
 7822 14c3 7F05     		.2byte	0x57f
 7823 14c5 15090000 		.4byte	0x915
 7824 14c9 41060000 		.4byte	.LLST42
 7825 14cd 2D       		.uleb128 0x2d
 7826 14ce 08000000 		.4byte	.LVL119
 7827 14d2 872E0000 		.4byte	0x2e87
 7828 14d6 2D       		.uleb128 0x2d
 7829 14d7 16000000 		.4byte	.LVL122
 7830 14db 9E2E0000 		.4byte	0x2e9e
 7831 14df 00       		.byte	0
 7832 14e0 30       		.uleb128 0x30
 7833 14e1 C6130000 		.4byte	.LASF241
 7834 14e5 01       		.byte	0x1
 7835 14e6 9205     		.2byte	0x592
 7836 14e8 15090000 		.4byte	0x915
 7837 14ec 00000000 		.4byte	.LFB77
 7838 14f0 28000000 		.4byte	.LFE77-.LFB77
 7839 14f4 01       		.uleb128 0x1
 7840 14f5 9C       		.byte	0x9c
 7841 14f6 78150000 		.4byte	0x1578
 7842 14fa 26       		.uleb128 0x26
 7843 14fb 49020000 		.4byte	.LASF209
 7844 14ff 01       		.byte	0x1
 7845 1500 9205     		.2byte	0x592
 7846 1502 0E0A0000 		.4byte	0xa0e
 7847 1506 5F060000 		.4byte	.LLST43
 7848 150a 27       		.uleb128 0x27
 7849 150b B4150000 		.4byte	.LASF206
 7850 150f 01       		.byte	0x1
 7851 1510 9405     		.2byte	0x594
 7852 1512 CB0D0000 		.4byte	0xdcb
 7853 1516 72060000 		.4byte	.LLST44
 7854 151a 34       		.uleb128 0x34
 7855 151b 4F020000 		.4byte	.LASF240
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 243


 7856 151f 01       		.byte	0x1
 7857 1520 9505     		.2byte	0x595
 7858 1522 15090000 		.4byte	0x915
 7859 1526 01       		.uleb128 0x1
 7860 1527 50       		.byte	0x50
 7861 1528 35       		.uleb128 0x35
 7862 1529 B30C0000 		.4byte	.LASF242
 7863 152d 01       		.byte	0x1
 7864 152e 9505     		.2byte	0x595
 7865 1530 15090000 		.4byte	0x915
 7866 1534 36       		.uleb128 0x36
 7867 1535 800C0000 		.4byte	0xc80
 7868 1539 00000000 		.4byte	.LBB29
 7869 153d 14000000 		.4byte	.LBE29-.LBB29
 7870 1541 01       		.byte	0x1
 7871 1542 A905     		.2byte	0x5a9
 7872 1544 5D150000 		.4byte	0x155d
 7873 1548 2E       		.uleb128 0x2e
 7874 1549 00000000 		.4byte	.LBB30
 7875 154d 14000000 		.4byte	.LBE30-.LBB30
 7876 1551 37       		.uleb128 0x37
 7877 1552 900C0000 		.4byte	0xc90
 7878 1556 37       		.uleb128 0x37
 7879 1557 9B0C0000 		.4byte	0xc9b
 7880 155b 00       		.byte	0
 7881 155c 00       		.byte	0
 7882 155d 38       		.uleb128 0x38
 7883 155e A70C0000 		.4byte	0xca7
 7884 1562 1E000000 		.4byte	.LBB31
 7885 1566 04000000 		.4byte	.LBE31-.LBB31
 7886 156a 01       		.byte	0x1
 7887 156b B005     		.2byte	0x5b0
 7888 156d 39       		.uleb128 0x39
 7889 156e B30C0000 		.4byte	0xcb3
 7890 1572 85060000 		.4byte	.LLST45
 7891 1576 00       		.byte	0
 7892 1577 00       		.byte	0
 7893 1578 33       		.uleb128 0x33
 7894 1579 80080000 		.4byte	.LASF244
 7895 157d 01       		.byte	0x1
 7896 157e BA05     		.2byte	0x5ba
 7897 1580 00000000 		.4byte	.LFB78
 7898 1584 E8000000 		.4byte	.LFE78-.LFB78
 7899 1588 01       		.uleb128 0x1
 7900 1589 9C       		.byte	0x9c
 7901 158a 29160000 		.4byte	0x1629
 7902 158e 26       		.uleb128 0x26
 7903 158f 49020000 		.4byte	.LASF209
 7904 1593 01       		.byte	0x1
 7905 1594 BA05     		.2byte	0x5ba
 7906 1596 0E0A0000 		.4byte	0xa0e
 7907 159a 98060000 		.4byte	.LLST46
 7908 159e 26       		.uleb128 0x26
 7909 159f 67120000 		.4byte	.LASF245
 7910 15a3 01       		.byte	0x1
 7911 15a4 BA05     		.2byte	0x5ba
 7912 15a6 15090000 		.4byte	0x915
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 244


 7913 15aa B6060000 		.4byte	.LLST47
 7914 15ae 27       		.uleb128 0x27
 7915 15af B4150000 		.4byte	.LASF206
 7916 15b3 01       		.byte	0x1
 7917 15b4 BC05     		.2byte	0x5bc
 7918 15b6 CB0D0000 		.4byte	0xdcb
 7919 15ba E1060000 		.4byte	.LLST48
 7920 15be 27       		.uleb128 0x27
 7921 15bf C0020000 		.4byte	.LASF246
 7922 15c3 01       		.byte	0x1
 7923 15c4 BD05     		.2byte	0x5bd
 7924 15c6 15090000 		.4byte	0x915
 7925 15ca F4060000 		.4byte	.LLST49
 7926 15ce 27       		.uleb128 0x27
 7927 15cf 62090000 		.4byte	.LASF247
 7928 15d3 01       		.byte	0x1
 7929 15d4 BD05     		.2byte	0x5bd
 7930 15d6 15090000 		.4byte	0x915
 7931 15da 07070000 		.4byte	.LLST50
 7932 15de 27       		.uleb128 0x27
 7933 15df B50A0000 		.4byte	.LASF248
 7934 15e3 01       		.byte	0x1
 7935 15e4 BE05     		.2byte	0x5be
 7936 15e6 0A090000 		.4byte	0x90a
 7937 15ea 1A070000 		.4byte	.LLST51
 7938 15ee 2D       		.uleb128 0x2d
 7939 15ef 10000000 		.4byte	.LVL131
 7940 15f3 872E0000 		.4byte	0x2e87
 7941 15f7 2A       		.uleb128 0x2a
 7942 15f8 88000000 		.4byte	.LVL138
 7943 15fc C02E0000 		.4byte	0x2ec0
 7944 1600 0B160000 		.4byte	0x160b
 7945 1604 2B       		.uleb128 0x2b
 7946 1605 01       		.uleb128 0x1
 7947 1606 50       		.byte	0x50
 7948 1607 02       		.uleb128 0x2
 7949 1608 75       		.byte	0x75
 7950 1609 00       		.sleb128 0
 7951 160a 00       		.byte	0
 7952 160b 2A       		.uleb128 0x2a
 7953 160c C2000000 		.4byte	.LVL140
 7954 1610 922E0000 		.4byte	0x2e92
 7955 1614 1F160000 		.4byte	0x161f
 7956 1618 2B       		.uleb128 0x2b
 7957 1619 01       		.uleb128 0x1
 7958 161a 51       		.byte	0x51
 7959 161b 02       		.uleb128 0x2
 7960 161c 75       		.byte	0x75
 7961 161d 00       		.sleb128 0
 7962 161e 00       		.byte	0
 7963 161f 2D       		.uleb128 0x2d
 7964 1620 D8000000 		.4byte	.LVL142
 7965 1624 9E2E0000 		.4byte	0x2e9e
 7966 1628 00       		.byte	0
 7967 1629 33       		.uleb128 0x33
 7968 162a BB010000 		.4byte	.LASF249
 7969 162e 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 245


 7970 162f F106     		.2byte	0x6f1
 7971 1631 00000000 		.4byte	.LFB81
 7972 1635 78000000 		.4byte	.LFE81-.LFB81
 7973 1639 01       		.uleb128 0x1
 7974 163a 9C       		.byte	0x9c
 7975 163b AE160000 		.4byte	0x16ae
 7976 163f 26       		.uleb128 0x26
 7977 1640 20080000 		.4byte	.LASF250
 7978 1644 01       		.byte	0x1
 7979 1645 F106     		.2byte	0x6f1
 7980 1647 0E0A0000 		.4byte	0xa0e
 7981 164b 39070000 		.4byte	.LLST52
 7982 164f 27       		.uleb128 0x27
 7983 1650 B4150000 		.4byte	.LASF206
 7984 1654 01       		.byte	0x1
 7985 1655 F306     		.2byte	0x6f3
 7986 1657 AE160000 		.4byte	0x16ae
 7987 165b 39070000 		.4byte	.LLST52
 7988 165f 2D       		.uleb128 0x2d
 7989 1660 14000000 		.4byte	.LVL145
 7990 1664 872E0000 		.4byte	0x2e87
 7991 1668 2A       		.uleb128 0x2a
 7992 1669 1A000000 		.4byte	.LVL146
 7993 166d FE0C0000 		.4byte	0xcfe
 7994 1671 7C160000 		.4byte	0x167c
 7995 1675 2B       		.uleb128 0x2b
 7996 1676 01       		.uleb128 0x1
 7997 1677 50       		.byte	0x50
 7998 1678 02       		.uleb128 0x2
 7999 1679 74       		.byte	0x74
 8000 167a 00       		.sleb128 0
 8001 167b 00       		.byte	0
 8002 167c 2A       		.uleb128 0x2a
 8003 167d 24000000 		.4byte	.LVL147
 8004 1681 C02E0000 		.4byte	0x2ec0
 8005 1685 90160000 		.4byte	0x1690
 8006 1689 2B       		.uleb128 0x2b
 8007 168a 01       		.uleb128 0x1
 8008 168b 50       		.byte	0x50
 8009 168c 02       		.uleb128 0x2
 8010 168d 76       		.byte	0x76
 8011 168e 00       		.sleb128 0
 8012 168f 00       		.byte	0
 8013 1690 2A       		.uleb128 0x2a
 8014 1691 4A000000 		.4byte	.LVL148
 8015 1695 922E0000 		.4byte	0x2e92
 8016 1699 A4160000 		.4byte	0x16a4
 8017 169d 2B       		.uleb128 0x2b
 8018 169e 01       		.uleb128 0x1
 8019 169f 51       		.byte	0x51
 8020 16a0 02       		.uleb128 0x2
 8021 16a1 76       		.byte	0x76
 8022 16a2 00       		.sleb128 0
 8023 16a3 00       		.byte	0
 8024 16a4 2D       		.uleb128 0x2d
 8025 16a5 6A000000 		.4byte	.LVL149
 8026 16a9 9E2E0000 		.4byte	0x2e9e
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 246


 8027 16ad 00       		.byte	0
 8028 16ae 18       		.uleb128 0x18
 8029 16af CB0D0000 		.4byte	0xdcb
 8030 16b3 30       		.uleb128 0x30
 8031 16b4 1F070000 		.4byte	.LASF251
 8032 16b8 01       		.byte	0x1
 8033 16b9 2707     		.2byte	0x727
 8034 16bb 0A090000 		.4byte	0x90a
 8035 16bf 00000000 		.4byte	.LFB82
 8036 16c3 88000000 		.4byte	.LFE82-.LFB82
 8037 16c7 01       		.uleb128 0x1
 8038 16c8 9C       		.byte	0x9c
 8039 16c9 A6170000 		.4byte	0x17a6
 8040 16cd 26       		.uleb128 0x26
 8041 16ce 20080000 		.4byte	.LASF250
 8042 16d2 01       		.byte	0x1
 8043 16d3 2707     		.2byte	0x727
 8044 16d5 0E0A0000 		.4byte	0xa0e
 8045 16d9 62070000 		.4byte	.LLST54
 8046 16dd 27       		.uleb128 0x27
 8047 16de B50A0000 		.4byte	.LASF248
 8048 16e2 01       		.byte	0x1
 8049 16e3 2907     		.2byte	0x729
 8050 16e5 0A090000 		.4byte	0x90a
 8051 16e9 8E070000 		.4byte	.LLST55
 8052 16ed 27       		.uleb128 0x27
 8053 16ee B4150000 		.4byte	.LASF206
 8054 16f2 01       		.byte	0x1
 8055 16f3 2A07     		.2byte	0x72a
 8056 16f5 AE160000 		.4byte	0x16ae
 8057 16f9 CF070000 		.4byte	.LLST56
 8058 16fd 35       		.uleb128 0x35
 8059 16fe 32020000 		.4byte	.LASF252
 8060 1702 01       		.byte	0x1
 8061 1703 2B07     		.2byte	0x72b
 8062 1705 15090000 		.4byte	0x915
 8063 1709 36       		.uleb128 0x36
 8064 170a 800C0000 		.4byte	0xc80
 8065 170e 04000000 		.4byte	.LBB33
 8066 1712 14000000 		.4byte	.LBE33-.LBB33
 8067 1716 01       		.byte	0x1
 8068 1717 4107     		.2byte	0x741
 8069 1719 32170000 		.4byte	0x1732
 8070 171d 2E       		.uleb128 0x2e
 8071 171e 04000000 		.4byte	.LBB34
 8072 1722 14000000 		.4byte	.LBE34-.LBB34
 8073 1726 37       		.uleb128 0x37
 8074 1727 900C0000 		.4byte	0xc90
 8075 172b 37       		.uleb128 0x37
 8076 172c 9B0C0000 		.4byte	0xc9b
 8077 1730 00       		.byte	0
 8078 1731 00       		.byte	0
 8079 1732 36       		.uleb128 0x36
 8080 1733 A70C0000 		.4byte	0xca7
 8081 1737 78000000 		.4byte	.LBB35
 8082 173b 04000000 		.4byte	.LBE35-.LBB35
 8083 173f 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 247


 8084 1740 6507     		.2byte	0x765
 8085 1742 50170000 		.4byte	0x1750
 8086 1746 39       		.uleb128 0x39
 8087 1747 B30C0000 		.4byte	0xcb3
 8088 174b FB070000 		.4byte	.LLST57
 8089 174f 00       		.byte	0
 8090 1750 2A       		.uleb128 0x2a
 8091 1751 1C000000 		.4byte	.LVL153
 8092 1755 FE0C0000 		.4byte	0xcfe
 8093 1759 64170000 		.4byte	0x1764
 8094 175d 2B       		.uleb128 0x2b
 8095 175e 01       		.uleb128 0x1
 8096 175f 50       		.byte	0x50
 8097 1760 02       		.uleb128 0x2
 8098 1761 74       		.byte	0x74
 8099 1762 00       		.sleb128 0
 8100 1763 00       		.byte	0
 8101 1764 2A       		.uleb128 0x2a
 8102 1765 42000000 		.4byte	.LVL155
 8103 1769 C02E0000 		.4byte	0x2ec0
 8104 176d 78170000 		.4byte	0x1778
 8105 1771 2B       		.uleb128 0x2b
 8106 1772 01       		.uleb128 0x1
 8107 1773 50       		.byte	0x50
 8108 1774 02       		.uleb128 0x2
 8109 1775 77       		.byte	0x77
 8110 1776 00       		.sleb128 0
 8111 1777 00       		.byte	0
 8112 1778 2A       		.uleb128 0x2a
 8113 1779 66000000 		.4byte	.LVL156
 8114 177d 922E0000 		.4byte	0x2e92
 8115 1781 8C170000 		.4byte	0x178c
 8116 1785 2B       		.uleb128 0x2b
 8117 1786 01       		.uleb128 0x1
 8118 1787 51       		.byte	0x51
 8119 1788 02       		.uleb128 0x2
 8120 1789 77       		.byte	0x77
 8121 178a 00       		.sleb128 0
 8122 178b 00       		.byte	0
 8123 178c 2C       		.uleb128 0x2c
 8124 178d 72000000 		.4byte	.LVL158
 8125 1791 922E0000 		.4byte	0x2e92
 8126 1795 2B       		.uleb128 0x2b
 8127 1796 01       		.uleb128 0x1
 8128 1797 50       		.byte	0x50
 8129 1798 05       		.uleb128 0x5
 8130 1799 03       		.byte	0x3
 8131 179a 14000000 		.4byte	.LANCHOR0+20
 8132 179e 2B       		.uleb128 0x2b
 8133 179f 01       		.uleb128 0x1
 8134 17a0 51       		.byte	0x51
 8135 17a1 02       		.uleb128 0x2
 8136 17a2 74       		.byte	0x74
 8137 17a3 18       		.sleb128 24
 8138 17a4 00       		.byte	0
 8139 17a5 00       		.byte	0
 8140 17a6 33       		.uleb128 0x33
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 248


 8141 17a7 5B030000 		.4byte	.LASF253
 8142 17ab 01       		.byte	0x1
 8143 17ac 6D07     		.2byte	0x76d
 8144 17ae 00000000 		.4byte	.LFB83
 8145 17b2 6C000000 		.4byte	.LFE83-.LFB83
 8146 17b6 01       		.uleb128 0x1
 8147 17b7 9C       		.byte	0x9c
 8148 17b8 3E180000 		.4byte	0x183e
 8149 17bc 27       		.uleb128 0x27
 8150 17bd 4A050000 		.4byte	.LASF205
 8151 17c1 01       		.byte	0x1
 8152 17c2 6F07     		.2byte	0x76f
 8153 17c4 0A090000 		.4byte	0x90a
 8154 17c8 0E080000 		.4byte	.LLST58
 8155 17cc 36       		.uleb128 0x36
 8156 17cd BF0C0000 		.4byte	0xcbf
 8157 17d1 1A000000 		.4byte	.LBB37
 8158 17d5 10000000 		.4byte	.LBE37-.LBB37
 8159 17d9 01       		.byte	0x1
 8160 17da B507     		.2byte	0x7b5
 8161 17dc F0170000 		.4byte	0x17f0
 8162 17e0 2E       		.uleb128 0x2e
 8163 17e1 1A000000 		.4byte	.LBB38
 8164 17e5 10000000 		.4byte	.LBE38-.LBB38
 8165 17e9 37       		.uleb128 0x37
 8166 17ea CB0C0000 		.4byte	0xccb
 8167 17ee 00       		.byte	0
 8168 17ef 00       		.byte	0
 8169 17f0 2A       		.uleb128 0x2a
 8170 17f1 16000000 		.4byte	.LVL162
 8171 17f5 1F120000 		.4byte	0x121f
 8172 17f9 2B180000 		.4byte	0x182b
 8173 17fd 2B       		.uleb128 0x2b
 8174 17fe 01       		.uleb128 0x1
 8175 17ff 50       		.byte	0x50
 8176 1800 05       		.uleb128 0x5
 8177 1801 03       		.byte	0x3
 8178 1802 00000000 		.4byte	prvIdleTask
 8179 1806 2B       		.uleb128 0x2b
 8180 1807 01       		.uleb128 0x1
 8181 1808 51       		.byte	0x51
 8182 1809 05       		.uleb128 0x5
 8183 180a 03       		.byte	0x3
 8184 180b 04000000 		.4byte	.LC1
 8185 180f 2B       		.uleb128 0x2b
 8186 1810 01       		.uleb128 0x1
 8187 1811 52       		.byte	0x52
 8188 1812 02       		.uleb128 0x2
 8189 1813 08       		.byte	0x8
 8190 1814 64       		.byte	0x64
 8191 1815 2B       		.uleb128 0x2b
 8192 1816 01       		.uleb128 0x1
 8193 1817 53       		.byte	0x53
 8194 1818 01       		.uleb128 0x1
 8195 1819 30       		.byte	0x30
 8196 181a 2B       		.uleb128 0x2b
 8197 181b 02       		.uleb128 0x2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 249


 8198 181c 7D       		.byte	0x7d
 8199 181d 00       		.sleb128 0
 8200 181e 01       		.uleb128 0x1
 8201 181f 30       		.byte	0x30
 8202 1820 2B       		.uleb128 0x2b
 8203 1821 02       		.uleb128 0x2
 8204 1822 7D       		.byte	0x7d
 8205 1823 04       		.sleb128 4
 8206 1824 05       		.uleb128 0x5
 8207 1825 03       		.byte	0x3
 8208 1826 F4000000 		.4byte	.LANCHOR0+244
 8209 182a 00       		.byte	0
 8210 182b 2D       		.uleb128 0x2d
 8211 182c 4C000000 		.4byte	.LVL163
 8212 1830 F92E0000 		.4byte	0x2ef9
 8213 1834 2D       		.uleb128 0x2d
 8214 1835 50000000 		.4byte	.LVL164
 8215 1839 042F0000 		.4byte	0x2f04
 8216 183d 00       		.byte	0
 8217 183e 33       		.uleb128 0x33
 8218 183f 16100000 		.4byte	.LASF254
 8219 1843 01       		.byte	0x1
 8220 1844 E507     		.2byte	0x7e5
 8221 1846 00000000 		.4byte	.LFB84
 8222 184a 24000000 		.4byte	.LFE84-.LFB84
 8223 184e 01       		.uleb128 0x1
 8224 184f 9C       		.byte	0x9c
 8225 1850 82180000 		.4byte	0x1882
 8226 1854 36       		.uleb128 0x36
 8227 1855 BF0C0000 		.4byte	0xcbf
 8228 1859 02000000 		.4byte	.LBB39
 8229 185d 10000000 		.4byte	.LBE39-.LBB39
 8230 1861 01       		.byte	0x1
 8231 1862 EA07     		.2byte	0x7ea
 8232 1864 78180000 		.4byte	0x1878
 8233 1868 2E       		.uleb128 0x2e
 8234 1869 02000000 		.4byte	.LBB40
 8235 186d 10000000 		.4byte	.LBE40-.LBB40
 8236 1871 37       		.uleb128 0x37
 8237 1872 CB0C0000 		.4byte	0xccb
 8238 1876 00       		.byte	0
 8239 1877 00       		.byte	0
 8240 1878 2D       		.uleb128 0x2d
 8241 1879 1E000000 		.4byte	.LVL165
 8242 187d 0F2F0000 		.4byte	0x2f0f
 8243 1881 00       		.byte	0
 8244 1882 3A       		.uleb128 0x3a
 8245 1883 310C0000 		.4byte	.LASF292
 8246 1887 01       		.byte	0x1
 8247 1888 F007     		.2byte	0x7f0
 8248 188a 00000000 		.4byte	.LFB85
 8249 188e 14000000 		.4byte	.LFE85-.LFB85
 8250 1892 01       		.uleb128 0x1
 8251 1893 9C       		.byte	0x9c
 8252 1894 30       		.uleb128 0x30
 8253 1895 49030000 		.4byte	.LASF255
 8254 1899 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 250


 8255 189a A708     		.2byte	0x8a7
 8256 189c 20090000 		.4byte	0x920
 8257 18a0 00000000 		.4byte	.LFB87
 8258 18a4 0C000000 		.4byte	.LFE87-.LFB87
 8259 18a8 01       		.uleb128 0x1
 8260 18a9 9C       		.byte	0x9c
 8261 18aa BD180000 		.4byte	0x18bd
 8262 18ae 34       		.uleb128 0x34
 8263 18af 54080000 		.4byte	.LASF256
 8264 18b3 01       		.byte	0x1
 8265 18b4 A908     		.2byte	0x8a9
 8266 18b6 20090000 		.4byte	0x920
 8267 18ba 01       		.uleb128 0x1
 8268 18bb 50       		.byte	0x50
 8269 18bc 00       		.byte	0
 8270 18bd 30       		.uleb128 0x30
 8271 18be 80000000 		.4byte	.LASF257
 8272 18c2 01       		.byte	0x1
 8273 18c3 B608     		.2byte	0x8b6
 8274 18c5 20090000 		.4byte	0x920
 8275 18c9 00000000 		.4byte	.LFB88
 8276 18cd 0C000000 		.4byte	.LFE88-.LFB88
 8277 18d1 01       		.uleb128 0x1
 8278 18d2 9C       		.byte	0x9c
 8279 18d3 F3180000 		.4byte	0x18f3
 8280 18d7 34       		.uleb128 0x34
 8281 18d8 4A050000 		.4byte	.LASF205
 8282 18dc 01       		.byte	0x1
 8283 18dd B808     		.2byte	0x8b8
 8284 18df 20090000 		.4byte	0x920
 8285 18e3 01       		.uleb128 0x1
 8286 18e4 50       		.byte	0x50
 8287 18e5 3B       		.uleb128 0x3b
 8288 18e6 32020000 		.4byte	.LASF252
 8289 18ea 01       		.byte	0x1
 8290 18eb B908     		.2byte	0x8b9
 8291 18ed 15090000 		.4byte	0x915
 8292 18f1 00       		.byte	0
 8293 18f2 00       		.byte	0
 8294 18f3 3C       		.uleb128 0x3c
 8295 18f4 CF010000 		.4byte	.LASF329
 8296 18f8 01       		.byte	0x1
 8297 18f9 D508     		.2byte	0x8d5
 8298 18fb 15090000 		.4byte	0x915
 8299 18ff 00000000 		.4byte	.LFB89
 8300 1903 0C000000 		.4byte	.LFE89-.LFB89
 8301 1907 01       		.uleb128 0x1
 8302 1908 9C       		.byte	0x9c
 8303 1909 30       		.uleb128 0x30
 8304 190a 42090000 		.4byte	.LASF258
 8305 190e 01       		.byte	0x1
 8306 190f DD08     		.2byte	0x8dd
 8307 1911 45010000 		.4byte	0x145
 8308 1915 00000000 		.4byte	.LFB90
 8309 1919 14000000 		.4byte	.LFE90-.LFB90
 8310 191d 01       		.uleb128 0x1
 8311 191e 9C       		.byte	0x9c
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 251


 8312 191f 42190000 		.4byte	0x1942
 8313 1923 26       		.uleb128 0x26
 8314 1924 9E120000 		.4byte	.LASF259
 8315 1928 01       		.byte	0x1
 8316 1929 DD08     		.2byte	0x8dd
 8317 192b 0E0A0000 		.4byte	0xa0e
 8318 192f 21080000 		.4byte	.LLST59
 8319 1933 34       		.uleb128 0x34
 8320 1934 B4150000 		.4byte	.LASF206
 8321 1938 01       		.byte	0x1
 8322 1939 DF08     		.2byte	0x8df
 8323 193b CB0D0000 		.4byte	0xdcb
 8324 193f 01       		.uleb128 0x1
 8325 1940 53       		.byte	0x53
 8326 1941 00       		.byte	0
 8327 1942 30       		.uleb128 0x30
 8328 1943 990F0000 		.4byte	.LASF260
 8329 1947 01       		.byte	0x1
 8330 1948 1D0A     		.2byte	0xa1d
 8331 194a 0A090000 		.4byte	0x90a
 8332 194e 00000000 		.4byte	.LFB92
 8333 1952 08010000 		.4byte	.LFE92-.LFB92
 8334 1956 01       		.uleb128 0x1
 8335 1957 9C       		.byte	0x9c
 8336 1958 021A0000 		.4byte	0x1a02
 8337 195c 27       		.uleb128 0x27
 8338 195d B4150000 		.4byte	.LASF206
 8339 1961 01       		.byte	0x1
 8340 1962 1F0A     		.2byte	0xa1f
 8341 1964 CB0D0000 		.4byte	0xdcb
 8342 1968 34080000 		.4byte	.LLST60
 8343 196c 27       		.uleb128 0x27
 8344 196d A9150000 		.4byte	.LASF135
 8345 1971 01       		.byte	0x1
 8346 1972 200A     		.2byte	0xa20
 8347 1974 20090000 		.4byte	0x920
 8348 1978 52080000 		.4byte	.LLST61
 8349 197c 27       		.uleb128 0x27
 8350 197d A7100000 		.4byte	.LASF261
 8351 1981 01       		.byte	0x1
 8352 1982 210A     		.2byte	0xa21
 8353 1984 0A090000 		.4byte	0x90a
 8354 1988 65080000 		.4byte	.LLST62
 8355 198c 3D       		.uleb128 0x3d
 8356 198d 00000000 		.4byte	.Ldebug_ranges0+0
 8357 1991 27       		.uleb128 0x27
 8358 1992 880D0000 		.4byte	.LASF230
 8359 1996 01       		.byte	0x1
 8360 1997 2B0A     		.2byte	0xa2b
 8361 1999 A6110000 		.4byte	0x11a6
 8362 199d BD080000 		.4byte	.LLST63
 8363 19a1 32       		.uleb128 0x32
 8364 19a2 1C000000 		.4byte	.LBB42
 8365 19a6 1A000000 		.4byte	.LBE42-.LBB42
 8366 19aa C8190000 		.4byte	0x19c8
 8367 19ae 27       		.uleb128 0x27
 8368 19af 49110000 		.4byte	.LASF262
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 252


 8369 19b3 01       		.byte	0x1
 8370 19b4 330A     		.2byte	0xa33
 8371 19b6 7D140000 		.4byte	0x147d
 8372 19ba DB080000 		.4byte	.LLST64
 8373 19be 2D       		.uleb128 0x2d
 8374 19bf 36000000 		.4byte	.LVL176
 8375 19c3 A40D0000 		.4byte	0xda4
 8376 19c7 00       		.byte	0
 8377 19c8 2A       		.uleb128 0x2a
 8378 19c9 84000000 		.4byte	.LVL183
 8379 19cd C02E0000 		.4byte	0x2ec0
 8380 19d1 DC190000 		.4byte	0x19dc
 8381 19d5 2B       		.uleb128 0x2b
 8382 19d6 01       		.uleb128 0x1
 8383 19d7 50       		.byte	0x50
 8384 19d8 02       		.uleb128 0x2
 8385 19d9 76       		.byte	0x76
 8386 19da 00       		.sleb128 0
 8387 19db 00       		.byte	0
 8388 19dc 2A       		.uleb128 0x2a
 8389 19dd 90000000 		.4byte	.LVL184
 8390 19e1 C02E0000 		.4byte	0x2ec0
 8391 19e5 F0190000 		.4byte	0x19f0
 8392 19e9 2B       		.uleb128 0x2b
 8393 19ea 01       		.uleb128 0x1
 8394 19eb 50       		.byte	0x50
 8395 19ec 02       		.uleb128 0x2
 8396 19ed 74       		.byte	0x74
 8397 19ee 18       		.sleb128 24
 8398 19ef 00       		.byte	0
 8399 19f0 2C       		.uleb128 0x2c
 8400 19f1 B6000000 		.4byte	.LVL185
 8401 19f5 922E0000 		.4byte	0x2e92
 8402 19f9 2B       		.uleb128 0x2b
 8403 19fa 01       		.uleb128 0x1
 8404 19fb 51       		.byte	0x51
 8405 19fc 02       		.uleb128 0x2
 8406 19fd 76       		.byte	0x76
 8407 19fe 00       		.sleb128 0
 8408 19ff 00       		.byte	0
 8409 1a00 00       		.byte	0
 8410 1a01 00       		.byte	0
 8411 1a02 30       		.uleb128 0x30
 8412 1a03 1E0D0000 		.4byte	.LASF263
 8413 1a07 01       		.byte	0x1
 8414 1a08 3908     		.2byte	0x839
 8415 1a0a 0A090000 		.4byte	0x90a
 8416 1a0e 00000000 		.4byte	.LFB86
 8417 1a12 D8000000 		.4byte	.LFE86-.LFB86
 8418 1a16 01       		.uleb128 0x1
 8419 1a17 9C       		.byte	0x9c
 8420 1a18 BB1A0000 		.4byte	0x1abb
 8421 1a1c 27       		.uleb128 0x27
 8422 1a1d B4150000 		.4byte	.LASF206
 8423 1a21 01       		.byte	0x1
 8424 1a22 3B08     		.2byte	0x83b
 8425 1a24 CB0D0000 		.4byte	0xdcb
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 253


 8426 1a28 FD080000 		.4byte	.LLST65
 8427 1a2c 27       		.uleb128 0x27
 8428 1a2d 0D110000 		.4byte	.LASF264
 8429 1a31 01       		.byte	0x1
 8430 1a32 3C08     		.2byte	0x83c
 8431 1a34 0A090000 		.4byte	0x90a
 8432 1a38 4A090000 		.4byte	.LLST66
 8433 1a3c 32       		.uleb128 0x32
 8434 1a3d 84000000 		.4byte	.LBB45
 8435 1a41 22000000 		.4byte	.LBE45-.LBB45
 8436 1a45 631A0000 		.4byte	0x1a63
 8437 1a49 27       		.uleb128 0x27
 8438 1a4a 00000000 		.4byte	.LASF265
 8439 1a4e 01       		.byte	0x1
 8440 1a4f 7408     		.2byte	0x874
 8441 1a51 15090000 		.4byte	0x915
 8442 1a55 8C090000 		.4byte	.LLST67
 8443 1a59 2D       		.uleb128 0x2d
 8444 1a5a 90000000 		.4byte	.LVL203
 8445 1a5e 42190000 		.4byte	0x1942
 8446 1a62 00       		.byte	0
 8447 1a63 2D       		.uleb128 0x2d
 8448 1a64 06000000 		.4byte	.LVL193
 8449 1a68 872E0000 		.4byte	0x2e87
 8450 1a6c 2A       		.uleb128 0x2a
 8451 1a6d 34000000 		.4byte	.LVL196
 8452 1a71 C02E0000 		.4byte	0x2ec0
 8453 1a75 801A0000 		.4byte	0x1a80
 8454 1a79 2B       		.uleb128 0x2b
 8455 1a7a 01       		.uleb128 0x1
 8456 1a7b 50       		.byte	0x50
 8457 1a7c 02       		.uleb128 0x2
 8458 1a7d 75       		.byte	0x75
 8459 1a7e 18       		.sleb128 24
 8460 1a7f 00       		.byte	0
 8461 1a80 2A       		.uleb128 0x2a
 8462 1a81 3C000000 		.4byte	.LVL197
 8463 1a85 C02E0000 		.4byte	0x2ec0
 8464 1a89 941A0000 		.4byte	0x1a94
 8465 1a8d 2B       		.uleb128 0x2b
 8466 1a8e 01       		.uleb128 0x1
 8467 1a8f 50       		.byte	0x50
 8468 1a90 02       		.uleb128 0x2
 8469 1a91 76       		.byte	0x76
 8470 1a92 00       		.sleb128 0
 8471 1a93 00       		.byte	0
 8472 1a94 2A       		.uleb128 0x2a
 8473 1a95 60000000 		.4byte	.LVL198
 8474 1a99 922E0000 		.4byte	0x2e92
 8475 1a9d A81A0000 		.4byte	0x1aa8
 8476 1aa1 2B       		.uleb128 0x2b
 8477 1aa2 01       		.uleb128 0x1
 8478 1aa3 51       		.byte	0x51
 8479 1aa4 02       		.uleb128 0x2
 8480 1aa5 76       		.byte	0x76
 8481 1aa6 00       		.sleb128 0
 8482 1aa7 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 254


 8483 1aa8 2D       		.uleb128 0x2d
 8484 1aa9 84000000 		.4byte	.LVL201
 8485 1aad A40D0000 		.4byte	0xda4
 8486 1ab1 2D       		.uleb128 0x2d
 8487 1ab2 CC000000 		.4byte	.LVL211
 8488 1ab6 9E2E0000 		.4byte	0x2e9e
 8489 1aba 00       		.byte	0
 8490 1abb 33       		.uleb128 0x33
 8491 1abc 00100000 		.4byte	.LASF266
 8492 1ac0 01       		.byte	0x1
 8493 1ac1 B404     		.2byte	0x4b4
 8494 1ac3 00000000 		.4byte	.LFB73
 8495 1ac7 6C000000 		.4byte	.LFE73-.LFB73
 8496 1acb 01       		.uleb128 0x1
 8497 1acc 9C       		.byte	0x9c
 8498 1acd 5B1B0000 		.4byte	0x1b5b
 8499 1ad1 26       		.uleb128 0x26
 8500 1ad2 94100000 		.4byte	.LASF267
 8501 1ad6 01       		.byte	0x1
 8502 1ad7 B404     		.2byte	0x4b4
 8503 1ad9 611B0000 		.4byte	0x1b61
 8504 1add C2090000 		.4byte	.LLST68
 8505 1ae1 26       		.uleb128 0x26
 8506 1ae2 A60E0000 		.4byte	.LASF268
 8507 1ae6 01       		.byte	0x1
 8508 1ae7 B404     		.2byte	0x4b4
 8509 1ae9 A6110000 		.4byte	0x11a6
 8510 1aed EE090000 		.4byte	.LLST69
 8511 1af1 27       		.uleb128 0x27
 8512 1af2 CE0B0000 		.4byte	.LASF229
 8513 1af6 01       		.byte	0x1
 8514 1af7 B604     		.2byte	0x4b6
 8515 1af9 20090000 		.4byte	0x920
 8516 1afd 1A0A0000 		.4byte	.LLST70
 8517 1b01 34       		.uleb128 0x34
 8518 1b02 0D110000 		.4byte	.LASF264
 8519 1b06 01       		.byte	0x1
 8520 1b07 B704     		.2byte	0x4b7
 8521 1b09 0A090000 		.4byte	0x90a
 8522 1b0d 01       		.uleb128 0x1
 8523 1b0e 50       		.byte	0x50
 8524 1b0f 27       		.uleb128 0x27
 8525 1b10 F30F0000 		.4byte	.LASF269
 8526 1b14 01       		.byte	0x1
 8527 1b15 B704     		.2byte	0x4b7
 8528 1b17 0A090000 		.4byte	0x90a
 8529 1b1b 2D0A0000 		.4byte	.LLST71
 8530 1b1f 3E       		.uleb128 0x3e
 8531 1b20 20000000 		.4byte	.Ldebug_ranges0+0x20
 8532 1b24 481B0000 		.4byte	0x1b48
 8533 1b28 27       		.uleb128 0x27
 8534 1b29 880D0000 		.4byte	.LASF230
 8535 1b2d 01       		.byte	0x1
 8536 1b2e C104     		.2byte	0x4c1
 8537 1b30 A6110000 		.4byte	0x11a6
 8538 1b34 4C0A0000 		.4byte	.LLST72
 8539 1b38 2C       		.uleb128 0x2c
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 255


 8540 1b39 4A000000 		.4byte	.LVL220
 8541 1b3d 18110000 		.4byte	0x1118
 8542 1b41 2B       		.uleb128 0x2b
 8543 1b42 01       		.uleb128 0x1
 8544 1b43 51       		.byte	0x51
 8545 1b44 01       		.uleb128 0x1
 8546 1b45 30       		.byte	0x30
 8547 1b46 00       		.byte	0
 8548 1b47 00       		.byte	0
 8549 1b48 2D       		.uleb128 0x2d
 8550 1b49 0A000000 		.4byte	.LVL215
 8551 1b4d 82180000 		.4byte	0x1882
 8552 1b51 2D       		.uleb128 0x2d
 8553 1b52 4E000000 		.4byte	.LVL221
 8554 1b56 021A0000 		.4byte	0x1a02
 8555 1b5a 00       		.byte	0
 8556 1b5b 0D       		.uleb128 0xd
 8557 1b5c 04       		.byte	0x4
 8558 1b5d 20090000 		.4byte	0x920
 8559 1b61 18       		.uleb128 0x18
 8560 1b62 5B1B0000 		.4byte	0x1b5b
 8561 1b66 33       		.uleb128 0x33
 8562 1b67 BD0E0000 		.4byte	.LASF270
 8563 1b6b 01       		.byte	0x1
 8564 1b6c 0805     		.2byte	0x508
 8565 1b6e 00000000 		.4byte	.LFB74
 8566 1b72 34000000 		.4byte	.LFE74-.LFB74
 8567 1b76 01       		.uleb128 0x1
 8568 1b77 9C       		.byte	0x9c
 8569 1b78 C81B0000 		.4byte	0x1bc8
 8570 1b7c 26       		.uleb128 0x26
 8571 1b7d AF090000 		.4byte	.LASF271
 8572 1b81 01       		.byte	0x1
 8573 1b82 0805     		.2byte	0x508
 8574 1b84 A6110000 		.4byte	0x11a6
 8575 1b88 5F0A0000 		.4byte	.LLST73
 8576 1b8c 27       		.uleb128 0x27
 8577 1b8d 0D110000 		.4byte	.LASF264
 8578 1b91 01       		.byte	0x1
 8579 1b92 0A05     		.2byte	0x50a
 8580 1b94 0A090000 		.4byte	0x90a
 8581 1b98 960A0000 		.4byte	.LLST74
 8582 1b9c 2D       		.uleb128 0x2d
 8583 1b9d 0A000000 		.4byte	.LVL225
 8584 1ba1 82180000 		.4byte	0x1882
 8585 1ba5 2A       		.uleb128 0x2a
 8586 1ba6 12000000 		.4byte	.LVL226
 8587 1baa 18110000 		.4byte	0x1118
 8588 1bae BE1B0000 		.4byte	0x1bbe
 8589 1bb2 2B       		.uleb128 0x2b
 8590 1bb3 01       		.uleb128 0x1
 8591 1bb4 50       		.byte	0x50
 8592 1bb5 02       		.uleb128 0x2
 8593 1bb6 74       		.byte	0x74
 8594 1bb7 00       		.sleb128 0
 8595 1bb8 2B       		.uleb128 0x2b
 8596 1bb9 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 256


 8597 1bba 51       		.byte	0x51
 8598 1bbb 01       		.uleb128 0x1
 8599 1bbc 30       		.byte	0x30
 8600 1bbd 00       		.byte	0
 8601 1bbe 2D       		.uleb128 0x2d
 8602 1bbf 16000000 		.4byte	.LVL227
 8603 1bc3 021A0000 		.4byte	0x1a02
 8604 1bc7 00       		.byte	0
 8605 1bc8 33       		.uleb128 0x33
 8606 1bc9 B3070000 		.4byte	.LASF272
 8607 1bcd 01       		.byte	0x1
 8608 1bce 230B     		.2byte	0xb23
 8609 1bd0 00000000 		.4byte	.LFB93
 8610 1bd4 D4000000 		.4byte	.LFE93-.LFB93
 8611 1bd8 01       		.uleb128 0x1
 8612 1bd9 9C       		.byte	0x9c
 8613 1bda 871C0000 		.4byte	0x1c87
 8614 1bde 32       		.uleb128 0x32
 8615 1bdf 3A000000 		.4byte	.LBB49
 8616 1be3 36000000 		.4byte	.LBE49-.LBB49
 8617 1be7 161C0000 		.4byte	0x1c16
 8618 1beb 27       		.uleb128 0x27
 8619 1bec 47070000 		.4byte	.LASF273
 8620 1bf0 01       		.byte	0x1
 8621 1bf1 4C0B     		.2byte	0xb4c
 8622 1bf3 8D1C0000 		.4byte	0x1c8d
 8623 1bf7 CC0A0000 		.4byte	.LLST75
 8624 1bfb 3F       		.uleb128 0x3f
 8625 1bfc A6070000 		.4byte	.LASF274
 8626 1c00 01       		.byte	0x1
 8627 1c01 4C0B     		.2byte	0xb4c
 8628 1c03 080F0000 		.4byte	0xf08
 8629 1c07 A5CB96AD 		.sleb128 -1515870811
 8629      7A
 8630 1c0c 2D       		.uleb128 0x2d
 8631 1c0d 70000000 		.4byte	.LVL233
 8632 1c11 1A2F0000 		.4byte	0x2f1a
 8633 1c15 00       		.byte	0
 8634 1c16 32       		.uleb128 0x32
 8635 1c17 70000000 		.4byte	.LBB50
 8636 1c1b 4E000000 		.4byte	.LBE50-.LBB50
 8637 1c1f 7D1C0000 		.4byte	0x1c7d
 8638 1c23 27       		.uleb128 0x27
 8639 1c24 E50E0000 		.4byte	.LASF275
 8640 1c28 01       		.byte	0x1
 8641 1c29 500B     		.2byte	0xb50
 8642 1c2b 15090000 		.4byte	0x915
 8643 1c2f DF0A0000 		.4byte	.LLST76
 8644 1c33 36       		.uleb128 0x36
 8645 1c34 D70C0000 		.4byte	0xcd7
 8646 1c38 76000000 		.4byte	.LBB51
 8647 1c3c 06000000 		.4byte	.LBE51-.LBB51
 8648 1c40 01       		.byte	0x1
 8649 1c41 500B     		.2byte	0xb50
 8650 1c43 621C0000 		.4byte	0x1c62
 8651 1c47 39       		.uleb128 0x39
 8652 1c48 E70C0000 		.4byte	0xce7
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 257


 8653 1c4c F20A0000 		.4byte	.LLST77
 8654 1c50 2E       		.uleb128 0x2e
 8655 1c51 76000000 		.4byte	.LBB52
 8656 1c55 06000000 		.4byte	.LBE52-.LBB52
 8657 1c59 40       		.uleb128 0x40
 8658 1c5a F20C0000 		.4byte	0xcf2
 8659 1c5e 01       		.uleb128 0x1
 8660 1c5f 53       		.byte	0x53
 8661 1c60 00       		.byte	0
 8662 1c61 00       		.byte	0
 8663 1c62 2E       		.uleb128 0x2e
 8664 1c63 80000000 		.4byte	.LBB53
 8665 1c67 3E000000 		.4byte	.LBE53-.LBB53
 8666 1c6b 27       		.uleb128 0x27
 8667 1c6c CF120000 		.4byte	.LASF276
 8668 1c70 01       		.byte	0x1
 8669 1c71 500B     		.2byte	0xb50
 8670 1c73 921C0000 		.4byte	0x1c92
 8671 1c77 050B0000 		.4byte	.LLST78
 8672 1c7b 00       		.byte	0
 8673 1c7c 00       		.byte	0
 8674 1c7d 2D       		.uleb128 0x2d
 8675 1c7e 20000000 		.4byte	.LVL230
 8676 1c82 262F0000 		.4byte	0x2f26
 8677 1c86 00       		.byte	0
 8678 1c87 0D       		.uleb128 0xd
 8679 1c88 04       		.byte	0x4
 8680 1c89 080F0000 		.4byte	0xf08
 8681 1c8d 18       		.uleb128 0x18
 8682 1c8e 871C0000 		.4byte	0x1c87
 8683 1c92 18       		.uleb128 0x18
 8684 1c93 7D140000 		.4byte	0x147d
 8685 1c97 33       		.uleb128 0x33
 8686 1c98 400E0000 		.4byte	.LASF277
 8687 1c9c 01       		.byte	0x1
 8688 1c9d 5E06     		.2byte	0x65e
 8689 1c9f 00000000 		.4byte	.LFB79
 8690 1ca3 C0000000 		.4byte	.LFE79-.LFB79
 8691 1ca7 01       		.uleb128 0x1
 8692 1ca8 9C       		.byte	0x9c
 8693 1ca9 491D0000 		.4byte	0x1d49
 8694 1cad 26       		.uleb128 0x26
 8695 1cae 23020000 		.4byte	.LASF278
 8696 1cb2 01       		.byte	0x1
 8697 1cb3 5E06     		.2byte	0x65e
 8698 1cb5 0E0A0000 		.4byte	0xa0e
 8699 1cb9 220B0000 		.4byte	.LLST79
 8700 1cbd 27       		.uleb128 0x27
 8701 1cbe B4150000 		.4byte	.LASF206
 8702 1cc2 01       		.byte	0x1
 8703 1cc3 6006     		.2byte	0x660
 8704 1cc5 CB0D0000 		.4byte	0xdcb
 8705 1cc9 400B0000 		.4byte	.LLST80
 8706 1ccd 2D       		.uleb128 0x2d
 8707 1cce 08000000 		.4byte	.LVL239
 8708 1cd2 872E0000 		.4byte	0x2e87
 8709 1cd6 2A       		.uleb128 0x2a
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 258


 8710 1cd7 18000000 		.4byte	.LVL241
 8711 1cdb C02E0000 		.4byte	0x2ec0
 8712 1cdf EA1C0000 		.4byte	0x1cea
 8713 1ce3 2B       		.uleb128 0x2b
 8714 1ce4 01       		.uleb128 0x1
 8715 1ce5 50       		.byte	0x50
 8716 1ce6 02       		.uleb128 0x2
 8717 1ce7 75       		.byte	0x75
 8718 1ce8 00       		.sleb128 0
 8719 1ce9 00       		.byte	0
 8720 1cea 2A       		.uleb128 0x2a
 8721 1ceb 48000000 		.4byte	.LVL242
 8722 1cef C02E0000 		.4byte	0x2ec0
 8723 1cf3 FE1C0000 		.4byte	0x1cfe
 8724 1cf7 2B       		.uleb128 0x2b
 8725 1cf8 01       		.uleb128 0x1
 8726 1cf9 50       		.byte	0x50
 8727 1cfa 02       		.uleb128 0x2
 8728 1cfb 74       		.byte	0x74
 8729 1cfc 18       		.sleb128 24
 8730 1cfd 00       		.byte	0
 8731 1cfe 2A       		.uleb128 0x2a
 8732 1cff 50000000 		.4byte	.LVL243
 8733 1d03 922E0000 		.4byte	0x2e92
 8734 1d07 1B1D0000 		.4byte	0x1d1b
 8735 1d0b 2B       		.uleb128 0x2b
 8736 1d0c 01       		.uleb128 0x1
 8737 1d0d 50       		.byte	0x50
 8738 1d0e 05       		.uleb128 0x5
 8739 1d0f 03       		.byte	0x3
 8740 1d10 00000000 		.4byte	.LANCHOR0
 8741 1d14 2B       		.uleb128 0x2b
 8742 1d15 01       		.uleb128 0x1
 8743 1d16 51       		.byte	0x51
 8744 1d17 02       		.uleb128 0x2
 8745 1d18 75       		.byte	0x75
 8746 1d19 00       		.sleb128 0
 8747 1d1a 00       		.byte	0
 8748 1d1b 2D       		.uleb128 0x2d
 8749 1d1c 64000000 		.4byte	.LVL244
 8750 1d20 9E2E0000 		.4byte	0x2e9e
 8751 1d24 2D       		.uleb128 0x2d
 8752 1d25 70000000 		.4byte	.LVL245
 8753 1d29 872E0000 		.4byte	0x2e87
 8754 1d2d 2D       		.uleb128 0x2d
 8755 1d2e 74000000 		.4byte	.LVL246
 8756 1d32 A40D0000 		.4byte	0xda4
 8757 1d36 2D       		.uleb128 0x2d
 8758 1d37 78000000 		.4byte	.LVL247
 8759 1d3b 9E2E0000 		.4byte	0x2e9e
 8760 1d3f 2D       		.uleb128 0x2d
 8761 1d40 B6000000 		.4byte	.LVL250
 8762 1d44 C81B0000 		.4byte	0x1bc8
 8763 1d48 00       		.byte	0
 8764 1d49 33       		.uleb128 0x33
 8765 1d4a 280A0000 		.4byte	.LASF279
 8766 1d4e 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 259


 8767 1d4f 5E0B     		.2byte	0xb5e
 8768 1d51 00000000 		.4byte	.LFB94
 8769 1d55 20000000 		.4byte	.LFE94-.LFB94
 8770 1d59 01       		.uleb128 0x1
 8771 1d5a 9C       		.byte	0x9c
 8772 1d5b AA1D0000 		.4byte	0x1daa
 8773 1d5f 26       		.uleb128 0x26
 8774 1d60 B4020000 		.4byte	.LASF280
 8775 1d64 01       		.byte	0x1
 8776 1d65 5E0B     		.2byte	0xb5e
 8777 1d67 921C0000 		.4byte	0x1c92
 8778 1d6b 530B0000 		.4byte	.LLST81
 8779 1d6f 26       		.uleb128 0x26
 8780 1d70 110D0000 		.4byte	.LASF227
 8781 1d74 01       		.byte	0x1
 8782 1d75 5E0B     		.2byte	0xb5e
 8783 1d77 A6110000 		.4byte	0x11a6
 8784 1d7b 740B0000 		.4byte	.LLST82
 8785 1d7f 2A       		.uleb128 0x2a
 8786 1d80 10000000 		.4byte	.LVL254
 8787 1d84 CC2E0000 		.4byte	0x2ecc
 8788 1d88 941D0000 		.4byte	0x1d94
 8789 1d8c 2B       		.uleb128 0x2b
 8790 1d8d 01       		.uleb128 0x1
 8791 1d8e 50       		.byte	0x50
 8792 1d8f 03       		.uleb128 0x3
 8793 1d90 F3       		.byte	0xf3
 8794 1d91 01       		.uleb128 0x1
 8795 1d92 50       		.byte	0x50
 8796 1d93 00       		.byte	0
 8797 1d94 2C       		.uleb128 0x2c
 8798 1d95 18000000 		.4byte	.LVL255
 8799 1d99 18110000 		.4byte	0x1118
 8800 1d9d 2B       		.uleb128 0x2b
 8801 1d9e 01       		.uleb128 0x1
 8802 1d9f 50       		.byte	0x50
 8803 1da0 02       		.uleb128 0x2
 8804 1da1 74       		.byte	0x74
 8805 1da2 00       		.sleb128 0
 8806 1da3 2B       		.uleb128 0x2b
 8807 1da4 01       		.uleb128 0x1
 8808 1da5 51       		.byte	0x51
 8809 1da6 01       		.uleb128 0x1
 8810 1da7 31       		.byte	0x31
 8811 1da8 00       		.byte	0
 8812 1da9 00       		.byte	0
 8813 1daa 33       		.uleb128 0x33
 8814 1dab D4050000 		.4byte	.LASF281
 8815 1daf 01       		.byte	0x1
 8816 1db0 6F0B     		.2byte	0xb6f
 8817 1db2 00000000 		.4byte	.LFB95
 8818 1db6 28000000 		.4byte	.LFE95-.LFB95
 8819 1dba 01       		.uleb128 0x1
 8820 1dbb 9C       		.byte	0x9c
 8821 1dbc 1B1E0000 		.4byte	0x1e1b
 8822 1dc0 26       		.uleb128 0x26
 8823 1dc1 B4020000 		.4byte	.LASF280
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 260


 8824 1dc5 01       		.byte	0x1
 8825 1dc6 6F0B     		.2byte	0xb6f
 8826 1dc8 7D140000 		.4byte	0x147d
 8827 1dcc A00B0000 		.4byte	.LLST83
 8828 1dd0 26       		.uleb128 0x26
 8829 1dd1 A9150000 		.4byte	.LASF135
 8830 1dd5 01       		.byte	0x1
 8831 1dd6 6F0B     		.2byte	0xb6f
 8832 1dd8 A6110000 		.4byte	0x11a6
 8833 1ddc C10B0000 		.4byte	.LLST84
 8834 1de0 26       		.uleb128 0x26
 8835 1de1 110D0000 		.4byte	.LASF227
 8836 1de5 01       		.byte	0x1
 8837 1de6 6F0B     		.2byte	0xb6f
 8838 1de8 A6110000 		.4byte	0x11a6
 8839 1dec E20B0000 		.4byte	.LLST85
 8840 1df0 2A       		.uleb128 0x2a
 8841 1df1 1A000000 		.4byte	.LVL260
 8842 1df5 922E0000 		.4byte	0x2e92
 8843 1df9 051E0000 		.4byte	0x1e05
 8844 1dfd 2B       		.uleb128 0x2b
 8845 1dfe 01       		.uleb128 0x1
 8846 1dff 50       		.byte	0x50
 8847 1e00 03       		.uleb128 0x3
 8848 1e01 F3       		.byte	0xf3
 8849 1e02 01       		.uleb128 0x1
 8850 1e03 50       		.byte	0x50
 8851 1e04 00       		.byte	0
 8852 1e05 2C       		.uleb128 0x2c
 8853 1e06 22000000 		.4byte	.LVL261
 8854 1e0a 18110000 		.4byte	0x1118
 8855 1e0e 2B       		.uleb128 0x2b
 8856 1e0f 01       		.uleb128 0x1
 8857 1e10 50       		.byte	0x50
 8858 1e11 02       		.uleb128 0x2
 8859 1e12 74       		.byte	0x74
 8860 1e13 00       		.sleb128 0
 8861 1e14 2B       		.uleb128 0x2b
 8862 1e15 01       		.uleb128 0x1
 8863 1e16 51       		.byte	0x51
 8864 1e17 01       		.uleb128 0x1
 8865 1e18 31       		.byte	0x31
 8866 1e19 00       		.byte	0
 8867 1e1a 00       		.byte	0
 8868 1e1b 30       		.uleb128 0x30
 8869 1e1c 410D0000 		.4byte	.LASF282
 8870 1e20 01       		.byte	0x1
 8871 1e21 A80B     		.2byte	0xba8
 8872 1e23 0A090000 		.4byte	0x90a
 8873 1e27 00000000 		.4byte	.LFB96
 8874 1e2b 74000000 		.4byte	.LFE96-.LFB96
 8875 1e2f 01       		.uleb128 0x1
 8876 1e30 9C       		.byte	0x9c
 8877 1e31 BB1E0000 		.4byte	0x1ebb
 8878 1e35 26       		.uleb128 0x26
 8879 1e36 B4020000 		.4byte	.LASF280
 8880 1e3a 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 261


 8881 1e3b A80B     		.2byte	0xba8
 8882 1e3d C61E0000 		.4byte	0x1ec6
 8883 1e41 0E0C0000 		.4byte	.LLST86
 8884 1e45 27       		.uleb128 0x27
 8885 1e46 6B0C0000 		.4byte	.LASF283
 8886 1e4a 01       		.byte	0x1
 8887 1e4b AA0B     		.2byte	0xbaa
 8888 1e4d CB0D0000 		.4byte	0xdcb
 8889 1e51 2F0C0000 		.4byte	.LLST87
 8890 1e55 27       		.uleb128 0x27
 8891 1e56 4A050000 		.4byte	.LASF205
 8892 1e5a 01       		.byte	0x1
 8893 1e5b AB0B     		.2byte	0xbab
 8894 1e5d 0A090000 		.4byte	0x90a
 8895 1e61 420C0000 		.4byte	.LLST88
 8896 1e65 2A       		.uleb128 0x2a
 8897 1e66 10000000 		.4byte	.LVL266
 8898 1e6a C02E0000 		.4byte	0x2ec0
 8899 1e6e 791E0000 		.4byte	0x1e79
 8900 1e72 2B       		.uleb128 0x2b
 8901 1e73 01       		.uleb128 0x1
 8902 1e74 50       		.byte	0x50
 8903 1e75 02       		.uleb128 0x2
 8904 1e76 75       		.byte	0x75
 8905 1e77 00       		.sleb128 0
 8906 1e78 00       		.byte	0
 8907 1e79 2A       		.uleb128 0x2a
 8908 1e7a 20000000 		.4byte	.LVL267
 8909 1e7e C02E0000 		.4byte	0x2ec0
 8910 1e82 8D1E0000 		.4byte	0x1e8d
 8911 1e86 2B       		.uleb128 0x2b
 8912 1e87 01       		.uleb128 0x1
 8913 1e88 50       		.byte	0x50
 8914 1e89 02       		.uleb128 0x2
 8915 1e8a 75       		.byte	0x75
 8916 1e8b 00       		.sleb128 0
 8917 1e8c 00       		.byte	0
 8918 1e8d 2A       		.uleb128 0x2a
 8919 1e8e 44000000 		.4byte	.LVL268
 8920 1e92 922E0000 		.4byte	0x2e92
 8921 1e96 A11E0000 		.4byte	0x1ea1
 8922 1e9a 2B       		.uleb128 0x2b
 8923 1e9b 01       		.uleb128 0x1
 8924 1e9c 51       		.byte	0x51
 8925 1e9d 02       		.uleb128 0x2
 8926 1e9e 75       		.byte	0x75
 8927 1e9f 00       		.sleb128 0
 8928 1ea0 00       		.byte	0
 8929 1ea1 2C       		.uleb128 0x2c
 8930 1ea2 4E000000 		.4byte	.LVL269
 8931 1ea6 922E0000 		.4byte	0x2e92
 8932 1eaa 2B       		.uleb128 0x2b
 8933 1eab 01       		.uleb128 0x1
 8934 1eac 50       		.byte	0x50
 8935 1ead 05       		.uleb128 0x5
 8936 1eae 03       		.byte	0x3
 8937 1eaf 14000000 		.4byte	.LANCHOR0+20
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 262


 8938 1eb3 2B       		.uleb128 0x2b
 8939 1eb4 01       		.uleb128 0x1
 8940 1eb5 51       		.byte	0x51
 8941 1eb6 02       		.uleb128 0x2
 8942 1eb7 75       		.byte	0x75
 8943 1eb8 00       		.sleb128 0
 8944 1eb9 00       		.byte	0
 8945 1eba 00       		.byte	0
 8946 1ebb 0D       		.uleb128 0xd
 8947 1ebc 04       		.byte	0x4
 8948 1ebd C11E0000 		.4byte	0x1ec1
 8949 1ec1 18       		.uleb128 0x18
 8950 1ec2 030A0000 		.4byte	0xa03
 8951 1ec6 18       		.uleb128 0x18
 8952 1ec7 BB1E0000 		.4byte	0x1ebb
 8953 1ecb 33       		.uleb128 0x33
 8954 1ecc 14130000 		.4byte	.LASF284
 8955 1ed0 01       		.byte	0x1
 8956 1ed1 EC0B     		.2byte	0xbec
 8957 1ed3 00000000 		.4byte	.LFB97
 8958 1ed7 54000000 		.4byte	.LFE97-.LFB97
 8959 1edb 01       		.uleb128 0x1
 8960 1edc 9C       		.byte	0x9c
 8961 1edd 4B1F0000 		.4byte	0x1f4b
 8962 1ee1 26       		.uleb128 0x26
 8963 1ee2 FE0A0000 		.4byte	.LASF285
 8964 1ee6 01       		.byte	0x1
 8965 1ee7 EC0B     		.2byte	0xbec
 8966 1ee9 FD090000 		.4byte	0x9fd
 8967 1eed 610C0000 		.4byte	.LLST89
 8968 1ef1 26       		.uleb128 0x26
 8969 1ef2 A9150000 		.4byte	.LASF135
 8970 1ef6 01       		.byte	0x1
 8971 1ef7 EC0B     		.2byte	0xbec
 8972 1ef9 A6110000 		.4byte	0x11a6
 8973 1efd 820C0000 		.4byte	.LLST90
 8974 1f01 27       		.uleb128 0x27
 8975 1f02 6B0C0000 		.4byte	.LASF283
 8976 1f06 01       		.byte	0x1
 8977 1f07 EE0B     		.2byte	0xbee
 8978 1f09 CB0D0000 		.4byte	0xdcb
 8979 1f0d A30C0000 		.4byte	.LLST91
 8980 1f11 2A       		.uleb128 0x2a
 8981 1f12 0E000000 		.4byte	.LVL277
 8982 1f16 C02E0000 		.4byte	0x2ec0
 8983 1f1a 261F0000 		.4byte	0x1f26
 8984 1f1e 2B       		.uleb128 0x2b
 8985 1f1f 01       		.uleb128 0x1
 8986 1f20 50       		.byte	0x50
 8987 1f21 03       		.uleb128 0x3
 8988 1f22 F3       		.byte	0xf3
 8989 1f23 01       		.uleb128 0x1
 8990 1f24 50       		.byte	0x50
 8991 1f25 00       		.byte	0
 8992 1f26 2A       		.uleb128 0x2a
 8993 1f27 16000000 		.4byte	.LVL278
 8994 1f2b C02E0000 		.4byte	0x2ec0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 263


 8995 1f2f 3A1F0000 		.4byte	0x1f3a
 8996 1f33 2B       		.uleb128 0x2b
 8997 1f34 01       		.uleb128 0x1
 8998 1f35 50       		.byte	0x50
 8999 1f36 02       		.uleb128 0x2
 9000 1f37 76       		.byte	0x76
 9001 1f38 00       		.sleb128 0
 9002 1f39 00       		.byte	0
 9003 1f3a 2C       		.uleb128 0x2c
 9004 1f3b 3C000000 		.4byte	.LVL279
 9005 1f3f 922E0000 		.4byte	0x2e92
 9006 1f43 2B       		.uleb128 0x2b
 9007 1f44 01       		.uleb128 0x1
 9008 1f45 51       		.byte	0x51
 9009 1f46 02       		.uleb128 0x2
 9010 1f47 76       		.byte	0x76
 9011 1f48 00       		.sleb128 0
 9012 1f49 00       		.byte	0
 9013 1f4a 00       		.byte	0
 9014 1f4b 33       		.uleb128 0x33
 9015 1f4c 20090000 		.4byte	.LASF286
 9016 1f50 01       		.byte	0x1
 9017 1f51 0E0C     		.2byte	0xc0e
 9018 1f53 00000000 		.4byte	.LFB98
 9019 1f57 20000000 		.4byte	.LFE98-.LFB98
 9020 1f5b 01       		.uleb128 0x1
 9021 1f5c 9C       		.byte	0x9c
 9022 1f5d 841F0000 		.4byte	0x1f84
 9023 1f61 26       		.uleb128 0x26
 9024 1f62 A0080000 		.4byte	.LASF287
 9025 1f66 01       		.byte	0x1
 9026 1f67 0E0C     		.2byte	0xc0e
 9027 1f69 8A1F0000 		.4byte	0x1f8a
 9028 1f6d B60C0000 		.4byte	.LLST92
 9029 1f71 2D       		.uleb128 0x2d
 9030 1f72 08000000 		.4byte	.LVL282
 9031 1f76 872E0000 		.4byte	0x2e87
 9032 1f7a 2D       		.uleb128 0x2d
 9033 1f7b 1A000000 		.4byte	.LVL283
 9034 1f7f 9E2E0000 		.4byte	0x2e9e
 9035 1f83 00       		.byte	0
 9036 1f84 0D       		.uleb128 0xd
 9037 1f85 04       		.byte	0x4
 9038 1f86 B00A0000 		.4byte	0xab0
 9039 1f8a 18       		.uleb128 0x18
 9040 1f8b 841F0000 		.4byte	0x1f84
 9041 1f8f 33       		.uleb128 0x33
 9042 1f90 3A000000 		.4byte	.LASF288
 9043 1f94 01       		.byte	0x1
 9044 1f95 1A0C     		.2byte	0xc1a
 9045 1f97 00000000 		.4byte	.LFB99
 9046 1f9b 14000000 		.4byte	.LFE99-.LFB99
 9047 1f9f 01       		.uleb128 0x1
 9048 1fa0 9C       		.byte	0x9c
 9049 1fa1 B41F0000 		.4byte	0x1fb4
 9050 1fa5 31       		.uleb128 0x31
 9051 1fa6 A0080000 		.4byte	.LASF287
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 264


 9052 1faa 01       		.byte	0x1
 9053 1fab 1A0C     		.2byte	0xc1a
 9054 1fad 8A1F0000 		.4byte	0x1f8a
 9055 1fb1 01       		.uleb128 0x1
 9056 1fb2 50       		.byte	0x50
 9057 1fb3 00       		.byte	0
 9058 1fb4 30       		.uleb128 0x30
 9059 1fb5 8E090000 		.4byte	.LASF289
 9060 1fb9 01       		.byte	0x1
 9061 1fba 220C     		.2byte	0xc22
 9062 1fbc 0A090000 		.4byte	0x90a
 9063 1fc0 00000000 		.4byte	.LFB100
 9064 1fc4 58000000 		.4byte	.LFE100-.LFB100
 9065 1fc8 01       		.uleb128 0x1
 9066 1fc9 9C       		.byte	0x9c
 9067 1fca 4F200000 		.4byte	0x204f
 9068 1fce 26       		.uleb128 0x26
 9069 1fcf A0080000 		.4byte	.LASF287
 9070 1fd3 01       		.byte	0x1
 9071 1fd4 220C     		.2byte	0xc22
 9072 1fd6 8A1F0000 		.4byte	0x1f8a
 9073 1fda E20C0000 		.4byte	.LLST93
 9074 1fde 26       		.uleb128 0x26
 9075 1fdf 28040000 		.4byte	.LASF290
 9076 1fe3 01       		.byte	0x1
 9077 1fe4 220C     		.2byte	0xc22
 9078 1fe6 611B0000 		.4byte	0x1b61
 9079 1fea 590D0000 		.4byte	.LLST94
 9080 1fee 27       		.uleb128 0x27
 9081 1fef 4A050000 		.4byte	.LASF205
 9082 1ff3 01       		.byte	0x1
 9083 1ff4 240C     		.2byte	0xc24
 9084 1ff6 0A090000 		.4byte	0x90a
 9085 1ffa 850D0000 		.4byte	.LLST95
 9086 1ffe 32       		.uleb128 0x32
 9087 1fff 0A000000 		.4byte	.LBB54
 9088 2003 42000000 		.4byte	.LBE54-.LBB54
 9089 2007 3C200000 		.4byte	0x203c
 9090 200b 27       		.uleb128 0x27
 9091 200c 880D0000 		.4byte	.LASF230
 9092 2010 01       		.byte	0x1
 9093 2011 2C0C     		.2byte	0xc2c
 9094 2013 A6110000 		.4byte	0x11a6
 9095 2017 BB0D0000 		.4byte	.LLST96
 9096 201b 27       		.uleb128 0x27
 9097 201c 5A120000 		.4byte	.LASF291
 9098 2020 01       		.byte	0x1
 9099 2021 2D0C     		.2byte	0xc2d
 9100 2023 A6110000 		.4byte	0x11a6
 9101 2027 D90D0000 		.4byte	.LLST97
 9102 202b 2C       		.uleb128 0x2c
 9103 202c 3A000000 		.4byte	.LVL291
 9104 2030 8F1F0000 		.4byte	0x1f8f
 9105 2034 2B       		.uleb128 0x2b
 9106 2035 01       		.uleb128 0x1
 9107 2036 50       		.byte	0x50
 9108 2037 02       		.uleb128 0x2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 265


 9109 2038 74       		.byte	0x74
 9110 2039 00       		.sleb128 0
 9111 203a 00       		.byte	0
 9112 203b 00       		.byte	0
 9113 203c 2D       		.uleb128 0x2d
 9114 203d 0A000000 		.4byte	.LVL287
 9115 2041 872E0000 		.4byte	0x2e87
 9116 2045 2D       		.uleb128 0x2d
 9117 2046 50000000 		.4byte	.LVL300
 9118 204a 9E2E0000 		.4byte	0x2e9e
 9119 204e 00       		.byte	0
 9120 204f 3A       		.uleb128 0x3a
 9121 2050 D9080000 		.4byte	.LASF293
 9122 2054 01       		.byte	0x1
 9123 2055 610C     		.2byte	0xc61
 9124 2057 00000000 		.4byte	.LFB101
 9125 205b 10000000 		.4byte	.LFE101-.LFB101
 9126 205f 01       		.uleb128 0x1
 9127 2060 9C       		.byte	0x9c
 9128 2061 30       		.uleb128 0x30
 9129 2062 D9040000 		.4byte	.LASF294
 9130 2066 01       		.byte	0x1
 9131 2067 690C     		.2byte	0xc69
 9132 2069 15090000 		.4byte	0x915
 9133 206d 00000000 		.4byte	.LFB102
 9134 2071 0A000000 		.4byte	.LFE102-.LFB102
 9135 2075 01       		.uleb128 0x1
 9136 2076 9C       		.byte	0x9c
 9137 2077 AC200000 		.4byte	0x20ac
 9138 207b 26       		.uleb128 0x26
 9139 207c 49020000 		.4byte	.LASF209
 9140 2080 01       		.byte	0x1
 9141 2081 690C     		.2byte	0xc69
 9142 2083 0E0A0000 		.4byte	0xa0e
 9143 2087 070E0000 		.4byte	.LLST98
 9144 208b 27       		.uleb128 0x27
 9145 208c 4F020000 		.4byte	.LASF240
 9146 2090 01       		.byte	0x1
 9147 2091 6B0C     		.2byte	0xc6b
 9148 2093 15090000 		.4byte	0x915
 9149 2097 410E0000 		.4byte	.LLST99
 9150 209b 27       		.uleb128 0x27
 9151 209c B4150000 		.4byte	.LASF206
 9152 20a0 01       		.byte	0x1
 9153 20a1 6C0C     		.2byte	0xc6c
 9154 20a3 CB0D0000 		.4byte	0xdcb
 9155 20a7 5F0E0000 		.4byte	.LLST100
 9156 20ab 00       		.byte	0
 9157 20ac 33       		.uleb128 0x33
 9158 20ad 470A0000 		.4byte	.LASF295
 9159 20b1 01       		.byte	0x1
 9160 20b2 800C     		.2byte	0xc80
 9161 20b4 00000000 		.4byte	.LFB103
 9162 20b8 06000000 		.4byte	.LFE103-.LFB103
 9163 20bc 01       		.uleb128 0x1
 9164 20bd 9C       		.byte	0x9c
 9165 20be EF200000 		.4byte	0x20ef
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 266


 9166 20c2 31       		.uleb128 0x31
 9167 20c3 49020000 		.4byte	.LASF209
 9168 20c7 01       		.byte	0x1
 9169 20c8 800C     		.2byte	0xc80
 9170 20ca 0E0A0000 		.4byte	0xa0e
 9171 20ce 01       		.uleb128 0x1
 9172 20cf 50       		.byte	0x50
 9173 20d0 31       		.uleb128 0x31
 9174 20d1 5A0D0000 		.4byte	.LASF296
 9175 20d5 01       		.byte	0x1
 9176 20d6 800C     		.2byte	0xc80
 9177 20d8 EF200000 		.4byte	0x20ef
 9178 20dc 01       		.uleb128 0x1
 9179 20dd 51       		.byte	0x51
 9180 20de 27       		.uleb128 0x27
 9181 20df B4150000 		.4byte	.LASF206
 9182 20e3 01       		.byte	0x1
 9183 20e4 820C     		.2byte	0xc82
 9184 20e6 CB0D0000 		.4byte	0xdcb
 9185 20ea 800E0000 		.4byte	.LLST101
 9186 20ee 00       		.byte	0
 9187 20ef 18       		.uleb128 0x18
 9188 20f0 15090000 		.4byte	0x915
 9189 20f4 33       		.uleb128 0x33
 9190 20f5 5B150000 		.4byte	.LASF297
 9191 20f9 01       		.byte	0x1
 9192 20fa AB0D     		.2byte	0xdab
 9193 20fc 00000000 		.4byte	.LFB107
 9194 2100 78000000 		.4byte	.LFE107-.LFB107
 9195 2104 01       		.uleb128 0x1
 9196 2105 9C       		.byte	0x9c
 9197 2106 8A210000 		.4byte	0x218a
 9198 210a 26       		.uleb128 0x26
 9199 210b 49020000 		.4byte	.LASF209
 9200 210f 01       		.byte	0x1
 9201 2110 AB0D     		.2byte	0xdab
 9202 2112 0E0A0000 		.4byte	0xa0e
 9203 2116 930E0000 		.4byte	.LLST102
 9204 211a 26       		.uleb128 0x26
 9205 211b 36040000 		.4byte	.LASF298
 9206 211f 01       		.byte	0x1
 9207 2120 AB0D     		.2byte	0xdab
 9208 2122 8A210000 		.4byte	0x218a
 9209 2126 A60E0000 		.4byte	.LLST103
 9210 212a 26       		.uleb128 0x26
 9211 212b 670B0000 		.4byte	.LASF299
 9212 212f 01       		.byte	0x1
 9213 2130 AB0D     		.2byte	0xdab
 9214 2132 0A090000 		.4byte	0x90a
 9215 2136 E80E0000 		.4byte	.LLST104
 9216 213a 26       		.uleb128 0x26
 9217 213b 9F070000 		.4byte	.LASF300
 9218 213f 01       		.byte	0x1
 9219 2140 AB0D     		.2byte	0xdab
 9220 2142 4A0A0000 		.4byte	0xa4a
 9221 2146 140F0000 		.4byte	.LLST105
 9222 214a 27       		.uleb128 0x27
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 267


 9223 214b B4150000 		.4byte	.LASF206
 9224 214f 01       		.byte	0x1
 9225 2150 AD0D     		.2byte	0xdad
 9226 2152 CB0D0000 		.4byte	0xdcb
 9227 2156 670F0000 		.4byte	.LLST106
 9228 215a 2D       		.uleb128 0x2d
 9229 215b 4A000000 		.4byte	.LVL315
 9230 215f 82180000 		.4byte	0x1882
 9231 2163 2D       		.uleb128 0x2d
 9232 2164 56000000 		.4byte	.LVL316
 9233 2168 021A0000 		.4byte	0x1a02
 9234 216c 2A       		.uleb128 0x2a
 9235 216d 5E000000 		.4byte	.LVL318
 9236 2171 12140000 		.4byte	0x1412
 9237 2175 80210000 		.4byte	0x2180
 9238 2179 2B       		.uleb128 0x2b
 9239 217a 01       		.uleb128 0x1
 9240 217b 50       		.byte	0x50
 9241 217c 02       		.uleb128 0x2
 9242 217d 75       		.byte	0x75
 9243 217e 00       		.sleb128 0
 9244 217f 00       		.byte	0
 9245 2180 2D       		.uleb128 0x2d
 9246 2181 68000000 		.4byte	.LVL319
 9247 2185 5E0D0000 		.4byte	0xd5e
 9248 2189 00       		.byte	0
 9249 218a 0D       		.uleb128 0xd
 9250 218b 04       		.byte	0x4
 9251 218c 7B0B0000 		.4byte	0xb7b
 9252 2190 25       		.uleb128 0x25
 9253 2191 2C110000 		.4byte	.LASF301
 9254 2195 01       		.byte	0x1
 9255 2196 0B0E     		.2byte	0xe0b
 9256 2198 15090000 		.4byte	0x915
 9257 219c 00000000 		.4byte	.LFB108
 9258 21a0 5C000000 		.4byte	.LFE108-.LFB108
 9259 21a4 01       		.uleb128 0x1
 9260 21a5 9C       		.byte	0x9c
 9261 21a6 72220000 		.4byte	0x2272
 9262 21aa 26       		.uleb128 0x26
 9263 21ab F30E0000 		.4byte	.LASF302
 9264 21af 01       		.byte	0x1
 9265 21b0 0B0E     		.2byte	0xe0b
 9266 21b2 8A210000 		.4byte	0x218a
 9267 21b6 7A0F0000 		.4byte	.LLST107
 9268 21ba 26       		.uleb128 0x26
 9269 21bb 050F0000 		.4byte	.LASF303
 9270 21bf 01       		.byte	0x1
 9271 21c0 0B0E     		.2byte	0xe0b
 9272 21c2 7D140000 		.4byte	0x147d
 9273 21c6 B10F0000 		.4byte	.LLST108
 9274 21ca 26       		.uleb128 0x26
 9275 21cb 9F070000 		.4byte	.LASF300
 9276 21cf 01       		.byte	0x1
 9277 21d0 0B0E     		.2byte	0xe0b
 9278 21d2 4A0A0000 		.4byte	0xa4a
 9279 21d6 E80F0000 		.4byte	.LLST109
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 268


 9280 21da 27       		.uleb128 0x27
 9281 21db ED040000 		.4byte	.LASF304
 9282 21df 01       		.byte	0x1
 9283 21e0 0D0E     		.2byte	0xe0d
 9284 21e2 CB0D0000 		.4byte	0xdcb
 9285 21e6 22100000 		.4byte	.LLST110
 9286 21ea 27       		.uleb128 0x27
 9287 21eb 130A0000 		.4byte	.LASF305
 9288 21ef 01       		.byte	0x1
 9289 21f0 0D0E     		.2byte	0xe0d
 9290 21f2 CB0D0000 		.4byte	0xdcb
 9291 21f6 35100000 		.4byte	.LLST111
 9292 21fa 27       		.uleb128 0x27
 9293 21fb 94130000 		.4byte	.LASF306
 9294 21ff 01       		.byte	0x1
 9295 2200 0E0E     		.2byte	0xe0e
 9296 2202 15090000 		.4byte	0x915
 9297 2206 48100000 		.4byte	.LLST112
 9298 220a 32       		.uleb128 0x32
 9299 220b 08000000 		.4byte	.LBB55
 9300 220f 1E000000 		.4byte	.LBE55-.LBB55
 9301 2213 28220000 		.4byte	0x2228
 9302 2217 27       		.uleb128 0x27
 9303 2218 CF120000 		.4byte	.LASF276
 9304 221c 01       		.byte	0x1
 9305 221d 120E     		.2byte	0xe12
 9306 221f 921C0000 		.4byte	0x1c92
 9307 2223 7E100000 		.4byte	.LLST113
 9308 2227 00       		.byte	0
 9309 2228 32       		.uleb128 0x32
 9310 2229 28000000 		.4byte	.LBB56
 9311 222d 12000000 		.4byte	.LBE56-.LBB56
 9312 2231 46220000 		.4byte	0x2246
 9313 2235 27       		.uleb128 0x27
 9314 2236 CF120000 		.4byte	.LASF276
 9315 223a 01       		.byte	0x1
 9316 223b 1A0E     		.2byte	0xe1a
 9317 223d 921C0000 		.4byte	0x1c92
 9318 2241 9C100000 		.4byte	.LLST114
 9319 2245 00       		.byte	0
 9320 2246 2C       		.uleb128 0x2c
 9321 2247 4C000000 		.4byte	.LVL328
 9322 224b F4200000 		.4byte	0x20f4
 9323 224f 2B       		.uleb128 0x2b
 9324 2250 01       		.uleb128 0x1
 9325 2251 50       		.byte	0x50
 9326 2252 02       		.uleb128 0x2
 9327 2253 76       		.byte	0x76
 9328 2254 00       		.sleb128 0
 9329 2255 2B       		.uleb128 0x2b
 9330 2256 01       		.uleb128 0x1
 9331 2257 51       		.byte	0x51
 9332 2258 0C       		.uleb128 0xc
 9333 2259 74       		.byte	0x74
 9334 225a 00       		.sleb128 0
 9335 225b 33       		.byte	0x33
 9336 225c 24       		.byte	0x24
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 269


 9337 225d 74       		.byte	0x74
 9338 225e 00       		.sleb128 0
 9339 225f 22       		.byte	0x22
 9340 2260 32       		.byte	0x32
 9341 2261 24       		.byte	0x24
 9342 2262 77       		.byte	0x77
 9343 2263 00       		.sleb128 0
 9344 2264 22       		.byte	0x22
 9345 2265 2B       		.uleb128 0x2b
 9346 2266 01       		.uleb128 0x1
 9347 2267 52       		.byte	0x52
 9348 2268 01       		.uleb128 0x1
 9349 2269 31       		.byte	0x31
 9350 226a 2B       		.uleb128 0x2b
 9351 226b 01       		.uleb128 0x1
 9352 226c 53       		.byte	0x53
 9353 226d 02       		.uleb128 0x2
 9354 226e 78       		.byte	0x78
 9355 226f 00       		.sleb128 0
 9356 2270 00       		.byte	0
 9357 2271 00       		.byte	0
 9358 2272 30       		.uleb128 0x30
 9359 2273 A3130000 		.4byte	.LASF307
 9360 2277 01       		.byte	0x1
 9361 2278 6909     		.2byte	0x969
 9362 227a 15090000 		.4byte	0x915
 9363 227e 00000000 		.4byte	.LFB91
 9364 2282 A4000000 		.4byte	.LFE91-.LFB91
 9365 2286 01       		.uleb128 0x1
 9366 2287 9C       		.byte	0x9c
 9367 2288 C7230000 		.4byte	0x23c7
 9368 228c 26       		.uleb128 0x26
 9369 228d F30E0000 		.4byte	.LASF302
 9370 2291 01       		.byte	0x1
 9371 2292 6909     		.2byte	0x969
 9372 2294 C7230000 		.4byte	0x23c7
 9373 2298 AF100000 		.4byte	.LLST115
 9374 229c 26       		.uleb128 0x26
 9375 229d 830B0000 		.4byte	.LASF308
 9376 22a1 01       		.byte	0x1
 9377 22a2 6909     		.2byte	0x969
 9378 22a4 EF200000 		.4byte	0x20ef
 9379 22a8 DB100000 		.4byte	.LLST116
 9380 22ac 26       		.uleb128 0x26
 9381 22ad FA000000 		.4byte	.LASF309
 9382 22b1 01       		.byte	0x1
 9383 22b2 6909     		.2byte	0x969
 9384 22b4 D2230000 		.4byte	0x23d2
 9385 22b8 20110000 		.4byte	.LLST117
 9386 22bc 27       		.uleb128 0x27
 9387 22bd 94130000 		.4byte	.LASF306
 9388 22c1 01       		.byte	0x1
 9389 22c2 6B09     		.2byte	0x96b
 9390 22c4 15090000 		.4byte	0x915
 9391 22c8 4C110000 		.4byte	.LLST118
 9392 22cc 27       		.uleb128 0x27
 9393 22cd BD120000 		.4byte	.LASF310
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 270


 9394 22d1 01       		.byte	0x1
 9395 22d2 6B09     		.2byte	0x96b
 9396 22d4 15090000 		.4byte	0x915
 9397 22d8 8D110000 		.4byte	.LLST119
 9398 22dc 2D       		.uleb128 0x2d
 9399 22dd 0C000000 		.4byte	.LVL334
 9400 22e1 82180000 		.4byte	0x1882
 9401 22e5 2A       		.uleb128 0x2a
 9402 22e6 34000000 		.4byte	.LVL337
 9403 22ea 90210000 		.4byte	0x2190
 9404 22ee 1B230000 		.4byte	0x231b
 9405 22f2 2B       		.uleb128 0x2b
 9406 22f3 01       		.uleb128 0x1
 9407 22f4 50       		.byte	0x50
 9408 22f5 0C       		.uleb128 0xc
 9409 22f6 74       		.byte	0x74
 9410 22f7 00       		.sleb128 0
 9411 22f8 33       		.byte	0x33
 9412 22f9 24       		.byte	0x24
 9413 22fa 74       		.byte	0x74
 9414 22fb 00       		.sleb128 0
 9415 22fc 22       		.byte	0x22
 9416 22fd 32       		.byte	0x32
 9417 22fe 24       		.byte	0x24
 9418 22ff 77       		.byte	0x77
 9419 2300 00       		.sleb128 0
 9420 2301 22       		.byte	0x22
 9421 2302 2B       		.uleb128 0x2b
 9422 2303 01       		.uleb128 0x1
 9423 2304 51       		.byte	0x51
 9424 2305 0F       		.uleb128 0xf
 9425 2306 75       		.byte	0x75
 9426 2307 00       		.sleb128 0
 9427 2308 32       		.byte	0x32
 9428 2309 24       		.byte	0x24
 9429 230a 75       		.byte	0x75
 9430 230b 00       		.sleb128 0
 9431 230c 22       		.byte	0x22
 9432 230d 32       		.byte	0x32
 9433 230e 24       		.byte	0x24
 9434 230f 03       		.byte	0x3
 9435 2310 30000000 		.4byte	.LANCHOR0+48
 9436 2314 22       		.byte	0x22
 9437 2315 2B       		.uleb128 0x2b
 9438 2316 01       		.uleb128 0x1
 9439 2317 52       		.byte	0x52
 9440 2318 01       		.uleb128 0x1
 9441 2319 31       		.byte	0x31
 9442 231a 00       		.byte	0
 9443 231b 2A       		.uleb128 0x2a
 9444 231c 4C000000 		.4byte	.LVL340
 9445 2320 90210000 		.4byte	0x2190
 9446 2324 3E230000 		.4byte	0x233e
 9447 2328 2B       		.uleb128 0x2b
 9448 2329 01       		.uleb128 0x1
 9449 232a 50       		.byte	0x50
 9450 232b 0C       		.uleb128 0xc
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 271


 9451 232c 74       		.byte	0x74
 9452 232d 00       		.sleb128 0
 9453 232e 33       		.byte	0x33
 9454 232f 24       		.byte	0x24
 9455 2330 74       		.byte	0x74
 9456 2331 00       		.sleb128 0
 9457 2332 22       		.byte	0x22
 9458 2333 32       		.byte	0x32
 9459 2334 24       		.byte	0x24
 9460 2335 77       		.byte	0x77
 9461 2336 00       		.sleb128 0
 9462 2337 22       		.byte	0x22
 9463 2338 2B       		.uleb128 0x2b
 9464 2339 01       		.uleb128 0x1
 9465 233a 52       		.byte	0x52
 9466 233b 01       		.uleb128 0x1
 9467 233c 32       		.byte	0x32
 9468 233d 00       		.byte	0
 9469 233e 2A       		.uleb128 0x2a
 9470 233f 60000000 		.4byte	.LVL342
 9471 2343 90210000 		.4byte	0x2190
 9472 2347 61230000 		.4byte	0x2361
 9473 234b 2B       		.uleb128 0x2b
 9474 234c 01       		.uleb128 0x1
 9475 234d 50       		.byte	0x50
 9476 234e 0C       		.uleb128 0xc
 9477 234f 74       		.byte	0x74
 9478 2350 00       		.sleb128 0
 9479 2351 33       		.byte	0x33
 9480 2352 24       		.byte	0x24
 9481 2353 74       		.byte	0x74
 9482 2354 00       		.sleb128 0
 9483 2355 22       		.byte	0x22
 9484 2356 32       		.byte	0x32
 9485 2357 24       		.byte	0x24
 9486 2358 77       		.byte	0x77
 9487 2359 00       		.sleb128 0
 9488 235a 22       		.byte	0x22
 9489 235b 2B       		.uleb128 0x2b
 9490 235c 01       		.uleb128 0x1
 9491 235d 52       		.byte	0x52
 9492 235e 01       		.uleb128 0x1
 9493 235f 32       		.byte	0x32
 9494 2360 00       		.byte	0
 9495 2361 2A       		.uleb128 0x2a
 9496 2362 74000000 		.4byte	.LVL344
 9497 2366 90210000 		.4byte	0x2190
 9498 236a 8B230000 		.4byte	0x238b
 9499 236e 2B       		.uleb128 0x2b
 9500 236f 01       		.uleb128 0x1
 9501 2370 50       		.byte	0x50
 9502 2371 0C       		.uleb128 0xc
 9503 2372 74       		.byte	0x74
 9504 2373 00       		.sleb128 0
 9505 2374 33       		.byte	0x33
 9506 2375 24       		.byte	0x24
 9507 2376 74       		.byte	0x74
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 272


 9508 2377 00       		.sleb128 0
 9509 2378 22       		.byte	0x22
 9510 2379 32       		.byte	0x32
 9511 237a 24       		.byte	0x24
 9512 237b 77       		.byte	0x77
 9513 237c 00       		.sleb128 0
 9514 237d 22       		.byte	0x22
 9515 237e 2B       		.uleb128 0x2b
 9516 237f 01       		.uleb128 0x1
 9517 2380 51       		.byte	0x51
 9518 2381 03       		.uleb128 0x3
 9519 2382 75       		.byte	0x75
 9520 2383 BC01     		.sleb128 188
 9521 2385 2B       		.uleb128 0x2b
 9522 2386 01       		.uleb128 0x1
 9523 2387 52       		.byte	0x52
 9524 2388 01       		.uleb128 0x1
 9525 2389 34       		.byte	0x34
 9526 238a 00       		.byte	0
 9527 238b 2A       		.uleb128 0x2a
 9528 238c 86000000 		.4byte	.LVL346
 9529 2390 90210000 		.4byte	0x2190
 9530 2394 B4230000 		.4byte	0x23b4
 9531 2398 2B       		.uleb128 0x2b
 9532 2399 01       		.uleb128 0x1
 9533 239a 50       		.byte	0x50
 9534 239b 0C       		.uleb128 0xc
 9535 239c 74       		.byte	0x74
 9536 239d 00       		.sleb128 0
 9537 239e 33       		.byte	0x33
 9538 239f 24       		.byte	0x24
 9539 23a0 74       		.byte	0x74
 9540 23a1 00       		.sleb128 0
 9541 23a2 22       		.byte	0x22
 9542 23a3 32       		.byte	0x32
 9543 23a4 24       		.byte	0x24
 9544 23a5 77       		.byte	0x77
 9545 23a6 00       		.sleb128 0
 9546 23a7 22       		.byte	0x22
 9547 23a8 2B       		.uleb128 0x2b
 9548 23a9 01       		.uleb128 0x1
 9549 23aa 51       		.byte	0x51
 9550 23ab 02       		.uleb128 0x2
 9551 23ac 75       		.byte	0x75
 9552 23ad 00       		.sleb128 0
 9553 23ae 2B       		.uleb128 0x2b
 9554 23af 01       		.uleb128 0x1
 9555 23b0 52       		.byte	0x52
 9556 23b1 01       		.uleb128 0x1
 9557 23b2 33       		.byte	0x33
 9558 23b3 00       		.byte	0
 9559 23b4 2D       		.uleb128 0x2d
 9560 23b5 8E000000 		.4byte	.LVL348
 9561 23b9 262F0000 		.4byte	0x2f26
 9562 23bd 2D       		.uleb128 0x2d
 9563 23be 98000000 		.4byte	.LVL351
 9564 23c2 021A0000 		.4byte	0x1a02
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 273


 9565 23c6 00       		.byte	0
 9566 23c7 18       		.uleb128 0x18
 9567 23c8 8A210000 		.4byte	0x218a
 9568 23cc 0D       		.uleb128 0xd
 9569 23cd 04       		.byte	0x4
 9570 23ce C0080000 		.4byte	0x8c0
 9571 23d2 18       		.uleb128 0x18
 9572 23d3 CC230000 		.4byte	0x23cc
 9573 23d7 30       		.uleb128 0x30
 9574 23d8 840C0000 		.4byte	.LASF311
 9575 23dc 01       		.byte	0x1
 9576 23dd 400E     		.2byte	0xe40
 9577 23df 15090000 		.4byte	0x915
 9578 23e3 00000000 		.4byte	.LFB110
 9579 23e7 18000000 		.4byte	.LFE110-.LFB110
 9580 23eb 01       		.uleb128 0x1
 9581 23ec 9C       		.byte	0x9c
 9582 23ed 39240000 		.4byte	0x2439
 9583 23f1 26       		.uleb128 0x26
 9584 23f2 49020000 		.4byte	.LASF209
 9585 23f6 01       		.byte	0x1
 9586 23f7 400E     		.2byte	0xe40
 9587 23f9 0E0A0000 		.4byte	0xa0e
 9588 23fd B8110000 		.4byte	.LLST120
 9589 2401 27       		.uleb128 0x27
 9590 2402 B4150000 		.4byte	.LASF206
 9591 2406 01       		.byte	0x1
 9592 2407 420E     		.2byte	0xe42
 9593 2409 CB0D0000 		.4byte	0xdcb
 9594 240d CB110000 		.4byte	.LLST121
 9595 2411 27       		.uleb128 0x27
 9596 2412 CE070000 		.4byte	.LASF312
 9597 2416 01       		.byte	0x1
 9598 2417 430E     		.2byte	0xe43
 9599 2419 2B090000 		.4byte	0x92b
 9600 241d DE110000 		.4byte	.LLST122
 9601 2421 34       		.uleb128 0x34
 9602 2422 4F020000 		.4byte	.LASF240
 9603 2426 01       		.byte	0x1
 9604 2427 440E     		.2byte	0xe44
 9605 2429 15090000 		.4byte	0x915
 9606 242d 01       		.uleb128 0x1
 9607 242e 50       		.byte	0x50
 9608 242f 2D       		.uleb128 0x2d
 9609 2430 12000000 		.4byte	.LVL355
 9610 2434 5E0D0000 		.4byte	0xd5e
 9611 2438 00       		.byte	0
 9612 2439 30       		.uleb128 0x30
 9613 243a C6110000 		.4byte	.LASF313
 9614 243e 01       		.byte	0x1
 9615 243f AC0E     		.2byte	0xeac
 9616 2441 0E0A0000 		.4byte	0xa0e
 9617 2445 00000000 		.4byte	.LFB113
 9618 2449 0C000000 		.4byte	.LFE113-.LFB113
 9619 244d 01       		.uleb128 0x1
 9620 244e 9C       		.byte	0x9c
 9621 244f 62240000 		.4byte	0x2462
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 274


 9622 2453 34       		.uleb128 0x34
 9623 2454 4A050000 		.4byte	.LASF205
 9624 2458 01       		.byte	0x1
 9625 2459 AE0E     		.2byte	0xeae
 9626 245b 0E0A0000 		.4byte	0xa0e
 9627 245f 01       		.uleb128 0x1
 9628 2460 50       		.byte	0x50
 9629 2461 00       		.byte	0
 9630 2462 30       		.uleb128 0x30
 9631 2463 290B0000 		.4byte	.LASF314
 9632 2467 01       		.byte	0x1
 9633 2468 D90E     		.2byte	0xed9
 9634 246a 0A090000 		.4byte	0x90a
 9635 246e 00000000 		.4byte	.LFB114
 9636 2472 D0000000 		.4byte	.LFE114-.LFB114
 9637 2476 01       		.uleb128 0x1
 9638 2477 9C       		.byte	0x9c
 9639 2478 D1240000 		.4byte	0x24d1
 9640 247c 26       		.uleb128 0x26
 9641 247d C5090000 		.4byte	.LASF315
 9642 2481 01       		.byte	0x1
 9643 2482 D90E     		.2byte	0xed9
 9644 2484 490D0000 		.4byte	0xd49
 9645 2488 F2110000 		.4byte	.LLST123
 9646 248c 27       		.uleb128 0x27
 9647 248d 50110000 		.4byte	.LASF316
 9648 2491 01       		.byte	0x1
 9649 2492 DB0E     		.2byte	0xedb
 9650 2494 AE160000 		.4byte	0x16ae
 9651 2498 7E120000 		.4byte	.LLST124
 9652 249c 27       		.uleb128 0x27
 9653 249d 4A050000 		.4byte	.LASF205
 9654 24a1 01       		.byte	0x1
 9655 24a2 DC0E     		.2byte	0xedc
 9656 24a4 0A090000 		.4byte	0x90a
 9657 24a8 0A130000 		.4byte	.LLST125
 9658 24ac 2A       		.uleb128 0x2a
 9659 24ad 4C000000 		.4byte	.LVL359
 9660 24b1 C02E0000 		.4byte	0x2ec0
 9661 24b5 C0240000 		.4byte	0x24c0
 9662 24b9 2B       		.uleb128 0x2b
 9663 24ba 01       		.uleb128 0x1
 9664 24bb 50       		.byte	0x50
 9665 24bc 02       		.uleb128 0x2
 9666 24bd 75       		.byte	0x75
 9667 24be 00       		.sleb128 0
 9668 24bf 00       		.byte	0
 9669 24c0 2C       		.uleb128 0x2c
 9670 24c1 9A000000 		.4byte	.LVL361
 9671 24c5 922E0000 		.4byte	0x2e92
 9672 24c9 2B       		.uleb128 0x2b
 9673 24ca 01       		.uleb128 0x1
 9674 24cb 51       		.byte	0x51
 9675 24cc 02       		.uleb128 0x2
 9676 24cd 75       		.byte	0x75
 9677 24ce 00       		.sleb128 0
 9678 24cf 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 275


 9679 24d0 00       		.byte	0
 9680 24d1 30       		.uleb128 0x30
 9681 24d2 EC010000 		.4byte	.LASF317
 9682 24d6 01       		.byte	0x1
 9683 24d7 300F     		.2byte	0xf30
 9684 24d9 0A090000 		.4byte	0x90a
 9685 24dd 00000000 		.4byte	.LFB115
 9686 24e1 88000000 		.4byte	.LFE115-.LFB115
 9687 24e5 01       		.uleb128 0x1
 9688 24e6 9C       		.byte	0x9c
 9689 24e7 40250000 		.4byte	0x2540
 9690 24eb 26       		.uleb128 0x26
 9691 24ec C5090000 		.4byte	.LASF315
 9692 24f0 01       		.byte	0x1
 9693 24f1 300F     		.2byte	0xf30
 9694 24f3 490D0000 		.4byte	0xd49
 9695 24f7 40130000 		.4byte	.LLST126
 9696 24fb 27       		.uleb128 0x27
 9697 24fc B4150000 		.4byte	.LASF206
 9698 2500 01       		.byte	0x1
 9699 2501 320F     		.2byte	0xf32
 9700 2503 AE160000 		.4byte	0x16ae
 9701 2507 A8130000 		.4byte	.LLST127
 9702 250b 27       		.uleb128 0x27
 9703 250c 4A050000 		.4byte	.LASF205
 9704 2510 01       		.byte	0x1
 9705 2511 330F     		.2byte	0xf33
 9706 2513 0A090000 		.4byte	0x90a
 9707 2517 10140000 		.4byte	.LLST128
 9708 251b 2A       		.uleb128 0x2a
 9709 251c 22000000 		.4byte	.LVL371
 9710 2520 C02E0000 		.4byte	0x2ec0
 9711 2524 2F250000 		.4byte	0x252f
 9712 2528 2B       		.uleb128 0x2b
 9713 2529 01       		.uleb128 0x1
 9714 252a 50       		.byte	0x50
 9715 252b 02       		.uleb128 0x2
 9716 252c 75       		.byte	0x75
 9717 252d 00       		.sleb128 0
 9718 252e 00       		.byte	0
 9719 252f 2C       		.uleb128 0x2c
 9720 2530 72000000 		.4byte	.LVL373
 9721 2534 922E0000 		.4byte	0x2e92
 9722 2538 2B       		.uleb128 0x2b
 9723 2539 01       		.uleb128 0x1
 9724 253a 51       		.byte	0x51
 9725 253b 02       		.uleb128 0x2
 9726 253c 75       		.byte	0x75
 9727 253d 00       		.sleb128 0
 9728 253e 00       		.byte	0
 9729 253f 00       		.byte	0
 9730 2540 33       		.uleb128 0x33
 9731 2541 0C0F0000 		.4byte	.LASF318
 9732 2545 01       		.byte	0x1
 9733 2546 800F     		.2byte	0xf80
 9734 2548 00000000 		.4byte	.LFB116
 9735 254c A0000000 		.4byte	.LFE116-.LFB116
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 276


 9736 2550 01       		.uleb128 0x1
 9737 2551 9C       		.byte	0x9c
 9738 2552 D8250000 		.4byte	0x25d8
 9739 2556 26       		.uleb128 0x26
 9740 2557 C5090000 		.4byte	.LASF315
 9741 255b 01       		.byte	0x1
 9742 255c 800F     		.2byte	0xf80
 9743 255e 490D0000 		.4byte	0xd49
 9744 2562 5E140000 		.4byte	.LLST129
 9745 2566 26       		.uleb128 0x26
 9746 2567 A9110000 		.4byte	.LASF319
 9747 256b 01       		.byte	0x1
 9748 256c 800F     		.2byte	0xf80
 9749 256e 15090000 		.4byte	0x915
 9750 2572 A0140000 		.4byte	.LLST130
 9751 2576 27       		.uleb128 0x27
 9752 2577 B4150000 		.4byte	.LASF206
 9753 257b 01       		.byte	0x1
 9754 257c 820F     		.2byte	0xf82
 9755 257e AE160000 		.4byte	0x16ae
 9756 2582 CC140000 		.4byte	.LLST131
 9757 2586 27       		.uleb128 0x27
 9758 2587 62090000 		.4byte	.LASF247
 9759 258b 01       		.byte	0x1
 9760 258c 830F     		.2byte	0xf83
 9761 258e 15090000 		.4byte	0x915
 9762 2592 0E150000 		.4byte	.LLST132
 9763 2596 27       		.uleb128 0x27
 9764 2597 0D050000 		.4byte	.LASF320
 9765 259b 01       		.byte	0x1
 9766 259c 830F     		.2byte	0xf83
 9767 259e 15090000 		.4byte	0x915
 9768 25a2 21150000 		.4byte	.LLST133
 9769 25a6 3B       		.uleb128 0x3b
 9770 25a7 89110000 		.4byte	.LASF321
 9771 25ab 01       		.byte	0x1
 9772 25ac 840F     		.2byte	0xf84
 9773 25ae EF200000 		.4byte	0x20ef
 9774 25b2 01       		.byte	0x1
 9775 25b3 2A       		.uleb128 0x2a
 9776 25b4 4C000000 		.4byte	.LVL387
 9777 25b8 C02E0000 		.4byte	0x2ec0
 9778 25bc C7250000 		.4byte	0x25c7
 9779 25c0 2B       		.uleb128 0x2b
 9780 25c1 01       		.uleb128 0x1
 9781 25c2 50       		.byte	0x50
 9782 25c3 02       		.uleb128 0x2
 9783 25c4 75       		.byte	0x75
 9784 25c5 00       		.sleb128 0
 9785 25c6 00       		.byte	0
 9786 25c7 2C       		.uleb128 0x2c
 9787 25c8 94000000 		.4byte	.LVL388
 9788 25cc 922E0000 		.4byte	0x2e92
 9789 25d0 2B       		.uleb128 0x2b
 9790 25d1 01       		.uleb128 0x1
 9791 25d2 51       		.byte	0x51
 9792 25d3 02       		.uleb128 0x2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 277


 9793 25d4 75       		.byte	0x75
 9794 25d5 00       		.sleb128 0
 9795 25d6 00       		.byte	0
 9796 25d7 00       		.byte	0
 9797 25d8 33       		.uleb128 0x33
 9798 25d9 660A0000 		.4byte	.LASF322
 9799 25dd 01       		.byte	0x1
 9800 25de 3F10     		.2byte	0x103f
 9801 25e0 00000000 		.4byte	.LFB118
 9802 25e4 D4000000 		.4byte	.LFE118-.LFB118
 9803 25e8 01       		.uleb128 0x1
 9804 25e9 9C       		.byte	0x9c
 9805 25ea BF260000 		.4byte	0x26bf
 9806 25ee 26       		.uleb128 0x26
 9807 25ef B8130000 		.4byte	.LASF323
 9808 25f3 01       		.byte	0x1
 9809 25f4 3F10     		.2byte	0x103f
 9810 25f6 45010000 		.4byte	0x145
 9811 25fa 40150000 		.4byte	.LLST134
 9812 25fe 27       		.uleb128 0x27
 9813 25ff F30E0000 		.4byte	.LASF302
 9814 2603 01       		.byte	0x1
 9815 2604 4110     		.2byte	0x1041
 9816 2606 8A210000 		.4byte	0x218a
 9817 260a 74150000 		.4byte	.LLST135
 9818 260e 34       		.uleb128 0x34
 9819 260f 830B0000 		.4byte	.LASF308
 9820 2613 01       		.byte	0x1
 9821 2614 4210     		.2byte	0x1042
 9822 2616 F8090000 		.4byte	0x9f8
 9823 261a 02       		.uleb128 0x2
 9824 261b 91       		.byte	0x91
 9825 261c 64       		.sleb128 -28
 9826 261d 41       		.uleb128 0x41
 9827 261e 7800     		.ascii	"x\000"
 9828 2620 01       		.byte	0x1
 9829 2621 4210     		.2byte	0x1042
 9830 2623 F8090000 		.4byte	0x9f8
 9831 2627 02       		.uleb128 0x2
 9832 2628 91       		.byte	0x91
 9833 2629 60       		.sleb128 -32
 9834 262a 27       		.uleb128 0x27
 9835 262b D3090000 		.4byte	.LASF324
 9836 262f 01       		.byte	0x1
 9837 2630 4310     		.2byte	0x1043
 9838 2632 4B010000 		.4byte	0x14b
 9839 2636 92150000 		.4byte	.LLST136
 9840 263a 2D       		.uleb128 0x2d
 9841 263b 20000000 		.4byte	.LVL392
 9842 263f EE2E0000 		.4byte	0x2eee
 9843 2643 2A       		.uleb128 0x2a
 9844 2644 2E000000 		.4byte	.LVL393
 9845 2648 72220000 		.4byte	0x2272
 9846 264c 5C260000 		.4byte	0x265c
 9847 2650 2B       		.uleb128 0x2b
 9848 2651 01       		.uleb128 0x1
 9849 2652 50       		.byte	0x50
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 278


 9850 2653 02       		.uleb128 0x2
 9851 2654 74       		.byte	0x74
 9852 2655 00       		.sleb128 0
 9853 2656 2B       		.uleb128 0x2b
 9854 2657 01       		.uleb128 0x1
 9855 2658 52       		.byte	0x52
 9856 2659 01       		.uleb128 0x1
 9857 265a 30       		.byte	0x30
 9858 265b 00       		.byte	0
 9859 265c 2A       		.uleb128 0x2a
 9860 265d 78000000 		.4byte	.LVL400
 9861 2661 AB110000 		.4byte	0x11ab
 9862 2665 70260000 		.4byte	0x2670
 9863 2669 2B       		.uleb128 0x2b
 9864 266a 01       		.uleb128 0x1
 9865 266b 50       		.byte	0x50
 9866 266c 02       		.uleb128 0x2
 9867 266d 75       		.byte	0x75
 9868 266e 00       		.sleb128 0
 9869 266f 00       		.byte	0
 9870 2670 2A       		.uleb128 0x2a
 9871 2671 AA000000 		.4byte	.LVL402
 9872 2675 312F0000 		.4byte	0x2f31
 9873 2679 9A260000 		.4byte	0x269a
 9874 267d 2B       		.uleb128 0x2b
 9875 267e 01       		.uleb128 0x1
 9876 267f 50       		.byte	0x50
 9877 2680 02       		.uleb128 0x2
 9878 2681 75       		.byte	0x75
 9879 2682 00       		.sleb128 0
 9880 2683 2B       		.uleb128 0x2b
 9881 2684 01       		.uleb128 0x1
 9882 2685 51       		.byte	0x51
 9883 2686 05       		.uleb128 0x5
 9884 2687 03       		.byte	0x3
 9885 2688 0C000000 		.4byte	.LC2
 9886 268c 2B       		.uleb128 0x2b
 9887 268d 01       		.uleb128 0x1
 9888 268e 52       		.byte	0x52
 9889 268f 02       		.uleb128 0x2
 9890 2690 76       		.byte	0x76
 9891 2691 00       		.sleb128 0
 9892 2692 2B       		.uleb128 0x2b
 9893 2693 02       		.uleb128 0x2
 9894 2694 7D       		.byte	0x7d
 9895 2695 00       		.sleb128 0
 9896 2696 02       		.uleb128 0x2
 9897 2697 77       		.byte	0x77
 9898 2698 00       		.sleb128 0
 9899 2699 00       		.byte	0
 9900 269a 2A       		.uleb128 0x2a
 9901 269b B0000000 		.4byte	.LVL403
 9902 269f E32E0000 		.4byte	0x2ee3
 9903 26a3 AE260000 		.4byte	0x26ae
 9904 26a7 2B       		.uleb128 0x2b
 9905 26a8 01       		.uleb128 0x1
 9906 26a9 50       		.byte	0x50
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 279


 9907 26aa 02       		.uleb128 0x2
 9908 26ab 75       		.byte	0x75
 9909 26ac 00       		.sleb128 0
 9910 26ad 00       		.byte	0
 9911 26ae 2C       		.uleb128 0x2c
 9912 26af C6000000 		.4byte	.LVL406
 9913 26b3 B52E0000 		.4byte	0x2eb5
 9914 26b7 2B       		.uleb128 0x2b
 9915 26b8 01       		.uleb128 0x1
 9916 26b9 50       		.byte	0x50
 9917 26ba 02       		.uleb128 0x2
 9918 26bb 74       		.byte	0x74
 9919 26bc 00       		.sleb128 0
 9920 26bd 00       		.byte	0
 9921 26be 00       		.byte	0
 9922 26bf 33       		.uleb128 0x33
 9923 26c0 0A010000 		.4byte	.LASF325
 9924 26c4 01       		.byte	0x1
 9925 26c5 A110     		.2byte	0x10a1
 9926 26c7 00000000 		.4byte	.LFB119
 9927 26cb C8000000 		.4byte	.LFE119-.LFB119
 9928 26cf 01       		.uleb128 0x1
 9929 26d0 9C       		.byte	0x9c
 9930 26d1 C6270000 		.4byte	0x27c6
 9931 26d5 26       		.uleb128 0x26
 9932 26d6 B8130000 		.4byte	.LASF323
 9933 26da 01       		.byte	0x1
 9934 26db A110     		.2byte	0x10a1
 9935 26dd 45010000 		.4byte	0x145
 9936 26e1 D8150000 		.4byte	.LLST137
 9937 26e5 27       		.uleb128 0x27
 9938 26e6 F30E0000 		.4byte	.LASF302
 9939 26ea 01       		.byte	0x1
 9940 26eb A310     		.2byte	0x10a3
 9941 26ed 8A210000 		.4byte	0x218a
 9942 26f1 22160000 		.4byte	.LLST138
 9943 26f5 34       		.uleb128 0x34
 9944 26f6 830B0000 		.4byte	.LASF308
 9945 26fa 01       		.byte	0x1
 9946 26fb A410     		.2byte	0x10a4
 9947 26fd F8090000 		.4byte	0x9f8
 9948 2701 02       		.uleb128 0x2
 9949 2702 91       		.byte	0x91
 9950 2703 6C       		.sleb128 -20
 9951 2704 41       		.uleb128 0x41
 9952 2705 7800     		.ascii	"x\000"
 9953 2707 01       		.byte	0x1
 9954 2708 A410     		.2byte	0x10a4
 9955 270a F8090000 		.4byte	0x9f8
 9956 270e 02       		.uleb128 0x2
 9957 270f 91       		.byte	0x91
 9958 2710 68       		.sleb128 -24
 9959 2711 34       		.uleb128 0x34
 9960 2712 D30A0000 		.4byte	.LASF326
 9961 2716 01       		.byte	0x1
 9962 2717 A510     		.2byte	0x10a5
 9963 2719 C0080000 		.4byte	0x8c0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 280


 9964 271d 02       		.uleb128 0x2
 9965 271e 91       		.byte	0x91
 9966 271f 64       		.sleb128 -28
 9967 2720 27       		.uleb128 0x27
 9968 2721 A0000000 		.4byte	.LASF327
 9969 2725 01       		.byte	0x1
 9970 2726 A510     		.2byte	0x10a5
 9971 2728 C0080000 		.4byte	0x8c0
 9972 272c 40160000 		.4byte	.LLST139
 9973 2730 2D       		.uleb128 0x2d
 9974 2731 20000000 		.4byte	.LVL410
 9975 2735 EE2E0000 		.4byte	0x2eee
 9976 2739 2A       		.uleb128 0x2a
 9977 273a 2E000000 		.4byte	.LVL411
 9978 273e 72220000 		.4byte	0x2272
 9979 2742 53270000 		.4byte	0x2753
 9980 2746 2B       		.uleb128 0x2b
 9981 2747 01       		.uleb128 0x1
 9982 2748 50       		.byte	0x50
 9983 2749 02       		.uleb128 0x2
 9984 274a 75       		.byte	0x75
 9985 274b 00       		.sleb128 0
 9986 274c 2B       		.uleb128 0x2b
 9987 274d 01       		.uleb128 0x1
 9988 274e 52       		.byte	0x52
 9989 274f 02       		.uleb128 0x2
 9990 2750 91       		.byte	0x91
 9991 2751 64       		.sleb128 -28
 9992 2752 00       		.byte	0
 9993 2753 2A       		.uleb128 0x2a
 9994 2754 6A000000 		.4byte	.LVL413
 9995 2758 AB110000 		.4byte	0x11ab
 9996 275c 67270000 		.4byte	0x2767
 9997 2760 2B       		.uleb128 0x2b
 9998 2761 01       		.uleb128 0x1
 9999 2762 50       		.byte	0x50
 10000 2763 02       		.uleb128 0x2
 10001 2764 74       		.byte	0x74
 10002 2765 00       		.sleb128 0
 10003 2766 00       		.byte	0
 10004 2767 2A       		.uleb128 0x2a
 10005 2768 82000000 		.4byte	.LVL415
 10006 276c 312F0000 		.4byte	0x2f31
 10007 2770 8A270000 		.4byte	0x278a
 10008 2774 2B       		.uleb128 0x2b
 10009 2775 01       		.uleb128 0x1
 10010 2776 50       		.byte	0x50
 10011 2777 02       		.uleb128 0x2
 10012 2778 74       		.byte	0x74
 10013 2779 00       		.sleb128 0
 10014 277a 2B       		.uleb128 0x2b
 10015 277b 01       		.uleb128 0x1
 10016 277c 51       		.byte	0x51
 10017 277d 05       		.uleb128 0x5
 10018 277e 03       		.byte	0x3
 10019 277f 1C000000 		.4byte	.LC3
 10020 2783 2B       		.uleb128 0x2b
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 281


 10021 2784 01       		.uleb128 0x1
 10022 2785 53       		.byte	0x53
 10023 2786 02       		.uleb128 0x2
 10024 2787 76       		.byte	0x76
 10025 2788 00       		.sleb128 0
 10026 2789 00       		.byte	0
 10027 278a 2A       		.uleb128 0x2a
 10028 278b 96000000 		.4byte	.LVL417
 10029 278f 312F0000 		.4byte	0x2f31
 10030 2793 A1270000 		.4byte	0x27a1
 10031 2797 2B       		.uleb128 0x2b
 10032 2798 01       		.uleb128 0x1
 10033 2799 51       		.byte	0x51
 10034 279a 05       		.uleb128 0x5
 10035 279b 03       		.byte	0x3
 10036 279c 28000000 		.4byte	.LC4
 10037 27a0 00       		.byte	0
 10038 27a1 2A       		.uleb128 0x2a
 10039 27a2 9C000000 		.4byte	.LVL418
 10040 27a6 E32E0000 		.4byte	0x2ee3
 10041 27aa B5270000 		.4byte	0x27b5
 10042 27ae 2B       		.uleb128 0x2b
 10043 27af 01       		.uleb128 0x1
 10044 27b0 50       		.byte	0x50
 10045 27b1 02       		.uleb128 0x2
 10046 27b2 74       		.byte	0x74
 10047 27b3 00       		.sleb128 0
 10048 27b4 00       		.byte	0
 10049 27b5 2C       		.uleb128 0x2c
 10050 27b6 B2000000 		.4byte	.LVL421
 10051 27ba B52E0000 		.4byte	0x2eb5
 10052 27be 2B       		.uleb128 0x2b
 10053 27bf 01       		.uleb128 0x1
 10054 27c0 50       		.byte	0x50
 10055 27c1 02       		.uleb128 0x2
 10056 27c2 75       		.byte	0x75
 10057 27c3 00       		.sleb128 0
 10058 27c4 00       		.byte	0
 10059 27c5 00       		.byte	0
 10060 27c6 30       		.uleb128 0x30
 10061 27c7 05070000 		.4byte	.LASF328
 10062 27cb 01       		.byte	0x1
 10063 27cc 1E11     		.2byte	0x111e
 10064 27ce 20090000 		.4byte	0x920
 10065 27d2 00000000 		.4byte	.LFB120
 10066 27d6 20000000 		.4byte	.LFE120-.LFB120
 10067 27da 01       		.uleb128 0x1
 10068 27db 9C       		.byte	0x9c
 10069 27dc EF270000 		.4byte	0x27ef
 10070 27e0 34       		.uleb128 0x34
 10071 27e1 4F020000 		.4byte	.LASF240
 10072 27e5 01       		.byte	0x1
 10073 27e6 2011     		.2byte	0x1120
 10074 27e8 20090000 		.4byte	0x920
 10075 27ec 01       		.uleb128 0x1
 10076 27ed 50       		.byte	0x50
 10077 27ee 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 282


 10078 27ef 3C       		.uleb128 0x3c
 10079 27f0 02080000 		.4byte	.LASF330
 10080 27f4 01       		.byte	0x1
 10081 27f5 2E11     		.2byte	0x112e
 10082 27f7 43010000 		.4byte	0x143
 10083 27fb 00000000 		.4byte	.LFB121
 10084 27ff 20000000 		.4byte	.LFE121-.LFB121
 10085 2803 01       		.uleb128 0x1
 10086 2804 9C       		.byte	0x9c
 10087 2805 30       		.uleb128 0x30
 10088 2806 C8080000 		.4byte	.LASF331
 10089 280a 01       		.byte	0x1
 10090 280b 3F11     		.2byte	0x113f
 10091 280d C0080000 		.4byte	0x8c0
 10092 2811 00000000 		.4byte	.LFB122
 10093 2815 88000000 		.4byte	.LFE122-.LFB122
 10094 2819 01       		.uleb128 0x1
 10095 281a 9C       		.byte	0x9c
 10096 281b 8D280000 		.4byte	0x288d
 10097 281f 26       		.uleb128 0x26
 10098 2820 A8040000 		.4byte	.LASF332
 10099 2824 01       		.byte	0x1
 10100 2825 3F11     		.2byte	0x113f
 10101 2827 0A090000 		.4byte	0x90a
 10102 282b 53160000 		.4byte	.LLST140
 10103 282f 26       		.uleb128 0x26
 10104 2830 110D0000 		.4byte	.LASF227
 10105 2834 01       		.byte	0x1
 10106 2835 3F11     		.2byte	0x113f
 10107 2837 20090000 		.4byte	0x920
 10108 283b 7F160000 		.4byte	.LLST141
 10109 283f 27       		.uleb128 0x27
 10110 2840 7A0B0000 		.4byte	.LASF333
 10111 2844 01       		.byte	0x1
 10112 2845 4111     		.2byte	0x1141
 10113 2847 C0080000 		.4byte	0x8c0
 10114 284b AB160000 		.4byte	.LLST142
 10115 284f 2D       		.uleb128 0x2d
 10116 2850 0A000000 		.4byte	.LVL425
 10117 2854 872E0000 		.4byte	0x2e87
 10118 2858 2A       		.uleb128 0x2a
 10119 2859 2C000000 		.4byte	.LVL426
 10120 285d 18110000 		.4byte	0x1118
 10121 2861 71280000 		.4byte	0x2871
 10122 2865 2B       		.uleb128 0x2b
 10123 2866 01       		.uleb128 0x1
 10124 2867 50       		.byte	0x50
 10125 2868 02       		.uleb128 0x2
 10126 2869 74       		.byte	0x74
 10127 286a 00       		.sleb128 0
 10128 286b 2B       		.uleb128 0x2b
 10129 286c 01       		.uleb128 0x1
 10130 286d 51       		.byte	0x51
 10131 286e 01       		.uleb128 0x1
 10132 286f 31       		.byte	0x31
 10133 2870 00       		.byte	0
 10134 2871 2D       		.uleb128 0x2d
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 283


 10135 2872 40000000 		.4byte	.LVL427
 10136 2876 9E2E0000 		.4byte	0x2e9e
 10137 287a 2D       		.uleb128 0x2d
 10138 287b 44000000 		.4byte	.LVL428
 10139 287f 872E0000 		.4byte	0x2e87
 10140 2883 2D       		.uleb128 0x2d
 10141 2884 7C000000 		.4byte	.LVL430
 10142 2888 9E2E0000 		.4byte	0x2e9e
 10143 288c 00       		.byte	0
 10144 288d 30       		.uleb128 0x30
 10145 288e 83150000 		.4byte	.LASF334
 10146 2892 01       		.byte	0x1
 10147 2893 8311     		.2byte	0x1183
 10148 2895 0A090000 		.4byte	0x90a
 10149 2899 00000000 		.4byte	.LFB123
 10150 289d B0000000 		.4byte	.LFE123-.LFB123
 10151 28a1 01       		.uleb128 0x1
 10152 28a2 9C       		.byte	0x9c
 10153 28a3 35290000 		.4byte	0x2935
 10154 28a7 26       		.uleb128 0x26
 10155 28a8 33140000 		.4byte	.LASF335
 10156 28ac 01       		.byte	0x1
 10157 28ad 8311     		.2byte	0x1183
 10158 28af C0080000 		.4byte	0x8c0
 10159 28b3 C9160000 		.4byte	.LLST143
 10160 28b7 26       		.uleb128 0x26
 10161 28b8 630D0000 		.4byte	.LASF336
 10162 28bc 01       		.byte	0x1
 10163 28bd 8311     		.2byte	0x1183
 10164 28bf C0080000 		.4byte	0x8c0
 10165 28c3 F5160000 		.4byte	.LLST144
 10166 28c7 26       		.uleb128 0x26
 10167 28c8 75120000 		.4byte	.LASF337
 10168 28cc 01       		.byte	0x1
 10169 28cd 8311     		.2byte	0x1183
 10170 28cf CC230000 		.4byte	0x23cc
 10171 28d3 3A170000 		.4byte	.LLST145
 10172 28d7 26       		.uleb128 0x26
 10173 28d8 110D0000 		.4byte	.LASF227
 10174 28dc 01       		.byte	0x1
 10175 28dd 8311     		.2byte	0x1183
 10176 28df 20090000 		.4byte	0x920
 10177 28e3 7F170000 		.4byte	.LLST146
 10178 28e7 27       		.uleb128 0x27
 10179 28e8 4A050000 		.4byte	.LASF205
 10180 28ec 01       		.byte	0x1
 10181 28ed 8511     		.2byte	0x1185
 10182 28ef 0A090000 		.4byte	0x90a
 10183 28f3 AB170000 		.4byte	.LLST147
 10184 28f7 2D       		.uleb128 0x2d
 10185 28f8 0E000000 		.4byte	.LVL433
 10186 28fc 872E0000 		.4byte	0x2e87
 10187 2900 2A       		.uleb128 0x2a
 10188 2901 44000000 		.4byte	.LVL434
 10189 2905 18110000 		.4byte	0x1118
 10190 2909 19290000 		.4byte	0x2919
 10191 290d 2B       		.uleb128 0x2b
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 284


 10192 290e 01       		.uleb128 0x1
 10193 290f 50       		.byte	0x50
 10194 2910 02       		.uleb128 0x2
 10195 2911 76       		.byte	0x76
 10196 2912 00       		.sleb128 0
 10197 2913 2B       		.uleb128 0x2b
 10198 2914 01       		.uleb128 0x1
 10199 2915 51       		.byte	0x51
 10200 2916 01       		.uleb128 0x1
 10201 2917 31       		.byte	0x31
 10202 2918 00       		.byte	0
 10203 2919 2D       		.uleb128 0x2d
 10204 291a 58000000 		.4byte	.LVL435
 10205 291e 9E2E0000 		.4byte	0x2e9e
 10206 2922 2D       		.uleb128 0x2d
 10207 2923 5C000000 		.4byte	.LVL436
 10208 2927 872E0000 		.4byte	0x2e87
 10209 292b 2D       		.uleb128 0x2d
 10210 292c A2000000 		.4byte	.LVL442
 10211 2930 9E2E0000 		.4byte	0x2e9e
 10212 2934 00       		.byte	0
 10213 2935 30       		.uleb128 0x30
 10214 2936 79010000 		.4byte	.LASF338
 10215 293a 01       		.byte	0x1
 10216 293b D311     		.2byte	0x11d3
 10217 293d 0A090000 		.4byte	0x90a
 10218 2941 00000000 		.4byte	.LFB124
 10219 2945 C4000000 		.4byte	.LFE124-.LFB124
 10220 2949 01       		.uleb128 0x1
 10221 294a 9C       		.byte	0x9c
 10222 294b FA290000 		.4byte	0x29fa
 10223 294f 26       		.uleb128 0x26
 10224 2950 E8130000 		.4byte	.LASF339
 10225 2954 01       		.byte	0x1
 10226 2955 D311     		.2byte	0x11d3
 10227 2957 0E0A0000 		.4byte	0xa0e
 10228 295b D5170000 		.4byte	.LLST148
 10229 295f 26       		.uleb128 0x26
 10230 2960 740F0000 		.4byte	.LASF340
 10231 2964 01       		.byte	0x1
 10232 2965 D311     		.2byte	0x11d3
 10233 2967 C0080000 		.4byte	0x8c0
 10234 296b 01180000 		.4byte	.LLST149
 10235 296f 26       		.uleb128 0x26
 10236 2970 B50E0000 		.4byte	.LASF341
 10237 2974 01       		.byte	0x1
 10238 2975 D311     		.2byte	0x11d3
 10239 2977 800A0000 		.4byte	0xa80
 10240 297b 46180000 		.4byte	.LLST150
 10241 297f 26       		.uleb128 0x26
 10242 2980 F3050000 		.4byte	.LASF342
 10243 2984 01       		.byte	0x1
 10244 2985 D311     		.2byte	0x11d3
 10245 2987 CC230000 		.4byte	0x23cc
 10246 298b 67180000 		.4byte	.LLST151
 10247 298f 27       		.uleb128 0x27
 10248 2990 B4150000 		.4byte	.LASF206
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 285


 10249 2994 01       		.byte	0x1
 10250 2995 D511     		.2byte	0x11d5
 10251 2997 CB0D0000 		.4byte	0xdcb
 10252 299b 93180000 		.4byte	.LLST152
 10253 299f 27       		.uleb128 0x27
 10254 29a0 4A050000 		.4byte	.LASF205
 10255 29a4 01       		.byte	0x1
 10256 29a5 D611     		.2byte	0x11d6
 10257 29a7 0A090000 		.4byte	0x90a
 10258 29ab BF180000 		.4byte	.LLST153
 10259 29af 27       		.uleb128 0x27
 10260 29b0 F7040000 		.4byte	.LASF343
 10261 29b4 01       		.byte	0x1
 10262 29b5 D711     		.2byte	0x11d7
 10263 29b7 9F080000 		.4byte	0x89f
 10264 29bb E9180000 		.4byte	.LLST154
 10265 29bf 2D       		.uleb128 0x2d
 10266 29c0 0E000000 		.4byte	.LVL446
 10267 29c4 872E0000 		.4byte	0x2e87
 10268 29c8 2A       		.uleb128 0x2a
 10269 29c9 72000000 		.4byte	.LVL451
 10270 29cd C02E0000 		.4byte	0x2ec0
 10271 29d1 DC290000 		.4byte	0x29dc
 10272 29d5 2B       		.uleb128 0x2b
 10273 29d6 01       		.uleb128 0x1
 10274 29d7 50       		.byte	0x50
 10275 29d8 02       		.uleb128 0x2
 10276 29d9 77       		.byte	0x77
 10277 29da 00       		.sleb128 0
 10278 29db 00       		.byte	0
 10279 29dc 2A       		.uleb128 0x2a
 10280 29dd 98000000 		.4byte	.LVL453
 10281 29e1 922E0000 		.4byte	0x2e92
 10282 29e5 F0290000 		.4byte	0x29f0
 10283 29e9 2B       		.uleb128 0x2b
 10284 29ea 01       		.uleb128 0x1
 10285 29eb 51       		.byte	0x51
 10286 29ec 02       		.uleb128 0x2
 10287 29ed 77       		.byte	0x77
 10288 29ee 00       		.sleb128 0
 10289 29ef 00       		.byte	0
 10290 29f0 2D       		.uleb128 0x2d
 10291 29f1 B8000000 		.4byte	.LVL454
 10292 29f5 9E2E0000 		.4byte	0x2e9e
 10293 29f9 00       		.byte	0
 10294 29fa 30       		.uleb128 0x30
 10295 29fb 6F110000 		.4byte	.LASF344
 10296 29ff 01       		.byte	0x1
 10297 2a00 3D12     		.2byte	0x123d
 10298 2a02 0A090000 		.4byte	0x90a
 10299 2a06 00000000 		.4byte	.LFB125
 10300 2a0a E8000000 		.4byte	.LFE125-.LFB125
 10301 2a0e 01       		.uleb128 0x1
 10302 2a0f 9C       		.byte	0x9c
 10303 2a10 292B0000 		.4byte	0x2b29
 10304 2a14 26       		.uleb128 0x26
 10305 2a15 E8130000 		.4byte	.LASF339
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 286


 10306 2a19 01       		.byte	0x1
 10307 2a1a 3D12     		.2byte	0x123d
 10308 2a1c 0E0A0000 		.4byte	0xa0e
 10309 2a20 FC180000 		.4byte	.LLST155
 10310 2a24 26       		.uleb128 0x26
 10311 2a25 740F0000 		.4byte	.LASF340
 10312 2a29 01       		.byte	0x1
 10313 2a2a 3D12     		.2byte	0x123d
 10314 2a2c C0080000 		.4byte	0x8c0
 10315 2a30 3E190000 		.4byte	.LLST156
 10316 2a34 26       		.uleb128 0x26
 10317 2a35 B50E0000 		.4byte	.LASF341
 10318 2a39 01       		.byte	0x1
 10319 2a3a 3D12     		.2byte	0x123d
 10320 2a3c 800A0000 		.4byte	0xa80
 10321 2a40 78190000 		.4byte	.LLST157
 10322 2a44 26       		.uleb128 0x26
 10323 2a45 F3050000 		.4byte	.LASF342
 10324 2a49 01       		.byte	0x1
 10325 2a4a 3D12     		.2byte	0x123d
 10326 2a4c CC230000 		.4byte	0x23cc
 10327 2a50 99190000 		.4byte	.LLST158
 10328 2a54 26       		.uleb128 0x26
 10329 2a55 0F120000 		.4byte	.LASF345
 10330 2a59 01       		.byte	0x1
 10331 2a5a 3D12     		.2byte	0x123d
 10332 2a5c 292B0000 		.4byte	0x2b29
 10333 2a60 BA190000 		.4byte	.LLST159
 10334 2a64 27       		.uleb128 0x27
 10335 2a65 B4150000 		.4byte	.LASF206
 10336 2a69 01       		.byte	0x1
 10337 2a6a 3F12     		.2byte	0x123f
 10338 2a6c CB0D0000 		.4byte	0xdcb
 10339 2a70 DA190000 		.4byte	.LLST160
 10340 2a74 27       		.uleb128 0x27
 10341 2a75 F7040000 		.4byte	.LASF343
 10342 2a79 01       		.byte	0x1
 10343 2a7a 4012     		.2byte	0x1240
 10344 2a7c 9F080000 		.4byte	0x89f
 10345 2a80 1C1A0000 		.4byte	.LLST161
 10346 2a84 27       		.uleb128 0x27
 10347 2a85 4A050000 		.4byte	.LASF205
 10348 2a89 01       		.byte	0x1
 10349 2a8a 4112     		.2byte	0x1241
 10350 2a8c 0A090000 		.4byte	0x90a
 10351 2a90 2F1A0000 		.4byte	.LLST162
 10352 2a94 35       		.uleb128 0x35
 10353 2a95 32020000 		.4byte	.LASF252
 10354 2a99 01       		.byte	0x1
 10355 2a9a 4212     		.2byte	0x1242
 10356 2a9c 15090000 		.4byte	0x915
 10357 2aa0 36       		.uleb128 0x36
 10358 2aa1 800C0000 		.4byte	0xc80
 10359 2aa5 02000000 		.4byte	.LBB57
 10360 2aa9 14000000 		.4byte	.LBE57-.LBB57
 10361 2aad 01       		.byte	0x1
 10362 2aae 5A12     		.2byte	0x125a
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 287


 10363 2ab0 C92A0000 		.4byte	0x2ac9
 10364 2ab4 2E       		.uleb128 0x2e
 10365 2ab5 02000000 		.4byte	.LBB58
 10366 2ab9 14000000 		.4byte	.LBE58-.LBB58
 10367 2abd 37       		.uleb128 0x37
 10368 2abe 900C0000 		.4byte	0xc90
 10369 2ac2 37       		.uleb128 0x37
 10370 2ac3 9B0C0000 		.4byte	0xc9b
 10371 2ac7 00       		.byte	0
 10372 2ac8 00       		.byte	0
 10373 2ac9 36       		.uleb128 0x36
 10374 2aca A70C0000 		.4byte	0xca7
 10375 2ace D6000000 		.4byte	.LBB59
 10376 2ad2 04000000 		.4byte	.LBE59-.LBB59
 10377 2ad6 01       		.byte	0x1
 10378 2ad7 AF12     		.2byte	0x12af
 10379 2ad9 E72A0000 		.4byte	0x2ae7
 10380 2add 39       		.uleb128 0x39
 10381 2ade B30C0000 		.4byte	0xcb3
 10382 2ae2 591A0000 		.4byte	.LLST163
 10383 2ae6 00       		.byte	0
 10384 2ae7 2A       		.uleb128 0x2a
 10385 2ae8 84000000 		.4byte	.LVL466
 10386 2aec C02E0000 		.4byte	0x2ec0
 10387 2af0 FB2A0000 		.4byte	0x2afb
 10388 2af4 2B       		.uleb128 0x2b
 10389 2af5 01       		.uleb128 0x1
 10390 2af6 50       		.byte	0x50
 10391 2af7 02       		.uleb128 0x2
 10392 2af8 77       		.byte	0x77
 10393 2af9 00       		.sleb128 0
 10394 2afa 00       		.byte	0
 10395 2afb 2A       		.uleb128 0x2a
 10396 2afc A8000000 		.4byte	.LVL467
 10397 2b00 922E0000 		.4byte	0x2e92
 10398 2b04 0F2B0000 		.4byte	0x2b0f
 10399 2b08 2B       		.uleb128 0x2b
 10400 2b09 01       		.uleb128 0x1
 10401 2b0a 51       		.byte	0x51
 10402 2b0b 02       		.uleb128 0x2
 10403 2b0c 77       		.byte	0x77
 10404 2b0d 00       		.sleb128 0
 10405 2b0e 00       		.byte	0
 10406 2b0f 2C       		.uleb128 0x2c
 10407 2b10 B4000000 		.4byte	.LVL470
 10408 2b14 922E0000 		.4byte	0x2e92
 10409 2b18 2B       		.uleb128 0x2b
 10410 2b19 01       		.uleb128 0x1
 10411 2b1a 50       		.byte	0x50
 10412 2b1b 05       		.uleb128 0x5
 10413 2b1c 03       		.byte	0x3
 10414 2b1d 14000000 		.4byte	.LANCHOR0+20
 10415 2b21 2B       		.uleb128 0x2b
 10416 2b22 01       		.uleb128 0x1
 10417 2b23 51       		.byte	0x51
 10418 2b24 02       		.uleb128 0x2
 10419 2b25 76       		.byte	0x76
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 288


 10420 2b26 18       		.sleb128 24
 10421 2b27 00       		.byte	0
 10422 2b28 00       		.byte	0
 10423 2b29 0D       		.uleb128 0xd
 10424 2b2a 04       		.byte	0x4
 10425 2b2b 0A090000 		.4byte	0x90a
 10426 2b2f 33       		.uleb128 0x33
 10427 2b30 37150000 		.4byte	.LASF346
 10428 2b34 01       		.byte	0x1
 10429 2b35 B912     		.2byte	0x12b9
 10430 2b37 00000000 		.4byte	.LFB126
 10431 2b3b A0000000 		.4byte	.LFE126-.LFB126
 10432 2b3f 01       		.uleb128 0x1
 10433 2b40 9C       		.byte	0x9c
 10434 2b41 1A2C0000 		.4byte	0x2c1a
 10435 2b45 26       		.uleb128 0x26
 10436 2b46 E8130000 		.4byte	.LASF339
 10437 2b4a 01       		.byte	0x1
 10438 2b4b B912     		.2byte	0x12b9
 10439 2b4d 0E0A0000 		.4byte	0xa0e
 10440 2b51 6C1A0000 		.4byte	.LLST164
 10441 2b55 26       		.uleb128 0x26
 10442 2b56 0F120000 		.4byte	.LASF345
 10443 2b5a 01       		.byte	0x1
 10444 2b5b B912     		.2byte	0x12b9
 10445 2b5d 292B0000 		.4byte	0x2b29
 10446 2b61 AE1A0000 		.4byte	.LLST165
 10447 2b65 27       		.uleb128 0x27
 10448 2b66 B4150000 		.4byte	.LASF206
 10449 2b6a 01       		.byte	0x1
 10450 2b6b BB12     		.2byte	0x12bb
 10451 2b6d CB0D0000 		.4byte	0xdcb
 10452 2b71 F01A0000 		.4byte	.LLST166
 10453 2b75 27       		.uleb128 0x27
 10454 2b76 F7040000 		.4byte	.LASF343
 10455 2b7a 01       		.byte	0x1
 10456 2b7b BC12     		.2byte	0x12bc
 10457 2b7d 9F080000 		.4byte	0x89f
 10458 2b81 321B0000 		.4byte	.LLST167
 10459 2b85 35       		.uleb128 0x35
 10460 2b86 32020000 		.4byte	.LASF252
 10461 2b8a 01       		.byte	0x1
 10462 2b8b BD12     		.2byte	0x12bd
 10463 2b8d 15090000 		.4byte	0x915
 10464 2b91 36       		.uleb128 0x36
 10465 2b92 800C0000 		.4byte	0xc80
 10466 2b96 02000000 		.4byte	.LBB61
 10467 2b9a 14000000 		.4byte	.LBE61-.LBB61
 10468 2b9e 01       		.byte	0x1
 10469 2b9f D512     		.2byte	0x12d5
 10470 2ba1 BA2B0000 		.4byte	0x2bba
 10471 2ba5 2E       		.uleb128 0x2e
 10472 2ba6 02000000 		.4byte	.LBB62
 10473 2baa 14000000 		.4byte	.LBE62-.LBB62
 10474 2bae 37       		.uleb128 0x37
 10475 2baf 900C0000 		.4byte	0xc90
 10476 2bb3 37       		.uleb128 0x37
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 289


 10477 2bb4 9B0C0000 		.4byte	0xc9b
 10478 2bb8 00       		.byte	0
 10479 2bb9 00       		.byte	0
 10480 2bba 36       		.uleb128 0x36
 10481 2bbb A70C0000 		.4byte	0xca7
 10482 2bbf 92000000 		.4byte	.LBB63
 10483 2bc3 0E000000 		.4byte	.LBE63-.LBB63
 10484 2bc7 01       		.byte	0x1
 10485 2bc8 0913     		.2byte	0x1309
 10486 2bca D82B0000 		.4byte	0x2bd8
 10487 2bce 39       		.uleb128 0x39
 10488 2bcf B30C0000 		.4byte	0xcb3
 10489 2bd3 451B0000 		.4byte	.LLST168
 10490 2bd7 00       		.byte	0
 10491 2bd8 2A       		.uleb128 0x2a
 10492 2bd9 44000000 		.4byte	.LVL479
 10493 2bdd C02E0000 		.4byte	0x2ec0
 10494 2be1 EC2B0000 		.4byte	0x2bec
 10495 2be5 2B       		.uleb128 0x2b
 10496 2be6 01       		.uleb128 0x1
 10497 2be7 50       		.byte	0x50
 10498 2be8 02       		.uleb128 0x2
 10499 2be9 77       		.byte	0x77
 10500 2bea 00       		.sleb128 0
 10501 2beb 00       		.byte	0
 10502 2bec 2A       		.uleb128 0x2a
 10503 2bed 68000000 		.4byte	.LVL480
 10504 2bf1 922E0000 		.4byte	0x2e92
 10505 2bf5 002C0000 		.4byte	0x2c00
 10506 2bf9 2B       		.uleb128 0x2b
 10507 2bfa 01       		.uleb128 0x1
 10508 2bfb 51       		.byte	0x51
 10509 2bfc 02       		.uleb128 0x2
 10510 2bfd 77       		.byte	0x77
 10511 2bfe 00       		.sleb128 0
 10512 2bff 00       		.byte	0
 10513 2c00 2C       		.uleb128 0x2c
 10514 2c01 74000000 		.4byte	.LVL484
 10515 2c05 922E0000 		.4byte	0x2e92
 10516 2c09 2B       		.uleb128 0x2b
 10517 2c0a 01       		.uleb128 0x1
 10518 2c0b 50       		.byte	0x50
 10519 2c0c 05       		.uleb128 0x5
 10520 2c0d 03       		.byte	0x3
 10521 2c0e 14000000 		.4byte	.LANCHOR0+20
 10522 2c12 2B       		.uleb128 0x2b
 10523 2c13 01       		.uleb128 0x1
 10524 2c14 51       		.byte	0x51
 10525 2c15 02       		.uleb128 0x2
 10526 2c16 74       		.byte	0x74
 10527 2c17 18       		.sleb128 24
 10528 2c18 00       		.byte	0
 10529 2c19 00       		.byte	0
 10530 2c1a 30       		.uleb128 0x30
 10531 2c1b BE100000 		.4byte	.LASF347
 10532 2c1f 01       		.byte	0x1
 10533 2c20 1213     		.2byte	0x1312
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 290


 10534 2c22 0A090000 		.4byte	0x90a
 10535 2c26 00000000 		.4byte	.LFB127
 10536 2c2a 34000000 		.4byte	.LFE127-.LFB127
 10537 2c2e 01       		.uleb128 0x1
 10538 2c2f 9C       		.byte	0x9c
 10539 2c30 772C0000 		.4byte	0x2c77
 10540 2c34 26       		.uleb128 0x26
 10541 2c35 49020000 		.4byte	.LASF209
 10542 2c39 01       		.byte	0x1
 10543 2c3a 1213     		.2byte	0x1312
 10544 2c3c 0E0A0000 		.4byte	0xa0e
 10545 2c40 581B0000 		.4byte	.LLST169
 10546 2c44 27       		.uleb128 0x27
 10547 2c45 B4150000 		.4byte	.LASF206
 10548 2c49 01       		.byte	0x1
 10549 2c4a 1413     		.2byte	0x1314
 10550 2c4c CB0D0000 		.4byte	0xdcb
 10551 2c50 6B1B0000 		.4byte	.LLST170
 10552 2c54 27       		.uleb128 0x27
 10553 2c55 4A050000 		.4byte	.LASF205
 10554 2c59 01       		.byte	0x1
 10555 2c5a 1513     		.2byte	0x1315
 10556 2c5c 0A090000 		.4byte	0x90a
 10557 2c60 891B0000 		.4byte	.LLST171
 10558 2c64 2D       		.uleb128 0x2d
 10559 2c65 10000000 		.4byte	.LVL489
 10560 2c69 872E0000 		.4byte	0x2e87
 10561 2c6d 2D       		.uleb128 0x2d
 10562 2c6e 2A000000 		.4byte	.LVL494
 10563 2c72 9E2E0000 		.4byte	0x2e9e
 10564 2c76 00       		.byte	0
 10565 2c77 08       		.uleb128 0x8
 10566 2c78 030A0000 		.4byte	0xa03
 10567 2c7c 872C0000 		.4byte	0x2c87
 10568 2c80 09       		.uleb128 0x9
 10569 2c81 05010000 		.4byte	0x105
 10570 2c85 04       		.byte	0x4
 10571 2c86 00       		.byte	0
 10572 2c87 34       		.uleb128 0x34
 10573 2c88 8F0B0000 		.4byte	.LASF348
 10574 2c8c 01       		.byte	0x1
 10575 2c8d 5F01     		.2byte	0x15f
 10576 2c8f 772C0000 		.4byte	0x2c77
 10577 2c93 05       		.uleb128 0x5
 10578 2c94 03       		.byte	0x3
 10579 2c95 30000000 		.4byte	pxReadyTasksLists
 10580 2c99 34       		.uleb128 0x34
 10581 2c9a E4140000 		.4byte	.LASF349
 10582 2c9e 01       		.byte	0x1
 10583 2c9f 6001     		.2byte	0x160
 10584 2ca1 030A0000 		.4byte	0xa03
 10585 2ca5 05       		.uleb128 0x5
 10586 2ca6 03       		.byte	0x3
 10587 2ca7 94000000 		.4byte	xDelayedTaskList1
 10588 2cab 34       		.uleb128 0x34
 10589 2cac F6140000 		.4byte	.LASF350
 10590 2cb0 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 291


 10591 2cb1 6101     		.2byte	0x161
 10592 2cb3 030A0000 		.4byte	0xa03
 10593 2cb7 05       		.uleb128 0x5
 10594 2cb8 03       		.byte	0x3
 10595 2cb9 A8000000 		.4byte	xDelayedTaskList2
 10596 2cbd 34       		.uleb128 0x34
 10597 2cbe FD110000 		.4byte	.LASF351
 10598 2cc2 01       		.byte	0x1
 10599 2cc3 6201     		.2byte	0x162
 10600 2cc5 CF2C0000 		.4byte	0x2ccf
 10601 2cc9 05       		.uleb128 0x5
 10602 2cca 03       		.byte	0x3
 10603 2ccb 28000000 		.4byte	pxDelayedTaskList
 10604 2ccf 1E       		.uleb128 0x1e
 10605 2cd0 7D140000 		.4byte	0x147d
 10606 2cd4 34       		.uleb128 0x34
 10607 2cd5 29120000 		.4byte	.LASF352
 10608 2cd9 01       		.byte	0x1
 10609 2cda 6301     		.2byte	0x163
 10610 2cdc CF2C0000 		.4byte	0x2ccf
 10611 2ce0 05       		.uleb128 0x5
 10612 2ce1 03       		.byte	0x3
 10613 2ce2 D0000000 		.4byte	pxOverflowDelayedTaskList
 10614 2ce6 34       		.uleb128 0x34
 10615 2ce7 65070000 		.4byte	.LASF353
 10616 2ceb 01       		.byte	0x1
 10617 2cec 6401     		.2byte	0x164
 10618 2cee 030A0000 		.4byte	0xa03
 10619 2cf2 05       		.uleb128 0x5
 10620 2cf3 03       		.byte	0x3
 10621 2cf4 14000000 		.4byte	xPendingReadyList
 10622 2cf8 34       		.uleb128 0x34
 10623 2cf9 DB120000 		.4byte	.LASF354
 10624 2cfd 01       		.byte	0x1
 10625 2cfe 6801     		.2byte	0x168
 10626 2d00 030A0000 		.4byte	0xa03
 10627 2d04 05       		.uleb128 0x5
 10628 2d05 03       		.byte	0x3
 10629 2d06 BC000000 		.4byte	xTasksWaitingTermination
 10630 2d0a 34       		.uleb128 0x34
 10631 2d0b A10D0000 		.4byte	.LASF355
 10632 2d0f 01       		.byte	0x1
 10633 2d10 6901     		.2byte	0x169
 10634 2d12 F8090000 		.4byte	0x9f8
 10635 2d16 05       		.uleb128 0x5
 10636 2d17 03       		.byte	0x3
 10637 2d18 E8000000 		.4byte	uxDeletedTasksWaitingCleanUp
 10638 2d1c 34       		.uleb128 0x34
 10639 2d1d 95040000 		.4byte	.LASF356
 10640 2d21 01       		.byte	0x1
 10641 2d22 6F01     		.2byte	0x16f
 10642 2d24 030A0000 		.4byte	0xa03
 10643 2d28 05       		.uleb128 0x5
 10644 2d29 03       		.byte	0x3
 10645 2d2a 00000000 		.4byte	xSuspendedTaskList
 10646 2d2e 34       		.uleb128 0x34
 10647 2d2f 69080000 		.4byte	.LASF357
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 292


 10648 2d33 01       		.byte	0x1
 10649 2d34 7401     		.2byte	0x174
 10650 2d36 F8090000 		.4byte	0x9f8
 10651 2d3a 05       		.uleb128 0x5
 10652 2d3b 03       		.byte	0x3
 10653 2d3c D4000000 		.4byte	uxCurrentNumberOfTasks
 10654 2d40 34       		.uleb128 0x34
 10655 2d41 29010000 		.4byte	.LASF358
 10656 2d45 01       		.byte	0x1
 10657 2d46 7501     		.2byte	0x175
 10658 2d48 522D0000 		.4byte	0x2d52
 10659 2d4c 05       		.uleb128 0x5
 10660 2d4d 03       		.byte	0x3
 10661 2d4e EC000000 		.4byte	xTickCount
 10662 2d52 1E       		.uleb128 0x1e
 10663 2d53 20090000 		.4byte	0x920
 10664 2d57 34       		.uleb128 0x34
 10665 2d58 EB100000 		.4byte	.LASF359
 10666 2d5c 01       		.byte	0x1
 10667 2d5d 7601     		.2byte	0x176
 10668 2d5f F8090000 		.4byte	0x9f8
 10669 2d63 05       		.uleb128 0x5
 10670 2d64 03       		.byte	0x3
 10671 2d65 E4000000 		.4byte	uxTopReadyPriority
 10672 2d69 34       		.uleb128 0x34
 10673 2d6a 25060000 		.4byte	.LASF360
 10674 2d6e 01       		.byte	0x1
 10675 2d6f 7701     		.2byte	0x177
 10676 2d71 7B2D0000 		.4byte	0x2d7b
 10677 2d75 05       		.uleb128 0x5
 10678 2d76 03       		.byte	0x3
 10679 2d77 DC000000 		.4byte	xSchedulerRunning
 10680 2d7b 1E       		.uleb128 0x1e
 10681 2d7c 0A090000 		.4byte	0x90a
 10682 2d80 34       		.uleb128 0x34
 10683 2d81 C6050000 		.4byte	.LASF361
 10684 2d85 01       		.byte	0x1
 10685 2d86 7801     		.2byte	0x178
 10686 2d88 F8090000 		.4byte	0x9f8
 10687 2d8c 05       		.uleb128 0x5
 10688 2d8d 03       		.byte	0x3
 10689 2d8e FC000000 		.4byte	uxPendedTicks
 10690 2d92 34       		.uleb128 0x34
 10691 2d93 0F000000 		.4byte	.LASF362
 10692 2d97 01       		.byte	0x1
 10693 2d98 7901     		.2byte	0x179
 10694 2d9a 7B2D0000 		.4byte	0x2d7b
 10695 2d9e 05       		.uleb128 0x5
 10696 2d9f 03       		.byte	0x3
 10697 2da0 00010000 		.4byte	xYieldPending
 10698 2da4 34       		.uleb128 0x34
 10699 2da5 3A050000 		.4byte	.LASF363
 10700 2da9 01       		.byte	0x1
 10701 2daa 7A01     		.2byte	0x17a
 10702 2dac 7B2D0000 		.4byte	0x2d7b
 10703 2db0 05       		.uleb128 0x5
 10704 2db1 03       		.byte	0x3
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 293


 10705 2db2 F8000000 		.4byte	xNumOfOverflows
 10706 2db6 34       		.uleb128 0x34
 10707 2db7 34010000 		.4byte	.LASF189
 10708 2dbb 01       		.byte	0x1
 10709 2dbc 7B01     		.2byte	0x17b
 10710 2dbe 15090000 		.4byte	0x915
 10711 2dc2 05       		.uleb128 0x5
 10712 2dc3 03       		.byte	0x3
 10713 2dc4 E0000000 		.4byte	uxTaskNumber
 10714 2dc8 34       		.uleb128 0x34
 10715 2dc9 50070000 		.4byte	.LASF364
 10716 2dcd 01       		.byte	0x1
 10717 2dce 7C01     		.2byte	0x17c
 10718 2dd0 522D0000 		.4byte	0x2d52
 10719 2dd4 05       		.uleb128 0x5
 10720 2dd5 03       		.byte	0x3
 10721 2dd6 2C000000 		.4byte	xNextTaskUnblockTime
 10722 2dda 34       		.uleb128 0x34
 10723 2ddb 10030000 		.4byte	.LASF365
 10724 2ddf 01       		.byte	0x1
 10725 2de0 7D01     		.2byte	0x17d
 10726 2de2 0E0A0000 		.4byte	0xa0e
 10727 2de6 05       		.uleb128 0x5
 10728 2de7 03       		.byte	0x3
 10729 2de8 F4000000 		.4byte	xIdleTaskHandle
 10730 2dec 34       		.uleb128 0x34
 10731 2ded 32070000 		.4byte	.LASF366
 10732 2df1 01       		.byte	0x1
 10733 2df2 8701     		.2byte	0x187
 10734 2df4 F8090000 		.4byte	0x9f8
 10735 2df8 05       		.uleb128 0x5
 10736 2df9 03       		.byte	0x3
 10737 2dfa F0000000 		.4byte	uxSchedulerSuspended
 10738 2dfe 34       		.uleb128 0x34
 10739 2dff F4120000 		.4byte	.LASF367
 10740 2e03 01       		.byte	0x1
 10741 2e04 8B01     		.2byte	0x18b
 10742 2e06 C0080000 		.4byte	0x8c0
 10743 2e0a 05       		.uleb128 0x5
 10744 2e0b 03       		.byte	0x3
 10745 2e0c 04010000 		.4byte	ulTaskSwitchedInTime
 10746 2e10 35       		.uleb128 0x35
 10747 2e11 BF0B0000 		.4byte	.LASF368
 10748 2e15 01       		.byte	0x1
 10749 2e16 8C01     		.2byte	0x18c
 10750 2e18 C0080000 		.4byte	0x8c0
 10751 2e1c 42       		.uleb128 0x42
 10752 2e1d FA020000 		.4byte	.LASF369
 10753 2e21 07       		.byte	0x7
 10754 2e22 FD02     		.2byte	0x2fd
 10755 2e24 5D040000 		.4byte	0x45d
 10756 2e28 42       		.uleb128 0x42
 10757 2e29 540B0000 		.4byte	.LASF370
 10758 2e2d 0C       		.byte	0xc
 10759 2e2e 1207     		.2byte	0x712
 10760 2e30 342E0000 		.4byte	0x2e34
 10761 2e34 1E       		.uleb128 0x1e
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 294


 10762 2e35 B5080000 		.4byte	0x8b5
 10763 2e39 43       		.uleb128 0x43
 10764 2e3a ED020000 		.4byte	.LASF371
 10765 2e3e 01       		.byte	0x1
 10766 2e3f 5C01     		.2byte	0x15c
 10767 2e41 4B2E0000 		.4byte	0x2e4b
 10768 2e45 05       		.uleb128 0x5
 10769 2e46 03       		.byte	0x3
 10770 2e47 00000000 		.4byte	pxCurrentTCB
 10771 2e4b 1E       		.uleb128 0x1e
 10772 2e4c CB0D0000 		.4byte	0xdcb
 10773 2e50 44       		.uleb128 0x44
 10774 2e51 53060000 		.4byte	.LASF372
 10775 2e55 53060000 		.4byte	.LASF372
 10776 2e59 0D       		.byte	0xd
 10777 2e5a 19       		.byte	0x19
 10778 2e5b 45       		.uleb128 0x45
 10779 2e5c BE0D0000 		.4byte	.LASF373
 10780 2e60 BE0D0000 		.4byte	.LASF373
 10781 2e64 0A       		.byte	0xa
 10782 2e65 6301     		.2byte	0x163
 10783 2e67 46       		.uleb128 0x46
 10784 2e68 53060000 		.4byte	.LASF372
 10785 2e6c 53060000 		.4byte	.LASF372
 10786 2e70 44       		.uleb128 0x44
 10787 2e71 C3060000 		.4byte	.LASF374
 10788 2e75 C3060000 		.4byte	.LASF374
 10789 2e79 0E       		.byte	0xe
 10790 2e7a 66       		.byte	0x66
 10791 2e7b 45       		.uleb128 0x45
 10792 2e7c 4A040000 		.4byte	.LASF375
 10793 2e80 4A040000 		.4byte	.LASF375
 10794 2e84 0A       		.byte	0xa
 10795 2e85 5801     		.2byte	0x158
 10796 2e87 44       		.uleb128 0x44
 10797 2e88 550F0000 		.4byte	.LASF376
 10798 2e8c 550F0000 		.4byte	.LASF376
 10799 2e90 02       		.byte	0x2
 10800 2e91 61       		.byte	0x61
 10801 2e92 45       		.uleb128 0x45
 10802 2e93 6C040000 		.4byte	.LASF377
 10803 2e97 6C040000 		.4byte	.LASF377
 10804 2e9b 0A       		.byte	0xa
 10805 2e9c 8501     		.2byte	0x185
 10806 2e9e 44       		.uleb128 0x44
 10807 2e9f 0F0C0000 		.4byte	.LASF378
 10808 2ea3 0F0C0000 		.4byte	.LASF378
 10809 2ea7 02       		.byte	0x2
 10810 2ea8 62       		.byte	0x62
 10811 2ea9 45       		.uleb128 0x45
 10812 2eaa 3F130000 		.4byte	.LASF379
 10813 2eae 3F130000 		.4byte	.LASF379
 10814 2eb2 07       		.byte	0x7
 10815 2eb3 0003     		.2byte	0x300
 10816 2eb5 44       		.uleb128 0x44
 10817 2eb6 19150000 		.4byte	.LASF380
 10818 2eba 19150000 		.4byte	.LASF380
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 295


 10819 2ebe 0E       		.byte	0xe
 10820 2ebf 82       		.byte	0x82
 10821 2ec0 45       		.uleb128 0x45
 10822 2ec1 E0110000 		.4byte	.LASF381
 10823 2ec5 E0110000 		.4byte	.LASF381
 10824 2ec9 0A       		.byte	0xa
 10825 2eca 9401     		.2byte	0x194
 10826 2ecc 45       		.uleb128 0x45
 10827 2ecd 0A020000 		.4byte	.LASF382
 10828 2ed1 0A020000 		.4byte	.LASF382
 10829 2ed5 0A       		.byte	0xa
 10830 2ed6 7001     		.2byte	0x170
 10831 2ed8 44       		.uleb128 0x44
 10832 2ed9 FE080000 		.4byte	.LASF383
 10833 2edd FE080000 		.4byte	.LASF383
 10834 2ee1 0D       		.byte	0xd
 10835 2ee2 1E       		.byte	0x1e
 10836 2ee3 44       		.uleb128 0x44
 10837 2ee4 58130000 		.4byte	.LASF384
 10838 2ee8 58130000 		.4byte	.LASF384
 10839 2eec 0D       		.byte	0xd
 10840 2eed 21       		.byte	0x21
 10841 2eee 44       		.uleb128 0x44
 10842 2eef 7B040000 		.4byte	.LASF385
 10843 2ef3 7B040000 		.4byte	.LASF385
 10844 2ef7 0E       		.byte	0xe
 10845 2ef8 81       		.byte	0x81
 10846 2ef9 44       		.uleb128 0x44
 10847 2efa E00C0000 		.4byte	.LASF386
 10848 2efe E00C0000 		.4byte	.LASF386
 10849 2f02 0F       		.byte	0xf
 10850 2f03 4F       		.byte	0x4f
 10851 2f04 44       		.uleb128 0x44
 10852 2f05 EA080000 		.4byte	.LASF387
 10853 2f09 EA080000 		.4byte	.LASF387
 10854 2f0d 0E       		.byte	0xe
 10855 2f0e 8B       		.byte	0x8b
 10856 2f0f 44       		.uleb128 0x44
 10857 2f10 BB140000 		.4byte	.LASF388
 10858 2f14 BB140000 		.4byte	.LASF388
 10859 2f18 0E       		.byte	0xe
 10860 2f19 92       		.byte	0x92
 10861 2f1a 45       		.uleb128 0x45
 10862 2f1b 5A060000 		.4byte	.LASF389
 10863 2f1f 5A060000 		.4byte	.LASF389
 10864 2f23 01       		.byte	0x1
 10865 2f24 9701     		.2byte	0x197
 10866 2f26 44       		.uleb128 0x44
 10867 2f27 07140000 		.4byte	.LASF390
 10868 2f2b 07140000 		.4byte	.LASF390
 10869 2f2f 0F       		.byte	0xf
 10870 2f30 5D       		.byte	0x5d
 10871 2f31 44       		.uleb128 0x44
 10872 2f32 BD090000 		.4byte	.LASF391
 10873 2f36 BD090000 		.4byte	.LASF391
 10874 2f3a 10       		.byte	0x10
 10875 2f3b E7       		.byte	0xe7
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 296


 10876 2f3c 00       		.byte	0
 10877              		.section	.debug_abbrev,"",%progbits
 10878              	.Ldebug_abbrev0:
 10879 0000 01       		.uleb128 0x1
 10880 0001 11       		.uleb128 0x11
 10881 0002 01       		.byte	0x1
 10882 0003 25       		.uleb128 0x25
 10883 0004 0E       		.uleb128 0xe
 10884 0005 13       		.uleb128 0x13
 10885 0006 0B       		.uleb128 0xb
 10886 0007 03       		.uleb128 0x3
 10887 0008 0E       		.uleb128 0xe
 10888 0009 1B       		.uleb128 0x1b
 10889 000a 0E       		.uleb128 0xe
 10890 000b 55       		.uleb128 0x55
 10891 000c 17       		.uleb128 0x17
 10892 000d 11       		.uleb128 0x11
 10893 000e 01       		.uleb128 0x1
 10894 000f 10       		.uleb128 0x10
 10895 0010 17       		.uleb128 0x17
 10896 0011 00       		.byte	0
 10897 0012 00       		.byte	0
 10898 0013 02       		.uleb128 0x2
 10899 0014 16       		.uleb128 0x16
 10900 0015 00       		.byte	0
 10901 0016 03       		.uleb128 0x3
 10902 0017 0E       		.uleb128 0xe
 10903 0018 3A       		.uleb128 0x3a
 10904 0019 0B       		.uleb128 0xb
 10905 001a 3B       		.uleb128 0x3b
 10906 001b 0B       		.uleb128 0xb
 10907 001c 49       		.uleb128 0x49
 10908 001d 13       		.uleb128 0x13
 10909 001e 00       		.byte	0
 10910 001f 00       		.byte	0
 10911 0020 03       		.uleb128 0x3
 10912 0021 24       		.uleb128 0x24
 10913 0022 00       		.byte	0
 10914 0023 0B       		.uleb128 0xb
 10915 0024 0B       		.uleb128 0xb
 10916 0025 3E       		.uleb128 0x3e
 10917 0026 0B       		.uleb128 0xb
 10918 0027 03       		.uleb128 0x3
 10919 0028 0E       		.uleb128 0xe
 10920 0029 00       		.byte	0
 10921 002a 00       		.byte	0
 10922 002b 04       		.uleb128 0x4
 10923 002c 24       		.uleb128 0x24
 10924 002d 00       		.byte	0
 10925 002e 0B       		.uleb128 0xb
 10926 002f 0B       		.uleb128 0xb
 10927 0030 3E       		.uleb128 0x3e
 10928 0031 0B       		.uleb128 0xb
 10929 0032 03       		.uleb128 0x3
 10930 0033 08       		.uleb128 0x8
 10931 0034 00       		.byte	0
 10932 0035 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 297


 10933 0036 05       		.uleb128 0x5
 10934 0037 16       		.uleb128 0x16
 10935 0038 00       		.byte	0
 10936 0039 03       		.uleb128 0x3
 10937 003a 0E       		.uleb128 0xe
 10938 003b 3A       		.uleb128 0x3a
 10939 003c 0B       		.uleb128 0xb
 10940 003d 3B       		.uleb128 0x3b
 10941 003e 05       		.uleb128 0x5
 10942 003f 49       		.uleb128 0x49
 10943 0040 13       		.uleb128 0x13
 10944 0041 00       		.byte	0
 10945 0042 00       		.byte	0
 10946 0043 06       		.uleb128 0x6
 10947 0044 17       		.uleb128 0x17
 10948 0045 01       		.byte	0x1
 10949 0046 0B       		.uleb128 0xb
 10950 0047 0B       		.uleb128 0xb
 10951 0048 3A       		.uleb128 0x3a
 10952 0049 0B       		.uleb128 0xb
 10953 004a 3B       		.uleb128 0x3b
 10954 004b 0B       		.uleb128 0xb
 10955 004c 01       		.uleb128 0x1
 10956 004d 13       		.uleb128 0x13
 10957 004e 00       		.byte	0
 10958 004f 00       		.byte	0
 10959 0050 07       		.uleb128 0x7
 10960 0051 0D       		.uleb128 0xd
 10961 0052 00       		.byte	0
 10962 0053 03       		.uleb128 0x3
 10963 0054 0E       		.uleb128 0xe
 10964 0055 3A       		.uleb128 0x3a
 10965 0056 0B       		.uleb128 0xb
 10966 0057 3B       		.uleb128 0x3b
 10967 0058 0B       		.uleb128 0xb
 10968 0059 49       		.uleb128 0x49
 10969 005a 13       		.uleb128 0x13
 10970 005b 00       		.byte	0
 10971 005c 00       		.byte	0
 10972 005d 08       		.uleb128 0x8
 10973 005e 01       		.uleb128 0x1
 10974 005f 01       		.byte	0x1
 10975 0060 49       		.uleb128 0x49
 10976 0061 13       		.uleb128 0x13
 10977 0062 01       		.uleb128 0x1
 10978 0063 13       		.uleb128 0x13
 10979 0064 00       		.byte	0
 10980 0065 00       		.byte	0
 10981 0066 09       		.uleb128 0x9
 10982 0067 21       		.uleb128 0x21
 10983 0068 00       		.byte	0
 10984 0069 49       		.uleb128 0x49
 10985 006a 13       		.uleb128 0x13
 10986 006b 2F       		.uleb128 0x2f
 10987 006c 0B       		.uleb128 0xb
 10988 006d 00       		.byte	0
 10989 006e 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 298


 10990 006f 0A       		.uleb128 0xa
 10991 0070 13       		.uleb128 0x13
 10992 0071 01       		.byte	0x1
 10993 0072 0B       		.uleb128 0xb
 10994 0073 0B       		.uleb128 0xb
 10995 0074 3A       		.uleb128 0x3a
 10996 0075 0B       		.uleb128 0xb
 10997 0076 3B       		.uleb128 0x3b
 10998 0077 0B       		.uleb128 0xb
 10999 0078 01       		.uleb128 0x1
 11000 0079 13       		.uleb128 0x13
 11001 007a 00       		.byte	0
 11002 007b 00       		.byte	0
 11003 007c 0B       		.uleb128 0xb
 11004 007d 0D       		.uleb128 0xd
 11005 007e 00       		.byte	0
 11006 007f 03       		.uleb128 0x3
 11007 0080 0E       		.uleb128 0xe
 11008 0081 3A       		.uleb128 0x3a
 11009 0082 0B       		.uleb128 0xb
 11010 0083 3B       		.uleb128 0x3b
 11011 0084 0B       		.uleb128 0xb
 11012 0085 49       		.uleb128 0x49
 11013 0086 13       		.uleb128 0x13
 11014 0087 38       		.uleb128 0x38
 11015 0088 0B       		.uleb128 0xb
 11016 0089 00       		.byte	0
 11017 008a 00       		.byte	0
 11018 008b 0C       		.uleb128 0xc
 11019 008c 0F       		.uleb128 0xf
 11020 008d 00       		.byte	0
 11021 008e 0B       		.uleb128 0xb
 11022 008f 0B       		.uleb128 0xb
 11023 0090 00       		.byte	0
 11024 0091 00       		.byte	0
 11025 0092 0D       		.uleb128 0xd
 11026 0093 0F       		.uleb128 0xf
 11027 0094 00       		.byte	0
 11028 0095 0B       		.uleb128 0xb
 11029 0096 0B       		.uleb128 0xb
 11030 0097 49       		.uleb128 0x49
 11031 0098 13       		.uleb128 0x13
 11032 0099 00       		.byte	0
 11033 009a 00       		.byte	0
 11034 009b 0E       		.uleb128 0xe
 11035 009c 13       		.uleb128 0x13
 11036 009d 01       		.byte	0x1
 11037 009e 03       		.uleb128 0x3
 11038 009f 0E       		.uleb128 0xe
 11039 00a0 0B       		.uleb128 0xb
 11040 00a1 0B       		.uleb128 0xb
 11041 00a2 3A       		.uleb128 0x3a
 11042 00a3 0B       		.uleb128 0xb
 11043 00a4 3B       		.uleb128 0x3b
 11044 00a5 0B       		.uleb128 0xb
 11045 00a6 01       		.uleb128 0x1
 11046 00a7 13       		.uleb128 0x13
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 299


 11047 00a8 00       		.byte	0
 11048 00a9 00       		.byte	0
 11049 00aa 0F       		.uleb128 0xf
 11050 00ab 0D       		.uleb128 0xd
 11051 00ac 00       		.byte	0
 11052 00ad 03       		.uleb128 0x3
 11053 00ae 08       		.uleb128 0x8
 11054 00af 3A       		.uleb128 0x3a
 11055 00b0 0B       		.uleb128 0xb
 11056 00b1 3B       		.uleb128 0x3b
 11057 00b2 0B       		.uleb128 0xb
 11058 00b3 49       		.uleb128 0x49
 11059 00b4 13       		.uleb128 0x13
 11060 00b5 38       		.uleb128 0x38
 11061 00b6 0B       		.uleb128 0xb
 11062 00b7 00       		.byte	0
 11063 00b8 00       		.byte	0
 11064 00b9 10       		.uleb128 0x10
 11065 00ba 13       		.uleb128 0x13
 11066 00bb 01       		.byte	0x1
 11067 00bc 03       		.uleb128 0x3
 11068 00bd 0E       		.uleb128 0xe
 11069 00be 0B       		.uleb128 0xb
 11070 00bf 05       		.uleb128 0x5
 11071 00c0 3A       		.uleb128 0x3a
 11072 00c1 0B       		.uleb128 0xb
 11073 00c2 3B       		.uleb128 0x3b
 11074 00c3 0B       		.uleb128 0xb
 11075 00c4 01       		.uleb128 0x1
 11076 00c5 13       		.uleb128 0x13
 11077 00c6 00       		.byte	0
 11078 00c7 00       		.byte	0
 11079 00c8 11       		.uleb128 0x11
 11080 00c9 0D       		.uleb128 0xd
 11081 00ca 00       		.byte	0
 11082 00cb 03       		.uleb128 0x3
 11083 00cc 0E       		.uleb128 0xe
 11084 00cd 3A       		.uleb128 0x3a
 11085 00ce 0B       		.uleb128 0xb
 11086 00cf 3B       		.uleb128 0x3b
 11087 00d0 0B       		.uleb128 0xb
 11088 00d1 49       		.uleb128 0x49
 11089 00d2 13       		.uleb128 0x13
 11090 00d3 38       		.uleb128 0x38
 11091 00d4 05       		.uleb128 0x5
 11092 00d5 00       		.byte	0
 11093 00d6 00       		.byte	0
 11094 00d7 12       		.uleb128 0x12
 11095 00d8 15       		.uleb128 0x15
 11096 00d9 00       		.byte	0
 11097 00da 27       		.uleb128 0x27
 11098 00db 19       		.uleb128 0x19
 11099 00dc 00       		.byte	0
 11100 00dd 00       		.byte	0
 11101 00de 13       		.uleb128 0x13
 11102 00df 15       		.uleb128 0x15
 11103 00e0 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 300


 11104 00e1 27       		.uleb128 0x27
 11105 00e2 19       		.uleb128 0x19
 11106 00e3 49       		.uleb128 0x49
 11107 00e4 13       		.uleb128 0x13
 11108 00e5 01       		.uleb128 0x1
 11109 00e6 13       		.uleb128 0x13
 11110 00e7 00       		.byte	0
 11111 00e8 00       		.byte	0
 11112 00e9 14       		.uleb128 0x14
 11113 00ea 05       		.uleb128 0x5
 11114 00eb 00       		.byte	0
 11115 00ec 49       		.uleb128 0x49
 11116 00ed 13       		.uleb128 0x13
 11117 00ee 00       		.byte	0
 11118 00ef 00       		.byte	0
 11119 00f0 15       		.uleb128 0x15
 11120 00f1 13       		.uleb128 0x13
 11121 00f2 01       		.byte	0x1
 11122 00f3 03       		.uleb128 0x3
 11123 00f4 0E       		.uleb128 0xe
 11124 00f5 0B       		.uleb128 0xb
 11125 00f6 05       		.uleb128 0x5
 11126 00f7 3A       		.uleb128 0x3a
 11127 00f8 0B       		.uleb128 0xb
 11128 00f9 3B       		.uleb128 0x3b
 11129 00fa 05       		.uleb128 0x5
 11130 00fb 01       		.uleb128 0x1
 11131 00fc 13       		.uleb128 0x13
 11132 00fd 00       		.byte	0
 11133 00fe 00       		.byte	0
 11134 00ff 16       		.uleb128 0x16
 11135 0100 0D       		.uleb128 0xd
 11136 0101 00       		.byte	0
 11137 0102 03       		.uleb128 0x3
 11138 0103 0E       		.uleb128 0xe
 11139 0104 3A       		.uleb128 0x3a
 11140 0105 0B       		.uleb128 0xb
 11141 0106 3B       		.uleb128 0x3b
 11142 0107 05       		.uleb128 0x5
 11143 0108 49       		.uleb128 0x49
 11144 0109 13       		.uleb128 0x13
 11145 010a 38       		.uleb128 0x38
 11146 010b 0B       		.uleb128 0xb
 11147 010c 00       		.byte	0
 11148 010d 00       		.byte	0
 11149 010e 17       		.uleb128 0x17
 11150 010f 0D       		.uleb128 0xd
 11151 0110 00       		.byte	0
 11152 0111 03       		.uleb128 0x3
 11153 0112 0E       		.uleb128 0xe
 11154 0113 3A       		.uleb128 0x3a
 11155 0114 0B       		.uleb128 0xb
 11156 0115 3B       		.uleb128 0x3b
 11157 0116 05       		.uleb128 0x5
 11158 0117 49       		.uleb128 0x49
 11159 0118 13       		.uleb128 0x13
 11160 0119 38       		.uleb128 0x38
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 301


 11161 011a 05       		.uleb128 0x5
 11162 011b 00       		.byte	0
 11163 011c 00       		.byte	0
 11164 011d 18       		.uleb128 0x18
 11165 011e 26       		.uleb128 0x26
 11166 011f 00       		.byte	0
 11167 0120 49       		.uleb128 0x49
 11168 0121 13       		.uleb128 0x13
 11169 0122 00       		.byte	0
 11170 0123 00       		.byte	0
 11171 0124 19       		.uleb128 0x19
 11172 0125 13       		.uleb128 0x13
 11173 0126 01       		.byte	0x1
 11174 0127 03       		.uleb128 0x3
 11175 0128 0E       		.uleb128 0xe
 11176 0129 0B       		.uleb128 0xb
 11177 012a 0B       		.uleb128 0xb
 11178 012b 3A       		.uleb128 0x3a
 11179 012c 0B       		.uleb128 0xb
 11180 012d 3B       		.uleb128 0x3b
 11181 012e 05       		.uleb128 0x5
 11182 012f 01       		.uleb128 0x1
 11183 0130 13       		.uleb128 0x13
 11184 0131 00       		.byte	0
 11185 0132 00       		.byte	0
 11186 0133 1A       		.uleb128 0x1a
 11187 0134 13       		.uleb128 0x13
 11188 0135 01       		.byte	0x1
 11189 0136 0B       		.uleb128 0xb
 11190 0137 0B       		.uleb128 0xb
 11191 0138 3A       		.uleb128 0x3a
 11192 0139 0B       		.uleb128 0xb
 11193 013a 3B       		.uleb128 0x3b
 11194 013b 05       		.uleb128 0x5
 11195 013c 01       		.uleb128 0x1
 11196 013d 13       		.uleb128 0x13
 11197 013e 00       		.byte	0
 11198 013f 00       		.byte	0
 11199 0140 1B       		.uleb128 0x1b
 11200 0141 17       		.uleb128 0x17
 11201 0142 01       		.byte	0x1
 11202 0143 0B       		.uleb128 0xb
 11203 0144 0B       		.uleb128 0xb
 11204 0145 3A       		.uleb128 0x3a
 11205 0146 0B       		.uleb128 0xb
 11206 0147 3B       		.uleb128 0x3b
 11207 0148 05       		.uleb128 0x5
 11208 0149 01       		.uleb128 0x1
 11209 014a 13       		.uleb128 0x13
 11210 014b 00       		.byte	0
 11211 014c 00       		.byte	0
 11212 014d 1C       		.uleb128 0x1c
 11213 014e 0D       		.uleb128 0xd
 11214 014f 00       		.byte	0
 11215 0150 03       		.uleb128 0x3
 11216 0151 0E       		.uleb128 0xe
 11217 0152 3A       		.uleb128 0x3a
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 302


 11218 0153 0B       		.uleb128 0xb
 11219 0154 3B       		.uleb128 0x3b
 11220 0155 05       		.uleb128 0x5
 11221 0156 49       		.uleb128 0x49
 11222 0157 13       		.uleb128 0x13
 11223 0158 00       		.byte	0
 11224 0159 00       		.byte	0
 11225 015a 1D       		.uleb128 0x1d
 11226 015b 15       		.uleb128 0x15
 11227 015c 01       		.byte	0x1
 11228 015d 27       		.uleb128 0x27
 11229 015e 19       		.uleb128 0x19
 11230 015f 01       		.uleb128 0x1
 11231 0160 13       		.uleb128 0x13
 11232 0161 00       		.byte	0
 11233 0162 00       		.byte	0
 11234 0163 1E       		.uleb128 0x1e
 11235 0164 35       		.uleb128 0x35
 11236 0165 00       		.byte	0
 11237 0166 49       		.uleb128 0x49
 11238 0167 13       		.uleb128 0x13
 11239 0168 00       		.byte	0
 11240 0169 00       		.byte	0
 11241 016a 1F       		.uleb128 0x1f
 11242 016b 04       		.uleb128 0x4
 11243 016c 01       		.byte	0x1
 11244 016d 0B       		.uleb128 0xb
 11245 016e 0B       		.uleb128 0xb
 11246 016f 49       		.uleb128 0x49
 11247 0170 13       		.uleb128 0x13
 11248 0171 3A       		.uleb128 0x3a
 11249 0172 0B       		.uleb128 0xb
 11250 0173 3B       		.uleb128 0x3b
 11251 0174 0B       		.uleb128 0xb
 11252 0175 01       		.uleb128 0x1
 11253 0176 13       		.uleb128 0x13
 11254 0177 00       		.byte	0
 11255 0178 00       		.byte	0
 11256 0179 20       		.uleb128 0x20
 11257 017a 28       		.uleb128 0x28
 11258 017b 00       		.byte	0
 11259 017c 03       		.uleb128 0x3
 11260 017d 0E       		.uleb128 0xe
 11261 017e 1C       		.uleb128 0x1c
 11262 017f 0B       		.uleb128 0xb
 11263 0180 00       		.byte	0
 11264 0181 00       		.byte	0
 11265 0182 21       		.uleb128 0x21
 11266 0183 2E       		.uleb128 0x2e
 11267 0184 01       		.byte	0x1
 11268 0185 03       		.uleb128 0x3
 11269 0186 0E       		.uleb128 0xe
 11270 0187 3A       		.uleb128 0x3a
 11271 0188 0B       		.uleb128 0xb
 11272 0189 3B       		.uleb128 0x3b
 11273 018a 0B       		.uleb128 0xb
 11274 018b 27       		.uleb128 0x27
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 303


 11275 018c 19       		.uleb128 0x19
 11276 018d 49       		.uleb128 0x49
 11277 018e 13       		.uleb128 0x13
 11278 018f 20       		.uleb128 0x20
 11279 0190 0B       		.uleb128 0xb
 11280 0191 01       		.uleb128 0x1
 11281 0192 13       		.uleb128 0x13
 11282 0193 00       		.byte	0
 11283 0194 00       		.byte	0
 11284 0195 22       		.uleb128 0x22
 11285 0196 34       		.uleb128 0x34
 11286 0197 00       		.byte	0
 11287 0198 03       		.uleb128 0x3
 11288 0199 0E       		.uleb128 0xe
 11289 019a 3A       		.uleb128 0x3a
 11290 019b 0B       		.uleb128 0xb
 11291 019c 3B       		.uleb128 0x3b
 11292 019d 0B       		.uleb128 0xb
 11293 019e 49       		.uleb128 0x49
 11294 019f 13       		.uleb128 0x13
 11295 01a0 00       		.byte	0
 11296 01a1 00       		.byte	0
 11297 01a2 23       		.uleb128 0x23
 11298 01a3 2E       		.uleb128 0x2e
 11299 01a4 01       		.byte	0x1
 11300 01a5 03       		.uleb128 0x3
 11301 01a6 0E       		.uleb128 0xe
 11302 01a7 3A       		.uleb128 0x3a
 11303 01a8 0B       		.uleb128 0xb
 11304 01a9 3B       		.uleb128 0x3b
 11305 01aa 0B       		.uleb128 0xb
 11306 01ab 27       		.uleb128 0x27
 11307 01ac 19       		.uleb128 0x19
 11308 01ad 20       		.uleb128 0x20
 11309 01ae 0B       		.uleb128 0xb
 11310 01af 01       		.uleb128 0x1
 11311 01b0 13       		.uleb128 0x13
 11312 01b1 00       		.byte	0
 11313 01b2 00       		.byte	0
 11314 01b3 24       		.uleb128 0x24
 11315 01b4 05       		.uleb128 0x5
 11316 01b5 00       		.byte	0
 11317 01b6 03       		.uleb128 0x3
 11318 01b7 0E       		.uleb128 0xe
 11319 01b8 3A       		.uleb128 0x3a
 11320 01b9 0B       		.uleb128 0xb
 11321 01ba 3B       		.uleb128 0x3b
 11322 01bb 0B       		.uleb128 0xb
 11323 01bc 49       		.uleb128 0x49
 11324 01bd 13       		.uleb128 0x13
 11325 01be 00       		.byte	0
 11326 01bf 00       		.byte	0
 11327 01c0 25       		.uleb128 0x25
 11328 01c1 2E       		.uleb128 0x2e
 11329 01c2 01       		.byte	0x1
 11330 01c3 03       		.uleb128 0x3
 11331 01c4 0E       		.uleb128 0xe
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 304


 11332 01c5 3A       		.uleb128 0x3a
 11333 01c6 0B       		.uleb128 0xb
 11334 01c7 3B       		.uleb128 0x3b
 11335 01c8 05       		.uleb128 0x5
 11336 01c9 27       		.uleb128 0x27
 11337 01ca 19       		.uleb128 0x19
 11338 01cb 49       		.uleb128 0x49
 11339 01cc 13       		.uleb128 0x13
 11340 01cd 11       		.uleb128 0x11
 11341 01ce 01       		.uleb128 0x1
 11342 01cf 12       		.uleb128 0x12
 11343 01d0 06       		.uleb128 0x6
 11344 01d1 40       		.uleb128 0x40
 11345 01d2 18       		.uleb128 0x18
 11346 01d3 9742     		.uleb128 0x2117
 11347 01d5 19       		.uleb128 0x19
 11348 01d6 01       		.uleb128 0x1
 11349 01d7 13       		.uleb128 0x13
 11350 01d8 00       		.byte	0
 11351 01d9 00       		.byte	0
 11352 01da 26       		.uleb128 0x26
 11353 01db 05       		.uleb128 0x5
 11354 01dc 00       		.byte	0
 11355 01dd 03       		.uleb128 0x3
 11356 01de 0E       		.uleb128 0xe
 11357 01df 3A       		.uleb128 0x3a
 11358 01e0 0B       		.uleb128 0xb
 11359 01e1 3B       		.uleb128 0x3b
 11360 01e2 05       		.uleb128 0x5
 11361 01e3 49       		.uleb128 0x49
 11362 01e4 13       		.uleb128 0x13
 11363 01e5 02       		.uleb128 0x2
 11364 01e6 17       		.uleb128 0x17
 11365 01e7 00       		.byte	0
 11366 01e8 00       		.byte	0
 11367 01e9 27       		.uleb128 0x27
 11368 01ea 34       		.uleb128 0x34
 11369 01eb 00       		.byte	0
 11370 01ec 03       		.uleb128 0x3
 11371 01ed 0E       		.uleb128 0xe
 11372 01ee 3A       		.uleb128 0x3a
 11373 01ef 0B       		.uleb128 0xb
 11374 01f0 3B       		.uleb128 0x3b
 11375 01f1 05       		.uleb128 0x5
 11376 01f2 49       		.uleb128 0x49
 11377 01f3 13       		.uleb128 0x13
 11378 01f4 02       		.uleb128 0x2
 11379 01f5 17       		.uleb128 0x17
 11380 01f6 00       		.byte	0
 11381 01f7 00       		.byte	0
 11382 01f8 28       		.uleb128 0x28
 11383 01f9 2E       		.uleb128 0x2e
 11384 01fa 01       		.byte	0x1
 11385 01fb 03       		.uleb128 0x3
 11386 01fc 0E       		.uleb128 0xe
 11387 01fd 3A       		.uleb128 0x3a
 11388 01fe 0B       		.uleb128 0xb
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 305


 11389 01ff 3B       		.uleb128 0x3b
 11390 0200 05       		.uleb128 0x5
 11391 0201 27       		.uleb128 0x27
 11392 0202 19       		.uleb128 0x19
 11393 0203 11       		.uleb128 0x11
 11394 0204 01       		.uleb128 0x1
 11395 0205 12       		.uleb128 0x12
 11396 0206 06       		.uleb128 0x6
 11397 0207 40       		.uleb128 0x40
 11398 0208 18       		.uleb128 0x18
 11399 0209 9742     		.uleb128 0x2117
 11400 020b 19       		.uleb128 0x19
 11401 020c 01       		.uleb128 0x1
 11402 020d 13       		.uleb128 0x13
 11403 020e 00       		.byte	0
 11404 020f 00       		.byte	0
 11405 0210 29       		.uleb128 0x29
 11406 0211 34       		.uleb128 0x34
 11407 0212 00       		.byte	0
 11408 0213 03       		.uleb128 0x3
 11409 0214 08       		.uleb128 0x8
 11410 0215 3A       		.uleb128 0x3a
 11411 0216 0B       		.uleb128 0xb
 11412 0217 3B       		.uleb128 0x3b
 11413 0218 05       		.uleb128 0x5
 11414 0219 49       		.uleb128 0x49
 11415 021a 13       		.uleb128 0x13
 11416 021b 02       		.uleb128 0x2
 11417 021c 17       		.uleb128 0x17
 11418 021d 00       		.byte	0
 11419 021e 00       		.byte	0
 11420 021f 2A       		.uleb128 0x2a
 11421 0220 898201   		.uleb128 0x4109
 11422 0223 01       		.byte	0x1
 11423 0224 11       		.uleb128 0x11
 11424 0225 01       		.uleb128 0x1
 11425 0226 31       		.uleb128 0x31
 11426 0227 13       		.uleb128 0x13
 11427 0228 01       		.uleb128 0x1
 11428 0229 13       		.uleb128 0x13
 11429 022a 00       		.byte	0
 11430 022b 00       		.byte	0
 11431 022c 2B       		.uleb128 0x2b
 11432 022d 8A8201   		.uleb128 0x410a
 11433 0230 00       		.byte	0
 11434 0231 02       		.uleb128 0x2
 11435 0232 18       		.uleb128 0x18
 11436 0233 9142     		.uleb128 0x2111
 11437 0235 18       		.uleb128 0x18
 11438 0236 00       		.byte	0
 11439 0237 00       		.byte	0
 11440 0238 2C       		.uleb128 0x2c
 11441 0239 898201   		.uleb128 0x4109
 11442 023c 01       		.byte	0x1
 11443 023d 11       		.uleb128 0x11
 11444 023e 01       		.uleb128 0x1
 11445 023f 31       		.uleb128 0x31
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 306


 11446 0240 13       		.uleb128 0x13
 11447 0241 00       		.byte	0
 11448 0242 00       		.byte	0
 11449 0243 2D       		.uleb128 0x2d
 11450 0244 898201   		.uleb128 0x4109
 11451 0247 00       		.byte	0
 11452 0248 11       		.uleb128 0x11
 11453 0249 01       		.uleb128 0x1
 11454 024a 31       		.uleb128 0x31
 11455 024b 13       		.uleb128 0x13
 11456 024c 00       		.byte	0
 11457 024d 00       		.byte	0
 11458 024e 2E       		.uleb128 0x2e
 11459 024f 0B       		.uleb128 0xb
 11460 0250 01       		.byte	0x1
 11461 0251 11       		.uleb128 0x11
 11462 0252 01       		.uleb128 0x1
 11463 0253 12       		.uleb128 0x12
 11464 0254 06       		.uleb128 0x6
 11465 0255 00       		.byte	0
 11466 0256 00       		.byte	0
 11467 0257 2F       		.uleb128 0x2f
 11468 0258 2E       		.uleb128 0x2e
 11469 0259 01       		.byte	0x1
 11470 025a 03       		.uleb128 0x3
 11471 025b 0E       		.uleb128 0xe
 11472 025c 3A       		.uleb128 0x3a
 11473 025d 0B       		.uleb128 0xb
 11474 025e 3B       		.uleb128 0x3b
 11475 025f 05       		.uleb128 0x5
 11476 0260 27       		.uleb128 0x27
 11477 0261 19       		.uleb128 0x19
 11478 0262 8701     		.uleb128 0x87
 11479 0264 19       		.uleb128 0x19
 11480 0265 11       		.uleb128 0x11
 11481 0266 01       		.uleb128 0x1
 11482 0267 12       		.uleb128 0x12
 11483 0268 06       		.uleb128 0x6
 11484 0269 40       		.uleb128 0x40
 11485 026a 18       		.uleb128 0x18
 11486 026b 9742     		.uleb128 0x2117
 11487 026d 19       		.uleb128 0x19
 11488 026e 01       		.uleb128 0x1
 11489 026f 13       		.uleb128 0x13
 11490 0270 00       		.byte	0
 11491 0271 00       		.byte	0
 11492 0272 30       		.uleb128 0x30
 11493 0273 2E       		.uleb128 0x2e
 11494 0274 01       		.byte	0x1
 11495 0275 3F       		.uleb128 0x3f
 11496 0276 19       		.uleb128 0x19
 11497 0277 03       		.uleb128 0x3
 11498 0278 0E       		.uleb128 0xe
 11499 0279 3A       		.uleb128 0x3a
 11500 027a 0B       		.uleb128 0xb
 11501 027b 3B       		.uleb128 0x3b
 11502 027c 05       		.uleb128 0x5
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 307


 11503 027d 27       		.uleb128 0x27
 11504 027e 19       		.uleb128 0x19
 11505 027f 49       		.uleb128 0x49
 11506 0280 13       		.uleb128 0x13
 11507 0281 11       		.uleb128 0x11
 11508 0282 01       		.uleb128 0x1
 11509 0283 12       		.uleb128 0x12
 11510 0284 06       		.uleb128 0x6
 11511 0285 40       		.uleb128 0x40
 11512 0286 18       		.uleb128 0x18
 11513 0287 9742     		.uleb128 0x2117
 11514 0289 19       		.uleb128 0x19
 11515 028a 01       		.uleb128 0x1
 11516 028b 13       		.uleb128 0x13
 11517 028c 00       		.byte	0
 11518 028d 00       		.byte	0
 11519 028e 31       		.uleb128 0x31
 11520 028f 05       		.uleb128 0x5
 11521 0290 00       		.byte	0
 11522 0291 03       		.uleb128 0x3
 11523 0292 0E       		.uleb128 0xe
 11524 0293 3A       		.uleb128 0x3a
 11525 0294 0B       		.uleb128 0xb
 11526 0295 3B       		.uleb128 0x3b
 11527 0296 05       		.uleb128 0x5
 11528 0297 49       		.uleb128 0x49
 11529 0298 13       		.uleb128 0x13
 11530 0299 02       		.uleb128 0x2
 11531 029a 18       		.uleb128 0x18
 11532 029b 00       		.byte	0
 11533 029c 00       		.byte	0
 11534 029d 32       		.uleb128 0x32
 11535 029e 0B       		.uleb128 0xb
 11536 029f 01       		.byte	0x1
 11537 02a0 11       		.uleb128 0x11
 11538 02a1 01       		.uleb128 0x1
 11539 02a2 12       		.uleb128 0x12
 11540 02a3 06       		.uleb128 0x6
 11541 02a4 01       		.uleb128 0x1
 11542 02a5 13       		.uleb128 0x13
 11543 02a6 00       		.byte	0
 11544 02a7 00       		.byte	0
 11545 02a8 33       		.uleb128 0x33
 11546 02a9 2E       		.uleb128 0x2e
 11547 02aa 01       		.byte	0x1
 11548 02ab 3F       		.uleb128 0x3f
 11549 02ac 19       		.uleb128 0x19
 11550 02ad 03       		.uleb128 0x3
 11551 02ae 0E       		.uleb128 0xe
 11552 02af 3A       		.uleb128 0x3a
 11553 02b0 0B       		.uleb128 0xb
 11554 02b1 3B       		.uleb128 0x3b
 11555 02b2 05       		.uleb128 0x5
 11556 02b3 27       		.uleb128 0x27
 11557 02b4 19       		.uleb128 0x19
 11558 02b5 11       		.uleb128 0x11
 11559 02b6 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 308


 11560 02b7 12       		.uleb128 0x12
 11561 02b8 06       		.uleb128 0x6
 11562 02b9 40       		.uleb128 0x40
 11563 02ba 18       		.uleb128 0x18
 11564 02bb 9742     		.uleb128 0x2117
 11565 02bd 19       		.uleb128 0x19
 11566 02be 01       		.uleb128 0x1
 11567 02bf 13       		.uleb128 0x13
 11568 02c0 00       		.byte	0
 11569 02c1 00       		.byte	0
 11570 02c2 34       		.uleb128 0x34
 11571 02c3 34       		.uleb128 0x34
 11572 02c4 00       		.byte	0
 11573 02c5 03       		.uleb128 0x3
 11574 02c6 0E       		.uleb128 0xe
 11575 02c7 3A       		.uleb128 0x3a
 11576 02c8 0B       		.uleb128 0xb
 11577 02c9 3B       		.uleb128 0x3b
 11578 02ca 05       		.uleb128 0x5
 11579 02cb 49       		.uleb128 0x49
 11580 02cc 13       		.uleb128 0x13
 11581 02cd 02       		.uleb128 0x2
 11582 02ce 18       		.uleb128 0x18
 11583 02cf 00       		.byte	0
 11584 02d0 00       		.byte	0
 11585 02d1 35       		.uleb128 0x35
 11586 02d2 34       		.uleb128 0x34
 11587 02d3 00       		.byte	0
 11588 02d4 03       		.uleb128 0x3
 11589 02d5 0E       		.uleb128 0xe
 11590 02d6 3A       		.uleb128 0x3a
 11591 02d7 0B       		.uleb128 0xb
 11592 02d8 3B       		.uleb128 0x3b
 11593 02d9 05       		.uleb128 0x5
 11594 02da 49       		.uleb128 0x49
 11595 02db 13       		.uleb128 0x13
 11596 02dc 00       		.byte	0
 11597 02dd 00       		.byte	0
 11598 02de 36       		.uleb128 0x36
 11599 02df 1D       		.uleb128 0x1d
 11600 02e0 01       		.byte	0x1
 11601 02e1 31       		.uleb128 0x31
 11602 02e2 13       		.uleb128 0x13
 11603 02e3 11       		.uleb128 0x11
 11604 02e4 01       		.uleb128 0x1
 11605 02e5 12       		.uleb128 0x12
 11606 02e6 06       		.uleb128 0x6
 11607 02e7 58       		.uleb128 0x58
 11608 02e8 0B       		.uleb128 0xb
 11609 02e9 59       		.uleb128 0x59
 11610 02ea 05       		.uleb128 0x5
 11611 02eb 01       		.uleb128 0x1
 11612 02ec 13       		.uleb128 0x13
 11613 02ed 00       		.byte	0
 11614 02ee 00       		.byte	0
 11615 02ef 37       		.uleb128 0x37
 11616 02f0 34       		.uleb128 0x34
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 309


 11617 02f1 00       		.byte	0
 11618 02f2 31       		.uleb128 0x31
 11619 02f3 13       		.uleb128 0x13
 11620 02f4 00       		.byte	0
 11621 02f5 00       		.byte	0
 11622 02f6 38       		.uleb128 0x38
 11623 02f7 1D       		.uleb128 0x1d
 11624 02f8 01       		.byte	0x1
 11625 02f9 31       		.uleb128 0x31
 11626 02fa 13       		.uleb128 0x13
 11627 02fb 11       		.uleb128 0x11
 11628 02fc 01       		.uleb128 0x1
 11629 02fd 12       		.uleb128 0x12
 11630 02fe 06       		.uleb128 0x6
 11631 02ff 58       		.uleb128 0x58
 11632 0300 0B       		.uleb128 0xb
 11633 0301 59       		.uleb128 0x59
 11634 0302 05       		.uleb128 0x5
 11635 0303 00       		.byte	0
 11636 0304 00       		.byte	0
 11637 0305 39       		.uleb128 0x39
 11638 0306 05       		.uleb128 0x5
 11639 0307 00       		.byte	0
 11640 0308 31       		.uleb128 0x31
 11641 0309 13       		.uleb128 0x13
 11642 030a 02       		.uleb128 0x2
 11643 030b 17       		.uleb128 0x17
 11644 030c 00       		.byte	0
 11645 030d 00       		.byte	0
 11646 030e 3A       		.uleb128 0x3a
 11647 030f 2E       		.uleb128 0x2e
 11648 0310 00       		.byte	0
 11649 0311 3F       		.uleb128 0x3f
 11650 0312 19       		.uleb128 0x19
 11651 0313 03       		.uleb128 0x3
 11652 0314 0E       		.uleb128 0xe
 11653 0315 3A       		.uleb128 0x3a
 11654 0316 0B       		.uleb128 0xb
 11655 0317 3B       		.uleb128 0x3b
 11656 0318 05       		.uleb128 0x5
 11657 0319 27       		.uleb128 0x27
 11658 031a 19       		.uleb128 0x19
 11659 031b 11       		.uleb128 0x11
 11660 031c 01       		.uleb128 0x1
 11661 031d 12       		.uleb128 0x12
 11662 031e 06       		.uleb128 0x6
 11663 031f 40       		.uleb128 0x40
 11664 0320 18       		.uleb128 0x18
 11665 0321 9742     		.uleb128 0x2117
 11666 0323 19       		.uleb128 0x19
 11667 0324 00       		.byte	0
 11668 0325 00       		.byte	0
 11669 0326 3B       		.uleb128 0x3b
 11670 0327 34       		.uleb128 0x34
 11671 0328 00       		.byte	0
 11672 0329 03       		.uleb128 0x3
 11673 032a 0E       		.uleb128 0xe
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 310


 11674 032b 3A       		.uleb128 0x3a
 11675 032c 0B       		.uleb128 0xb
 11676 032d 3B       		.uleb128 0x3b
 11677 032e 05       		.uleb128 0x5
 11678 032f 49       		.uleb128 0x49
 11679 0330 13       		.uleb128 0x13
 11680 0331 1C       		.uleb128 0x1c
 11681 0332 0B       		.uleb128 0xb
 11682 0333 00       		.byte	0
 11683 0334 00       		.byte	0
 11684 0335 3C       		.uleb128 0x3c
 11685 0336 2E       		.uleb128 0x2e
 11686 0337 00       		.byte	0
 11687 0338 3F       		.uleb128 0x3f
 11688 0339 19       		.uleb128 0x19
 11689 033a 03       		.uleb128 0x3
 11690 033b 0E       		.uleb128 0xe
 11691 033c 3A       		.uleb128 0x3a
 11692 033d 0B       		.uleb128 0xb
 11693 033e 3B       		.uleb128 0x3b
 11694 033f 05       		.uleb128 0x5
 11695 0340 27       		.uleb128 0x27
 11696 0341 19       		.uleb128 0x19
 11697 0342 49       		.uleb128 0x49
 11698 0343 13       		.uleb128 0x13
 11699 0344 11       		.uleb128 0x11
 11700 0345 01       		.uleb128 0x1
 11701 0346 12       		.uleb128 0x12
 11702 0347 06       		.uleb128 0x6
 11703 0348 40       		.uleb128 0x40
 11704 0349 18       		.uleb128 0x18
 11705 034a 9742     		.uleb128 0x2117
 11706 034c 19       		.uleb128 0x19
 11707 034d 00       		.byte	0
 11708 034e 00       		.byte	0
 11709 034f 3D       		.uleb128 0x3d
 11710 0350 0B       		.uleb128 0xb
 11711 0351 01       		.byte	0x1
 11712 0352 55       		.uleb128 0x55
 11713 0353 17       		.uleb128 0x17
 11714 0354 00       		.byte	0
 11715 0355 00       		.byte	0
 11716 0356 3E       		.uleb128 0x3e
 11717 0357 0B       		.uleb128 0xb
 11718 0358 01       		.byte	0x1
 11719 0359 55       		.uleb128 0x55
 11720 035a 17       		.uleb128 0x17
 11721 035b 01       		.uleb128 0x1
 11722 035c 13       		.uleb128 0x13
 11723 035d 00       		.byte	0
 11724 035e 00       		.byte	0
 11725 035f 3F       		.uleb128 0x3f
 11726 0360 34       		.uleb128 0x34
 11727 0361 00       		.byte	0
 11728 0362 03       		.uleb128 0x3
 11729 0363 0E       		.uleb128 0xe
 11730 0364 3A       		.uleb128 0x3a
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 311


 11731 0365 0B       		.uleb128 0xb
 11732 0366 3B       		.uleb128 0x3b
 11733 0367 05       		.uleb128 0x5
 11734 0368 49       		.uleb128 0x49
 11735 0369 13       		.uleb128 0x13
 11736 036a 1C       		.uleb128 0x1c
 11737 036b 0D       		.uleb128 0xd
 11738 036c 00       		.byte	0
 11739 036d 00       		.byte	0
 11740 036e 40       		.uleb128 0x40
 11741 036f 34       		.uleb128 0x34
 11742 0370 00       		.byte	0
 11743 0371 31       		.uleb128 0x31
 11744 0372 13       		.uleb128 0x13
 11745 0373 02       		.uleb128 0x2
 11746 0374 18       		.uleb128 0x18
 11747 0375 00       		.byte	0
 11748 0376 00       		.byte	0
 11749 0377 41       		.uleb128 0x41
 11750 0378 34       		.uleb128 0x34
 11751 0379 00       		.byte	0
 11752 037a 03       		.uleb128 0x3
 11753 037b 08       		.uleb128 0x8
 11754 037c 3A       		.uleb128 0x3a
 11755 037d 0B       		.uleb128 0xb
 11756 037e 3B       		.uleb128 0x3b
 11757 037f 05       		.uleb128 0x5
 11758 0380 49       		.uleb128 0x49
 11759 0381 13       		.uleb128 0x13
 11760 0382 02       		.uleb128 0x2
 11761 0383 18       		.uleb128 0x18
 11762 0384 00       		.byte	0
 11763 0385 00       		.byte	0
 11764 0386 42       		.uleb128 0x42
 11765 0387 34       		.uleb128 0x34
 11766 0388 00       		.byte	0
 11767 0389 03       		.uleb128 0x3
 11768 038a 0E       		.uleb128 0xe
 11769 038b 3A       		.uleb128 0x3a
 11770 038c 0B       		.uleb128 0xb
 11771 038d 3B       		.uleb128 0x3b
 11772 038e 05       		.uleb128 0x5
 11773 038f 49       		.uleb128 0x49
 11774 0390 13       		.uleb128 0x13
 11775 0391 3F       		.uleb128 0x3f
 11776 0392 19       		.uleb128 0x19
 11777 0393 3C       		.uleb128 0x3c
 11778 0394 19       		.uleb128 0x19
 11779 0395 00       		.byte	0
 11780 0396 00       		.byte	0
 11781 0397 43       		.uleb128 0x43
 11782 0398 34       		.uleb128 0x34
 11783 0399 00       		.byte	0
 11784 039a 03       		.uleb128 0x3
 11785 039b 0E       		.uleb128 0xe
 11786 039c 3A       		.uleb128 0x3a
 11787 039d 0B       		.uleb128 0xb
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 312


 11788 039e 3B       		.uleb128 0x3b
 11789 039f 05       		.uleb128 0x5
 11790 03a0 49       		.uleb128 0x49
 11791 03a1 13       		.uleb128 0x13
 11792 03a2 3F       		.uleb128 0x3f
 11793 03a3 19       		.uleb128 0x19
 11794 03a4 02       		.uleb128 0x2
 11795 03a5 18       		.uleb128 0x18
 11796 03a6 00       		.byte	0
 11797 03a7 00       		.byte	0
 11798 03a8 44       		.uleb128 0x44
 11799 03a9 2E       		.uleb128 0x2e
 11800 03aa 00       		.byte	0
 11801 03ab 3F       		.uleb128 0x3f
 11802 03ac 19       		.uleb128 0x19
 11803 03ad 3C       		.uleb128 0x3c
 11804 03ae 19       		.uleb128 0x19
 11805 03af 6E       		.uleb128 0x6e
 11806 03b0 0E       		.uleb128 0xe
 11807 03b1 03       		.uleb128 0x3
 11808 03b2 0E       		.uleb128 0xe
 11809 03b3 3A       		.uleb128 0x3a
 11810 03b4 0B       		.uleb128 0xb
 11811 03b5 3B       		.uleb128 0x3b
 11812 03b6 0B       		.uleb128 0xb
 11813 03b7 00       		.byte	0
 11814 03b8 00       		.byte	0
 11815 03b9 45       		.uleb128 0x45
 11816 03ba 2E       		.uleb128 0x2e
 11817 03bb 00       		.byte	0
 11818 03bc 3F       		.uleb128 0x3f
 11819 03bd 19       		.uleb128 0x19
 11820 03be 3C       		.uleb128 0x3c
 11821 03bf 19       		.uleb128 0x19
 11822 03c0 6E       		.uleb128 0x6e
 11823 03c1 0E       		.uleb128 0xe
 11824 03c2 03       		.uleb128 0x3
 11825 03c3 0E       		.uleb128 0xe
 11826 03c4 3A       		.uleb128 0x3a
 11827 03c5 0B       		.uleb128 0xb
 11828 03c6 3B       		.uleb128 0x3b
 11829 03c7 05       		.uleb128 0x5
 11830 03c8 00       		.byte	0
 11831 03c9 00       		.byte	0
 11832 03ca 46       		.uleb128 0x46
 11833 03cb 2E       		.uleb128 0x2e
 11834 03cc 00       		.byte	0
 11835 03cd 3F       		.uleb128 0x3f
 11836 03ce 19       		.uleb128 0x19
 11837 03cf 3C       		.uleb128 0x3c
 11838 03d0 19       		.uleb128 0x19
 11839 03d1 6E       		.uleb128 0x6e
 11840 03d2 0E       		.uleb128 0xe
 11841 03d3 03       		.uleb128 0x3
 11842 03d4 0E       		.uleb128 0xe
 11843 03d5 00       		.byte	0
 11844 03d6 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 313


 11845 03d7 00       		.byte	0
 11846              		.section	.debug_loc,"",%progbits
 11847              	.Ldebug_loc0:
 11848              	.LLST0:
 11849 0000 00000000 		.4byte	.LVL0
 11850 0004 20000000 		.4byte	.LVL1
 11851 0008 0100     		.2byte	0x1
 11852 000a 50       		.byte	0x50
 11853 000b 20000000 		.4byte	.LVL1
 11854 000f 22000000 		.4byte	.LVL2
 11855 0013 0400     		.2byte	0x4
 11856 0015 F3       		.byte	0xf3
 11857 0016 01       		.uleb128 0x1
 11858 0017 50       		.byte	0x50
 11859 0018 9F       		.byte	0x9f
 11860 0019 22000000 		.4byte	.LVL2
 11861 001d 24000000 		.4byte	.LVL3
 11862 0021 0100     		.2byte	0x1
 11863 0023 50       		.byte	0x50
 11864 0024 24000000 		.4byte	.LVL3
 11865 0028 26000000 		.4byte	.LVL4
 11866 002c 0400     		.2byte	0x4
 11867 002e F3       		.byte	0xf3
 11868 002f 01       		.uleb128 0x1
 11869 0030 50       		.byte	0x50
 11870 0031 9F       		.byte	0x9f
 11871 0032 26000000 		.4byte	.LVL4
 11872 0036 28000000 		.4byte	.LVL5
 11873 003a 0100     		.2byte	0x1
 11874 003c 50       		.byte	0x50
 11875 003d 28000000 		.4byte	.LVL5
 11876 0041 2A000000 		.4byte	.LVL6
 11877 0045 0400     		.2byte	0x4
 11878 0047 F3       		.byte	0xf3
 11879 0048 01       		.uleb128 0x1
 11880 0049 50       		.byte	0x50
 11881 004a 9F       		.byte	0x9f
 11882 004b 2A000000 		.4byte	.LVL6
 11883 004f 2C000000 		.4byte	.LVL7
 11884 0053 0100     		.2byte	0x1
 11885 0055 50       		.byte	0x50
 11886 0056 2C000000 		.4byte	.LVL7
 11887 005a 38000000 		.4byte	.LFE80
 11888 005e 0400     		.2byte	0x4
 11889 0060 F3       		.byte	0xf3
 11890 0061 01       		.uleb128 0x1
 11891 0062 50       		.byte	0x50
 11892 0063 9F       		.byte	0x9f
 11893 0064 00000000 		.4byte	0
 11894 0068 00000000 		.4byte	0
 11895              	.LLST1:
 11896 006c 00000000 		.4byte	.LVL0
 11897 0070 2C000000 		.4byte	.LVL7
 11898 0074 0200     		.2byte	0x2
 11899 0076 30       		.byte	0x30
 11900 0077 9F       		.byte	0x9f
 11901 0078 2C000000 		.4byte	.LVL7
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 314


 11902 007c 38000000 		.4byte	.LFE80
 11903 0080 0100     		.2byte	0x1
 11904 0082 50       		.byte	0x50
 11905 0083 00000000 		.4byte	0
 11906 0087 00000000 		.4byte	0
 11907              	.LLST2:
 11908 008b 00000000 		.4byte	.LVL0
 11909 008f 20000000 		.4byte	.LVL1
 11910 0093 0100     		.2byte	0x1
 11911 0095 50       		.byte	0x50
 11912 0096 20000000 		.4byte	.LVL1
 11913 009a 22000000 		.4byte	.LVL2
 11914 009e 0400     		.2byte	0x4
 11915 00a0 F3       		.byte	0xf3
 11916 00a1 01       		.uleb128 0x1
 11917 00a2 50       		.byte	0x50
 11918 00a3 9F       		.byte	0x9f
 11919 00a4 22000000 		.4byte	.LVL2
 11920 00a8 24000000 		.4byte	.LVL3
 11921 00ac 0100     		.2byte	0x1
 11922 00ae 50       		.byte	0x50
 11923 00af 24000000 		.4byte	.LVL3
 11924 00b3 26000000 		.4byte	.LVL4
 11925 00b7 0400     		.2byte	0x4
 11926 00b9 F3       		.byte	0xf3
 11927 00ba 01       		.uleb128 0x1
 11928 00bb 50       		.byte	0x50
 11929 00bc 9F       		.byte	0x9f
 11930 00bd 26000000 		.4byte	.LVL4
 11931 00c1 28000000 		.4byte	.LVL5
 11932 00c5 0100     		.2byte	0x1
 11933 00c7 50       		.byte	0x50
 11934 00c8 28000000 		.4byte	.LVL5
 11935 00cc 2A000000 		.4byte	.LVL6
 11936 00d0 0400     		.2byte	0x4
 11937 00d2 F3       		.byte	0xf3
 11938 00d3 01       		.uleb128 0x1
 11939 00d4 50       		.byte	0x50
 11940 00d5 9F       		.byte	0x9f
 11941 00d6 2A000000 		.4byte	.LVL6
 11942 00da 2C000000 		.4byte	.LVL7
 11943 00de 0100     		.2byte	0x1
 11944 00e0 50       		.byte	0x50
 11945 00e1 2C000000 		.4byte	.LVL7
 11946 00e5 38000000 		.4byte	.LFE80
 11947 00e9 0400     		.2byte	0x4
 11948 00eb F3       		.byte	0xf3
 11949 00ec 01       		.uleb128 0x1
 11950 00ed 50       		.byte	0x50
 11951 00ee 9F       		.byte	0x9f
 11952 00ef 00000000 		.4byte	0
 11953 00f3 00000000 		.4byte	0
 11954              	.LLST3:
 11955 00f7 00000000 		.4byte	.LVL8
 11956 00fb 06000000 		.4byte	.LVL10
 11957 00ff 0100     		.2byte	0x1
 11958 0101 50       		.byte	0x50
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 315


 11959 0102 06000000 		.4byte	.LVL10
 11960 0106 12000000 		.4byte	.LVL13
 11961 010a 0100     		.2byte	0x1
 11962 010c 50       		.byte	0x50
 11963 010d 00000000 		.4byte	0
 11964 0111 00000000 		.4byte	0
 11965              	.LLST4:
 11966 0115 00000000 		.4byte	.LVL8
 11967 0119 04000000 		.4byte	.LVL9
 11968 011d 0200     		.2byte	0x2
 11969 011f 30       		.byte	0x30
 11970 0120 9F       		.byte	0x9f
 11971 0121 04000000 		.4byte	.LVL9
 11972 0125 0E000000 		.4byte	.LVL12
 11973 0129 0100     		.2byte	0x1
 11974 012b 53       		.byte	0x53
 11975 012c 0E000000 		.4byte	.LVL12
 11976 0130 14000000 		.4byte	.LFE109
 11977 0134 0500     		.2byte	0x5
 11978 0136 73       		.byte	0x73
 11979 0137 00       		.sleb128 0
 11980 0138 32       		.byte	0x32
 11981 0139 25       		.byte	0x25
 11982 013a 9F       		.byte	0x9f
 11983 013b 00000000 		.4byte	0
 11984 013f 00000000 		.4byte	0
 11985              	.LLST5:
 11986 0143 22000000 		.4byte	.LVL14
 11987 0147 24000000 		.4byte	.LVL15
 11988 014b 0100     		.2byte	0x1
 11989 014d 52       		.byte	0x52
 11990 014e 00000000 		.4byte	0
 11991 0152 00000000 		.4byte	0
 11992              	.LLST6:
 11993 0156 00000000 		.4byte	.LVL16
 11994 015a 1A000000 		.4byte	.LVL19
 11995 015e 0100     		.2byte	0x1
 11996 0160 50       		.byte	0x50
 11997 0161 1A000000 		.4byte	.LVL19
 11998 0165 FA000000 		.4byte	.LVL33
 11999 0169 0100     		.2byte	0x1
 12000 016b 59       		.byte	0x59
 12001 016c FA000000 		.4byte	.LVL33
 12002 0170 00010000 		.4byte	.LFE70
 12003 0174 0400     		.2byte	0x4
 12004 0176 F3       		.byte	0xf3
 12005 0177 01       		.uleb128 0x1
 12006 0178 50       		.byte	0x50
 12007 0179 9F       		.byte	0x9f
 12008 017a 00000000 		.4byte	0
 12009 017e 00000000 		.4byte	0
 12010              	.LLST7:
 12011 0182 00000000 		.4byte	.LVL16
 12012 0186 18000000 		.4byte	.LVL18
 12013 018a 0100     		.2byte	0x1
 12014 018c 51       		.byte	0x51
 12015 018d 18000000 		.4byte	.LVL18
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 316


 12016 0191 56000000 		.4byte	.LVL27
 12017 0195 0100     		.2byte	0x1
 12018 0197 55       		.byte	0x55
 12019 0198 56000000 		.4byte	.LVL27
 12020 019c 00010000 		.4byte	.LFE70
 12021 01a0 0400     		.2byte	0x4
 12022 01a2 F3       		.byte	0xf3
 12023 01a3 01       		.uleb128 0x1
 12024 01a4 51       		.byte	0x51
 12025 01a5 9F       		.byte	0x9f
 12026 01a6 00000000 		.4byte	0
 12027 01aa 00000000 		.4byte	0
 12028              	.LLST8:
 12029 01ae 00000000 		.4byte	.LVL16
 12030 01b2 16000000 		.4byte	.LVL17
 12031 01b6 0100     		.2byte	0x1
 12032 01b8 52       		.byte	0x52
 12033 01b9 16000000 		.4byte	.LVL17
 12034 01bd 2A000000 		.4byte	.LVL21
 12035 01c1 0100     		.2byte	0x1
 12036 01c3 57       		.byte	0x57
 12037 01c4 2A000000 		.4byte	.LVL21
 12038 01c8 32000000 		.4byte	.LVL23
 12039 01cc 0700     		.2byte	0x7
 12040 01ce 72       		.byte	0x72
 12041 01cf 81808080 		.sleb128 -1073741823
 12041      7C
 12042 01d4 9F       		.byte	0x9f
 12043 01d5 32000000 		.4byte	.LVL23
 12044 01d9 00010000 		.4byte	.LFE70
 12045 01dd 0400     		.2byte	0x4
 12046 01df F3       		.byte	0xf3
 12047 01e0 01       		.uleb128 0x1
 12048 01e1 52       		.byte	0x52
 12049 01e2 9F       		.byte	0x9f
 12050 01e3 00000000 		.4byte	0
 12051 01e7 00000000 		.4byte	0
 12052              	.LLST9:
 12053 01eb 00000000 		.4byte	.LVL16
 12054 01ef 1D000000 		.4byte	.LVL20-1
 12055 01f3 0100     		.2byte	0x1
 12056 01f5 53       		.byte	0x53
 12057 01f6 1D000000 		.4byte	.LVL20-1
 12058 01fa FA000000 		.4byte	.LVL33
 12059 01fe 0100     		.2byte	0x1
 12060 0200 5A       		.byte	0x5a
 12061 0201 FA000000 		.4byte	.LVL33
 12062 0205 00010000 		.4byte	.LFE70
 12063 0209 0400     		.2byte	0x4
 12064 020b F3       		.byte	0xf3
 12065 020c 01       		.uleb128 0x1
 12066 020d 53       		.byte	0x53
 12067 020e 9F       		.byte	0x9f
 12068 020f 00000000 		.4byte	0
 12069 0213 00000000 		.4byte	0
 12070              	.LLST10:
 12071 0217 00000000 		.4byte	.LVL16
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 317


 12072 021b 50000000 		.4byte	.LVL26
 12073 021f 0200     		.2byte	0x2
 12074 0221 91       		.byte	0x91
 12075 0222 00       		.sleb128 0
 12076 0223 50000000 		.4byte	.LVL26
 12077 0227 6C000000 		.4byte	.LVL30
 12078 022b 0100     		.2byte	0x1
 12079 022d 56       		.byte	0x56
 12080 022e 00000000 		.4byte	0
 12081 0232 00000000 		.4byte	0
 12082              	.LLST11:
 12083 0236 00000000 		.4byte	.LVL16
 12084 023a FA000000 		.4byte	.LVL33
 12085 023e 0200     		.2byte	0x2
 12086 0240 91       		.byte	0x91
 12087 0241 04       		.sleb128 4
 12088 0242 FA000000 		.4byte	.LVL33
 12089 0246 00010000 		.4byte	.LFE70
 12090 024a 0200     		.2byte	0x2
 12091 024c 7D       		.byte	0x7d
 12092 024d 04       		.sleb128 4
 12093 024e 00000000 		.4byte	0
 12094 0252 00000000 		.4byte	0
 12095              	.LLST12:
 12096 0256 00000000 		.4byte	.LVL16
 12097 025a FA000000 		.4byte	.LVL33
 12098 025e 0200     		.2byte	0x2
 12099 0260 91       		.byte	0x91
 12100 0261 08       		.sleb128 8
 12101 0262 FA000000 		.4byte	.LVL33
 12102 0266 00010000 		.4byte	.LFE70
 12103 026a 0200     		.2byte	0x2
 12104 026c 7D       		.byte	0x7d
 12105 026d 08       		.sleb128 8
 12106 026e 00000000 		.4byte	0
 12107 0272 00000000 		.4byte	0
 12108              	.LLST13:
 12109 0276 00000000 		.4byte	.LVL16
 12110 027a FA000000 		.4byte	.LVL33
 12111 027e 0200     		.2byte	0x2
 12112 0280 91       		.byte	0x91
 12113 0281 0C       		.sleb128 12
 12114 0282 FA000000 		.4byte	.LVL33
 12115 0286 00010000 		.4byte	.LFE70
 12116 028a 0200     		.2byte	0x2
 12117 028c 7D       		.byte	0x7d
 12118 028d 0C       		.sleb128 12
 12119 028e 00000000 		.4byte	0
 12120 0292 00000000 		.4byte	0
 12121              	.LLST14:
 12122 0296 2A000000 		.4byte	.LVL21
 12123 029a FA000000 		.4byte	.LVL33
 12124 029e 0100     		.2byte	0x1
 12125 02a0 57       		.byte	0x57
 12126 02a1 00000000 		.4byte	0
 12127 02a5 00000000 		.4byte	0
 12128              	.LLST15:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 318


 12129 02a9 2E000000 		.4byte	.LVL22
 12130 02ad 32000000 		.4byte	.LVL23
 12131 02b1 0200     		.2byte	0x2
 12132 02b3 30       		.byte	0x30
 12133 02b4 9F       		.byte	0x9f
 12134 02b5 32000000 		.4byte	.LVL23
 12135 02b9 46000000 		.4byte	.LVL25
 12136 02bd 0100     		.2byte	0x1
 12137 02bf 53       		.byte	0x53
 12138 02c0 00000000 		.4byte	0
 12139 02c4 00000000 		.4byte	0
 12140              	.LLST16:
 12141 02c8 02000000 		.4byte	.LVL34
 12142 02cc 06000000 		.4byte	.LVL35
 12143 02d0 0200     		.2byte	0x2
 12144 02d2 30       		.byte	0x30
 12145 02d3 9F       		.byte	0x9f
 12146 02d4 06000000 		.4byte	.LVL35
 12147 02d8 1C000000 		.4byte	.LVL38
 12148 02dc 0100     		.2byte	0x1
 12149 02de 54       		.byte	0x54
 12150 02df 00000000 		.4byte	0
 12151 02e3 00000000 		.4byte	0
 12152              	.LLST17:
 12153 02e7 00000000 		.4byte	.LVL44
 12154 02eb 07000000 		.4byte	.LVL45-1
 12155 02ef 0100     		.2byte	0x1
 12156 02f1 50       		.byte	0x50
 12157 02f2 07000000 		.4byte	.LVL45-1
 12158 02f6 A4000000 		.4byte	.LVL49
 12159 02fa 0100     		.2byte	0x1
 12160 02fc 55       		.byte	0x55
 12161 02fd A4000000 		.4byte	.LVL49
 12162 0301 AC000000 		.4byte	.LFE71
 12163 0305 0400     		.2byte	0x4
 12164 0307 F3       		.byte	0xf3
 12165 0308 01       		.uleb128 0x1
 12166 0309 50       		.byte	0x50
 12167 030a 9F       		.byte	0x9f
 12168 030b 00000000 		.4byte	0
 12169 030f 00000000 		.4byte	0
 12170              	.LLST18:
 12171 0313 00000000 		.4byte	.LVL50
 12172 0317 06000000 		.4byte	.LVL51
 12173 031b 0100     		.2byte	0x1
 12174 031d 50       		.byte	0x50
 12175 031e 06000000 		.4byte	.LVL51
 12176 0322 18000000 		.4byte	.LFE111
 12177 0326 0100     		.2byte	0x1
 12178 0328 54       		.byte	0x54
 12179 0329 00000000 		.4byte	0
 12180 032d 00000000 		.4byte	0
 12181              	.LLST19:
 12182 0331 10000000 		.4byte	.LVL56
 12183 0335 34000000 		.4byte	.LVL59
 12184 0339 0100     		.2byte	0x1
 12185 033b 55       		.byte	0x55
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 319


 12186 033c 00000000 		.4byte	0
 12187 0340 00000000 		.4byte	0
 12188              	.LLST20:
 12189 0344 00000000 		.4byte	.LVL60
 12190 0348 02000000 		.4byte	.LVL61
 12191 034c 0100     		.2byte	0x1
 12192 034e 50       		.byte	0x50
 12193 034f 02000000 		.4byte	.LVL61
 12194 0353 08000000 		.4byte	.LFE104
 12195 0357 0400     		.2byte	0x4
 12196 0359 F3       		.byte	0xf3
 12197 035a 01       		.uleb128 0x1
 12198 035b 50       		.byte	0x50
 12199 035c 9F       		.byte	0x9f
 12200 035d 00000000 		.4byte	0
 12201 0361 00000000 		.4byte	0
 12202              	.LLST21:
 12203 0365 00000000 		.4byte	.LVL63
 12204 0369 10000000 		.4byte	.LVL65
 12205 036d 0100     		.2byte	0x1
 12206 036f 50       		.byte	0x50
 12207 0370 10000000 		.4byte	.LVL65
 12208 0374 4A000000 		.4byte	.LVL69
 12209 0378 0100     		.2byte	0x1
 12210 037a 54       		.byte	0x54
 12211 037b 4A000000 		.4byte	.LVL69
 12212 037f 84000000 		.4byte	.LFE128
 12213 0383 0400     		.2byte	0x4
 12214 0385 F3       		.byte	0xf3
 12215 0386 01       		.uleb128 0x1
 12216 0387 50       		.byte	0x50
 12217 0388 9F       		.byte	0x9f
 12218 0389 00000000 		.4byte	0
 12219 038d 00000000 		.4byte	0
 12220              	.LLST22:
 12221 0391 00000000 		.4byte	.LVL63
 12222 0395 15000000 		.4byte	.LVL66-1
 12223 0399 0100     		.2byte	0x1
 12224 039b 51       		.byte	0x51
 12225 039c 15000000 		.4byte	.LVL66-1
 12226 03a0 80000000 		.4byte	.LVL74
 12227 03a4 0100     		.2byte	0x1
 12228 03a6 56       		.byte	0x56
 12229 03a7 80000000 		.4byte	.LVL74
 12230 03ab 84000000 		.4byte	.LFE128
 12231 03af 0400     		.2byte	0x4
 12232 03b1 F3       		.byte	0xf3
 12233 03b2 01       		.uleb128 0x1
 12234 03b3 51       		.byte	0x51
 12235 03b4 9F       		.byte	0x9f
 12236 03b5 00000000 		.4byte	0
 12237 03b9 00000000 		.4byte	0
 12238              	.LLST23:
 12239 03bd 4A000000 		.4byte	.LVL69
 12240 03c1 80000000 		.4byte	.LVL74
 12241 03c5 0100     		.2byte	0x1
 12242 03c7 54       		.byte	0x54
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 320


 12243 03c8 00000000 		.4byte	0
 12244 03cc 00000000 		.4byte	0
 12245              	.LLST24:
 12246 03d0 0C000000 		.4byte	.LVL64
 12247 03d4 6A000000 		.4byte	.LVL72
 12248 03d8 0100     		.2byte	0x1
 12249 03da 55       		.byte	0x55
 12250 03db 00000000 		.4byte	0
 12251 03df 00000000 		.4byte	0
 12252              	.LLST25:
 12253 03e3 00000000 		.4byte	.LVL75
 12254 03e7 07000000 		.4byte	.LVL76-1
 12255 03eb 0100     		.2byte	0x1
 12256 03ed 50       		.byte	0x50
 12257 03ee 07000000 		.4byte	.LVL76-1
 12258 03f2 22000000 		.4byte	.LFE117
 12259 03f6 0100     		.2byte	0x1
 12260 03f8 54       		.byte	0x54
 12261 03f9 00000000 		.4byte	0
 12262 03fd 00000000 		.4byte	0
 12263              	.LLST26:
 12264 0401 00000000 		.4byte	.LVL75
 12265 0405 07000000 		.4byte	.LVL76-1
 12266 0409 0100     		.2byte	0x1
 12267 040b 51       		.byte	0x51
 12268 040c 07000000 		.4byte	.LVL76-1
 12269 0410 22000000 		.4byte	.LFE117
 12270 0414 0400     		.2byte	0x4
 12271 0416 F3       		.byte	0xf3
 12272 0417 01       		.uleb128 0x1
 12273 0418 51       		.byte	0x51
 12274 0419 9F       		.byte	0x9f
 12275 041a 00000000 		.4byte	0
 12276 041e 00000000 		.4byte	0
 12277              	.LLST27:
 12278 0422 0E000000 		.4byte	.LVL77
 12279 0426 20000000 		.4byte	.LVL79
 12280 042a 0100     		.2byte	0x1
 12281 042c 50       		.byte	0x50
 12282 042d 00000000 		.4byte	0
 12283 0431 00000000 		.4byte	0
 12284              	.LLST28:
 12285 0435 00000000 		.4byte	.LVL80
 12286 0439 10000000 		.4byte	.LVL81
 12287 043d 0100     		.2byte	0x1
 12288 043f 50       		.byte	0x50
 12289 0440 10000000 		.4byte	.LVL81
 12290 0444 64000000 		.4byte	.LFE69
 12291 0448 0100     		.2byte	0x1
 12292 044a 56       		.byte	0x56
 12293 044b 00000000 		.4byte	0
 12294 044f 00000000 		.4byte	0
 12295              	.LLST29:
 12296 0453 00000000 		.4byte	.LVL80
 12297 0457 13000000 		.4byte	.LVL82-1
 12298 045b 0100     		.2byte	0x1
 12299 045d 51       		.byte	0x51
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 321


 12300 045e 13000000 		.4byte	.LVL82-1
 12301 0462 64000000 		.4byte	.LFE69
 12302 0466 0100     		.2byte	0x1
 12303 0468 57       		.byte	0x57
 12304 0469 00000000 		.4byte	0
 12305 046d 00000000 		.4byte	0
 12306              	.LLST30:
 12307 0471 00000000 		.4byte	.LVL80
 12308 0475 13000000 		.4byte	.LVL82-1
 12309 0479 0100     		.2byte	0x1
 12310 047b 52       		.byte	0x52
 12311 047c 13000000 		.4byte	.LVL82-1
 12312 0480 64000000 		.4byte	.LFE69
 12313 0484 0400     		.2byte	0x4
 12314 0486 F3       		.byte	0xf3
 12315 0487 01       		.uleb128 0x1
 12316 0488 52       		.byte	0x52
 12317 0489 9F       		.byte	0x9f
 12318 048a 00000000 		.4byte	0
 12319 048e 00000000 		.4byte	0
 12320              	.LLST31:
 12321 0492 00000000 		.4byte	.LVL80
 12322 0496 13000000 		.4byte	.LVL82-1
 12323 049a 0100     		.2byte	0x1
 12324 049c 53       		.byte	0x53
 12325 049d 13000000 		.4byte	.LVL82-1
 12326 04a1 64000000 		.4byte	.LFE69
 12327 04a5 0100     		.2byte	0x1
 12328 04a7 58       		.byte	0x58
 12329 04a8 00000000 		.4byte	0
 12330 04ac 00000000 		.4byte	0
 12331              	.LLST32:
 12332 04b0 20000000 		.4byte	.LVL84
 12333 04b4 2C000000 		.4byte	.LVL85
 12334 04b8 0100     		.2byte	0x1
 12335 04ba 50       		.byte	0x50
 12336 04bb 2C000000 		.4byte	.LVL85
 12337 04bf 32000000 		.4byte	.LVL87
 12338 04c3 0100     		.2byte	0x1
 12339 04c5 54       		.byte	0x54
 12340 04c6 34000000 		.4byte	.LVL88
 12341 04ca 64000000 		.4byte	.LFE69
 12342 04ce 0100     		.2byte	0x1
 12343 04d0 54       		.byte	0x54
 12344 04d1 00000000 		.4byte	0
 12345 04d5 00000000 		.4byte	0
 12346              	.LLST33:
 12347 04d9 56000000 		.4byte	.LVL90
 12348 04dd 5A000000 		.4byte	.LVL91
 12349 04e1 0200     		.2byte	0x2
 12350 04e3 31       		.byte	0x31
 12351 04e4 9F       		.byte	0x9f
 12352 04e5 5E000000 		.4byte	.LVL92
 12353 04e9 64000000 		.4byte	.LFE69
 12354 04ed 0100     		.2byte	0x1
 12355 04ef 50       		.byte	0x50
 12356 04f0 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 322


 12357 04f4 00000000 		.4byte	0
 12358              	.LLST34:
 12359 04f8 14000000 		.4byte	.LVL82
 12360 04fc 1C000000 		.4byte	.LVL83
 12361 0500 0100     		.2byte	0x1
 12362 0502 50       		.byte	0x50
 12363 0503 1C000000 		.4byte	.LVL83
 12364 0507 32000000 		.4byte	.LVL87
 12365 050b 0100     		.2byte	0x1
 12366 050d 59       		.byte	0x59
 12367 050e 32000000 		.4byte	.LVL87
 12368 0512 34000000 		.4byte	.LVL88
 12369 0516 0100     		.2byte	0x1
 12370 0518 50       		.byte	0x50
 12371 0519 00000000 		.4byte	0
 12372 051d 00000000 		.4byte	0
 12373              	.LLST35:
 12374 0521 00000000 		.4byte	.LVL93
 12375 0525 07000000 		.4byte	.LVL94-1
 12376 0529 0100     		.2byte	0x1
 12377 052b 50       		.byte	0x50
 12378 052c 07000000 		.4byte	.LVL94-1
 12379 0530 10000000 		.4byte	.LVL95
 12380 0534 0100     		.2byte	0x1
 12381 0536 54       		.byte	0x54
 12382 0537 00000000 		.4byte	0
 12383 053b 00000000 		.4byte	0
 12384              	.LLST36:
 12385 053f 10000000 		.4byte	.LVL95
 12386 0543 B2000000 		.4byte	.LVL102
 12387 0547 0100     		.2byte	0x1
 12388 0549 54       		.byte	0x54
 12389 054a 00000000 		.4byte	0
 12390 054e 00000000 		.4byte	0
 12391              	.LLST37:
 12392 0552 00000000 		.4byte	.LVL103
 12393 0556 11000000 		.4byte	.LVL105-1
 12394 055a 0100     		.2byte	0x1
 12395 055c 50       		.byte	0x50
 12396 055d 11000000 		.4byte	.LVL105-1
 12397 0561 44000000 		.4byte	.LVL109
 12398 0565 0100     		.2byte	0x1
 12399 0567 54       		.byte	0x54
 12400 0568 44000000 		.4byte	.LVL109
 12401 056c 46000000 		.4byte	.LVL110
 12402 0570 0100     		.2byte	0x1
 12403 0572 50       		.byte	0x50
 12404 0573 46000000 		.4byte	.LVL110
 12405 0577 48000000 		.4byte	.LVL111
 12406 057b 0400     		.2byte	0x4
 12407 057d F3       		.byte	0xf3
 12408 057e 01       		.uleb128 0x1
 12409 057f 50       		.byte	0x50
 12410 0580 9F       		.byte	0x9f
 12411 0581 48000000 		.4byte	.LVL111
 12412 0585 5C000000 		.4byte	.LVL117
 12413 0589 0100     		.2byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 323


 12414 058b 54       		.byte	0x54
 12415 058c 5C000000 		.4byte	.LVL117
 12416 0590 64000000 		.4byte	.LFE75
 12417 0594 0400     		.2byte	0x4
 12418 0596 F3       		.byte	0xf3
 12419 0597 01       		.uleb128 0x1
 12420 0598 50       		.byte	0x50
 12421 0599 9F       		.byte	0x9f
 12422 059a 00000000 		.4byte	0
 12423 059e 00000000 		.4byte	0
 12424              	.LLST38:
 12425 05a2 14000000 		.4byte	.LVL106
 12426 05a6 44000000 		.4byte	.LVL109
 12427 05aa 0100     		.2byte	0x1
 12428 05ac 55       		.byte	0x55
 12429 05ad 48000000 		.4byte	.LVL111
 12430 05b1 5C000000 		.4byte	.LVL117
 12431 05b5 0100     		.2byte	0x1
 12432 05b7 55       		.byte	0x55
 12433 05b8 00000000 		.4byte	0
 12434 05bc 00000000 		.4byte	0
 12435              	.LLST39:
 12436 05c0 02000000 		.4byte	.LVL104
 12437 05c4 11000000 		.4byte	.LVL105-1
 12438 05c8 0100     		.2byte	0x1
 12439 05ca 50       		.byte	0x50
 12440 05cb 11000000 		.4byte	.LVL105-1
 12441 05cf 44000000 		.4byte	.LVL109
 12442 05d3 0100     		.2byte	0x1
 12443 05d5 54       		.byte	0x54
 12444 05d6 44000000 		.4byte	.LVL109
 12445 05da 46000000 		.4byte	.LVL110
 12446 05de 0100     		.2byte	0x1
 12447 05e0 50       		.byte	0x50
 12448 05e1 46000000 		.4byte	.LVL110
 12449 05e5 48000000 		.4byte	.LVL111
 12450 05e9 0400     		.2byte	0x4
 12451 05eb F3       		.byte	0xf3
 12452 05ec 01       		.uleb128 0x1
 12453 05ed 50       		.byte	0x50
 12454 05ee 9F       		.byte	0x9f
 12455 05ef 48000000 		.4byte	.LVL111
 12456 05f3 5C000000 		.4byte	.LVL117
 12457 05f7 0100     		.2byte	0x1
 12458 05f9 54       		.byte	0x54
 12459 05fa 5C000000 		.4byte	.LVL117
 12460 05fe 64000000 		.4byte	.LFE75
 12461 0602 0400     		.2byte	0x4
 12462 0604 F3       		.byte	0xf3
 12463 0605 01       		.uleb128 0x1
 12464 0606 50       		.byte	0x50
 12465 0607 9F       		.byte	0x9f
 12466 0608 00000000 		.4byte	0
 12467 060c 00000000 		.4byte	0
 12468              	.LLST40:
 12469 0610 00000000 		.4byte	.LVL118
 12470 0614 07000000 		.4byte	.LVL119-1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 324


 12471 0618 0100     		.2byte	0x1
 12472 061a 50       		.byte	0x50
 12473 061b 07000000 		.4byte	.LVL119-1
 12474 061f 10000000 		.4byte	.LVL120
 12475 0623 0100     		.2byte	0x1
 12476 0625 54       		.byte	0x54
 12477 0626 00000000 		.4byte	0
 12478 062a 00000000 		.4byte	0
 12479              	.LLST41:
 12480 062e 10000000 		.4byte	.LVL120
 12481 0632 12000000 		.4byte	.LVL121
 12482 0636 0100     		.2byte	0x1
 12483 0638 54       		.byte	0x54
 12484 0639 00000000 		.4byte	0
 12485 063d 00000000 		.4byte	0
 12486              	.LLST42:
 12487 0641 12000000 		.4byte	.LVL121
 12488 0645 1A000000 		.4byte	.LVL123
 12489 0649 0100     		.2byte	0x1
 12490 064b 54       		.byte	0x54
 12491 064c 1A000000 		.4byte	.LVL123
 12492 0650 20000000 		.4byte	.LFE76
 12493 0654 0100     		.2byte	0x1
 12494 0656 50       		.byte	0x50
 12495 0657 00000000 		.4byte	0
 12496 065b 00000000 		.4byte	0
 12497              	.LLST43:
 12498 065f 00000000 		.4byte	.LVL124
 12499 0663 1C000000 		.4byte	.LVL125
 12500 0667 0100     		.2byte	0x1
 12501 0669 50       		.byte	0x50
 12502 066a 00000000 		.4byte	0
 12503 066e 00000000 		.4byte	0
 12504              	.LLST44:
 12505 0672 1C000000 		.4byte	.LVL125
 12506 0676 1E000000 		.4byte	.LVL126
 12507 067a 0100     		.2byte	0x1
 12508 067c 50       		.byte	0x50
 12509 067d 00000000 		.4byte	0
 12510 0681 00000000 		.4byte	0
 12511              	.LLST45:
 12512 0685 1E000000 		.4byte	.LVL126
 12513 0689 22000000 		.4byte	.LVL127
 12514 068d 0100     		.2byte	0x1
 12515 068f 53       		.byte	0x53
 12516 0690 00000000 		.4byte	0
 12517 0694 00000000 		.4byte	0
 12518              	.LLST46:
 12519 0698 00000000 		.4byte	.LVL128
 12520 069c 0F000000 		.4byte	.LVL131-1
 12521 06a0 0100     		.2byte	0x1
 12522 06a2 50       		.byte	0x50
 12523 06a3 0F000000 		.4byte	.LVL131-1
 12524 06a7 18000000 		.4byte	.LVL132
 12525 06ab 0100     		.2byte	0x1
 12526 06ad 54       		.byte	0x54
 12527 06ae 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 325


 12528 06b2 00000000 		.4byte	0
 12529              	.LLST47:
 12530 06b6 00000000 		.4byte	.LVL128
 12531 06ba 0C000000 		.4byte	.LVL130
 12532 06be 0100     		.2byte	0x1
 12533 06c0 51       		.byte	0x51
 12534 06c1 0C000000 		.4byte	.LVL130
 12535 06c5 66000000 		.4byte	.LVL137
 12536 06c9 0100     		.2byte	0x1
 12537 06cb 55       		.byte	0x55
 12538 06cc 66000000 		.4byte	.LVL137
 12539 06d0 87000000 		.4byte	.LVL138-1
 12540 06d4 0300     		.2byte	0x3
 12541 06d6 74       		.byte	0x74
 12542 06d7 C800     		.sleb128 72
 12543 06d9 00000000 		.4byte	0
 12544 06dd 00000000 		.4byte	0
 12545              	.LLST48:
 12546 06e1 18000000 		.4byte	.LVL132
 12547 06e5 DA000000 		.4byte	.LVL143
 12548 06e9 0100     		.2byte	0x1
 12549 06eb 54       		.byte	0x54
 12550 06ec 00000000 		.4byte	0
 12551 06f0 00000000 		.4byte	0
 12552              	.LLST49:
 12553 06f4 1A000000 		.4byte	.LVL133
 12554 06f8 5E000000 		.4byte	.LVL136
 12555 06fc 0100     		.2byte	0x1
 12556 06fe 53       		.byte	0x53
 12557 06ff 00000000 		.4byte	0
 12558 0703 00000000 		.4byte	0
 12559              	.LLST50:
 12560 0707 54000000 		.4byte	.LVL135
 12561 070b 90000000 		.4byte	.LVL139
 12562 070f 0100     		.2byte	0x1
 12563 0711 56       		.byte	0x56
 12564 0712 00000000 		.4byte	0
 12565 0716 00000000 		.4byte	0
 12566              	.LLST51:
 12567 071a 06000000 		.4byte	.LVL129
 12568 071e 52000000 		.4byte	.LVL134
 12569 0722 0200     		.2byte	0x2
 12570 0724 30       		.byte	0x30
 12571 0725 9F       		.byte	0x9f
 12572 0726 52000000 		.4byte	.LVL134
 12573 072a D4000000 		.4byte	.LVL141
 12574 072e 0100     		.2byte	0x1
 12575 0730 57       		.byte	0x57
 12576 0731 00000000 		.4byte	0
 12577 0735 00000000 		.4byte	0
 12578              	.LLST52:
 12579 0739 00000000 		.4byte	.LVL144
 12580 073d 13000000 		.4byte	.LVL145-1
 12581 0741 0100     		.2byte	0x1
 12582 0743 50       		.byte	0x50
 12583 0744 13000000 		.4byte	.LVL145-1
 12584 0748 6C000000 		.4byte	.LVL150
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 326


 12585 074c 0100     		.2byte	0x1
 12586 074e 54       		.byte	0x54
 12587 074f 6C000000 		.4byte	.LVL150
 12588 0753 78000000 		.4byte	.LFE81
 12589 0757 0100     		.2byte	0x1
 12590 0759 50       		.byte	0x50
 12591 075a 00000000 		.4byte	0
 12592 075e 00000000 		.4byte	0
 12593              	.LLST54:
 12594 0762 00000000 		.4byte	.LVL151
 12595 0766 1B000000 		.4byte	.LVL153-1
 12596 076a 0100     		.2byte	0x1
 12597 076c 50       		.byte	0x50
 12598 076d 1B000000 		.4byte	.LVL153-1
 12599 0771 80000000 		.4byte	.LVL161
 12600 0775 0100     		.2byte	0x1
 12601 0777 54       		.byte	0x54
 12602 0778 80000000 		.4byte	.LVL161
 12603 077c 88000000 		.4byte	.LFE82
 12604 0780 0400     		.2byte	0x4
 12605 0782 F3       		.byte	0xf3
 12606 0783 01       		.uleb128 0x1
 12607 0784 50       		.byte	0x50
 12608 0785 9F       		.byte	0x9f
 12609 0786 00000000 		.4byte	0
 12610 078a 00000000 		.4byte	0
 12611              	.LLST55:
 12612 078e 04000000 		.4byte	.LVL152
 12613 0792 3A000000 		.4byte	.LVL154
 12614 0796 0200     		.2byte	0x2
 12615 0798 30       		.byte	0x30
 12616 0799 9F       		.byte	0x9f
 12617 079a 3A000000 		.4byte	.LVL154
 12618 079e 68000000 		.4byte	.LVL157
 12619 07a2 0100     		.2byte	0x1
 12620 07a4 56       		.byte	0x56
 12621 07a5 68000000 		.4byte	.LVL157
 12622 07a9 78000000 		.4byte	.LVL159
 12623 07ad 0200     		.2byte	0x2
 12624 07af 30       		.byte	0x30
 12625 07b0 9F       		.byte	0x9f
 12626 07b1 78000000 		.4byte	.LVL159
 12627 07b5 80000000 		.4byte	.LVL161
 12628 07b9 0100     		.2byte	0x1
 12629 07bb 56       		.byte	0x56
 12630 07bc 80000000 		.4byte	.LVL161
 12631 07c0 88000000 		.4byte	.LFE82
 12632 07c4 0100     		.2byte	0x1
 12633 07c6 50       		.byte	0x50
 12634 07c7 00000000 		.4byte	0
 12635 07cb 00000000 		.4byte	0
 12636              	.LLST56:
 12637 07cf 04000000 		.4byte	.LVL152
 12638 07d3 1B000000 		.4byte	.LVL153-1
 12639 07d7 0100     		.2byte	0x1
 12640 07d9 50       		.byte	0x50
 12641 07da 1B000000 		.4byte	.LVL153-1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 327


 12642 07de 80000000 		.4byte	.LVL161
 12643 07e2 0100     		.2byte	0x1
 12644 07e4 54       		.byte	0x54
 12645 07e5 80000000 		.4byte	.LVL161
 12646 07e9 88000000 		.4byte	.LFE82
 12647 07ed 0400     		.2byte	0x4
 12648 07ef F3       		.byte	0xf3
 12649 07f0 01       		.uleb128 0x1
 12650 07f1 50       		.byte	0x50
 12651 07f2 9F       		.byte	0x9f
 12652 07f3 00000000 		.4byte	0
 12653 07f7 00000000 		.4byte	0
 12654              	.LLST57:
 12655 07fb 78000000 		.4byte	.LVL159
 12656 07ff 7C000000 		.4byte	.LVL160
 12657 0803 0100     		.2byte	0x1
 12658 0805 55       		.byte	0x55
 12659 0806 00000000 		.4byte	0
 12660 080a 00000000 		.4byte	0
 12661              	.LLST58:
 12662 080e 16000000 		.4byte	.LVL162
 12663 0812 4B000000 		.4byte	.LVL163-1
 12664 0816 0100     		.2byte	0x1
 12665 0818 50       		.byte	0x50
 12666 0819 00000000 		.4byte	0
 12667 081d 00000000 		.4byte	0
 12668              	.LLST59:
 12669 0821 00000000 		.4byte	.LVL169
 12670 0825 0A000000 		.4byte	.LVL170
 12671 0829 0100     		.2byte	0x1
 12672 082b 50       		.byte	0x50
 12673 082c 00000000 		.4byte	0
 12674 0830 00000000 		.4byte	0
 12675              	.LLST60:
 12676 0834 44000000 		.4byte	.LVL177
 12677 0838 4A000000 		.4byte	.LVL179
 12678 083c 0100     		.2byte	0x1
 12679 083e 54       		.byte	0x54
 12680 083f 70000000 		.4byte	.LVL181
 12681 0843 C4000000 		.4byte	.LVL186
 12682 0847 0100     		.2byte	0x1
 12683 0849 54       		.byte	0x54
 12684 084a 00000000 		.4byte	0
 12685 084e 00000000 		.4byte	0
 12686              	.LLST61:
 12687 0852 72000000 		.4byte	.LVL182
 12688 0856 83000000 		.4byte	.LVL183-1
 12689 085a 0100     		.2byte	0x1
 12690 085c 53       		.byte	0x53
 12691 085d 00000000 		.4byte	0
 12692 0861 00000000 		.4byte	0
 12693              	.LLST62:
 12694 0865 04000000 		.4byte	.LVL171
 12695 0869 44000000 		.4byte	.LVL177
 12696 086d 0200     		.2byte	0x2
 12697 086f 30       		.byte	0x30
 12698 0870 9F       		.byte	0x9f
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 328


 12699 0871 44000000 		.4byte	.LVL177
 12700 0875 48000000 		.4byte	.LVL178
 12701 0879 0100     		.2byte	0x1
 12702 087b 58       		.byte	0x58
 12703 087c 4A000000 		.4byte	.LVL179
 12704 0880 4E000000 		.4byte	.LVL180
 12705 0884 0200     		.2byte	0x2
 12706 0886 30       		.byte	0x30
 12707 0887 9F       		.byte	0x9f
 12708 0888 4E000000 		.4byte	.LVL180
 12709 088c DC000000 		.4byte	.LVL187
 12710 0890 0100     		.2byte	0x1
 12711 0892 58       		.byte	0x58
 12712 0893 DC000000 		.4byte	.LVL187
 12713 0897 EE000000 		.4byte	.LVL188
 12714 089b 0200     		.2byte	0x2
 12715 089d 30       		.byte	0x30
 12716 089e 9F       		.byte	0x9f
 12717 089f EE000000 		.4byte	.LVL188
 12718 08a3 04010000 		.4byte	.LVL191
 12719 08a7 0100     		.2byte	0x1
 12720 08a9 58       		.byte	0x58
 12721 08aa 04010000 		.4byte	.LVL191
 12722 08ae 08010000 		.4byte	.LFE92
 12723 08b2 0100     		.2byte	0x1
 12724 08b4 50       		.byte	0x50
 12725 08b5 00000000 		.4byte	0
 12726 08b9 00000000 		.4byte	0
 12727              	.LLST63:
 12728 08bd 16000000 		.4byte	.LVL172
 12729 08c1 DC000000 		.4byte	.LVL187
 12730 08c5 0100     		.2byte	0x1
 12731 08c7 57       		.byte	0x57
 12732 08c8 EE000000 		.4byte	.LVL188
 12733 08cc F2000000 		.4byte	.LVL189
 12734 08d0 0100     		.2byte	0x1
 12735 08d2 57       		.byte	0x57
 12736 08d3 00000000 		.4byte	0
 12737 08d7 00000000 		.4byte	0
 12738              	.LLST64:
 12739 08db 1E000000 		.4byte	.LVL173
 12740 08df 2C000000 		.4byte	.LVL174
 12741 08e3 0100     		.2byte	0x1
 12742 08e5 52       		.byte	0x52
 12743 08e6 2C000000 		.4byte	.LVL174
 12744 08ea 32000000 		.4byte	.LVL175
 12745 08ee 0500     		.2byte	0x5
 12746 08f0 03       		.byte	0x3
 12747 08f1 D0000000 		.4byte	pxOverflowDelayedTaskList
 12748 08f5 00000000 		.4byte	0
 12749 08f9 00000000 		.4byte	0
 12750              	.LLST65:
 12751 08fd 02000000 		.4byte	.LVL192
 12752 0901 26000000 		.4byte	.LVL194
 12753 0905 0200     		.2byte	0x2
 12754 0907 30       		.byte	0x30
 12755 0908 9F       		.byte	0x9f
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 329


 12756 0909 26000000 		.4byte	.LVL194
 12757 090d 74000000 		.4byte	.LVL199
 12758 0911 0100     		.2byte	0x1
 12759 0913 55       		.byte	0x55
 12760 0914 74000000 		.4byte	.LVL199
 12761 0918 76000000 		.4byte	.LVL200
 12762 091c 0200     		.2byte	0x2
 12763 091e 30       		.byte	0x30
 12764 091f 9F       		.byte	0x9f
 12765 0920 76000000 		.4byte	.LVL200
 12766 0924 C2000000 		.4byte	.LVL208
 12767 0928 0100     		.2byte	0x1
 12768 092a 55       		.byte	0x55
 12769 092b C2000000 		.4byte	.LVL208
 12770 092f C6000000 		.4byte	.LVL209
 12771 0933 0200     		.2byte	0x2
 12772 0935 30       		.byte	0x30
 12773 0936 9F       		.byte	0x9f
 12774 0937 C6000000 		.4byte	.LVL209
 12775 093b C8000000 		.4byte	.LVL210
 12776 093f 0100     		.2byte	0x1
 12777 0941 55       		.byte	0x55
 12778 0942 00000000 		.4byte	0
 12779 0946 00000000 		.4byte	0
 12780              	.LLST66:
 12781 094a 02000000 		.4byte	.LVL192
 12782 094e AE000000 		.4byte	.LVL206
 12783 0952 0200     		.2byte	0x2
 12784 0954 30       		.byte	0x30
 12785 0955 9F       		.byte	0x9f
 12786 0956 AE000000 		.4byte	.LVL206
 12787 095a C2000000 		.4byte	.LVL208
 12788 095e 0200     		.2byte	0x2
 12789 0960 31       		.byte	0x31
 12790 0961 9F       		.byte	0x9f
 12791 0962 C2000000 		.4byte	.LVL208
 12792 0966 C8000000 		.4byte	.LVL210
 12793 096a 0200     		.2byte	0x2
 12794 096c 30       		.byte	0x30
 12795 096d 9F       		.byte	0x9f
 12796 096e C8000000 		.4byte	.LVL210
 12797 0972 D0000000 		.4byte	.LVL212
 12798 0976 0100     		.2byte	0x1
 12799 0978 54       		.byte	0x54
 12800 0979 D0000000 		.4byte	.LVL212
 12801 097d D8000000 		.4byte	.LFE86
 12802 0981 0100     		.2byte	0x1
 12803 0983 50       		.byte	0x50
 12804 0984 00000000 		.4byte	0
 12805 0988 00000000 		.4byte	0
 12806              	.LLST67:
 12807 098c 8A000000 		.4byte	.LVL202
 12808 0990 9A000000 		.4byte	.LVL204
 12809 0994 0100     		.2byte	0x1
 12810 0996 54       		.byte	0x54
 12811 0997 9A000000 		.4byte	.LVL204
 12812 099b 9C000000 		.4byte	.LVL205
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 330


 12813 099f 0300     		.2byte	0x3
 12814 09a1 74       		.byte	0x74
 12815 09a2 7F       		.sleb128 -1
 12816 09a3 9F       		.byte	0x9f
 12817 09a4 9C000000 		.4byte	.LVL205
 12818 09a8 C0000000 		.4byte	.LVL207
 12819 09ac 0100     		.2byte	0x1
 12820 09ae 54       		.byte	0x54
 12821 09af C6000000 		.4byte	.LVL209
 12822 09b3 C8000000 		.4byte	.LVL210
 12823 09b7 0100     		.2byte	0x1
 12824 09b9 54       		.byte	0x54
 12825 09ba 00000000 		.4byte	0
 12826 09be 00000000 		.4byte	0
 12827              	.LLST68:
 12828 09c2 00000000 		.4byte	.LVL213
 12829 09c6 09000000 		.4byte	.LVL215-1
 12830 09ca 0100     		.2byte	0x1
 12831 09cc 50       		.byte	0x50
 12832 09cd 09000000 		.4byte	.LVL215-1
 12833 09d1 62000000 		.4byte	.LVL222
 12834 09d5 0100     		.2byte	0x1
 12835 09d7 55       		.byte	0x55
 12836 09d8 62000000 		.4byte	.LVL222
 12837 09dc 6C000000 		.4byte	.LFE73
 12838 09e0 0400     		.2byte	0x4
 12839 09e2 F3       		.byte	0xf3
 12840 09e3 01       		.uleb128 0x1
 12841 09e4 50       		.byte	0x50
 12842 09e5 9F       		.byte	0x9f
 12843 09e6 00000000 		.4byte	0
 12844 09ea 00000000 		.4byte	0
 12845              	.LLST69:
 12846 09ee 00000000 		.4byte	.LVL213
 12847 09f2 09000000 		.4byte	.LVL215-1
 12848 09f6 0100     		.2byte	0x1
 12849 09f8 51       		.byte	0x51
 12850 09f9 09000000 		.4byte	.LVL215-1
 12851 09fd 62000000 		.4byte	.LVL222
 12852 0a01 0100     		.2byte	0x1
 12853 0a03 54       		.byte	0x54
 12854 0a04 62000000 		.4byte	.LVL222
 12855 0a08 6C000000 		.4byte	.LFE73
 12856 0a0c 0400     		.2byte	0x4
 12857 0a0e F3       		.byte	0xf3
 12858 0a0f 01       		.uleb128 0x1
 12859 0a10 51       		.byte	0x51
 12860 0a11 9F       		.byte	0x9f
 12861 0a12 00000000 		.4byte	0
 12862 0a16 00000000 		.4byte	0
 12863              	.LLST70:
 12864 0a1a 14000000 		.4byte	.LVL217
 12865 0a1e 49000000 		.4byte	.LVL220-1
 12866 0a22 0100     		.2byte	0x1
 12867 0a24 53       		.byte	0x53
 12868 0a25 00000000 		.4byte	0
 12869 0a29 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 331


 12870              	.LLST71:
 12871 0a2d 06000000 		.4byte	.LVL214
 12872 0a31 3E000000 		.4byte	.LVL218
 12873 0a35 0200     		.2byte	0x2
 12874 0a37 30       		.byte	0x30
 12875 0a38 9F       		.byte	0x9f
 12876 0a39 3E000000 		.4byte	.LVL218
 12877 0a3d 49000000 		.4byte	.LVL220-1
 12878 0a41 0100     		.2byte	0x1
 12879 0a43 52       		.byte	0x52
 12880 0a44 00000000 		.4byte	0
 12881 0a48 00000000 		.4byte	0
 12882              	.LLST72:
 12883 0a4c 10000000 		.4byte	.LVL216
 12884 0a50 46000000 		.4byte	.LVL219
 12885 0a54 0100     		.2byte	0x1
 12886 0a56 50       		.byte	0x50
 12887 0a57 00000000 		.4byte	0
 12888 0a5b 00000000 		.4byte	0
 12889              	.LLST73:
 12890 0a5f 00000000 		.4byte	.LVL223
 12891 0a63 09000000 		.4byte	.LVL225-1
 12892 0a67 0100     		.2byte	0x1
 12893 0a69 50       		.byte	0x50
 12894 0a6a 09000000 		.4byte	.LVL225-1
 12895 0a6e 18000000 		.4byte	.LVL228
 12896 0a72 0100     		.2byte	0x1
 12897 0a74 54       		.byte	0x54
 12898 0a75 18000000 		.4byte	.LVL228
 12899 0a79 1A000000 		.4byte	.LVL229
 12900 0a7d 0100     		.2byte	0x1
 12901 0a7f 50       		.byte	0x50
 12902 0a80 1A000000 		.4byte	.LVL229
 12903 0a84 34000000 		.4byte	.LFE74
 12904 0a88 0400     		.2byte	0x4
 12905 0a8a F3       		.byte	0xf3
 12906 0a8b 01       		.uleb128 0x1
 12907 0a8c 50       		.byte	0x50
 12908 0a8d 9F       		.byte	0x9f
 12909 0a8e 00000000 		.4byte	0
 12910 0a92 00000000 		.4byte	0
 12911              	.LLST74:
 12912 0a96 02000000 		.4byte	.LVL224
 12913 0a9a 16000000 		.4byte	.LVL227
 12914 0a9e 0200     		.2byte	0x2
 12915 0aa0 30       		.byte	0x30
 12916 0aa1 9F       		.byte	0x9f
 12917 0aa2 16000000 		.4byte	.LVL227
 12918 0aa6 18000000 		.4byte	.LVL228
 12919 0aaa 0100     		.2byte	0x1
 12920 0aac 50       		.byte	0x50
 12921 0aad 18000000 		.4byte	.LVL228
 12922 0ab1 1A000000 		.4byte	.LVL229
 12923 0ab5 0200     		.2byte	0x2
 12924 0ab7 30       		.byte	0x30
 12925 0ab8 9F       		.byte	0x9f
 12926 0ab9 1A000000 		.4byte	.LVL229
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 332


 12927 0abd 34000000 		.4byte	.LFE74
 12928 0ac1 0100     		.2byte	0x1
 12929 0ac3 50       		.byte	0x50
 12930 0ac4 00000000 		.4byte	0
 12931 0ac8 00000000 		.4byte	0
 12932              	.LLST75:
 12933 0acc 40000000 		.4byte	.LVL231
 12934 0ad0 5A000000 		.4byte	.LVL232
 12935 0ad4 0100     		.2byte	0x1
 12936 0ad6 53       		.byte	0x53
 12937 0ad7 00000000 		.4byte	0
 12938 0adb 00000000 		.4byte	0
 12939              	.LLST76:
 12940 0adf 80000000 		.4byte	.LVL236
 12941 0ae3 B2000000 		.4byte	.LVL237
 12942 0ae7 0100     		.2byte	0x1
 12943 0ae9 53       		.byte	0x53
 12944 0aea 00000000 		.4byte	0
 12945 0aee 00000000 		.4byte	0
 12946              	.LLST77:
 12947 0af2 76000000 		.4byte	.LVL234
 12948 0af6 7A000000 		.4byte	.LVL235
 12949 0afa 0100     		.2byte	0x1
 12950 0afc 53       		.byte	0x53
 12951 0afd 00000000 		.4byte	0
 12952 0b01 00000000 		.4byte	0
 12953              	.LLST78:
 12954 0b05 80000000 		.4byte	.LVL236
 12955 0b09 B2000000 		.4byte	.LVL237
 12956 0b0d 0B00     		.2byte	0xb
 12957 0b0f 73       		.byte	0x73
 12958 0b10 00       		.sleb128 0
 12959 0b11 44       		.byte	0x44
 12960 0b12 1E       		.byte	0x1e
 12961 0b13 03       		.byte	0x3
 12962 0b14 30000000 		.4byte	pxReadyTasksLists
 12963 0b18 22       		.byte	0x22
 12964 0b19 9F       		.byte	0x9f
 12965 0b1a 00000000 		.4byte	0
 12966 0b1e 00000000 		.4byte	0
 12967              	.LLST79:
 12968 0b22 00000000 		.4byte	.LVL238
 12969 0b26 07000000 		.4byte	.LVL239-1
 12970 0b2a 0100     		.2byte	0x1
 12971 0b2c 50       		.byte	0x50
 12972 0b2d 07000000 		.4byte	.LVL239-1
 12973 0b31 10000000 		.4byte	.LVL240
 12974 0b35 0100     		.2byte	0x1
 12975 0b37 54       		.byte	0x54
 12976 0b38 00000000 		.4byte	0
 12977 0b3c 00000000 		.4byte	0
 12978              	.LLST80:
 12979 0b40 10000000 		.4byte	.LVL240
 12980 0b44 B8000000 		.4byte	.LVL251
 12981 0b48 0100     		.2byte	0x1
 12982 0b4a 54       		.byte	0x54
 12983 0b4b 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 333


 12984 0b4f 00000000 		.4byte	0
 12985              	.LLST81:
 12986 0b53 00000000 		.4byte	.LVL252
 12987 0b57 0F000000 		.4byte	.LVL254-1
 12988 0b5b 0100     		.2byte	0x1
 12989 0b5d 50       		.byte	0x50
 12990 0b5e 0F000000 		.4byte	.LVL254-1
 12991 0b62 20000000 		.4byte	.LFE94
 12992 0b66 0400     		.2byte	0x4
 12993 0b68 F3       		.byte	0xf3
 12994 0b69 01       		.uleb128 0x1
 12995 0b6a 50       		.byte	0x50
 12996 0b6b 9F       		.byte	0x9f
 12997 0b6c 00000000 		.4byte	0
 12998 0b70 00000000 		.4byte	0
 12999              	.LLST82:
 13000 0b74 00000000 		.4byte	.LVL252
 13001 0b78 0A000000 		.4byte	.LVL253
 13002 0b7c 0100     		.2byte	0x1
 13003 0b7e 51       		.byte	0x51
 13004 0b7f 0A000000 		.4byte	.LVL253
 13005 0b83 1A000000 		.4byte	.LVL256
 13006 0b87 0100     		.2byte	0x1
 13007 0b89 54       		.byte	0x54
 13008 0b8a 1A000000 		.4byte	.LVL256
 13009 0b8e 20000000 		.4byte	.LFE94
 13010 0b92 0400     		.2byte	0x4
 13011 0b94 F3       		.byte	0xf3
 13012 0b95 01       		.uleb128 0x1
 13013 0b96 51       		.byte	0x51
 13014 0b97 9F       		.byte	0x9f
 13015 0b98 00000000 		.4byte	0
 13016 0b9c 00000000 		.4byte	0
 13017              	.LLST83:
 13018 0ba0 00000000 		.4byte	.LVL257
 13019 0ba4 19000000 		.4byte	.LVL260-1
 13020 0ba8 0100     		.2byte	0x1
 13021 0baa 50       		.byte	0x50
 13022 0bab 19000000 		.4byte	.LVL260-1
 13023 0baf 28000000 		.4byte	.LFE95
 13024 0bb3 0400     		.2byte	0x4
 13025 0bb5 F3       		.byte	0xf3
 13026 0bb6 01       		.uleb128 0x1
 13027 0bb7 50       		.byte	0x50
 13028 0bb8 9F       		.byte	0x9f
 13029 0bb9 00000000 		.4byte	0
 13030 0bbd 00000000 		.4byte	0
 13031              	.LLST84:
 13032 0bc1 00000000 		.4byte	.LVL257
 13033 0bc5 0E000000 		.4byte	.LVL259
 13034 0bc9 0100     		.2byte	0x1
 13035 0bcb 51       		.byte	0x51
 13036 0bcc 0E000000 		.4byte	.LVL259
 13037 0bd0 28000000 		.4byte	.LFE95
 13038 0bd4 0400     		.2byte	0x4
 13039 0bd6 F3       		.byte	0xf3
 13040 0bd7 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 334


 13041 0bd8 51       		.byte	0x51
 13042 0bd9 9F       		.byte	0x9f
 13043 0bda 00000000 		.4byte	0
 13044 0bde 00000000 		.4byte	0
 13045              	.LLST85:
 13046 0be2 00000000 		.4byte	.LVL257
 13047 0be6 0A000000 		.4byte	.LVL258
 13048 0bea 0100     		.2byte	0x1
 13049 0bec 52       		.byte	0x52
 13050 0bed 0A000000 		.4byte	.LVL258
 13051 0bf1 24000000 		.4byte	.LVL262
 13052 0bf5 0100     		.2byte	0x1
 13053 0bf7 54       		.byte	0x54
 13054 0bf8 24000000 		.4byte	.LVL262
 13055 0bfc 28000000 		.4byte	.LFE95
 13056 0c00 0400     		.2byte	0x4
 13057 0c02 F3       		.byte	0xf3
 13058 0c03 01       		.uleb128 0x1
 13059 0c04 52       		.byte	0x52
 13060 0c05 9F       		.byte	0x9f
 13061 0c06 00000000 		.4byte	0
 13062 0c0a 00000000 		.4byte	0
 13063              	.LLST86:
 13064 0c0e 00000000 		.4byte	.LVL263
 13065 0c12 0C000000 		.4byte	.LVL265
 13066 0c16 0100     		.2byte	0x1
 13067 0c18 50       		.byte	0x50
 13068 0c19 0C000000 		.4byte	.LVL265
 13069 0c1d 74000000 		.4byte	.LFE96
 13070 0c21 0400     		.2byte	0x4
 13071 0c23 F3       		.byte	0xf3
 13072 0c24 01       		.uleb128 0x1
 13073 0c25 50       		.byte	0x50
 13074 0c26 9F       		.byte	0x9f
 13075 0c27 00000000 		.4byte	0
 13076 0c2b 00000000 		.4byte	0
 13077              	.LLST87:
 13078 0c2f 06000000 		.4byte	.LVL264
 13079 0c33 6A000000 		.4byte	.LVL273
 13080 0c37 0100     		.2byte	0x1
 13081 0c39 54       		.byte	0x54
 13082 0c3a 00000000 		.4byte	0
 13083 0c3e 00000000 		.4byte	0
 13084              	.LLST88:
 13085 0c42 5C000000 		.4byte	.LVL270
 13086 0c46 66000000 		.4byte	.LVL271
 13087 0c4a 0200     		.2byte	0x2
 13088 0c4c 31       		.byte	0x31
 13089 0c4d 9F       		.byte	0x9f
 13090 0c4e 68000000 		.4byte	.LVL272
 13091 0c52 74000000 		.4byte	.LFE96
 13092 0c56 0100     		.2byte	0x1
 13093 0c58 50       		.byte	0x50
 13094 0c59 00000000 		.4byte	0
 13095 0c5d 00000000 		.4byte	0
 13096              	.LLST89:
 13097 0c61 00000000 		.4byte	.LVL274
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 335


 13098 0c65 0D000000 		.4byte	.LVL277-1
 13099 0c69 0100     		.2byte	0x1
 13100 0c6b 50       		.byte	0x50
 13101 0c6c 0D000000 		.4byte	.LVL277-1
 13102 0c70 54000000 		.4byte	.LFE97
 13103 0c74 0400     		.2byte	0x4
 13104 0c76 F3       		.byte	0xf3
 13105 0c77 01       		.uleb128 0x1
 13106 0c78 50       		.byte	0x50
 13107 0c79 9F       		.byte	0x9f
 13108 0c7a 00000000 		.4byte	0
 13109 0c7e 00000000 		.4byte	0
 13110              	.LLST90:
 13111 0c82 00000000 		.4byte	.LVL274
 13112 0c86 06000000 		.4byte	.LVL275
 13113 0c8a 0100     		.2byte	0x1
 13114 0c8c 51       		.byte	0x51
 13115 0c8d 06000000 		.4byte	.LVL275
 13116 0c91 54000000 		.4byte	.LFE97
 13117 0c95 0400     		.2byte	0x4
 13118 0c97 F3       		.byte	0xf3
 13119 0c98 01       		.uleb128 0x1
 13120 0c99 51       		.byte	0x51
 13121 0c9a 9F       		.byte	0x9f
 13122 0c9b 00000000 		.4byte	0
 13123 0c9f 00000000 		.4byte	0
 13124              	.LLST91:
 13125 0ca3 0A000000 		.4byte	.LVL276
 13126 0ca7 50000000 		.4byte	.LVL280
 13127 0cab 0100     		.2byte	0x1
 13128 0cad 55       		.byte	0x55
 13129 0cae 00000000 		.4byte	0
 13130 0cb2 00000000 		.4byte	0
 13131              	.LLST92:
 13132 0cb6 00000000 		.4byte	.LVL281
 13133 0cba 07000000 		.4byte	.LVL282-1
 13134 0cbe 0100     		.2byte	0x1
 13135 0cc0 50       		.byte	0x50
 13136 0cc1 07000000 		.4byte	.LVL282-1
 13137 0cc5 1C000000 		.4byte	.LVL284
 13138 0cc9 0100     		.2byte	0x1
 13139 0ccb 54       		.byte	0x54
 13140 0ccc 1C000000 		.4byte	.LVL284
 13141 0cd0 20000000 		.4byte	.LFE98
 13142 0cd4 0400     		.2byte	0x4
 13143 0cd6 F3       		.byte	0xf3
 13144 0cd7 01       		.uleb128 0x1
 13145 0cd8 50       		.byte	0x50
 13146 0cd9 9F       		.byte	0x9f
 13147 0cda 00000000 		.4byte	0
 13148 0cde 00000000 		.4byte	0
 13149              	.LLST93:
 13150 0ce2 00000000 		.4byte	.LVL286
 13151 0ce6 09000000 		.4byte	.LVL287-1
 13152 0cea 0100     		.2byte	0x1
 13153 0cec 50       		.byte	0x50
 13154 0ced 09000000 		.4byte	.LVL287-1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 336


 13155 0cf1 3C000000 		.4byte	.LVL292
 13156 0cf5 0100     		.2byte	0x1
 13157 0cf7 54       		.byte	0x54
 13158 0cf8 3C000000 		.4byte	.LVL292
 13159 0cfc 3E000000 		.4byte	.LVL293
 13160 0d00 0400     		.2byte	0x4
 13161 0d02 F3       		.byte	0xf3
 13162 0d03 01       		.uleb128 0x1
 13163 0d04 50       		.byte	0x50
 13164 0d05 9F       		.byte	0x9f
 13165 0d06 3E000000 		.4byte	.LVL293
 13166 0d0a 44000000 		.4byte	.LVL295
 13167 0d0e 0100     		.2byte	0x1
 13168 0d10 54       		.byte	0x54
 13169 0d11 44000000 		.4byte	.LVL295
 13170 0d15 46000000 		.4byte	.LVL296
 13171 0d19 0400     		.2byte	0x4
 13172 0d1b F3       		.byte	0xf3
 13173 0d1c 01       		.uleb128 0x1
 13174 0d1d 50       		.byte	0x50
 13175 0d1e 9F       		.byte	0x9f
 13176 0d1f 46000000 		.4byte	.LVL296
 13177 0d23 48000000 		.4byte	.LVL297
 13178 0d27 0100     		.2byte	0x1
 13179 0d29 54       		.byte	0x54
 13180 0d2a 48000000 		.4byte	.LVL297
 13181 0d2e 4A000000 		.4byte	.LVL298
 13182 0d32 0400     		.2byte	0x4
 13183 0d34 F3       		.byte	0xf3
 13184 0d35 01       		.uleb128 0x1
 13185 0d36 50       		.byte	0x50
 13186 0d37 9F       		.byte	0x9f
 13187 0d38 4A000000 		.4byte	.LVL298
 13188 0d3c 4C000000 		.4byte	.LVL299
 13189 0d40 0100     		.2byte	0x1
 13190 0d42 54       		.byte	0x54
 13191 0d43 4C000000 		.4byte	.LVL299
 13192 0d47 58000000 		.4byte	.LFE100
 13193 0d4b 0400     		.2byte	0x4
 13194 0d4d F3       		.byte	0xf3
 13195 0d4e 01       		.uleb128 0x1
 13196 0d4f 50       		.byte	0x50
 13197 0d50 9F       		.byte	0x9f
 13198 0d51 00000000 		.4byte	0
 13199 0d55 00000000 		.4byte	0
 13200              	.LLST94:
 13201 0d59 00000000 		.4byte	.LVL286
 13202 0d5d 09000000 		.4byte	.LVL287-1
 13203 0d61 0100     		.2byte	0x1
 13204 0d63 51       		.byte	0x51
 13205 0d64 09000000 		.4byte	.LVL287-1
 13206 0d68 54000000 		.4byte	.LVL301
 13207 0d6c 0100     		.2byte	0x1
 13208 0d6e 55       		.byte	0x55
 13209 0d6f 54000000 		.4byte	.LVL301
 13210 0d73 58000000 		.4byte	.LFE100
 13211 0d77 0400     		.2byte	0x4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 337


 13212 0d79 F3       		.byte	0xf3
 13213 0d7a 01       		.uleb128 0x1
 13214 0d7b 51       		.byte	0x51
 13215 0d7c 9F       		.byte	0x9f
 13216 0d7d 00000000 		.4byte	0
 13217 0d81 00000000 		.4byte	0
 13218              	.LLST95:
 13219 0d85 3A000000 		.4byte	.LVL291
 13220 0d89 3E000000 		.4byte	.LVL293
 13221 0d8d 0200     		.2byte	0x2
 13222 0d8f 30       		.byte	0x30
 13223 0d90 9F       		.byte	0x9f
 13224 0d91 42000000 		.4byte	.LVL294
 13225 0d95 46000000 		.4byte	.LVL296
 13226 0d99 0200     		.2byte	0x2
 13227 0d9b 31       		.byte	0x31
 13228 0d9c 9F       		.byte	0x9f
 13229 0d9d 4C000000 		.4byte	.LVL299
 13230 0da1 54000000 		.4byte	.LVL301
 13231 0da5 0100     		.2byte	0x1
 13232 0da7 54       		.byte	0x54
 13233 0da8 54000000 		.4byte	.LVL301
 13234 0dac 58000000 		.4byte	.LFE100
 13235 0db0 0100     		.2byte	0x1
 13236 0db2 50       		.byte	0x50
 13237 0db3 00000000 		.4byte	0
 13238 0db7 00000000 		.4byte	0
 13239              	.LLST96:
 13240 0dbb 10000000 		.4byte	.LVL288
 13241 0dbf 39000000 		.4byte	.LVL291-1
 13242 0dc3 0100     		.2byte	0x1
 13243 0dc5 51       		.byte	0x51
 13244 0dc6 3E000000 		.4byte	.LVL293
 13245 0dca 4C000000 		.4byte	.LVL299
 13246 0dce 0100     		.2byte	0x1
 13247 0dd0 51       		.byte	0x51
 13248 0dd1 00000000 		.4byte	0
 13249 0dd5 00000000 		.4byte	0
 13250              	.LLST97:
 13251 0dd9 14000000 		.4byte	.LVL289
 13252 0ddd 36000000 		.4byte	.LVL290
 13253 0de1 0100     		.2byte	0x1
 13254 0de3 50       		.byte	0x50
 13255 0de4 36000000 		.4byte	.LVL290
 13256 0de8 39000000 		.4byte	.LVL291-1
 13257 0dec 0600     		.2byte	0x6
 13258 0dee 71       		.byte	0x71
 13259 0def 00       		.sleb128 0
 13260 0df0 72       		.byte	0x72
 13261 0df1 00       		.sleb128 0
 13262 0df2 1C       		.byte	0x1c
 13263 0df3 9F       		.byte	0x9f
 13264 0df4 3E000000 		.4byte	.LVL293
 13265 0df8 4C000000 		.4byte	.LVL299
 13266 0dfc 0100     		.2byte	0x1
 13267 0dfe 50       		.byte	0x50
 13268 0dff 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 338


 13269 0e03 00000000 		.4byte	0
 13270              	.LLST98:
 13271 0e07 00000000 		.4byte	.LVL302
 13272 0e0b 04000000 		.4byte	.LVL304
 13273 0e0f 0100     		.2byte	0x1
 13274 0e11 50       		.byte	0x50
 13275 0e12 04000000 		.4byte	.LVL304
 13276 0e16 06000000 		.4byte	.LVL305
 13277 0e1a 0400     		.2byte	0x4
 13278 0e1c F3       		.byte	0xf3
 13279 0e1d 01       		.uleb128 0x1
 13280 0e1e 50       		.byte	0x50
 13281 0e1f 9F       		.byte	0x9f
 13282 0e20 06000000 		.4byte	.LVL305
 13283 0e24 08000000 		.4byte	.LVL306
 13284 0e28 0100     		.2byte	0x1
 13285 0e2a 50       		.byte	0x50
 13286 0e2b 08000000 		.4byte	.LVL306
 13287 0e2f 0A000000 		.4byte	.LFE102
 13288 0e33 0400     		.2byte	0x4
 13289 0e35 F3       		.byte	0xf3
 13290 0e36 01       		.uleb128 0x1
 13291 0e37 50       		.byte	0x50
 13292 0e38 9F       		.byte	0x9f
 13293 0e39 00000000 		.4byte	0
 13294 0e3d 00000000 		.4byte	0
 13295              	.LLST99:
 13296 0e41 04000000 		.4byte	.LVL304
 13297 0e45 06000000 		.4byte	.LVL305
 13298 0e49 0100     		.2byte	0x1
 13299 0e4b 50       		.byte	0x50
 13300 0e4c 08000000 		.4byte	.LVL306
 13301 0e50 0A000000 		.4byte	.LFE102
 13302 0e54 0100     		.2byte	0x1
 13303 0e56 50       		.byte	0x50
 13304 0e57 00000000 		.4byte	0
 13305 0e5b 00000000 		.4byte	0
 13306              	.LLST100:
 13307 0e5f 02000000 		.4byte	.LVL303
 13308 0e63 04000000 		.4byte	.LVL304
 13309 0e67 0100     		.2byte	0x1
 13310 0e69 50       		.byte	0x50
 13311 0e6a 04000000 		.4byte	.LVL304
 13312 0e6e 06000000 		.4byte	.LVL305
 13313 0e72 0400     		.2byte	0x4
 13314 0e74 F3       		.byte	0xf3
 13315 0e75 01       		.uleb128 0x1
 13316 0e76 50       		.byte	0x50
 13317 0e77 9F       		.byte	0x9f
 13318 0e78 00000000 		.4byte	0
 13319 0e7c 00000000 		.4byte	0
 13320              	.LLST101:
 13321 0e80 02000000 		.4byte	.LVL308
 13322 0e84 04000000 		.4byte	.LVL309
 13323 0e88 0100     		.2byte	0x1
 13324 0e8a 50       		.byte	0x50
 13325 0e8b 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 339


 13326 0e8f 00000000 		.4byte	0
 13327              	.LLST102:
 13328 0e93 00000000 		.4byte	.LVL310
 13329 0e97 10000000 		.4byte	.LVL312
 13330 0e9b 0100     		.2byte	0x1
 13331 0e9d 50       		.byte	0x50
 13332 0e9e 00000000 		.4byte	0
 13333 0ea2 00000000 		.4byte	0
 13334              	.LLST103:
 13335 0ea6 00000000 		.4byte	.LVL310
 13336 0eaa 49000000 		.4byte	.LVL315-1
 13337 0eae 0100     		.2byte	0x1
 13338 0eb0 51       		.byte	0x51
 13339 0eb1 49000000 		.4byte	.LVL315-1
 13340 0eb5 58000000 		.4byte	.LVL317
 13341 0eb9 0100     		.2byte	0x1
 13342 0ebb 54       		.byte	0x54
 13343 0ebc 58000000 		.4byte	.LVL317
 13344 0ec0 5D000000 		.4byte	.LVL318-1
 13345 0ec4 0100     		.2byte	0x1
 13346 0ec6 51       		.byte	0x51
 13347 0ec7 5D000000 		.4byte	.LVL318-1
 13348 0ecb 72000000 		.4byte	.LVL321
 13349 0ecf 0100     		.2byte	0x1
 13350 0ed1 54       		.byte	0x54
 13351 0ed2 72000000 		.4byte	.LVL321
 13352 0ed6 78000000 		.4byte	.LFE107
 13353 0eda 0400     		.2byte	0x4
 13354 0edc F3       		.byte	0xf3
 13355 0edd 01       		.uleb128 0x1
 13356 0ede 51       		.byte	0x51
 13357 0edf 9F       		.byte	0x9f
 13358 0ee0 00000000 		.4byte	0
 13359 0ee4 00000000 		.4byte	0
 13360              	.LLST104:
 13361 0ee8 00000000 		.4byte	.LVL310
 13362 0eec 0C000000 		.4byte	.LVL311
 13363 0ef0 0100     		.2byte	0x1
 13364 0ef2 52       		.byte	0x52
 13365 0ef3 0C000000 		.4byte	.LVL311
 13366 0ef7 72000000 		.4byte	.LVL321
 13367 0efb 0100     		.2byte	0x1
 13368 0efd 56       		.byte	0x56
 13369 0efe 72000000 		.4byte	.LVL321
 13370 0f02 78000000 		.4byte	.LFE107
 13371 0f06 0400     		.2byte	0x4
 13372 0f08 F3       		.byte	0xf3
 13373 0f09 01       		.uleb128 0x1
 13374 0f0a 52       		.byte	0x52
 13375 0f0b 9F       		.byte	0x9f
 13376 0f0c 00000000 		.4byte	0
 13377 0f10 00000000 		.4byte	0
 13378              	.LLST105:
 13379 0f14 00000000 		.4byte	.LVL310
 13380 0f18 3C000000 		.4byte	.LVL313
 13381 0f1c 0100     		.2byte	0x1
 13382 0f1e 53       		.byte	0x53
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 340


 13383 0f1f 3C000000 		.4byte	.LVL313
 13384 0f23 40000000 		.4byte	.LVL314
 13385 0f27 0400     		.2byte	0x4
 13386 0f29 F3       		.byte	0xf3
 13387 0f2a 01       		.uleb128 0x1
 13388 0f2b 53       		.byte	0x53
 13389 0f2c 9F       		.byte	0x9f
 13390 0f2d 40000000 		.4byte	.LVL314
 13391 0f31 49000000 		.4byte	.LVL315-1
 13392 0f35 0100     		.2byte	0x1
 13393 0f37 53       		.byte	0x53
 13394 0f38 49000000 		.4byte	.LVL315-1
 13395 0f3c 58000000 		.4byte	.LVL317
 13396 0f40 0400     		.2byte	0x4
 13397 0f42 F3       		.byte	0xf3
 13398 0f43 01       		.uleb128 0x1
 13399 0f44 53       		.byte	0x53
 13400 0f45 9F       		.byte	0x9f
 13401 0f46 58000000 		.4byte	.LVL317
 13402 0f4a 5D000000 		.4byte	.LVL318-1
 13403 0f4e 0100     		.2byte	0x1
 13404 0f50 53       		.byte	0x53
 13405 0f51 5D000000 		.4byte	.LVL318-1
 13406 0f55 78000000 		.4byte	.LFE107
 13407 0f59 0400     		.2byte	0x4
 13408 0f5b F3       		.byte	0xf3
 13409 0f5c 01       		.uleb128 0x1
 13410 0f5d 53       		.byte	0x53
 13411 0f5e 9F       		.byte	0x9f
 13412 0f5f 00000000 		.4byte	0
 13413 0f63 00000000 		.4byte	0
 13414              	.LLST106:
 13415 0f67 10000000 		.4byte	.LVL312
 13416 0f6b 72000000 		.4byte	.LVL321
 13417 0f6f 0100     		.2byte	0x1
 13418 0f71 55       		.byte	0x55
 13419 0f72 00000000 		.4byte	0
 13420 0f76 00000000 		.4byte	0
 13421              	.LLST107:
 13422 0f7a 00000000 		.4byte	.LVL322
 13423 0f7e 28000000 		.4byte	.LVL326
 13424 0f82 0100     		.2byte	0x1
 13425 0f84 50       		.byte	0x50
 13426 0f85 28000000 		.4byte	.LVL326
 13427 0f89 54000000 		.4byte	.LVL330
 13428 0f8d 0100     		.2byte	0x1
 13429 0f8f 57       		.byte	0x57
 13430 0f90 54000000 		.4byte	.LVL330
 13431 0f94 56000000 		.4byte	.LVL331
 13432 0f98 0100     		.2byte	0x1
 13433 0f9a 50       		.byte	0x50
 13434 0f9b 56000000 		.4byte	.LVL331
 13435 0f9f 5C000000 		.4byte	.LFE108
 13436 0fa3 0400     		.2byte	0x4
 13437 0fa5 F3       		.byte	0xf3
 13438 0fa6 01       		.uleb128 0x1
 13439 0fa7 50       		.byte	0x50
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 341


 13440 0fa8 9F       		.byte	0x9f
 13441 0fa9 00000000 		.4byte	0
 13442 0fad 00000000 		.4byte	0
 13443              	.LLST108:
 13444 0fb1 00000000 		.4byte	.LVL322
 13445 0fb5 28000000 		.4byte	.LVL326
 13446 0fb9 0100     		.2byte	0x1
 13447 0fbb 51       		.byte	0x51
 13448 0fbc 28000000 		.4byte	.LVL326
 13449 0fc0 54000000 		.4byte	.LVL330
 13450 0fc4 0100     		.2byte	0x1
 13451 0fc6 55       		.byte	0x55
 13452 0fc7 54000000 		.4byte	.LVL330
 13453 0fcb 56000000 		.4byte	.LVL331
 13454 0fcf 0100     		.2byte	0x1
 13455 0fd1 51       		.byte	0x51
 13456 0fd2 56000000 		.4byte	.LVL331
 13457 0fd6 5C000000 		.4byte	.LFE108
 13458 0fda 0400     		.2byte	0x4
 13459 0fdc F3       		.byte	0xf3
 13460 0fdd 01       		.uleb128 0x1
 13461 0fde 51       		.byte	0x51
 13462 0fdf 9F       		.byte	0x9f
 13463 0fe0 00000000 		.4byte	0
 13464 0fe4 00000000 		.4byte	0
 13465              	.LLST109:
 13466 0fe8 00000000 		.4byte	.LVL322
 13467 0fec 28000000 		.4byte	.LVL326
 13468 0ff0 0100     		.2byte	0x1
 13469 0ff2 52       		.byte	0x52
 13470 0ff3 28000000 		.4byte	.LVL326
 13471 0ff7 54000000 		.4byte	.LVL330
 13472 0ffb 0400     		.2byte	0x4
 13473 0ffd F3       		.byte	0xf3
 13474 0ffe 01       		.uleb128 0x1
 13475 0fff 52       		.byte	0x52
 13476 1000 9F       		.byte	0x9f
 13477 1001 54000000 		.4byte	.LVL330
 13478 1005 56000000 		.4byte	.LVL331
 13479 1009 0100     		.2byte	0x1
 13480 100b 52       		.byte	0x52
 13481 100c 56000000 		.4byte	.LVL331
 13482 1010 5C000000 		.4byte	.LFE108
 13483 1014 0400     		.2byte	0x4
 13484 1016 F3       		.byte	0xf3
 13485 1017 01       		.uleb128 0x1
 13486 1018 52       		.byte	0x52
 13487 1019 9F       		.byte	0x9f
 13488 101a 00000000 		.4byte	0
 13489 101e 00000000 		.4byte	0
 13490              	.LLST110:
 13491 1022 3A000000 		.4byte	.LVL327
 13492 1026 54000000 		.4byte	.LVL330
 13493 102a 0100     		.2byte	0x1
 13494 102c 56       		.byte	0x56
 13495 102d 00000000 		.4byte	0
 13496 1031 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 342


 13497              	.LLST111:
 13498 1035 26000000 		.4byte	.LVL325
 13499 1039 54000000 		.4byte	.LVL330
 13500 103d 0100     		.2byte	0x1
 13501 103f 5A       		.byte	0x5a
 13502 1040 00000000 		.4byte	0
 13503 1044 00000000 		.4byte	0
 13504              	.LLST112:
 13505 1048 04000000 		.4byte	.LVL323
 13506 104c 28000000 		.4byte	.LVL326
 13507 1050 0200     		.2byte	0x2
 13508 1052 30       		.byte	0x30
 13509 1053 9F       		.byte	0x9f
 13510 1054 28000000 		.4byte	.LVL326
 13511 1058 54000000 		.4byte	.LVL330
 13512 105c 0100     		.2byte	0x1
 13513 105e 54       		.byte	0x54
 13514 105f 54000000 		.4byte	.LVL330
 13515 1063 56000000 		.4byte	.LVL331
 13516 1067 0200     		.2byte	0x2
 13517 1069 30       		.byte	0x30
 13518 106a 9F       		.byte	0x9f
 13519 106b 56000000 		.4byte	.LVL331
 13520 106f 5C000000 		.4byte	.LFE108
 13521 1073 0100     		.2byte	0x1
 13522 1075 54       		.byte	0x54
 13523 1076 00000000 		.4byte	0
 13524 107a 00000000 		.4byte	0
 13525              	.LLST113:
 13526 107e 08000000 		.4byte	.LVL324
 13527 1082 28000000 		.4byte	.LVL326
 13528 1086 0100     		.2byte	0x1
 13529 1088 51       		.byte	0x51
 13530 1089 28000000 		.4byte	.LVL326
 13531 108d 54000000 		.4byte	.LVL330
 13532 1091 0100     		.2byte	0x1
 13533 1093 55       		.byte	0x55
 13534 1094 00000000 		.4byte	0
 13535 1098 00000000 		.4byte	0
 13536              	.LLST114:
 13537 109c 28000000 		.4byte	.LVL326
 13538 10a0 54000000 		.4byte	.LVL330
 13539 10a4 0100     		.2byte	0x1
 13540 10a6 55       		.byte	0x55
 13541 10a7 00000000 		.4byte	0
 13542 10ab 00000000 		.4byte	0
 13543              	.LLST115:
 13544 10af 00000000 		.4byte	.LVL332
 13545 10b3 0B000000 		.4byte	.LVL334-1
 13546 10b7 0100     		.2byte	0x1
 13547 10b9 50       		.byte	0x50
 13548 10ba 0B000000 		.4byte	.LVL334-1
 13549 10be 9C000000 		.4byte	.LVL352
 13550 10c2 0100     		.2byte	0x1
 13551 10c4 57       		.byte	0x57
 13552 10c5 9C000000 		.4byte	.LVL352
 13553 10c9 A4000000 		.4byte	.LFE91
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 343


 13554 10cd 0400     		.2byte	0x4
 13555 10cf F3       		.byte	0xf3
 13556 10d0 01       		.uleb128 0x1
 13557 10d1 50       		.byte	0x50
 13558 10d2 9F       		.byte	0x9f
 13559 10d3 00000000 		.4byte	0
 13560 10d7 00000000 		.4byte	0
 13561              	.LLST116:
 13562 10db 00000000 		.4byte	.LVL332
 13563 10df 0B000000 		.4byte	.LVL334-1
 13564 10e3 0100     		.2byte	0x1
 13565 10e5 51       		.byte	0x51
 13566 10e6 0B000000 		.4byte	.LVL334-1
 13567 10ea 1A000000 		.4byte	.LVL335
 13568 10ee 0100     		.2byte	0x1
 13569 10f0 54       		.byte	0x54
 13570 10f1 1A000000 		.4byte	.LVL335
 13571 10f5 92000000 		.4byte	.LVL349
 13572 10f9 0400     		.2byte	0x4
 13573 10fb F3       		.byte	0xf3
 13574 10fc 01       		.uleb128 0x1
 13575 10fd 51       		.byte	0x51
 13576 10fe 9F       		.byte	0x9f
 13577 10ff 92000000 		.4byte	.LVL349
 13578 1103 94000000 		.4byte	.LVL350
 13579 1107 0100     		.2byte	0x1
 13580 1109 54       		.byte	0x54
 13581 110a 94000000 		.4byte	.LVL350
 13582 110e A4000000 		.4byte	.LFE91
 13583 1112 0400     		.2byte	0x4
 13584 1114 F3       		.byte	0xf3
 13585 1115 01       		.uleb128 0x1
 13586 1116 51       		.byte	0x51
 13587 1117 9F       		.byte	0x9f
 13588 1118 00000000 		.4byte	0
 13589 111c 00000000 		.4byte	0
 13590              	.LLST117:
 13591 1120 00000000 		.4byte	.LVL332
 13592 1124 0B000000 		.4byte	.LVL334-1
 13593 1128 0100     		.2byte	0x1
 13594 112a 52       		.byte	0x52
 13595 112b 0B000000 		.4byte	.LVL334-1
 13596 112f 9C000000 		.4byte	.LVL352
 13597 1133 0100     		.2byte	0x1
 13598 1135 56       		.byte	0x56
 13599 1136 9C000000 		.4byte	.LVL352
 13600 113a A4000000 		.4byte	.LFE91
 13601 113e 0400     		.2byte	0x4
 13602 1140 F3       		.byte	0xf3
 13603 1141 01       		.uleb128 0x1
 13604 1142 52       		.byte	0x52
 13605 1143 9F       		.byte	0x9f
 13606 1144 00000000 		.4byte	0
 13607 1148 00000000 		.4byte	0
 13608              	.LLST118:
 13609 114c 08000000 		.4byte	.LVL333
 13610 1150 1A000000 		.4byte	.LVL335
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 344


 13611 1154 0200     		.2byte	0x2
 13612 1156 30       		.byte	0x30
 13613 1157 9F       		.byte	0x9f
 13614 1158 1A000000 		.4byte	.LVL335
 13615 115c 92000000 		.4byte	.LVL349
 13616 1160 0100     		.2byte	0x1
 13617 1162 54       		.byte	0x54
 13618 1163 92000000 		.4byte	.LVL349
 13619 1167 94000000 		.4byte	.LVL350
 13620 116b 0200     		.2byte	0x2
 13621 116d 30       		.byte	0x30
 13622 116e 9F       		.byte	0x9f
 13623 116f 94000000 		.4byte	.LVL350
 13624 1173 9C000000 		.4byte	.LVL352
 13625 1177 0100     		.2byte	0x1
 13626 1179 54       		.byte	0x54
 13627 117a 9C000000 		.4byte	.LVL352
 13628 117e A4000000 		.4byte	.LFE91
 13629 1182 0100     		.2byte	0x1
 13630 1184 50       		.byte	0x50
 13631 1185 00000000 		.4byte	0
 13632 1189 00000000 		.4byte	0
 13633              	.LLST119:
 13634 118d 08000000 		.4byte	.LVL333
 13635 1191 1A000000 		.4byte	.LVL335
 13636 1195 0200     		.2byte	0x2
 13637 1197 35       		.byte	0x35
 13638 1198 9F       		.byte	0x9f
 13639 1199 1A000000 		.4byte	.LVL335
 13640 119d 42000000 		.4byte	.LVL339
 13641 11a1 0100     		.2byte	0x1
 13642 11a3 55       		.byte	0x55
 13643 11a4 92000000 		.4byte	.LVL349
 13644 11a8 94000000 		.4byte	.LVL350
 13645 11ac 0200     		.2byte	0x2
 13646 11ae 35       		.byte	0x35
 13647 11af 9F       		.byte	0x9f
 13648 11b0 00000000 		.4byte	0
 13649 11b4 00000000 		.4byte	0
 13650              	.LLST120:
 13651 11b8 00000000 		.4byte	.LVL353
 13652 11bc 0C000000 		.4byte	.LVL354
 13653 11c0 0100     		.2byte	0x1
 13654 11c2 50       		.byte	0x50
 13655 11c3 00000000 		.4byte	0
 13656 11c7 00000000 		.4byte	0
 13657              	.LLST121:
 13658 11cb 0C000000 		.4byte	.LVL354
 13659 11cf 11000000 		.4byte	.LVL355-1
 13660 11d3 0100     		.2byte	0x1
 13661 11d5 53       		.byte	0x53
 13662 11d6 00000000 		.4byte	0
 13663 11da 00000000 		.4byte	0
 13664              	.LLST122:
 13665 11de 0C000000 		.4byte	.LVL354
 13666 11e2 11000000 		.4byte	.LVL355-1
 13667 11e6 0200     		.2byte	0x2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 345


 13668 11e8 73       		.byte	0x73
 13669 11e9 30       		.sleb128 48
 13670 11ea 00000000 		.4byte	0
 13671 11ee 00000000 		.4byte	0
 13672              	.LLST123:
 13673 11f2 00000000 		.4byte	.LVL357
 13674 11f6 2C000000 		.4byte	.LVL358
 13675 11fa 0100     		.2byte	0x1
 13676 11fc 50       		.byte	0x50
 13677 11fd 2C000000 		.4byte	.LVL358
 13678 1201 4B000000 		.4byte	.LVL359-1
 13679 1205 0100     		.2byte	0x1
 13680 1207 53       		.byte	0x53
 13681 1208 4B000000 		.4byte	.LVL359-1
 13682 120c 7C000000 		.4byte	.LVL360
 13683 1210 0100     		.2byte	0x1
 13684 1212 54       		.byte	0x54
 13685 1213 7C000000 		.4byte	.LVL360
 13686 1217 9E000000 		.4byte	.LVL362
 13687 121b 0300     		.2byte	0x3
 13688 121d 75       		.byte	0x75
 13689 121e 7C       		.sleb128 -4
 13690 121f 9F       		.byte	0x9f
 13691 1220 9E000000 		.4byte	.LVL362
 13692 1224 AC000000 		.4byte	.LVL363
 13693 1228 0100     		.2byte	0x1
 13694 122a 53       		.byte	0x53
 13695 122b AC000000 		.4byte	.LVL363
 13696 122f BC000000 		.4byte	.LVL364
 13697 1233 0100     		.2byte	0x1
 13698 1235 50       		.byte	0x50
 13699 1236 BC000000 		.4byte	.LVL364
 13700 123a BE000000 		.4byte	.LVL365
 13701 123e 0400     		.2byte	0x4
 13702 1240 F3       		.byte	0xf3
 13703 1241 01       		.uleb128 0x1
 13704 1242 50       		.byte	0x50
 13705 1243 9F       		.byte	0x9f
 13706 1244 BE000000 		.4byte	.LVL365
 13707 1248 C0000000 		.4byte	.LVL366
 13708 124c 0100     		.2byte	0x1
 13709 124e 50       		.byte	0x50
 13710 124f C0000000 		.4byte	.LVL366
 13711 1253 C2000000 		.4byte	.LVL367
 13712 1257 0400     		.2byte	0x4
 13713 1259 F3       		.byte	0xf3
 13714 125a 01       		.uleb128 0x1
 13715 125b 50       		.byte	0x50
 13716 125c 9F       		.byte	0x9f
 13717 125d C2000000 		.4byte	.LVL367
 13718 1261 C4000000 		.4byte	.LVL368
 13719 1265 0100     		.2byte	0x1
 13720 1267 50       		.byte	0x50
 13721 1268 C4000000 		.4byte	.LVL368
 13722 126c D0000000 		.4byte	.LFE114
 13723 1270 0400     		.2byte	0x4
 13724 1272 F3       		.byte	0xf3
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 346


 13725 1273 01       		.uleb128 0x1
 13726 1274 50       		.byte	0x50
 13727 1275 9F       		.byte	0x9f
 13728 1276 00000000 		.4byte	0
 13729 127a 00000000 		.4byte	0
 13730              	.LLST124:
 13731 127e 00000000 		.4byte	.LVL357
 13732 1282 2C000000 		.4byte	.LVL358
 13733 1286 0100     		.2byte	0x1
 13734 1288 50       		.byte	0x50
 13735 1289 2C000000 		.4byte	.LVL358
 13736 128d 4B000000 		.4byte	.LVL359-1
 13737 1291 0100     		.2byte	0x1
 13738 1293 53       		.byte	0x53
 13739 1294 4B000000 		.4byte	.LVL359-1
 13740 1298 7C000000 		.4byte	.LVL360
 13741 129c 0100     		.2byte	0x1
 13742 129e 54       		.byte	0x54
 13743 129f 7C000000 		.4byte	.LVL360
 13744 12a3 9E000000 		.4byte	.LVL362
 13745 12a7 0300     		.2byte	0x3
 13746 12a9 75       		.byte	0x75
 13747 12aa 7C       		.sleb128 -4
 13748 12ab 9F       		.byte	0x9f
 13749 12ac 9E000000 		.4byte	.LVL362
 13750 12b0 AC000000 		.4byte	.LVL363
 13751 12b4 0100     		.2byte	0x1
 13752 12b6 53       		.byte	0x53
 13753 12b7 AC000000 		.4byte	.LVL363
 13754 12bb BC000000 		.4byte	.LVL364
 13755 12bf 0100     		.2byte	0x1
 13756 12c1 50       		.byte	0x50
 13757 12c2 BC000000 		.4byte	.LVL364
 13758 12c6 BE000000 		.4byte	.LVL365
 13759 12ca 0400     		.2byte	0x4
 13760 12cc F3       		.byte	0xf3
 13761 12cd 01       		.uleb128 0x1
 13762 12ce 50       		.byte	0x50
 13763 12cf 9F       		.byte	0x9f
 13764 12d0 BE000000 		.4byte	.LVL365
 13765 12d4 C0000000 		.4byte	.LVL366
 13766 12d8 0100     		.2byte	0x1
 13767 12da 50       		.byte	0x50
 13768 12db C0000000 		.4byte	.LVL366
 13769 12df C2000000 		.4byte	.LVL367
 13770 12e3 0400     		.2byte	0x4
 13771 12e5 F3       		.byte	0xf3
 13772 12e6 01       		.uleb128 0x1
 13773 12e7 50       		.byte	0x50
 13774 12e8 9F       		.byte	0x9f
 13775 12e9 C2000000 		.4byte	.LVL367
 13776 12ed C4000000 		.4byte	.LVL368
 13777 12f1 0100     		.2byte	0x1
 13778 12f3 50       		.byte	0x50
 13779 12f4 C4000000 		.4byte	.LVL368
 13780 12f8 D0000000 		.4byte	.LFE114
 13781 12fc 0400     		.2byte	0x4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 347


 13782 12fe F3       		.byte	0xf3
 13783 12ff 01       		.uleb128 0x1
 13784 1300 50       		.byte	0x50
 13785 1301 9F       		.byte	0x9f
 13786 1302 00000000 		.4byte	0
 13787 1306 00000000 		.4byte	0
 13788              	.LLST125:
 13789 130a 00000000 		.4byte	.LVL357
 13790 130e C0000000 		.4byte	.LVL366
 13791 1312 0200     		.2byte	0x2
 13792 1314 30       		.byte	0x30
 13793 1315 9F       		.byte	0x9f
 13794 1316 C0000000 		.4byte	.LVL366
 13795 131a C2000000 		.4byte	.LVL367
 13796 131e 0100     		.2byte	0x1
 13797 1320 50       		.byte	0x50
 13798 1321 C2000000 		.4byte	.LVL367
 13799 1325 C4000000 		.4byte	.LVL368
 13800 1329 0200     		.2byte	0x2
 13801 132b 30       		.byte	0x30
 13802 132c 9F       		.byte	0x9f
 13803 132d C4000000 		.4byte	.LVL368
 13804 1331 D0000000 		.4byte	.LFE114
 13805 1335 0100     		.2byte	0x1
 13806 1337 50       		.byte	0x50
 13807 1338 00000000 		.4byte	0
 13808 133c 00000000 		.4byte	0
 13809              	.LLST126:
 13810 1340 00000000 		.4byte	.LVL369
 13811 1344 10000000 		.4byte	.LVL370
 13812 1348 0100     		.2byte	0x1
 13813 134a 50       		.byte	0x50
 13814 134b 10000000 		.4byte	.LVL370
 13815 134f 21000000 		.4byte	.LVL371-1
 13816 1353 0100     		.2byte	0x1
 13817 1355 53       		.byte	0x53
 13818 1356 21000000 		.4byte	.LVL371-1
 13819 135a 52000000 		.4byte	.LVL372
 13820 135e 0100     		.2byte	0x1
 13821 1360 54       		.byte	0x54
 13822 1361 52000000 		.4byte	.LVL372
 13823 1365 76000000 		.4byte	.LVL374
 13824 1369 0300     		.2byte	0x3
 13825 136b 75       		.byte	0x75
 13826 136c 7C       		.sleb128 -4
 13827 136d 9F       		.byte	0x9f
 13828 136e 76000000 		.4byte	.LVL374
 13829 1372 78000000 		.4byte	.LVL375
 13830 1376 0100     		.2byte	0x1
 13831 1378 50       		.byte	0x50
 13832 1379 78000000 		.4byte	.LVL375
 13833 137d 7A000000 		.4byte	.LVL376
 13834 1381 0400     		.2byte	0x4
 13835 1383 F3       		.byte	0xf3
 13836 1384 01       		.uleb128 0x1
 13837 1385 50       		.byte	0x50
 13838 1386 9F       		.byte	0x9f
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 348


 13839 1387 7A000000 		.4byte	.LVL376
 13840 138b 82000000 		.4byte	.LVL379
 13841 138f 0100     		.2byte	0x1
 13842 1391 53       		.byte	0x53
 13843 1392 82000000 		.4byte	.LVL379
 13844 1396 88000000 		.4byte	.LFE115
 13845 139a 0400     		.2byte	0x4
 13846 139c F3       		.byte	0xf3
 13847 139d 01       		.uleb128 0x1
 13848 139e 50       		.byte	0x50
 13849 139f 9F       		.byte	0x9f
 13850 13a0 00000000 		.4byte	0
 13851 13a4 00000000 		.4byte	0
 13852              	.LLST127:
 13853 13a8 00000000 		.4byte	.LVL369
 13854 13ac 10000000 		.4byte	.LVL370
 13855 13b0 0100     		.2byte	0x1
 13856 13b2 50       		.byte	0x50
 13857 13b3 10000000 		.4byte	.LVL370
 13858 13b7 21000000 		.4byte	.LVL371-1
 13859 13bb 0100     		.2byte	0x1
 13860 13bd 53       		.byte	0x53
 13861 13be 21000000 		.4byte	.LVL371-1
 13862 13c2 52000000 		.4byte	.LVL372
 13863 13c6 0100     		.2byte	0x1
 13864 13c8 54       		.byte	0x54
 13865 13c9 52000000 		.4byte	.LVL372
 13866 13cd 76000000 		.4byte	.LVL374
 13867 13d1 0300     		.2byte	0x3
 13868 13d3 75       		.byte	0x75
 13869 13d4 7C       		.sleb128 -4
 13870 13d5 9F       		.byte	0x9f
 13871 13d6 76000000 		.4byte	.LVL374
 13872 13da 78000000 		.4byte	.LVL375
 13873 13de 0100     		.2byte	0x1
 13874 13e0 50       		.byte	0x50
 13875 13e1 78000000 		.4byte	.LVL375
 13876 13e5 7A000000 		.4byte	.LVL376
 13877 13e9 0400     		.2byte	0x4
 13878 13eb F3       		.byte	0xf3
 13879 13ec 01       		.uleb128 0x1
 13880 13ed 50       		.byte	0x50
 13881 13ee 9F       		.byte	0x9f
 13882 13ef 7A000000 		.4byte	.LVL376
 13883 13f3 82000000 		.4byte	.LVL379
 13884 13f7 0100     		.2byte	0x1
 13885 13f9 53       		.byte	0x53
 13886 13fa 82000000 		.4byte	.LVL379
 13887 13fe 88000000 		.4byte	.LFE115
 13888 1402 0400     		.2byte	0x4
 13889 1404 F3       		.byte	0xf3
 13890 1405 01       		.uleb128 0x1
 13891 1406 50       		.byte	0x50
 13892 1407 9F       		.byte	0x9f
 13893 1408 00000000 		.4byte	0
 13894 140c 00000000 		.4byte	0
 13895              	.LLST128:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 349


 13896 1410 00000000 		.4byte	.LVL369
 13897 1414 72000000 		.4byte	.LVL373
 13898 1418 0200     		.2byte	0x2
 13899 141a 30       		.byte	0x30
 13900 141b 9F       		.byte	0x9f
 13901 141c 72000000 		.4byte	.LVL373
 13902 1420 76000000 		.4byte	.LVL374
 13903 1424 0200     		.2byte	0x2
 13904 1426 31       		.byte	0x31
 13905 1427 9F       		.byte	0x9f
 13906 1428 76000000 		.4byte	.LVL374
 13907 142c 78000000 		.4byte	.LVL375
 13908 1430 0200     		.2byte	0x2
 13909 1432 30       		.byte	0x30
 13910 1433 9F       		.byte	0x9f
 13911 1434 78000000 		.4byte	.LVL375
 13912 1438 7A000000 		.4byte	.LVL376
 13913 143c 0100     		.2byte	0x1
 13914 143e 50       		.byte	0x50
 13915 143f 7A000000 		.4byte	.LVL376
 13916 1443 80000000 		.4byte	.LVL378
 13917 1447 0200     		.2byte	0x2
 13918 1449 30       		.byte	0x30
 13919 144a 9F       		.byte	0x9f
 13920 144b 80000000 		.4byte	.LVL378
 13921 144f 88000000 		.4byte	.LFE115
 13922 1453 0100     		.2byte	0x1
 13923 1455 50       		.byte	0x50
 13924 1456 00000000 		.4byte	0
 13925 145a 00000000 		.4byte	0
 13926              	.LLST129:
 13927 145e 00000000 		.4byte	.LVL380
 13928 1462 18000000 		.4byte	.LVL383
 13929 1466 0100     		.2byte	0x1
 13930 1468 50       		.byte	0x50
 13931 1469 18000000 		.4byte	.LVL383
 13932 146d 4B000000 		.4byte	.LVL387-1
 13933 1471 0100     		.2byte	0x1
 13934 1473 53       		.byte	0x53
 13935 1474 4B000000 		.4byte	.LVL387-1
 13936 1478 94000000 		.4byte	.LVL388
 13937 147c 0100     		.2byte	0x1
 13938 147e 54       		.byte	0x54
 13939 147f 94000000 		.4byte	.LVL388
 13940 1483 96000000 		.4byte	.LVL389
 13941 1487 0400     		.2byte	0x4
 13942 1489 F3       		.byte	0xf3
 13943 148a 01       		.uleb128 0x1
 13944 148b 50       		.byte	0x50
 13945 148c 9F       		.byte	0x9f
 13946 148d 96000000 		.4byte	.LVL389
 13947 1491 A0000000 		.4byte	.LFE116
 13948 1495 0100     		.2byte	0x1
 13949 1497 50       		.byte	0x50
 13950 1498 00000000 		.4byte	0
 13951 149c 00000000 		.4byte	0
 13952              	.LLST130:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 350


 13953 14a0 00000000 		.4byte	.LVL380
 13954 14a4 12000000 		.4byte	.LVL382
 13955 14a8 0100     		.2byte	0x1
 13956 14aa 51       		.byte	0x51
 13957 14ab 12000000 		.4byte	.LVL382
 13958 14af 96000000 		.4byte	.LVL389
 13959 14b3 0400     		.2byte	0x4
 13960 14b5 F3       		.byte	0xf3
 13961 14b6 01       		.uleb128 0x1
 13962 14b7 51       		.byte	0x51
 13963 14b8 9F       		.byte	0x9f
 13964 14b9 96000000 		.4byte	.LVL389
 13965 14bd A0000000 		.4byte	.LFE116
 13966 14c1 0100     		.2byte	0x1
 13967 14c3 51       		.byte	0x51
 13968 14c4 00000000 		.4byte	0
 13969 14c8 00000000 		.4byte	0
 13970              	.LLST131:
 13971 14cc 00000000 		.4byte	.LVL380
 13972 14d0 18000000 		.4byte	.LVL383
 13973 14d4 0100     		.2byte	0x1
 13974 14d6 50       		.byte	0x50
 13975 14d7 18000000 		.4byte	.LVL383
 13976 14db 4B000000 		.4byte	.LVL387-1
 13977 14df 0100     		.2byte	0x1
 13978 14e1 53       		.byte	0x53
 13979 14e2 4B000000 		.4byte	.LVL387-1
 13980 14e6 94000000 		.4byte	.LVL388
 13981 14ea 0100     		.2byte	0x1
 13982 14ec 54       		.byte	0x54
 13983 14ed 94000000 		.4byte	.LVL388
 13984 14f1 96000000 		.4byte	.LVL389
 13985 14f5 0400     		.2byte	0x4
 13986 14f7 F3       		.byte	0xf3
 13987 14f8 01       		.uleb128 0x1
 13988 14f9 50       		.byte	0x50
 13989 14fa 9F       		.byte	0x9f
 13990 14fb 96000000 		.4byte	.LVL389
 13991 14ff A0000000 		.4byte	.LFE116
 13992 1503 0100     		.2byte	0x1
 13993 1505 50       		.byte	0x50
 13994 1506 00000000 		.4byte	0
 13995 150a 00000000 		.4byte	0
 13996              	.LLST132:
 13997 150e 1C000000 		.4byte	.LVL384
 13998 1512 30000000 		.4byte	.LVL386
 13999 1516 0100     		.2byte	0x1
 14000 1518 51       		.byte	0x51
 14001 1519 00000000 		.4byte	0
 14002 151d 00000000 		.4byte	0
 14003              	.LLST133:
 14004 1521 10000000 		.4byte	.LVL381
 14005 1525 28000000 		.4byte	.LVL385
 14006 1529 0100     		.2byte	0x1
 14007 152b 52       		.byte	0x52
 14008 152c 28000000 		.4byte	.LVL385
 14009 1530 4B000000 		.4byte	.LVL387-1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 351


 14010 1534 0200     		.2byte	0x2
 14011 1536 73       		.byte	0x73
 14012 1537 2C       		.sleb128 44
 14013 1538 00000000 		.4byte	0
 14014 153c 00000000 		.4byte	0
 14015              	.LLST134:
 14016 1540 00000000 		.4byte	.LVL390
 14017 1544 1C000000 		.4byte	.LVL391
 14018 1548 0100     		.2byte	0x1
 14019 154a 50       		.byte	0x50
 14020 154b 1C000000 		.4byte	.LVL391
 14021 154f 7A000000 		.4byte	.LVL401
 14022 1553 0100     		.2byte	0x1
 14023 1555 55       		.byte	0x55
 14024 1556 7A000000 		.4byte	.LVL401
 14025 155a A9000000 		.4byte	.LVL402-1
 14026 155e 0100     		.2byte	0x1
 14027 1560 50       		.byte	0x50
 14028 1561 A9000000 		.4byte	.LVL402-1
 14029 1565 CA000000 		.4byte	.LVL407
 14030 1569 0100     		.2byte	0x1
 14031 156b 55       		.byte	0x55
 14032 156c 00000000 		.4byte	0
 14033 1570 00000000 		.4byte	0
 14034              	.LLST135:
 14035 1574 20000000 		.4byte	.LVL392
 14036 1578 2D000000 		.4byte	.LVL393-1
 14037 157c 0100     		.2byte	0x1
 14038 157e 50       		.byte	0x50
 14039 157f 2D000000 		.4byte	.LVL393-1
 14040 1583 C6000000 		.4byte	.LVL406
 14041 1587 0100     		.2byte	0x1
 14042 1589 54       		.byte	0x54
 14043 158a 00000000 		.4byte	0
 14044 158e 00000000 		.4byte	0
 14045              	.LLST136:
 14046 1592 54000000 		.4byte	.LVL394
 14047 1596 58000000 		.4byte	.LVL395
 14048 159a 0300     		.2byte	0x3
 14049 159c 08       		.byte	0x8
 14050 159d 42       		.byte	0x42
 14051 159e 9F       		.byte	0x9f
 14052 159f 58000000 		.4byte	.LVL395
 14053 15a3 5C000000 		.4byte	.LVL396
 14054 15a7 0300     		.2byte	0x3
 14055 15a9 08       		.byte	0x8
 14056 15aa 53       		.byte	0x53
 14057 15ab 9F       		.byte	0x9f
 14058 15ac 5C000000 		.4byte	.LVL396
 14059 15b0 60000000 		.4byte	.LVL397
 14060 15b4 0300     		.2byte	0x3
 14061 15b6 08       		.byte	0x8
 14062 15b7 44       		.byte	0x44
 14063 15b8 9F       		.byte	0x9f
 14064 15b9 60000000 		.4byte	.LVL397
 14065 15bd 64000000 		.4byte	.LVL398
 14066 15c1 0200     		.2byte	0x2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 352


 14067 15c3 30       		.byte	0x30
 14068 15c4 9F       		.byte	0x9f
 14069 15c5 66000000 		.4byte	.LVL399
 14070 15c9 B8000000 		.4byte	.LVL405
 14071 15cd 0100     		.2byte	0x1
 14072 15cf 56       		.byte	0x56
 14073 15d0 00000000 		.4byte	0
 14074 15d4 00000000 		.4byte	0
 14075              	.LLST137:
 14076 15d8 00000000 		.4byte	.LVL408
 14077 15dc 1C000000 		.4byte	.LVL409
 14078 15e0 0100     		.2byte	0x1
 14079 15e2 50       		.byte	0x50
 14080 15e3 1C000000 		.4byte	.LVL409
 14081 15e7 6C000000 		.4byte	.LVL414
 14082 15eb 0100     		.2byte	0x1
 14083 15ed 54       		.byte	0x54
 14084 15ee 6C000000 		.4byte	.LVL414
 14085 15f2 81000000 		.4byte	.LVL415-1
 14086 15f6 0100     		.2byte	0x1
 14087 15f8 50       		.byte	0x50
 14088 15f9 81000000 		.4byte	.LVL415-1
 14089 15fd 84000000 		.4byte	.LVL416
 14090 1601 0100     		.2byte	0x1
 14091 1603 54       		.byte	0x54
 14092 1604 84000000 		.4byte	.LVL416
 14093 1608 95000000 		.4byte	.LVL417-1
 14094 160c 0100     		.2byte	0x1
 14095 160e 50       		.byte	0x50
 14096 160f 95000000 		.4byte	.LVL417-1
 14097 1613 B6000000 		.4byte	.LVL422
 14098 1617 0100     		.2byte	0x1
 14099 1619 54       		.byte	0x54
 14100 161a 00000000 		.4byte	0
 14101 161e 00000000 		.4byte	0
 14102              	.LLST138:
 14103 1622 20000000 		.4byte	.LVL410
 14104 1626 2D000000 		.4byte	.LVL411-1
 14105 162a 0100     		.2byte	0x1
 14106 162c 50       		.byte	0x50
 14107 162d 2D000000 		.4byte	.LVL411-1
 14108 1631 B2000000 		.4byte	.LVL421
 14109 1635 0100     		.2byte	0x1
 14110 1637 55       		.byte	0x55
 14111 1638 00000000 		.4byte	0
 14112 163c 00000000 		.4byte	0
 14113              	.LLST139:
 14114 1640 58000000 		.4byte	.LVL412
 14115 1644 A4000000 		.4byte	.LVL420
 14116 1648 0100     		.2byte	0x1
 14117 164a 56       		.byte	0x56
 14118 164b 00000000 		.4byte	0
 14119 164f 00000000 		.4byte	0
 14120              	.LLST140:
 14121 1653 00000000 		.4byte	.LVL424
 14122 1657 09000000 		.4byte	.LVL425-1
 14123 165b 0100     		.2byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 353


 14124 165d 50       		.byte	0x50
 14125 165e 09000000 		.4byte	.LVL425-1
 14126 1662 80000000 		.4byte	.LVL431
 14127 1666 0100     		.2byte	0x1
 14128 1668 55       		.byte	0x55
 14129 1669 80000000 		.4byte	.LVL431
 14130 166d 88000000 		.4byte	.LFE122
 14131 1671 0400     		.2byte	0x4
 14132 1673 F3       		.byte	0xf3
 14133 1674 01       		.uleb128 0x1
 14134 1675 50       		.byte	0x50
 14135 1676 9F       		.byte	0x9f
 14136 1677 00000000 		.4byte	0
 14137 167b 00000000 		.4byte	0
 14138              	.LLST141:
 14139 167f 00000000 		.4byte	.LVL424
 14140 1683 09000000 		.4byte	.LVL425-1
 14141 1687 0100     		.2byte	0x1
 14142 1689 51       		.byte	0x51
 14143 168a 09000000 		.4byte	.LVL425-1
 14144 168e 4E000000 		.4byte	.LVL429
 14145 1692 0100     		.2byte	0x1
 14146 1694 54       		.byte	0x54
 14147 1695 4E000000 		.4byte	.LVL429
 14148 1699 88000000 		.4byte	.LFE122
 14149 169d 0400     		.2byte	0x4
 14150 169f F3       		.byte	0xf3
 14151 16a0 01       		.uleb128 0x1
 14152 16a1 51       		.byte	0x51
 14153 16a2 9F       		.byte	0x9f
 14154 16a3 00000000 		.4byte	0
 14155 16a7 00000000 		.4byte	0
 14156              	.LLST142:
 14157 16ab 4E000000 		.4byte	.LVL429
 14158 16af 80000000 		.4byte	.LVL431
 14159 16b3 0100     		.2byte	0x1
 14160 16b5 54       		.byte	0x54
 14161 16b6 80000000 		.4byte	.LVL431
 14162 16ba 88000000 		.4byte	.LFE122
 14163 16be 0100     		.2byte	0x1
 14164 16c0 50       		.byte	0x50
 14165 16c1 00000000 		.4byte	0
 14166 16c5 00000000 		.4byte	0
 14167              	.LLST143:
 14168 16c9 00000000 		.4byte	.LVL432
 14169 16cd 0D000000 		.4byte	.LVL433-1
 14170 16d1 0100     		.2byte	0x1
 14171 16d3 50       		.byte	0x50
 14172 16d4 0D000000 		.4byte	.LVL433-1
 14173 16d8 A6000000 		.4byte	.LVL443
 14174 16dc 0100     		.2byte	0x1
 14175 16de 57       		.byte	0x57
 14176 16df A6000000 		.4byte	.LVL443
 14177 16e3 B0000000 		.4byte	.LFE123
 14178 16e7 0400     		.2byte	0x4
 14179 16e9 F3       		.byte	0xf3
 14180 16ea 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 354


 14181 16eb 50       		.byte	0x50
 14182 16ec 9F       		.byte	0x9f
 14183 16ed 00000000 		.4byte	0
 14184 16f1 00000000 		.4byte	0
 14185              	.LLST144:
 14186 16f5 00000000 		.4byte	.LVL432
 14187 16f9 0D000000 		.4byte	.LVL433-1
 14188 16fd 0100     		.2byte	0x1
 14189 16ff 51       		.byte	0x51
 14190 1700 0D000000 		.4byte	.LVL433-1
 14191 1704 88000000 		.4byte	.LVL437
 14192 1708 0100     		.2byte	0x1
 14193 170a 55       		.byte	0x55
 14194 170b 88000000 		.4byte	.LVL437
 14195 170f 90000000 		.4byte	.LVL440
 14196 1713 0400     		.2byte	0x4
 14197 1715 F3       		.byte	0xf3
 14198 1716 01       		.uleb128 0x1
 14199 1717 51       		.byte	0x51
 14200 1718 9F       		.byte	0x9f
 14201 1719 90000000 		.4byte	.LVL440
 14202 171d 92000000 		.4byte	.LVL441
 14203 1721 0100     		.2byte	0x1
 14204 1723 55       		.byte	0x55
 14205 1724 92000000 		.4byte	.LVL441
 14206 1728 B0000000 		.4byte	.LFE123
 14207 172c 0400     		.2byte	0x4
 14208 172e F3       		.byte	0xf3
 14209 172f 01       		.uleb128 0x1
 14210 1730 51       		.byte	0x51
 14211 1731 9F       		.byte	0x9f
 14212 1732 00000000 		.4byte	0
 14213 1736 00000000 		.4byte	0
 14214              	.LLST145:
 14215 173a 00000000 		.4byte	.LVL432
 14216 173e 0D000000 		.4byte	.LVL433-1
 14217 1742 0100     		.2byte	0x1
 14218 1744 52       		.byte	0x52
 14219 1745 0D000000 		.4byte	.LVL433-1
 14220 1749 8E000000 		.4byte	.LVL439
 14221 174d 0100     		.2byte	0x1
 14222 174f 54       		.byte	0x54
 14223 1750 8E000000 		.4byte	.LVL439
 14224 1754 90000000 		.4byte	.LVL440
 14225 1758 0400     		.2byte	0x4
 14226 175a F3       		.byte	0xf3
 14227 175b 01       		.uleb128 0x1
 14228 175c 52       		.byte	0x52
 14229 175d 9F       		.byte	0x9f
 14230 175e 90000000 		.4byte	.LVL440
 14231 1762 92000000 		.4byte	.LVL441
 14232 1766 0100     		.2byte	0x1
 14233 1768 54       		.byte	0x54
 14234 1769 92000000 		.4byte	.LVL441
 14235 176d B0000000 		.4byte	.LFE123
 14236 1771 0400     		.2byte	0x4
 14237 1773 F3       		.byte	0xf3
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 355


 14238 1774 01       		.uleb128 0x1
 14239 1775 52       		.byte	0x52
 14240 1776 9F       		.byte	0x9f
 14241 1777 00000000 		.4byte	0
 14242 177b 00000000 		.4byte	0
 14243              	.LLST146:
 14244 177f 00000000 		.4byte	.LVL432
 14245 1783 0D000000 		.4byte	.LVL433-1
 14246 1787 0100     		.2byte	0x1
 14247 1789 53       		.byte	0x53
 14248 178a 0D000000 		.4byte	.LVL433-1
 14249 178e A6000000 		.4byte	.LVL443
 14250 1792 0100     		.2byte	0x1
 14251 1794 56       		.byte	0x56
 14252 1795 A6000000 		.4byte	.LVL443
 14253 1799 B0000000 		.4byte	.LFE123
 14254 179d 0400     		.2byte	0x4
 14255 179f F3       		.byte	0xf3
 14256 17a0 01       		.uleb128 0x1
 14257 17a1 53       		.byte	0x53
 14258 17a2 9F       		.byte	0x9f
 14259 17a3 00000000 		.4byte	0
 14260 17a7 00000000 		.4byte	0
 14261              	.LLST147:
 14262 17ab 8C000000 		.4byte	.LVL438
 14263 17af 90000000 		.4byte	.LVL440
 14264 17b3 0200     		.2byte	0x2
 14265 17b5 31       		.byte	0x31
 14266 17b6 9F       		.byte	0x9f
 14267 17b7 92000000 		.4byte	.LVL441
 14268 17bb A6000000 		.4byte	.LVL443
 14269 17bf 0100     		.2byte	0x1
 14270 17c1 54       		.byte	0x54
 14271 17c2 A6000000 		.4byte	.LVL443
 14272 17c6 B0000000 		.4byte	.LFE123
 14273 17ca 0100     		.2byte	0x1
 14274 17cc 50       		.byte	0x50
 14275 17cd 00000000 		.4byte	0
 14276 17d1 00000000 		.4byte	0
 14277              	.LLST148:
 14278 17d5 00000000 		.4byte	.LVL444
 14279 17d9 0D000000 		.4byte	.LVL446-1
 14280 17dd 0100     		.2byte	0x1
 14281 17df 50       		.byte	0x50
 14282 17e0 0D000000 		.4byte	.LVL446-1
 14283 17e4 BC000000 		.4byte	.LVL455
 14284 17e8 0100     		.2byte	0x1
 14285 17ea 54       		.byte	0x54
 14286 17eb BC000000 		.4byte	.LVL455
 14287 17ef C4000000 		.4byte	.LFE124
 14288 17f3 0400     		.2byte	0x4
 14289 17f5 F3       		.byte	0xf3
 14290 17f6 01       		.uleb128 0x1
 14291 17f7 50       		.byte	0x50
 14292 17f8 9F       		.byte	0x9f
 14293 17f9 00000000 		.4byte	0
 14294 17fd 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 356


 14295              	.LLST149:
 14296 1801 00000000 		.4byte	.LVL444
 14297 1805 0D000000 		.4byte	.LVL446-1
 14298 1809 0100     		.2byte	0x1
 14299 180b 51       		.byte	0x51
 14300 180c 0D000000 		.4byte	.LVL446-1
 14301 1810 36000000 		.4byte	.LVL448
 14302 1814 0100     		.2byte	0x1
 14303 1816 57       		.byte	0x57
 14304 1817 36000000 		.4byte	.LVL448
 14305 181b 3E000000 		.4byte	.LVL449
 14306 181f 0400     		.2byte	0x4
 14307 1821 F3       		.byte	0xf3
 14308 1822 01       		.uleb128 0x1
 14309 1823 51       		.byte	0x51
 14310 1824 9F       		.byte	0x9f
 14311 1825 3E000000 		.4byte	.LVL449
 14312 1829 66000000 		.4byte	.LVL450
 14313 182d 0100     		.2byte	0x1
 14314 182f 57       		.byte	0x57
 14315 1830 66000000 		.4byte	.LVL450
 14316 1834 C4000000 		.4byte	.LFE124
 14317 1838 0400     		.2byte	0x4
 14318 183a F3       		.byte	0xf3
 14319 183b 01       		.uleb128 0x1
 14320 183c 51       		.byte	0x51
 14321 183d 9F       		.byte	0x9f
 14322 183e 00000000 		.4byte	0
 14323 1842 00000000 		.4byte	0
 14324              	.LLST150:
 14325 1846 00000000 		.4byte	.LVL444
 14326 184a 0D000000 		.4byte	.LVL446-1
 14327 184e 0100     		.2byte	0x1
 14328 1850 52       		.byte	0x52
 14329 1851 0D000000 		.4byte	.LVL446-1
 14330 1855 C4000000 		.4byte	.LFE124
 14331 1859 0400     		.2byte	0x4
 14332 185b F3       		.byte	0xf3
 14333 185c 01       		.uleb128 0x1
 14334 185d 52       		.byte	0x52
 14335 185e 9F       		.byte	0x9f
 14336 185f 00000000 		.4byte	0
 14337 1863 00000000 		.4byte	0
 14338              	.LLST151:
 14339 1867 00000000 		.4byte	.LVL444
 14340 186b 0D000000 		.4byte	.LVL446-1
 14341 186f 0100     		.2byte	0x1
 14342 1871 53       		.byte	0x53
 14343 1872 0D000000 		.4byte	.LVL446-1
 14344 1876 7C000000 		.4byte	.LVL452
 14345 187a 0100     		.2byte	0x1
 14346 187c 56       		.byte	0x56
 14347 187d 7C000000 		.4byte	.LVL452
 14348 1881 C4000000 		.4byte	.LFE124
 14349 1885 0400     		.2byte	0x4
 14350 1887 F3       		.byte	0xf3
 14351 1888 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 357


 14352 1889 53       		.byte	0x53
 14353 188a 9F       		.byte	0x9f
 14354 188b 00000000 		.4byte	0
 14355 188f 00000000 		.4byte	0
 14356              	.LLST152:
 14357 1893 0A000000 		.4byte	.LVL445
 14358 1897 0D000000 		.4byte	.LVL446-1
 14359 189b 0100     		.2byte	0x1
 14360 189d 50       		.byte	0x50
 14361 189e 0D000000 		.4byte	.LVL446-1
 14362 18a2 BC000000 		.4byte	.LVL455
 14363 18a6 0100     		.2byte	0x1
 14364 18a8 54       		.byte	0x54
 14365 18a9 BC000000 		.4byte	.LVL455
 14366 18ad C4000000 		.4byte	.LFE124
 14367 18b1 0400     		.2byte	0x4
 14368 18b3 F3       		.byte	0xf3
 14369 18b4 01       		.uleb128 0x1
 14370 18b5 50       		.byte	0x50
 14371 18b6 9F       		.byte	0x9f
 14372 18b7 00000000 		.4byte	0
 14373 18bb 00000000 		.4byte	0
 14374              	.LLST153:
 14375 18bf 0A000000 		.4byte	.LVL445
 14376 18c3 66000000 		.4byte	.LVL450
 14377 18c7 0200     		.2byte	0x2
 14378 18c9 31       		.byte	0x31
 14379 18ca 9F       		.byte	0x9f
 14380 18cb 66000000 		.4byte	.LVL450
 14381 18cf BC000000 		.4byte	.LVL455
 14382 18d3 0100     		.2byte	0x1
 14383 18d5 55       		.byte	0x55
 14384 18d6 BC000000 		.4byte	.LVL455
 14385 18da C4000000 		.4byte	.LFE124
 14386 18de 0100     		.2byte	0x1
 14387 18e0 50       		.byte	0x50
 14388 18e1 00000000 		.4byte	0
 14389 18e5 00000000 		.4byte	0
 14390              	.LLST154:
 14391 18e9 1C000000 		.4byte	.LVL447
 14392 18ed 71000000 		.4byte	.LVL451-1
 14393 18f1 0100     		.2byte	0x1
 14394 18f3 53       		.byte	0x53
 14395 18f4 00000000 		.4byte	0
 14396 18f8 00000000 		.4byte	0
 14397              	.LLST155:
 14398 18fc 00000000 		.4byte	.LVL456
 14399 1900 80000000 		.4byte	.LVL465
 14400 1904 0100     		.2byte	0x1
 14401 1906 50       		.byte	0x50
 14402 1907 80000000 		.4byte	.LVL465
 14403 190b AA000000 		.4byte	.LVL468
 14404 190f 0100     		.2byte	0x1
 14405 1911 56       		.byte	0x56
 14406 1912 AA000000 		.4byte	.LVL468
 14407 1916 B0000000 		.4byte	.LVL469
 14408 191a 0100     		.2byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 358


 14409 191c 50       		.byte	0x50
 14410 191d B0000000 		.4byte	.LVL469
 14411 1921 D6000000 		.4byte	.LVL471
 14412 1925 0100     		.2byte	0x1
 14413 1927 56       		.byte	0x56
 14414 1928 D6000000 		.4byte	.LVL471
 14415 192c E8000000 		.4byte	.LFE125
 14416 1930 0400     		.2byte	0x4
 14417 1932 F3       		.byte	0xf3
 14418 1933 01       		.uleb128 0x1
 14419 1934 50       		.byte	0x50
 14420 1935 9F       		.byte	0x9f
 14421 1936 00000000 		.4byte	0
 14422 193a 00000000 		.4byte	0
 14423              	.LLST156:
 14424 193e 00000000 		.4byte	.LVL456
 14425 1942 3E000000 		.4byte	.LVL461
 14426 1946 0100     		.2byte	0x1
 14427 1948 51       		.byte	0x51
 14428 1949 3E000000 		.4byte	.LVL461
 14429 194d 46000000 		.4byte	.LVL462
 14430 1951 0400     		.2byte	0x4
 14431 1953 F3       		.byte	0xf3
 14432 1954 01       		.uleb128 0x1
 14433 1955 51       		.byte	0x51
 14434 1956 9F       		.byte	0x9f
 14435 1957 46000000 		.4byte	.LVL462
 14436 195b 6E000000 		.4byte	.LVL463
 14437 195f 0100     		.2byte	0x1
 14438 1961 51       		.byte	0x51
 14439 1962 6E000000 		.4byte	.LVL463
 14440 1966 E8000000 		.4byte	.LFE125
 14441 196a 0400     		.2byte	0x4
 14442 196c F3       		.byte	0xf3
 14443 196d 01       		.uleb128 0x1
 14444 196e 51       		.byte	0x51
 14445 196f 9F       		.byte	0x9f
 14446 1970 00000000 		.4byte	0
 14447 1974 00000000 		.4byte	0
 14448              	.LLST157:
 14449 1978 00000000 		.4byte	.LVL456
 14450 197c 2C000000 		.4byte	.LVL460
 14451 1980 0100     		.2byte	0x1
 14452 1982 52       		.byte	0x52
 14453 1983 2C000000 		.4byte	.LVL460
 14454 1987 E8000000 		.4byte	.LFE125
 14455 198b 0400     		.2byte	0x4
 14456 198d F3       		.byte	0xf3
 14457 198e 01       		.uleb128 0x1
 14458 198f 52       		.byte	0x52
 14459 1990 9F       		.byte	0x9f
 14460 1991 00000000 		.4byte	0
 14461 1995 00000000 		.4byte	0
 14462              	.LLST158:
 14463 1999 00000000 		.4byte	.LVL456
 14464 199d 22000000 		.4byte	.LVL458
 14465 19a1 0100     		.2byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 359


 14466 19a3 53       		.byte	0x53
 14467 19a4 22000000 		.4byte	.LVL458
 14468 19a8 E8000000 		.4byte	.LFE125
 14469 19ac 0400     		.2byte	0x4
 14470 19ae F3       		.byte	0xf3
 14471 19af 01       		.uleb128 0x1
 14472 19b0 53       		.byte	0x53
 14473 19b1 9F       		.byte	0x9f
 14474 19b2 00000000 		.4byte	0
 14475 19b6 00000000 		.4byte	0
 14476              	.LLST159:
 14477 19ba 00000000 		.4byte	.LVL456
 14478 19be DE000000 		.4byte	.LVL473
 14479 19c2 0200     		.2byte	0x2
 14480 19c4 91       		.byte	0x91
 14481 19c5 00       		.sleb128 0
 14482 19c6 DE000000 		.4byte	.LVL473
 14483 19ca E8000000 		.4byte	.LFE125
 14484 19ce 0200     		.2byte	0x2
 14485 19d0 7D       		.byte	0x7d
 14486 19d1 00       		.sleb128 0
 14487 19d2 00000000 		.4byte	0
 14488 19d6 00000000 		.4byte	0
 14489              	.LLST160:
 14490 19da 02000000 		.4byte	.LVL457
 14491 19de 80000000 		.4byte	.LVL465
 14492 19e2 0100     		.2byte	0x1
 14493 19e4 50       		.byte	0x50
 14494 19e5 80000000 		.4byte	.LVL465
 14495 19e9 AA000000 		.4byte	.LVL468
 14496 19ed 0100     		.2byte	0x1
 14497 19ef 56       		.byte	0x56
 14498 19f0 AA000000 		.4byte	.LVL468
 14499 19f4 B0000000 		.4byte	.LVL469
 14500 19f8 0100     		.2byte	0x1
 14501 19fa 50       		.byte	0x50
 14502 19fb B0000000 		.4byte	.LVL469
 14503 19ff D6000000 		.4byte	.LVL471
 14504 1a03 0100     		.2byte	0x1
 14505 1a05 56       		.byte	0x56
 14506 1a06 D6000000 		.4byte	.LVL471
 14507 1a0a E8000000 		.4byte	.LFE125
 14508 1a0e 0400     		.2byte	0x4
 14509 1a10 F3       		.byte	0xf3
 14510 1a11 01       		.uleb128 0x1
 14511 1a12 50       		.byte	0x50
 14512 1a13 9F       		.byte	0x9f
 14513 1a14 00000000 		.4byte	0
 14514 1a18 00000000 		.4byte	0
 14515              	.LLST161:
 14516 1a1c 24000000 		.4byte	.LVL459
 14517 1a20 76000000 		.4byte	.LVL464
 14518 1a24 0100     		.2byte	0x1
 14519 1a26 53       		.byte	0x53
 14520 1a27 00000000 		.4byte	0
 14521 1a2b 00000000 		.4byte	0
 14522              	.LLST162:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 360


 14523 1a2f 02000000 		.4byte	.LVL457
 14524 1a33 6E000000 		.4byte	.LVL463
 14525 1a37 0200     		.2byte	0x2
 14526 1a39 31       		.byte	0x31
 14527 1a3a 9F       		.byte	0x9f
 14528 1a3b 6E000000 		.4byte	.LVL463
 14529 1a3f DE000000 		.4byte	.LVL473
 14530 1a43 0100     		.2byte	0x1
 14531 1a45 55       		.byte	0x55
 14532 1a46 DE000000 		.4byte	.LVL473
 14533 1a4a E8000000 		.4byte	.LFE125
 14534 1a4e 0100     		.2byte	0x1
 14535 1a50 50       		.byte	0x50
 14536 1a51 00000000 		.4byte	0
 14537 1a55 00000000 		.4byte	0
 14538              	.LLST163:
 14539 1a59 D6000000 		.4byte	.LVL471
 14540 1a5d DA000000 		.4byte	.LVL472
 14541 1a61 0100     		.2byte	0x1
 14542 1a63 54       		.byte	0x54
 14543 1a64 00000000 		.4byte	0
 14544 1a68 00000000 		.4byte	0
 14545              	.LLST164:
 14546 1a6c 00000000 		.4byte	.LVL474
 14547 1a70 40000000 		.4byte	.LVL478
 14548 1a74 0100     		.2byte	0x1
 14549 1a76 50       		.byte	0x50
 14550 1a77 40000000 		.4byte	.LVL478
 14551 1a7b 6A000000 		.4byte	.LVL481
 14552 1a7f 0100     		.2byte	0x1
 14553 1a81 54       		.byte	0x54
 14554 1a82 6A000000 		.4byte	.LVL481
 14555 1a86 70000000 		.4byte	.LVL483
 14556 1a8a 0100     		.2byte	0x1
 14557 1a8c 50       		.byte	0x50
 14558 1a8d 70000000 		.4byte	.LVL483
 14559 1a91 92000000 		.4byte	.LVL485
 14560 1a95 0100     		.2byte	0x1
 14561 1a97 54       		.byte	0x54
 14562 1a98 92000000 		.4byte	.LVL485
 14563 1a9c A0000000 		.4byte	.LFE126
 14564 1aa0 0400     		.2byte	0x4
 14565 1aa2 F3       		.byte	0xf3
 14566 1aa3 01       		.uleb128 0x1
 14567 1aa4 50       		.byte	0x50
 14568 1aa5 9F       		.byte	0x9f
 14569 1aa6 00000000 		.4byte	0
 14570 1aaa 00000000 		.4byte	0
 14571              	.LLST165:
 14572 1aae 00000000 		.4byte	.LVL474
 14573 1ab2 43000000 		.4byte	.LVL479-1
 14574 1ab6 0100     		.2byte	0x1
 14575 1ab8 51       		.byte	0x51
 14576 1ab9 43000000 		.4byte	.LVL479-1
 14577 1abd 6A000000 		.4byte	.LVL481
 14578 1ac1 0100     		.2byte	0x1
 14579 1ac3 56       		.byte	0x56
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 361


 14580 1ac4 6A000000 		.4byte	.LVL481
 14581 1ac8 6E000000 		.4byte	.LVL482
 14582 1acc 0100     		.2byte	0x1
 14583 1ace 51       		.byte	0x51
 14584 1acf 6E000000 		.4byte	.LVL482
 14585 1ad3 92000000 		.4byte	.LVL485
 14586 1ad7 0100     		.2byte	0x1
 14587 1ad9 56       		.byte	0x56
 14588 1ada 92000000 		.4byte	.LVL485
 14589 1ade A0000000 		.4byte	.LFE126
 14590 1ae2 0400     		.2byte	0x4
 14591 1ae4 F3       		.byte	0xf3
 14592 1ae5 01       		.uleb128 0x1
 14593 1ae6 51       		.byte	0x51
 14594 1ae7 9F       		.byte	0x9f
 14595 1ae8 00000000 		.4byte	0
 14596 1aec 00000000 		.4byte	0
 14597              	.LLST166:
 14598 1af0 02000000 		.4byte	.LVL475
 14599 1af4 40000000 		.4byte	.LVL478
 14600 1af8 0100     		.2byte	0x1
 14601 1afa 50       		.byte	0x50
 14602 1afb 40000000 		.4byte	.LVL478
 14603 1aff 6A000000 		.4byte	.LVL481
 14604 1b03 0100     		.2byte	0x1
 14605 1b05 54       		.byte	0x54
 14606 1b06 6A000000 		.4byte	.LVL481
 14607 1b0a 70000000 		.4byte	.LVL483
 14608 1b0e 0100     		.2byte	0x1
 14609 1b10 50       		.byte	0x50
 14610 1b11 70000000 		.4byte	.LVL483
 14611 1b15 92000000 		.4byte	.LVL485
 14612 1b19 0100     		.2byte	0x1
 14613 1b1b 54       		.byte	0x54
 14614 1b1c 92000000 		.4byte	.LVL485
 14615 1b20 A0000000 		.4byte	.LFE126
 14616 1b24 0400     		.2byte	0x4
 14617 1b26 F3       		.byte	0xf3
 14618 1b27 01       		.uleb128 0x1
 14619 1b28 50       		.byte	0x50
 14620 1b29 9F       		.byte	0x9f
 14621 1b2a 00000000 		.4byte	0
 14622 1b2e 00000000 		.4byte	0
 14623              	.LLST167:
 14624 1b32 1C000000 		.4byte	.LVL476
 14625 1b36 36000000 		.4byte	.LVL477
 14626 1b3a 0100     		.2byte	0x1
 14627 1b3c 53       		.byte	0x53
 14628 1b3d 00000000 		.4byte	0
 14629 1b41 00000000 		.4byte	0
 14630              	.LLST168:
 14631 1b45 92000000 		.4byte	.LVL485
 14632 1b49 96000000 		.4byte	.LVL486
 14633 1b4d 0100     		.2byte	0x1
 14634 1b4f 55       		.byte	0x55
 14635 1b50 00000000 		.4byte	0
 14636 1b54 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 362


 14637              	.LLST169:
 14638 1b58 00000000 		.4byte	.LVL487
 14639 1b5c 0C000000 		.4byte	.LVL488
 14640 1b60 0100     		.2byte	0x1
 14641 1b62 50       		.byte	0x50
 14642 1b63 00000000 		.4byte	0
 14643 1b67 00000000 		.4byte	0
 14644              	.LLST170:
 14645 1b6b 0C000000 		.4byte	.LVL488
 14646 1b6f 22000000 		.4byte	.LVL491
 14647 1b73 0100     		.2byte	0x1
 14648 1b75 54       		.byte	0x54
 14649 1b76 24000000 		.4byte	.LVL492
 14650 1b7a 26000000 		.4byte	.LVL493
 14651 1b7e 0100     		.2byte	0x1
 14652 1b80 54       		.byte	0x54
 14653 1b81 00000000 		.4byte	0
 14654 1b85 00000000 		.4byte	0
 14655              	.LLST171:
 14656 1b89 20000000 		.4byte	.LVL490
 14657 1b8d 24000000 		.4byte	.LVL492
 14658 1b91 0200     		.2byte	0x2
 14659 1b93 31       		.byte	0x31
 14660 1b94 9F       		.byte	0x9f
 14661 1b95 26000000 		.4byte	.LVL493
 14662 1b99 2E000000 		.4byte	.LVL495
 14663 1b9d 0100     		.2byte	0x1
 14664 1b9f 54       		.byte	0x54
 14665 1ba0 2E000000 		.4byte	.LVL495
 14666 1ba4 34000000 		.4byte	.LFE127
 14667 1ba8 0100     		.2byte	0x1
 14668 1baa 50       		.byte	0x50
 14669 1bab 00000000 		.4byte	0
 14670 1baf 00000000 		.4byte	0
 14671              		.section	.debug_aranges,"",%progbits
 14672 0000 F4010000 		.4byte	0x1f4
 14673 0004 0200     		.2byte	0x2
 14674 0006 00000000 		.4byte	.Ldebug_info0
 14675 000a 04       		.byte	0x4
 14676 000b 00       		.byte	0
 14677 000c 0000     		.2byte	0
 14678 000e 0000     		.2byte	0
 14679 0010 00000000 		.4byte	.LFB80
 14680 0014 38000000 		.4byte	.LFE80-.LFB80
 14681 0018 00000000 		.4byte	.LFB109
 14682 001c 14000000 		.4byte	.LFE109-.LFB109
 14683 0020 00000000 		.4byte	.LFB112
 14684 0024 2C000000 		.4byte	.LFE112-.LFB112
 14685 0028 00000000 		.4byte	.LFB70
 14686 002c 00010000 		.4byte	.LFE70-.LFB70
 14687 0030 00000000 		.4byte	.LFB105
 14688 0034 58000000 		.4byte	.LFE105-.LFB105
 14689 0038 00000000 		.4byte	.LFB71
 14690 003c AC000000 		.4byte	.LFE71-.LFB71
 14691 0040 00000000 		.4byte	.LFB111
 14692 0044 18000000 		.4byte	.LFE111-.LFB111
 14693 0048 00000000 		.4byte	.LFB106
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 363


 14694 004c 44000000 		.4byte	.LFE106-.LFB106
 14695 0050 00000000 		.4byte	.LFB104
 14696 0054 08000000 		.4byte	.LFE104-.LFB104
 14697 0058 00000000 		.4byte	.LFB128
 14698 005c 84000000 		.4byte	.LFE128-.LFB128
 14699 0060 00000000 		.4byte	.LFB117
 14700 0064 22000000 		.4byte	.LFE117-.LFB117
 14701 0068 00000000 		.4byte	.LFB69
 14702 006c 64000000 		.4byte	.LFE69-.LFB69
 14703 0070 00000000 		.4byte	.LFB72
 14704 0074 BC000000 		.4byte	.LFE72-.LFB72
 14705 0078 00000000 		.4byte	.LFB75
 14706 007c 64000000 		.4byte	.LFE75-.LFB75
 14707 0080 00000000 		.4byte	.LFB76
 14708 0084 20000000 		.4byte	.LFE76-.LFB76
 14709 0088 00000000 		.4byte	.LFB77
 14710 008c 28000000 		.4byte	.LFE77-.LFB77
 14711 0090 00000000 		.4byte	.LFB78
 14712 0094 E8000000 		.4byte	.LFE78-.LFB78
 14713 0098 00000000 		.4byte	.LFB81
 14714 009c 78000000 		.4byte	.LFE81-.LFB81
 14715 00a0 00000000 		.4byte	.LFB82
 14716 00a4 88000000 		.4byte	.LFE82-.LFB82
 14717 00a8 00000000 		.4byte	.LFB83
 14718 00ac 6C000000 		.4byte	.LFE83-.LFB83
 14719 00b0 00000000 		.4byte	.LFB84
 14720 00b4 24000000 		.4byte	.LFE84-.LFB84
 14721 00b8 00000000 		.4byte	.LFB85
 14722 00bc 14000000 		.4byte	.LFE85-.LFB85
 14723 00c0 00000000 		.4byte	.LFB87
 14724 00c4 0C000000 		.4byte	.LFE87-.LFB87
 14725 00c8 00000000 		.4byte	.LFB88
 14726 00cc 0C000000 		.4byte	.LFE88-.LFB88
 14727 00d0 00000000 		.4byte	.LFB89
 14728 00d4 0C000000 		.4byte	.LFE89-.LFB89
 14729 00d8 00000000 		.4byte	.LFB90
 14730 00dc 14000000 		.4byte	.LFE90-.LFB90
 14731 00e0 00000000 		.4byte	.LFB92
 14732 00e4 08010000 		.4byte	.LFE92-.LFB92
 14733 00e8 00000000 		.4byte	.LFB86
 14734 00ec D8000000 		.4byte	.LFE86-.LFB86
 14735 00f0 00000000 		.4byte	.LFB73
 14736 00f4 6C000000 		.4byte	.LFE73-.LFB73
 14737 00f8 00000000 		.4byte	.LFB74
 14738 00fc 34000000 		.4byte	.LFE74-.LFB74
 14739 0100 00000000 		.4byte	.LFB93
 14740 0104 D4000000 		.4byte	.LFE93-.LFB93
 14741 0108 00000000 		.4byte	.LFB79
 14742 010c C0000000 		.4byte	.LFE79-.LFB79
 14743 0110 00000000 		.4byte	.LFB94
 14744 0114 20000000 		.4byte	.LFE94-.LFB94
 14745 0118 00000000 		.4byte	.LFB95
 14746 011c 28000000 		.4byte	.LFE95-.LFB95
 14747 0120 00000000 		.4byte	.LFB96
 14748 0124 74000000 		.4byte	.LFE96-.LFB96
 14749 0128 00000000 		.4byte	.LFB97
 14750 012c 54000000 		.4byte	.LFE97-.LFB97
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 364


 14751 0130 00000000 		.4byte	.LFB98
 14752 0134 20000000 		.4byte	.LFE98-.LFB98
 14753 0138 00000000 		.4byte	.LFB99
 14754 013c 14000000 		.4byte	.LFE99-.LFB99
 14755 0140 00000000 		.4byte	.LFB100
 14756 0144 58000000 		.4byte	.LFE100-.LFB100
 14757 0148 00000000 		.4byte	.LFB101
 14758 014c 10000000 		.4byte	.LFE101-.LFB101
 14759 0150 00000000 		.4byte	.LFB102
 14760 0154 0A000000 		.4byte	.LFE102-.LFB102
 14761 0158 00000000 		.4byte	.LFB103
 14762 015c 06000000 		.4byte	.LFE103-.LFB103
 14763 0160 00000000 		.4byte	.LFB107
 14764 0164 78000000 		.4byte	.LFE107-.LFB107
 14765 0168 00000000 		.4byte	.LFB108
 14766 016c 5C000000 		.4byte	.LFE108-.LFB108
 14767 0170 00000000 		.4byte	.LFB91
 14768 0174 A4000000 		.4byte	.LFE91-.LFB91
 14769 0178 00000000 		.4byte	.LFB110
 14770 017c 18000000 		.4byte	.LFE110-.LFB110
 14771 0180 00000000 		.4byte	.LFB113
 14772 0184 0C000000 		.4byte	.LFE113-.LFB113
 14773 0188 00000000 		.4byte	.LFB114
 14774 018c D0000000 		.4byte	.LFE114-.LFB114
 14775 0190 00000000 		.4byte	.LFB115
 14776 0194 88000000 		.4byte	.LFE115-.LFB115
 14777 0198 00000000 		.4byte	.LFB116
 14778 019c A0000000 		.4byte	.LFE116-.LFB116
 14779 01a0 00000000 		.4byte	.LFB118
 14780 01a4 D4000000 		.4byte	.LFE118-.LFB118
 14781 01a8 00000000 		.4byte	.LFB119
 14782 01ac C8000000 		.4byte	.LFE119-.LFB119
 14783 01b0 00000000 		.4byte	.LFB120
 14784 01b4 20000000 		.4byte	.LFE120-.LFB120
 14785 01b8 00000000 		.4byte	.LFB121
 14786 01bc 20000000 		.4byte	.LFE121-.LFB121
 14787 01c0 00000000 		.4byte	.LFB122
 14788 01c4 88000000 		.4byte	.LFE122-.LFB122
 14789 01c8 00000000 		.4byte	.LFB123
 14790 01cc B0000000 		.4byte	.LFE123-.LFB123
 14791 01d0 00000000 		.4byte	.LFB124
 14792 01d4 C4000000 		.4byte	.LFE124-.LFB124
 14793 01d8 00000000 		.4byte	.LFB125
 14794 01dc E8000000 		.4byte	.LFE125-.LFB125
 14795 01e0 00000000 		.4byte	.LFB126
 14796 01e4 A0000000 		.4byte	.LFE126-.LFB126
 14797 01e8 00000000 		.4byte	.LFB127
 14798 01ec 34000000 		.4byte	.LFE127-.LFB127
 14799 01f0 00000000 		.4byte	0
 14800 01f4 00000000 		.4byte	0
 14801              		.section	.debug_ranges,"",%progbits
 14802              	.Ldebug_ranges0:
 14803 0000 0E000000 		.4byte	.LBB41
 14804 0004 3E000000 		.4byte	.LBE41
 14805 0008 44000000 		.4byte	.LBB43
 14806 000c DC000000 		.4byte	.LBE43
 14807 0010 EE000000 		.4byte	.LBB44
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 365


 14808 0014 F2000000 		.4byte	.LBE44
 14809 0018 00000000 		.4byte	0
 14810 001c 00000000 		.4byte	0
 14811 0020 0A000000 		.4byte	.LBB46
 14812 0024 20000000 		.4byte	.LBE46
 14813 0028 24000000 		.4byte	.LBB47
 14814 002c 2C000000 		.4byte	.LBE47
 14815 0030 34000000 		.4byte	.LBB48
 14816 0034 4A000000 		.4byte	.LBE48
 14817 0038 00000000 		.4byte	0
 14818 003c 00000000 		.4byte	0
 14819 0040 00000000 		.4byte	.LFB80
 14820 0044 38000000 		.4byte	.LFE80
 14821 0048 00000000 		.4byte	.LFB109
 14822 004c 14000000 		.4byte	.LFE109
 14823 0050 00000000 		.4byte	.LFB112
 14824 0054 2C000000 		.4byte	.LFE112
 14825 0058 00000000 		.4byte	.LFB70
 14826 005c 00010000 		.4byte	.LFE70
 14827 0060 00000000 		.4byte	.LFB105
 14828 0064 58000000 		.4byte	.LFE105
 14829 0068 00000000 		.4byte	.LFB71
 14830 006c AC000000 		.4byte	.LFE71
 14831 0070 00000000 		.4byte	.LFB111
 14832 0074 18000000 		.4byte	.LFE111
 14833 0078 00000000 		.4byte	.LFB106
 14834 007c 44000000 		.4byte	.LFE106
 14835 0080 00000000 		.4byte	.LFB104
 14836 0084 08000000 		.4byte	.LFE104
 14837 0088 00000000 		.4byte	.LFB128
 14838 008c 84000000 		.4byte	.LFE128
 14839 0090 00000000 		.4byte	.LFB117
 14840 0094 22000000 		.4byte	.LFE117
 14841 0098 00000000 		.4byte	.LFB69
 14842 009c 64000000 		.4byte	.LFE69
 14843 00a0 00000000 		.4byte	.LFB72
 14844 00a4 BC000000 		.4byte	.LFE72
 14845 00a8 00000000 		.4byte	.LFB75
 14846 00ac 64000000 		.4byte	.LFE75
 14847 00b0 00000000 		.4byte	.LFB76
 14848 00b4 20000000 		.4byte	.LFE76
 14849 00b8 00000000 		.4byte	.LFB77
 14850 00bc 28000000 		.4byte	.LFE77
 14851 00c0 00000000 		.4byte	.LFB78
 14852 00c4 E8000000 		.4byte	.LFE78
 14853 00c8 00000000 		.4byte	.LFB81
 14854 00cc 78000000 		.4byte	.LFE81
 14855 00d0 00000000 		.4byte	.LFB82
 14856 00d4 88000000 		.4byte	.LFE82
 14857 00d8 00000000 		.4byte	.LFB83
 14858 00dc 6C000000 		.4byte	.LFE83
 14859 00e0 00000000 		.4byte	.LFB84
 14860 00e4 24000000 		.4byte	.LFE84
 14861 00e8 00000000 		.4byte	.LFB85
 14862 00ec 14000000 		.4byte	.LFE85
 14863 00f0 00000000 		.4byte	.LFB87
 14864 00f4 0C000000 		.4byte	.LFE87
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 366


 14865 00f8 00000000 		.4byte	.LFB88
 14866 00fc 0C000000 		.4byte	.LFE88
 14867 0100 00000000 		.4byte	.LFB89
 14868 0104 0C000000 		.4byte	.LFE89
 14869 0108 00000000 		.4byte	.LFB90
 14870 010c 14000000 		.4byte	.LFE90
 14871 0110 00000000 		.4byte	.LFB92
 14872 0114 08010000 		.4byte	.LFE92
 14873 0118 00000000 		.4byte	.LFB86
 14874 011c D8000000 		.4byte	.LFE86
 14875 0120 00000000 		.4byte	.LFB73
 14876 0124 6C000000 		.4byte	.LFE73
 14877 0128 00000000 		.4byte	.LFB74
 14878 012c 34000000 		.4byte	.LFE74
 14879 0130 00000000 		.4byte	.LFB93
 14880 0134 D4000000 		.4byte	.LFE93
 14881 0138 00000000 		.4byte	.LFB79
 14882 013c C0000000 		.4byte	.LFE79
 14883 0140 00000000 		.4byte	.LFB94
 14884 0144 20000000 		.4byte	.LFE94
 14885 0148 00000000 		.4byte	.LFB95
 14886 014c 28000000 		.4byte	.LFE95
 14887 0150 00000000 		.4byte	.LFB96
 14888 0154 74000000 		.4byte	.LFE96
 14889 0158 00000000 		.4byte	.LFB97
 14890 015c 54000000 		.4byte	.LFE97
 14891 0160 00000000 		.4byte	.LFB98
 14892 0164 20000000 		.4byte	.LFE98
 14893 0168 00000000 		.4byte	.LFB99
 14894 016c 14000000 		.4byte	.LFE99
 14895 0170 00000000 		.4byte	.LFB100
 14896 0174 58000000 		.4byte	.LFE100
 14897 0178 00000000 		.4byte	.LFB101
 14898 017c 10000000 		.4byte	.LFE101
 14899 0180 00000000 		.4byte	.LFB102
 14900 0184 0A000000 		.4byte	.LFE102
 14901 0188 00000000 		.4byte	.LFB103
 14902 018c 06000000 		.4byte	.LFE103
 14903 0190 00000000 		.4byte	.LFB107
 14904 0194 78000000 		.4byte	.LFE107
 14905 0198 00000000 		.4byte	.LFB108
 14906 019c 5C000000 		.4byte	.LFE108
 14907 01a0 00000000 		.4byte	.LFB91
 14908 01a4 A4000000 		.4byte	.LFE91
 14909 01a8 00000000 		.4byte	.LFB110
 14910 01ac 18000000 		.4byte	.LFE110
 14911 01b0 00000000 		.4byte	.LFB113
 14912 01b4 0C000000 		.4byte	.LFE113
 14913 01b8 00000000 		.4byte	.LFB114
 14914 01bc D0000000 		.4byte	.LFE114
 14915 01c0 00000000 		.4byte	.LFB115
 14916 01c4 88000000 		.4byte	.LFE115
 14917 01c8 00000000 		.4byte	.LFB116
 14918 01cc A0000000 		.4byte	.LFE116
 14919 01d0 00000000 		.4byte	.LFB118
 14920 01d4 D4000000 		.4byte	.LFE118
 14921 01d8 00000000 		.4byte	.LFB119
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 367


 14922 01dc C8000000 		.4byte	.LFE119
 14923 01e0 00000000 		.4byte	.LFB120
 14924 01e4 20000000 		.4byte	.LFE120
 14925 01e8 00000000 		.4byte	.LFB121
 14926 01ec 20000000 		.4byte	.LFE121
 14927 01f0 00000000 		.4byte	.LFB122
 14928 01f4 88000000 		.4byte	.LFE122
 14929 01f8 00000000 		.4byte	.LFB123
 14930 01fc B0000000 		.4byte	.LFE123
 14931 0200 00000000 		.4byte	.LFB124
 14932 0204 C4000000 		.4byte	.LFE124
 14933 0208 00000000 		.4byte	.LFB125
 14934 020c E8000000 		.4byte	.LFE125
 14935 0210 00000000 		.4byte	.LFB126
 14936 0214 A0000000 		.4byte	.LFE126
 14937 0218 00000000 		.4byte	.LFB127
 14938 021c 34000000 		.4byte	.LFE127
 14939 0220 00000000 		.4byte	0
 14940 0224 00000000 		.4byte	0
 14941              		.section	.debug_line,"",%progbits
 14942              	.Ldebug_line0:
 14943 0000 D60C0000 		.section	.debug_str,"MS",%progbits,1
 14943      02000E03 
 14943      00000201 
 14943      FB0E0D00 
 14943      01010101 
 14944              	.LASF265:
 14945 0000 75785065 		.ascii	"uxPendedCounts\000"
 14945      6E646564 
 14945      436F756E 
 14945      747300
 14946              	.LASF362:
 14947 000f 78596965 		.ascii	"xYieldPending\000"
 14947      6C645065 
 14947      6E64696E 
 14947      6700
 14948              	.LASF4:
 14949 001d 73697A65 		.ascii	"size_t\000"
 14949      5F7400
 14950              	.LASF21:
 14951 0024 73697A65 		.ascii	"sizetype\000"
 14951      74797065 
 14951      00
 14952              	.LASF23:
 14953 002d 5F5F7661 		.ascii	"__value\000"
 14953      6C756500 
 14954              	.LASF92:
 14955 0035 5F5F7366 		.ascii	"__sf\000"
 14955      00
 14956              	.LASF288:
 14957 003a 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
 14957      6B496E74 
 14957      65726E61 
 14957      6C536574 
 14957      54696D65 
 14958              	.LASF233:
 14959 0057 75735374 		.ascii	"usStackDepth\000"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 368


 14959      61636B44 
 14959      65707468 
 14959      00
 14960              	.LASF59:
 14961 0064 5F726561 		.ascii	"_read\000"
 14961      6400
 14962              	.LASF228:
 14963 006a 7843616E 		.ascii	"xCanBlockIndefinitely\000"
 14963      426C6F63 
 14963      6B496E64 
 14963      6566696E 
 14963      6974656C 
 14964              	.LASF257:
 14965 0080 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 14965      6B476574 
 14965      5469636B 
 14965      436F756E 
 14965      7446726F 
 14966              	.LASF60:
 14967 0099 5F777269 		.ascii	"_write\000"
 14967      746500
 14968              	.LASF327:
 14969 00a0 756C5374 		.ascii	"ulStatsAsPercentage\000"
 14969      61747341 
 14969      73506572 
 14969      63656E74 
 14969      61676500 
 14970              	.LASF170:
 14971 00b4 4D656D6F 		.ascii	"MemoryRegion_t\000"
 14971      72795265 
 14971      67696F6E 
 14971      5F7400
 14972              	.LASF185:
 14973 00c3 78457665 		.ascii	"xEventListItem\000"
 14973      6E744C69 
 14973      73744974 
 14973      656D00
 14974              	.LASF125:
 14975 00d2 696E7433 		.ascii	"int32_t\000"
 14975      325F7400 
 14976              	.LASF155:
 14977 00da 65546173 		.ascii	"eTaskState\000"
 14977      6B537461 
 14977      746500
 14978              	.LASF103:
 14979 00e5 5F617363 		.ascii	"_asctime_buf\000"
 14979      74696D65 
 14979      5F627566 
 14979      00
 14980              	.LASF86:
 14981 00f2 5F637674 		.ascii	"_cvtlen\000"
 14981      6C656E00 
 14982              	.LASF309:
 14983 00fa 70756C54 		.ascii	"pulTotalRunTime\000"
 14983      6F74616C 
 14983      52756E54 
 14983      696D6500 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 369


 14984              	.LASF325:
 14985 010a 76546173 		.ascii	"vTaskGetRunTimeStats\000"
 14985      6B476574 
 14985      52756E54 
 14985      696D6553 
 14985      74617473 
 14986              	.LASF162:
 14987 011f 7854494D 		.ascii	"xTIME_OUT\000"
 14987      455F4F55 
 14987      5400
 14988              	.LASF358:
 14989 0129 78546963 		.ascii	"xTickCount\000"
 14989      6B436F75 
 14989      6E7400
 14990              	.LASF189:
 14991 0134 75785461 		.ascii	"uxTaskNumber\000"
 14991      736B4E75 
 14991      6D626572 
 14991      00
 14992              	.LASF214:
 14993 0141 70785461 		.ascii	"pxTaskCode\000"
 14993      736B436F 
 14993      646500
 14994              	.LASF122:
 14995 014c 5F756E75 		.ascii	"_unused\000"
 14995      73656400 
 14996              	.LASF33:
 14997 0154 5F5F746D 		.ascii	"__tm\000"
 14997      00
 14998              	.LASF118:
 14999 0159 5F776373 		.ascii	"_wcsrtombs_state\000"
 14999      72746F6D 
 14999      62735F73 
 14999      74617465 
 14999      00
 15000              	.LASF64:
 15001 016a 5F6E6275 		.ascii	"_nbuf\000"
 15001      6600
 15002              	.LASF34:
 15003 0170 5F5F746D 		.ascii	"__tm_sec\000"
 15003      5F736563 
 15003      00
 15004              	.LASF338:
 15005 0179 78546173 		.ascii	"xTaskGenericNotify\000"
 15005      6B47656E 
 15005      65726963 
 15005      4E6F7469 
 15005      667900
 15006              	.LASF131:
 15007 018c 42617365 		.ascii	"BaseType_t\000"
 15007      54797065 
 15007      5F7400
 15008              	.LASF204:
 15009 0197 75635265 		.ascii	"ucReturn\000"
 15009      7475726E 
 15009      00
 15010              	.LASF111:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 370


 15011 01a0 5F6C3634 		.ascii	"_l64a_buf\000"
 15011      615F6275 
 15011      6600
 15012              	.LASF153:
 15013 01aa 6544656C 		.ascii	"eDeleted\000"
 15013      65746564 
 15013      00
 15014              	.LASF187:
 15015 01b3 70785374 		.ascii	"pxStack\000"
 15015      61636B00 
 15016              	.LASF249:
 15017 01bb 76546173 		.ascii	"vTaskResume\000"
 15017      6B526573 
 15017      756D6500 
 15018              	.LASF172:
 15019 01c7 7848616E 		.ascii	"xHandle\000"
 15019      646C6500 
 15020              	.LASF329:
 15021 01cf 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 15021      736B4765 
 15021      744E756D 
 15021      6265724F 
 15021      66546173 
 15022              	.LASF68:
 15023 01e6 5F6C6F63 		.ascii	"_lock\000"
 15023      6B00
 15024              	.LASF317:
 15025 01ec 78546173 		.ascii	"xTaskPriorityDisinherit\000"
 15025      6B507269 
 15025      6F726974 
 15025      79446973 
 15025      696E6865 
 15026              	.LASF99:
 15027 0204 5F6D756C 		.ascii	"_mult\000"
 15027      7400
 15028              	.LASF382:
 15029 020a 764C6973 		.ascii	"vListInsert\000"
 15029      74496E73 
 15029      65727400 
 15030              	.LASF181:
 15031 0216 5461736B 		.ascii	"TaskStatus_t\000"
 15031      53746174 
 15031      75735F74 
 15031      00
 15032              	.LASF278:
 15033 0223 78546173 		.ascii	"xTaskToSuspend\000"
 15033      6B546F53 
 15033      75737065 
 15033      6E6400
 15034              	.LASF252:
 15035 0232 75785361 		.ascii	"uxSavedInterruptStatus\000"
 15035      76656449 
 15035      6E746572 
 15035      72757074 
 15035      53746174 
 15036              	.LASF209:
 15037 0249 78546173 		.ascii	"xTask\000"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 371


 15037      6B00
 15038              	.LASF240:
 15039 024f 75785265 		.ascii	"uxReturn\000"
 15039      7475726E 
 15039      00
 15040              	.LASF136:
 15041 0258 70784E65 		.ascii	"pxNext\000"
 15041      787400
 15042              	.LASF219:
 15043 025f 70784E65 		.ascii	"pxNewTCB\000"
 15043      77544342 
 15043      00
 15044              	.LASF19:
 15045 0268 5F5F7763 		.ascii	"__wch\000"
 15045      6800
 15046              	.LASF5:
 15047 026e 5F5F7569 		.ascii	"__uint8_t\000"
 15047      6E74385F 
 15047      7400
 15048              	.LASF177:
 15049 0278 75784261 		.ascii	"uxBasePriority\000"
 15049      73655072 
 15049      696F7269 
 15049      747900
 15050              	.LASF194:
 15051 0287 74736B54 		.ascii	"tskTCB\000"
 15051      434200
 15052              	.LASF56:
 15053 028e 5F66696C 		.ascii	"_file\000"
 15053      6500
 15054              	.LASF43:
 15055 0294 5F6F6E5F 		.ascii	"_on_exit_args\000"
 15055      65786974 
 15055      5F617267 
 15055      7300
 15056              	.LASF176:
 15057 02a2 75784375 		.ascii	"uxCurrentPriority\000"
 15057      7272656E 
 15057      74507269 
 15057      6F726974 
 15057      7900
 15058              	.LASF280:
 15059 02b4 70784576 		.ascii	"pxEventList\000"
 15059      656E744C 
 15059      69737400 
 15060              	.LASF246:
 15061 02c0 75784375 		.ascii	"uxCurrentBasePriority\000"
 15061      7272656E 
 15061      74426173 
 15061      65507269 
 15061      6F726974 
 15062              	.LASF114:
 15063 02d6 5F6D6272 		.ascii	"_mbrlen_state\000"
 15063      6C656E5F 
 15063      73746174 
 15063      6500
 15064              	.LASF11:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 372


 15065 02e4 6C6F6E67 		.ascii	"long int\000"
 15065      20696E74 
 15065      00
 15066              	.LASF371:
 15067 02ed 70784375 		.ascii	"pxCurrentTCB\000"
 15067      7272656E 
 15067      74544342 
 15067      00
 15068              	.LASF369:
 15069 02fa 5F696D70 		.ascii	"_impure_ptr\000"
 15069      7572655F 
 15069      70747200 
 15070              	.LASF83:
 15071 0306 5F726573 		.ascii	"_result_k\000"
 15071      756C745F 
 15071      6B00
 15072              	.LASF365:
 15073 0310 7849646C 		.ascii	"xIdleTaskHandle\000"
 15073      65546173 
 15073      6B48616E 
 15073      646C6500 
 15074              	.LASF53:
 15075 0320 5F73697A 		.ascii	"_size\000"
 15075      6500
 15076              	.LASF191:
 15077 0326 784E6577 		.ascii	"xNewLib_reent\000"
 15077      4C69625F 
 15077      7265656E 
 15077      7400
 15078              	.LASF143:
 15079 0334 784C4953 		.ascii	"xLIST\000"
 15079      5400
 15080              	.LASF104:
 15081 033a 5F6C6F63 		.ascii	"_localtime_buf\000"
 15081      616C7469 
 15081      6D655F62 
 15081      756600
 15082              	.LASF255:
 15083 0349 78546173 		.ascii	"xTaskGetTickCount\000"
 15083      6B476574 
 15083      5469636B 
 15083      436F756E 
 15083      7400
 15084              	.LASF253:
 15085 035b 76546173 		.ascii	"vTaskStartScheduler\000"
 15085      6B537461 
 15085      72745363 
 15085      68656475 
 15085      6C657200 
 15086              	.LASF157:
 15087 036f 65536574 		.ascii	"eSetBits\000"
 15087      42697473 
 15087      00
 15088              	.LASF222:
 15089 0378 70727641 		.ascii	"prvAddNewTaskToReadyList\000"
 15089      64644E65 
 15089      77546173 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 373


 15089      6B546F52 
 15089      65616479 
 15090              	.LASF392:
 15091 0391 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 15091      43313120 
 15091      352E342E 
 15091      31203230 
 15091      31363036 
 15092 03c4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 15092      20726576 
 15092      6973696F 
 15092      6E203233 
 15092      37373135 
 15093 03f7 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 15093      66756E63 
 15093      74696F6E 
 15093      2D736563 
 15093      74696F6E 
 15094              	.LASF38:
 15095 041f 5F5F746D 		.ascii	"__tm_mon\000"
 15095      5F6D6F6E 
 15095      00
 15096              	.LASF290:
 15097 0428 70785469 		.ascii	"pxTicksToWait\000"
 15097      636B7354 
 15097      6F576169 
 15097      7400
 15098              	.LASF298:
 15099 0436 70785461 		.ascii	"pxTaskStatus\000"
 15099      736B5374 
 15099      61747573 
 15099      00
 15100              	.LASF215:
 15101 0443 70634E61 		.ascii	"pcName\000"
 15101      6D6500
 15102              	.LASF375:
 15103 044a 764C6973 		.ascii	"vListInitialise\000"
 15103      74496E69 
 15103      7469616C 
 15103      69736500 
 15104              	.LASF78:
 15105 045a 5F637572 		.ascii	"_current_category\000"
 15105      72656E74 
 15105      5F636174 
 15105      65676F72 
 15105      7900
 15106              	.LASF377:
 15107 046c 764C6973 		.ascii	"vListInsertEnd\000"
 15107      74496E73 
 15107      65727445 
 15107      6E6400
 15108              	.LASF385:
 15109 047b 7076506F 		.ascii	"pvPortMalloc\000"
 15109      72744D61 
 15109      6C6C6F63 
 15109      00
 15110              	.LASF101:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 374


 15111 0488 5F756E75 		.ascii	"_unused_rand\000"
 15111      7365645F 
 15111      72616E64 
 15111      00
 15112              	.LASF356:
 15113 0495 78537573 		.ascii	"xSuspendedTaskList\000"
 15113      70656E64 
 15113      65645461 
 15113      736B4C69 
 15113      737400
 15114              	.LASF332:
 15115 04a8 78436C65 		.ascii	"xClearCountOnExit\000"
 15115      6172436F 
 15115      756E744F 
 15115      6E457869 
 15115      7400
 15116              	.LASF3:
 15117 04ba 7369676E 		.ascii	"signed char\000"
 15117      65642063 
 15117      68617200 
 15118              	.LASF152:
 15119 04c6 65537573 		.ascii	"eSuspended\000"
 15119      70656E64 
 15119      656400
 15120              	.LASF123:
 15121 04d1 75696E74 		.ascii	"uint8_t\000"
 15121      385F7400 
 15122              	.LASF294:
 15123 04d9 75785461 		.ascii	"uxTaskGetTaskNumber\000"
 15123      736B4765 
 15123      74546173 
 15123      6B4E756D 
 15123      62657200 
 15124              	.LASF304:
 15125 04ed 70784E65 		.ascii	"pxNextTCB\000"
 15125      78745443 
 15125      4200
 15126              	.LASF343:
 15127 04f7 75634F72 		.ascii	"ucOriginalNotifyState\000"
 15127      6967696E 
 15127      616C4E6F 
 15127      74696679 
 15127      53746174 
 15128              	.LASF320:
 15129 050d 75785072 		.ascii	"uxPriorityToUse\000"
 15129      696F7269 
 15129      7479546F 
 15129      55736500 
 15130              	.LASF202:
 15131 051d 756C4E65 		.ascii	"ulNewMaskValue\000"
 15131      774D6173 
 15131      6B56616C 
 15131      756500
 15132              	.LASF6:
 15133 052c 756E7369 		.ascii	"unsigned char\000"
 15133      676E6564 
 15133      20636861 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 375


 15133      7200
 15134              	.LASF363:
 15135 053a 784E756D 		.ascii	"xNumOfOverflows\000"
 15135      4F664F76 
 15135      6572666C 
 15135      6F777300 
 15136              	.LASF205:
 15137 054a 78526574 		.ascii	"xReturn\000"
 15137      75726E00 
 15138              	.LASF142:
 15139 0552 4D696E69 		.ascii	"MiniListItem_t\000"
 15139      4C697374 
 15139      4974656D 
 15139      5F7400
 15140              	.LASF198:
 15141 0561 76506F72 		.ascii	"vPortSetBASEPRI\000"
 15141      74536574 
 15141      42415345 
 15141      50524900 
 15142              	.LASF71:
 15143 0571 5F726565 		.ascii	"_reent\000"
 15143      6E7400
 15144              	.LASF212:
 15145 0578 70727652 		.ascii	"prvResetNextTaskUnblockTime\000"
 15145      65736574 
 15145      4E657874 
 15145      5461736B 
 15145      556E626C 
 15146              	.LASF213:
 15147 0594 70727649 		.ascii	"prvInitialiseNewTask\000"
 15147      6E697469 
 15147      616C6973 
 15147      654E6577 
 15147      5461736B 
 15148              	.LASF148:
 15149 05a9 5461736B 		.ascii	"TaskHandle_t\000"
 15149      48616E64 
 15149      6C655F74 
 15149      00
 15150              	.LASF164:
 15151 05b6 7854696D 		.ascii	"xTimeOnEntering\000"
 15151      654F6E45 
 15151      6E746572 
 15151      696E6700 
 15152              	.LASF361:
 15153 05c6 75785065 		.ascii	"uxPendedTicks\000"
 15153      6E646564 
 15153      5469636B 
 15153      7300
 15154              	.LASF281:
 15155 05d4 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 15155      6B506C61 
 15155      63654F6E 
 15155      556E6F72 
 15155      64657265 
 15156              	.LASF342:
 15157 05f3 70756C50 		.ascii	"pulPreviousNotificationValue\000"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 376


 15157      72657669 
 15157      6F75734E 
 15157      6F746966 
 15157      69636174 
 15158              	.LASF145:
 15159 0610 7078496E 		.ascii	"pxIndex\000"
 15159      64657800 
 15160              	.LASF183:
 15161 0618 7078546F 		.ascii	"pxTopOfStack\000"
 15161      704F6653 
 15161      7461636B 
 15161      00
 15162              	.LASF360:
 15163 0625 78536368 		.ascii	"xSchedulerRunning\000"
 15163      6564756C 
 15163      65725275 
 15163      6E6E696E 
 15163      6700
 15164              	.LASF207:
 15165 0637 70727654 		.ascii	"prvTaskIsTaskSuspended\000"
 15165      61736B49 
 15165      73546173 
 15165      6B537573 
 15165      70656E64 
 15166              	.LASF26:
 15167 064e 63686172 		.ascii	"char\000"
 15167      00
 15168              	.LASF372:
 15169 0653 6D656D73 		.ascii	"memset\000"
 15169      657400
 15170              	.LASF389:
 15171 065a 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 15171      6C696361 
 15171      74696F6E 
 15171      53746163 
 15171      6B4F7665 
 15172              	.LASF50:
 15173 0678 5F666E73 		.ascii	"_fns\000"
 15173      00
 15174              	.LASF165:
 15175 067d 54696D65 		.ascii	"TimeOut_t\000"
 15175      4F75745F 
 15175      7400
 15176              	.LASF141:
 15177 0687 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 15177      495F4C49 
 15177      53545F49 
 15177      54454D00 
 15178              	.LASF62:
 15179 0697 5F636C6F 		.ascii	"_close\000"
 15179      736500
 15180              	.LASF8:
 15181 069e 5F5F7569 		.ascii	"__uint16_t\000"
 15181      6E743136 
 15181      5F7400
 15182              	.LASF160:
 15183 06a9 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 377


 15183      56616C75 
 15183      65576974 
 15183      686F7574 
 15183      4F766572 
 15184              	.LASF374:
 15185 06c3 7078506F 		.ascii	"pxPortInitialiseStack\000"
 15185      7274496E 
 15185      69746961 
 15185      6C697365 
 15185      53746163 
 15186              	.LASF73:
 15187 06d9 5F737464 		.ascii	"_stdin\000"
 15187      696E00
 15188              	.LASF243:
 15189 06e0 76546173 		.ascii	"vTaskDelete\000"
 15189      6B44656C 
 15189      65746500 
 15190              	.LASF211:
 15191 06ec 756C436F 		.ascii	"ulCount\000"
 15191      756E7400 
 15192              	.LASF178:
 15193 06f4 756C5275 		.ascii	"ulRunTimeCounter\000"
 15193      6E54696D 
 15193      65436F75 
 15193      6E746572 
 15193      00
 15194              	.LASF328:
 15195 0705 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 15195      736B5265 
 15195      73657445 
 15195      76656E74 
 15195      4974656D 
 15196              	.LASF251:
 15197 071f 78546173 		.ascii	"xTaskResumeFromISR\000"
 15197      6B526573 
 15197      756D6546 
 15197      726F6D49 
 15197      535200
 15198              	.LASF366:
 15199 0732 75785363 		.ascii	"uxSchedulerSuspended\000"
 15199      68656475 
 15199      6C657253 
 15199      75737065 
 15199      6E646564 
 15200              	.LASF273:
 15201 0747 70756C53 		.ascii	"pulStack\000"
 15201      7461636B 
 15201      00
 15202              	.LASF364:
 15203 0750 784E6578 		.ascii	"xNextTaskUnblockTime\000"
 15203      74546173 
 15203      6B556E62 
 15203      6C6F636B 
 15203      54696D65 
 15204              	.LASF353:
 15205 0765 7850656E 		.ascii	"xPendingReadyList\000"
 15205      64696E67 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 378


 15205      52656164 
 15205      794C6973 
 15205      7400
 15206              	.LASF201:
 15207 0777 7563506F 		.ascii	"ucPortCountLeadingZeros\000"
 15207      7274436F 
 15207      756E744C 
 15207      65616469 
 15207      6E675A65 
 15208              	.LASF192:
 15209 078f 756C4E6F 		.ascii	"ulNotifiedValue\000"
 15209      74696669 
 15209      65645661 
 15209      6C756500 
 15210              	.LASF300:
 15211 079f 65537461 		.ascii	"eState\000"
 15211      746500
 15212              	.LASF274:
 15213 07a6 756C4368 		.ascii	"ulCheckValue\000"
 15213      65636B56 
 15213      616C7565 
 15213      00
 15214              	.LASF272:
 15215 07b3 76546173 		.ascii	"vTaskSwitchContext\000"
 15215      6B537769 
 15215      74636843 
 15215      6F6E7465 
 15215      787400
 15216              	.LASF58:
 15217 07c6 5F636F6F 		.ascii	"_cookie\000"
 15217      6B696500 
 15218              	.LASF312:
 15219 07ce 70756345 		.ascii	"pucEndOfStack\000"
 15219      6E644F66 
 15219      53746163 
 15219      6B00
 15220              	.LASF200:
 15221 07dc 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 15221      72745261 
 15221      69736542 
 15221      41534550 
 15221      524900
 15222              	.LASF31:
 15223 07ef 5F776473 		.ascii	"_wds\000"
 15223      00
 15224              	.LASF218:
 15225 07f4 70784372 		.ascii	"pxCreatedTask\000"
 15225      65617465 
 15225      64546173 
 15225      6B00
 15226              	.LASF330:
 15227 0802 70765461 		.ascii	"pvTaskIncrementMutexHeldCount\000"
 15227      736B496E 
 15227      6372656D 
 15227      656E744D 
 15227      75746578 
 15228              	.LASF250:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 379


 15229 0820 78546173 		.ascii	"xTaskToResume\000"
 15229      6B546F52 
 15229      6573756D 
 15229      6500
 15230              	.LASF90:
 15231 082e 5F736967 		.ascii	"_sig_func\000"
 15231      5F66756E 
 15231      6300
 15232              	.LASF238:
 15233 0838 70785374 		.ascii	"pxStateList\000"
 15233      6174654C 
 15233      69737400 
 15234              	.LASF66:
 15235 0844 5F6F6666 		.ascii	"_offset\000"
 15235      73657400 
 15236              	.LASF87:
 15237 084c 5F637674 		.ascii	"_cvtbuf\000"
 15237      62756600 
 15238              	.LASF256:
 15239 0854 78546963 		.ascii	"xTicks\000"
 15239      6B7300
 15240              	.LASF167:
 15241 085b 70764261 		.ascii	"pvBaseAddress\000"
 15241      73654164 
 15241      64726573 
 15241      7300
 15242              	.LASF357:
 15243 0869 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 15243      7272656E 
 15243      744E756D 
 15243      6265724F 
 15243      66546173 
 15244              	.LASF244:
 15245 0880 76546173 		.ascii	"vTaskPrioritySet\000"
 15245      6B507269 
 15245      6F726974 
 15245      79536574 
 15245      00
 15246              	.LASF163:
 15247 0891 784F7665 		.ascii	"xOverflowCount\000"
 15247      72666C6F 
 15247      77436F75 
 15247      6E7400
 15248              	.LASF287:
 15249 08a0 70785469 		.ascii	"pxTimeOut\000"
 15249      6D654F75 
 15249      7400
 15250              	.LASF150:
 15251 08aa 65526561 		.ascii	"eReady\000"
 15251      647900
 15252              	.LASF84:
 15253 08b1 5F703573 		.ascii	"_p5s\000"
 15253      00
 15254              	.LASF13:
 15255 08b6 6C6F6E67 		.ascii	"long unsigned int\000"
 15255      20756E73 
 15255      69676E65 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 380


 15255      6420696E 
 15255      7400
 15256              	.LASF331:
 15257 08c8 756C5461 		.ascii	"ulTaskNotifyTake\000"
 15257      736B4E6F 
 15257      74696679 
 15257      54616B65 
 15257      00
 15258              	.LASF293:
 15259 08d9 76546173 		.ascii	"vTaskMissedYield\000"
 15259      6B4D6973 
 15259      73656459 
 15259      69656C64 
 15259      00
 15260              	.LASF387:
 15261 08ea 78506F72 		.ascii	"xPortStartScheduler\000"
 15261      74537461 
 15261      72745363 
 15261      68656475 
 15261      6C657200 
 15262              	.LASF383:
 15263 08fe 73747263 		.ascii	"strcpy\000"
 15263      707900
 15264              	.LASF54:
 15265 0905 5F5F7346 		.ascii	"__sFILE\000"
 15265      494C4500 
 15266              	.LASF80:
 15267 090d 5F5F7364 		.ascii	"__sdidinit\000"
 15267      6964696E 
 15267      697400
 15268              	.LASF70:
 15269 0918 5F666C61 		.ascii	"_flags2\000"
 15269      67733200 
 15270              	.LASF286:
 15271 0920 76546173 		.ascii	"vTaskSetTimeOutState\000"
 15271      6B536574 
 15271      54696D65 
 15271      4F757453 
 15271      74617465 
 15272              	.LASF171:
 15273 0935 78544153 		.ascii	"xTASK_STATUS\000"
 15273      4B5F5354 
 15273      41545553 
 15273      00
 15274              	.LASF258:
 15275 0942 70635461 		.ascii	"pcTaskGetName\000"
 15275      736B4765 
 15275      744E616D 
 15275      6500
 15276              	.LASF15:
 15277 0950 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 15277      4B5F5245 
 15277      43555253 
 15277      4956455F 
 15277      5400
 15278              	.LASF247:
 15279 0962 75785072 		.ascii	"uxPriorityUsedOnEntry\000"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 381


 15279      696F7269 
 15279      74795573 
 15279      65644F6E 
 15279      456E7472 
 15280              	.LASF166:
 15281 0978 784D454D 		.ascii	"xMEMORY_REGION\000"
 15281      4F52595F 
 15281      52454749 
 15281      4F4E00
 15282              	.LASF72:
 15283 0987 5F657272 		.ascii	"_errno\000"
 15283      6E6F00
 15284              	.LASF289:
 15285 098e 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 15285      6B436865 
 15285      636B466F 
 15285      7254696D 
 15285      654F7574 
 15286              	.LASF112:
 15287 09a3 5F736967 		.ascii	"_signal_buf\000"
 15287      6E616C5F 
 15287      62756600 
 15288              	.LASF271:
 15289 09af 78546963 		.ascii	"xTicksToDelay\000"
 15289      6B73546F 
 15289      44656C61 
 15289      7900
 15290              	.LASF391:
 15291 09bd 73707269 		.ascii	"sprintf\000"
 15291      6E746600 
 15292              	.LASF315:
 15293 09c5 70784D75 		.ascii	"pxMutexHolder\000"
 15293      74657848 
 15293      6F6C6465 
 15293      7200
 15294              	.LASF324:
 15295 09d3 63537461 		.ascii	"cStatus\000"
 15295      74757300 
 15296              	.LASF216:
 15297 09db 756C5374 		.ascii	"ulStackDepth\000"
 15297      61636B44 
 15297      65707468 
 15297      00
 15298              	.LASF32:
 15299 09e8 5F426967 		.ascii	"_Bigint\000"
 15299      696E7400 
 15300              	.LASF393:
 15301 09f0 2E2E5C46 		.ascii	"..\\FreeRTOS\\Source\\tasks.c\000"
 15301      72656552 
 15301      544F535C 
 15301      536F7572 
 15301      63655C74 
 15302              	.LASF29:
 15303 0a0b 5F6D6178 		.ascii	"_maxwds\000"
 15303      77647300 
 15304              	.LASF305:
 15305 0a13 70784669 		.ascii	"pxFirstTCB\000"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 382


 15305      72737454 
 15305      434200
 15306              	.LASF81:
 15307 0a1e 5F5F636C 		.ascii	"__cleanup\000"
 15307      65616E75 
 15307      7000
 15308              	.LASF279:
 15309 0a28 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 15309      6B506C61 
 15309      63654F6E 
 15309      4576656E 
 15309      744C6973 
 15310              	.LASF89:
 15311 0a3e 5F617465 		.ascii	"_atexit0\000"
 15311      78697430 
 15311      00
 15312              	.LASF295:
 15313 0a47 76546173 		.ascii	"vTaskSetTaskNumber\000"
 15313      6B536574 
 15313      5461736B 
 15313      4E756D62 
 15313      657200
 15314              	.LASF225:
 15315 0a5a 70727649 		.ascii	"prvIdleTask\000"
 15315      646C6554 
 15315      61736B00 
 15316              	.LASF322:
 15317 0a66 76546173 		.ascii	"vTaskList\000"
 15317      6B4C6973 
 15317      7400
 15318              	.LASF231:
 15319 0a70 70727657 		.ascii	"prvWriteNameToBuffer\000"
 15319      72697465 
 15319      4E616D65 
 15319      546F4275 
 15319      66666572 
 15320              	.LASF139:
 15321 0a85 7076436F 		.ascii	"pvContainer\000"
 15321      6E746169 
 15321      6E657200 
 15322              	.LASF12:
 15323 0a91 5F5F7569 		.ascii	"__uint32_t\000"
 15323      6E743332 
 15323      5F7400
 15324              	.LASF77:
 15325 0a9c 5F656D65 		.ascii	"_emergency\000"
 15325      7267656E 
 15325      637900
 15326              	.LASF1:
 15327 0aa7 6C6F6E67 		.ascii	"long long int\000"
 15327      206C6F6E 
 15327      6720696E 
 15327      7400
 15328              	.LASF248:
 15329 0ab5 78596965 		.ascii	"xYieldRequired\000"
 15329      6C645265 
 15329      71756972 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 383


 15329      656400
 15330              	.LASF95:
 15331 0ac4 5F6E696F 		.ascii	"_niobs\000"
 15331      627300
 15332              	.LASF91:
 15333 0acb 5F5F7367 		.ascii	"__sglue\000"
 15333      6C756500 
 15334              	.LASF326:
 15335 0ad3 756C546F 		.ascii	"ulTotalTime\000"
 15335      74616C54 
 15335      696D6500 
 15336              	.LASF121:
 15337 0adf 5F6E6D61 		.ascii	"_nmalloc\000"
 15337      6C6C6F63 
 15337      00
 15338              	.LASF128:
 15339 0ae8 646F7562 		.ascii	"double\000"
 15339      6C6500
 15340              	.LASF105:
 15341 0aef 5F67616D 		.ascii	"_gamma_signgam\000"
 15341      6D615F73 
 15341      69676E67 
 15341      616D00
 15342              	.LASF285:
 15343 0afe 70784576 		.ascii	"pxEventListItem\000"
 15343      656E744C 
 15343      69737449 
 15343      74656D00 
 15344              	.LASF134:
 15345 0b0e 784C4953 		.ascii	"xLIST_ITEM\000"
 15345      545F4954 
 15345      454D00
 15346              	.LASF79:
 15347 0b19 5F637572 		.ascii	"_current_locale\000"
 15347      72656E74 
 15347      5F6C6F63 
 15347      616C6500 
 15348              	.LASF314:
 15349 0b29 78546173 		.ascii	"xTaskPriorityInherit\000"
 15349      6B507269 
 15349      6F726974 
 15349      79496E68 
 15349      65726974 
 15350              	.LASF85:
 15351 0b3e 5F667265 		.ascii	"_freelist\000"
 15351      656C6973 
 15351      7400
 15352              	.LASF96:
 15353 0b48 5F696F62 		.ascii	"_iobs\000"
 15353      7300
 15354              	.LASF94:
 15355 0b4e 5F676C75 		.ascii	"_glue\000"
 15355      6500
 15356              	.LASF370:
 15357 0b54 49544D5F 		.ascii	"ITM_RxBuffer\000"
 15357      52784275 
 15357      66666572 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 384


 15357      00
 15358              	.LASF30:
 15359 0b61 5F736967 		.ascii	"_sign\000"
 15359      6E00
 15360              	.LASF299:
 15361 0b67 78476574 		.ascii	"xGetFreeStackSpace\000"
 15361      46726565 
 15361      53746163 
 15361      6B537061 
 15361      636500
 15362              	.LASF333:
 15363 0b7a 756C5265 		.ascii	"ulReturn\000"
 15363      7475726E 
 15363      00
 15364              	.LASF308:
 15365 0b83 75784172 		.ascii	"uxArraySize\000"
 15365      72617953 
 15365      697A6500 
 15366              	.LASF348:
 15367 0b8f 70785265 		.ascii	"pxReadyTasksLists\000"
 15367      61647954 
 15367      61736B73 
 15367      4C697374 
 15367      7300
 15368              	.LASF127:
 15369 0ba1 666C6F61 		.ascii	"float\000"
 15369      7400
 15370              	.LASF149:
 15371 0ba7 6552756E 		.ascii	"eRunning\000"
 15371      6E696E67 
 15371      00
 15372              	.LASF129:
 15373 0bb0 5461736B 		.ascii	"TaskFunction_t\000"
 15373      46756E63 
 15373      74696F6E 
 15373      5F7400
 15374              	.LASF368:
 15375 0bbf 756C546F 		.ascii	"ulTotalRunTime\000"
 15375      74616C52 
 15375      756E5469 
 15375      6D6500
 15376              	.LASF229:
 15377 0bce 7854696D 		.ascii	"xTimeToWake\000"
 15377      65546F57 
 15377      616B6500 
 15378              	.LASF0:
 15379 0bda 756E7369 		.ascii	"unsigned int\000"
 15379      676E6564 
 15379      20696E74 
 15379      00
 15380              	.LASF119:
 15381 0be7 5F685F65 		.ascii	"_h_errno\000"
 15381      72726E6F 
 15381      00
 15382              	.LASF196:
 15383 0bf0 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 15383      6967696E 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 385


 15383      616C4241 
 15383      53455052 
 15383      4900
 15384              	.LASF223:
 15385 0c02 70727644 		.ascii	"prvDeleteTCB\000"
 15385      656C6574 
 15385      65544342 
 15385      00
 15386              	.LASF378:
 15387 0c0f 76506F72 		.ascii	"vPortExitCritical\000"
 15387      74457869 
 15387      74437269 
 15387      74696361 
 15387      6C00
 15388              	.LASF144:
 15389 0c21 75784E75 		.ascii	"uxNumberOfItems\000"
 15389      6D626572 
 15389      4F664974 
 15389      656D7300 
 15390              	.LASF292:
 15391 0c31 76546173 		.ascii	"vTaskSuspendAll\000"
 15391      6B537573 
 15391      70656E64 
 15391      416C6C00 
 15392              	.LASF208:
 15393 0c41 70727654 		.ascii	"prvTaskCheckFreeStackSpace\000"
 15393      61736B43 
 15393      6865636B 
 15393      46726565 
 15393      53746163 
 15394              	.LASF117:
 15395 0c5c 5F776372 		.ascii	"_wcrtomb_state\000"
 15395      746F6D62 
 15395      5F737461 
 15395      746500
 15396              	.LASF283:
 15397 0c6b 7078556E 		.ascii	"pxUnblockedTCB\000"
 15397      626C6F63 
 15397      6B656454 
 15397      434200
 15398              	.LASF37:
 15399 0c7a 5F5F746D 		.ascii	"__tm_mday\000"
 15399      5F6D6461 
 15399      7900
 15400              	.LASF311:
 15401 0c84 75785461 		.ascii	"uxTaskGetStackHighWaterMark\000"
 15401      736B4765 
 15401      74537461 
 15401      636B4869 
 15401      67685761 
 15402              	.LASF88:
 15403 0ca0 5F6E6577 		.ascii	"_new\000"
 15403      00
 15404              	.LASF63:
 15405 0ca5 5F756275 		.ascii	"_ubuf\000"
 15405      6600
 15406              	.LASF75:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 386


 15407 0cab 5F737464 		.ascii	"_stderr\000"
 15407      65727200 
 15408              	.LASF242:
 15409 0cb3 75785361 		.ascii	"uxSavedInterruptState\000"
 15409      76656449 
 15409      6E746572 
 15409      72757074 
 15409      53746174 
 15410              	.LASF110:
 15411 0cc9 5F776374 		.ascii	"_wctomb_state\000"
 15411      6F6D625F 
 15411      73746174 
 15411      6500
 15412              	.LASF69:
 15413 0cd7 5F6D6273 		.ascii	"_mbstate\000"
 15413      74617465 
 15413      00
 15414              	.LASF386:
 15415 0ce0 53746174 		.ascii	"StatisticsCounter_Start\000"
 15415      69737469 
 15415      6373436F 
 15415      756E7465 
 15415      725F5374 
 15416              	.LASF147:
 15417 0cf8 4C697374 		.ascii	"List_t\000"
 15417      5F7400
 15418              	.LASF106:
 15419 0cff 5F72616E 		.ascii	"_rand_next\000"
 15419      645F6E65 
 15419      787400
 15420              	.LASF55:
 15421 0d0a 5F666C61 		.ascii	"_flags\000"
 15421      677300
 15422              	.LASF227:
 15423 0d11 78546963 		.ascii	"xTicksToWait\000"
 15423      6B73546F 
 15423      57616974 
 15423      00
 15424              	.LASF263:
 15425 0d1e 78546173 		.ascii	"xTaskResumeAll\000"
 15425      6B526573 
 15425      756D6541 
 15425      6C6C00
 15426              	.LASF48:
 15427 0d2d 5F617465 		.ascii	"_atexit\000"
 15427      78697400 
 15428              	.LASF235:
 15429 0d35 78546173 		.ascii	"xTaskCreate\000"
 15429      6B437265 
 15429      61746500 
 15430              	.LASF282:
 15431 0d41 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 15431      6B52656D 
 15431      6F766546 
 15431      726F6D45 
 15431      76656E74 
 15432              	.LASF296:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 387


 15433 0d5a 75784861 		.ascii	"uxHandle\000"
 15433      6E646C65 
 15433      00
 15434              	.LASF336:
 15435 0d63 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 15435      7473546F 
 15435      436C6561 
 15435      724F6E45 
 15435      78697400 
 15436              	.LASF146:
 15437 0d77 784C6973 		.ascii	"xListEnd\000"
 15437      74456E64 
 15437      00
 15438              	.LASF22:
 15439 0d80 5F5F636F 		.ascii	"__count\000"
 15439      756E7400 
 15440              	.LASF230:
 15441 0d88 78436F6E 		.ascii	"xConstTickCount\000"
 15441      73745469 
 15441      636B436F 
 15441      756E7400 
 15442              	.LASF151:
 15443 0d98 65426C6F 		.ascii	"eBlocked\000"
 15443      636B6564 
 15443      00
 15444              	.LASF355:
 15445 0da1 75784465 		.ascii	"uxDeletedTasksWaitingCleanUp\000"
 15445      6C657465 
 15445      64546173 
 15445      6B735761 
 15445      6974696E 
 15446              	.LASF373:
 15447 0dbe 764C6973 		.ascii	"vListInitialiseItem\000"
 15447      74496E69 
 15447      7469616C 
 15447      69736549 
 15447      74656D00 
 15448              	.LASF239:
 15449 0dd2 75785461 		.ascii	"uxTaskPriorityGet\000"
 15449      736B5072 
 15449      696F7269 
 15449      74794765 
 15449      7400
 15450              	.LASF180:
 15451 0de4 75735374 		.ascii	"usStackHighWaterMark\000"
 15451      61636B48 
 15451      69676857 
 15451      61746572 
 15451      4D61726B 
 15452              	.LASF197:
 15453 0df9 756C4E65 		.ascii	"ulNewBASEPRI\000"
 15453      77424153 
 15453      45505249 
 15453      00
 15454              	.LASF40:
 15455 0e06 5F5F746D 		.ascii	"__tm_wday\000"
 15455      5F776461 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 388


 15455      7900
 15456              	.LASF2:
 15457 0e10 6C6F6E67 		.ascii	"long double\000"
 15457      20646F75 
 15457      626C6500 
 15458              	.LASF234:
 15459 0e1c 78546173 		.ascii	"xTaskToDelete\000"
 15459      6B546F44 
 15459      656C6574 
 15459      6500
 15460              	.LASF174:
 15461 0e2a 78546173 		.ascii	"xTaskNumber\000"
 15461      6B4E756D 
 15461      62657200 
 15462              	.LASF41:
 15463 0e36 5F5F746D 		.ascii	"__tm_yday\000"
 15463      5F796461 
 15463      7900
 15464              	.LASF277:
 15465 0e40 76546173 		.ascii	"vTaskSuspend\000"
 15465      6B537573 
 15465      70656E64 
 15465      00
 15466              	.LASF159:
 15467 0e4d 65536574 		.ascii	"eSetValueWithOverwrite\000"
 15467      56616C75 
 15467      65576974 
 15467      684F7665 
 15467      72777269 
 15468              	.LASF138:
 15469 0e64 70764F77 		.ascii	"pvOwner\000"
 15469      6E657200 
 15470              	.LASF173:
 15471 0e6c 70635461 		.ascii	"pcTaskName\000"
 15471      736B4E61 
 15471      6D6500
 15472              	.LASF98:
 15473 0e77 5F736565 		.ascii	"_seed\000"
 15473      6400
 15474              	.LASF61:
 15475 0e7d 5F736565 		.ascii	"_seek\000"
 15475      6B00
 15476              	.LASF17:
 15477 0e83 5F66706F 		.ascii	"_fpos_t\000"
 15477      735F7400 
 15478              	.LASF20:
 15479 0e8b 5F5F7763 		.ascii	"__wchb\000"
 15479      686200
 15480              	.LASF182:
 15481 0e92 74736B54 		.ascii	"tskTaskControlBlock\000"
 15481      61736B43 
 15481      6F6E7472 
 15481      6F6C426C 
 15481      6F636B00 
 15482              	.LASF268:
 15483 0ea6 7854696D 		.ascii	"xTimeIncrement\000"
 15483      65496E63 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 389


 15483      72656D65 
 15483      6E7400
 15484              	.LASF341:
 15485 0eb5 65416374 		.ascii	"eAction\000"
 15485      696F6E00 
 15486              	.LASF270:
 15487 0ebd 76546173 		.ascii	"vTaskDelay\000"
 15487      6B44656C 
 15487      617900
 15488              	.LASF184:
 15489 0ec8 78537461 		.ascii	"xStateListItem\000"
 15489      74654C69 
 15489      73744974 
 15489      656D00
 15490              	.LASF109:
 15491 0ed7 5F6D6274 		.ascii	"_mbtowc_state\000"
 15491      6F77635F 
 15491      73746174 
 15491      6500
 15492              	.LASF275:
 15493 0ee5 7578546F 		.ascii	"uxTopPriority\000"
 15493      70507269 
 15493      6F726974 
 15493      7900
 15494              	.LASF302:
 15495 0ef3 70785461 		.ascii	"pxTaskStatusArray\000"
 15495      736B5374 
 15495      61747573 
 15495      41727261 
 15495      7900
 15496              	.LASF303:
 15497 0f05 70784C69 		.ascii	"pxList\000"
 15497      737400
 15498              	.LASF318:
 15499 0f0c 76546173 		.ascii	"vTaskPriorityDisinheritAfterTimeout\000"
 15499      6B507269 
 15499      6F726974 
 15499      79446973 
 15499      696E6865 
 15500              	.LASF190:
 15501 0f30 75784D75 		.ascii	"uxMutexesHeld\000"
 15501      74657865 
 15501      7348656C 
 15501      6400
 15502              	.LASF14:
 15503 0f3e 6C6F6E67 		.ascii	"long long unsigned int\000"
 15503      206C6F6E 
 15503      6720756E 
 15503      7369676E 
 15503      65642069 
 15504              	.LASF376:
 15505 0f55 76506F72 		.ascii	"vPortEnterCritical\000"
 15505      74456E74 
 15505      65724372 
 15505      69746963 
 15505      616C00
 15506              	.LASF179:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 390


 15507 0f68 70785374 		.ascii	"pxStackBase\000"
 15507      61636B42 
 15507      61736500 
 15508              	.LASF340:
 15509 0f74 756C5661 		.ascii	"ulValue\000"
 15509      6C756500 
 15510              	.LASF124:
 15511 0f7c 75696E74 		.ascii	"uint16_t\000"
 15511      31365F74 
 15511      00
 15512              	.LASF45:
 15513 0f85 5F64736F 		.ascii	"_dso_handle\000"
 15513      5F68616E 
 15513      646C6500 
 15514              	.LASF97:
 15515 0f91 5F72616E 		.ascii	"_rand48\000"
 15515      64343800 
 15516              	.LASF260:
 15517 0f99 78546173 		.ascii	"xTaskIncrementTick\000"
 15517      6B496E63 
 15517      72656D65 
 15517      6E745469 
 15517      636B00
 15518              	.LASF74:
 15519 0fac 5F737464 		.ascii	"_stdout\000"
 15519      6F757400 
 15520              	.LASF226:
 15521 0fb4 70727641 		.ascii	"prvAddCurrentTaskToDelayedList\000"
 15521      64644375 
 15521      7272656E 
 15521      74546173 
 15521      6B546F44 
 15522              	.LASF132:
 15523 0fd3 55426173 		.ascii	"UBaseType_t\000"
 15523      65547970 
 15523      655F7400 
 15524              	.LASF137:
 15525 0fdf 70785072 		.ascii	"pxPrevious\000"
 15525      6576696F 
 15525      757300
 15526              	.LASF65:
 15527 0fea 5F626C6B 		.ascii	"_blksize\000"
 15527      73697A65 
 15527      00
 15528              	.LASF269:
 15529 0ff3 7853686F 		.ascii	"xShouldDelay\000"
 15529      756C6444 
 15529      656C6179 
 15529      00
 15530              	.LASF266:
 15531 1000 76546173 		.ascii	"vTaskDelayUntil\000"
 15531      6B44656C 
 15531      6179556E 
 15531      74696C00 
 15532              	.LASF52:
 15533 1010 5F626173 		.ascii	"_base\000"
 15533      6500
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 391


 15534              	.LASF254:
 15535 1016 76546173 		.ascii	"vTaskEndScheduler\000"
 15535      6B456E64 
 15535      53636865 
 15535      64756C65 
 15535      7200
 15536              	.LASF133:
 15537 1028 5469636B 		.ascii	"TickType_t\000"
 15537      54797065 
 15537      5F7400
 15538              	.LASF102:
 15539 1033 5F737472 		.ascii	"_strtok_last\000"
 15539      746F6B5F 
 15539      6C617374 
 15539      00
 15540              	.LASF224:
 15541 1040 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 15541      6865636B 
 15541      5461736B 
 15541      73576169 
 15541      74696E67 
 15542              	.LASF115:
 15543 1060 5F6D6272 		.ascii	"_mbrtowc_state\000"
 15543      746F7763 
 15543      5F737461 
 15543      746500
 15544              	.LASF236:
 15545 106f 65546173 		.ascii	"eTaskGetState\000"
 15545      6B476574 
 15545      53746174 
 15545      6500
 15546              	.LASF193:
 15547 107d 75634E6F 		.ascii	"ucNotifyState\000"
 15547      74696679 
 15547      53746174 
 15547      6500
 15548              	.LASF25:
 15549 108b 5F666C6F 		.ascii	"_flock_t\000"
 15549      636B5F74 
 15549      00
 15550              	.LASF267:
 15551 1094 70785072 		.ascii	"pxPreviousWakeTime\000"
 15551      6576696F 
 15551      75735761 
 15551      6B655469 
 15551      6D6500
 15552              	.LASF261:
 15553 10a7 78537769 		.ascii	"xSwitchRequired\000"
 15553      74636852 
 15553      65717569 
 15553      72656400 
 15554              	.LASF93:
 15555 10b7 5F5F4649 		.ascii	"__FILE\000"
 15555      4C4500
 15556              	.LASF347:
 15557 10be 78546173 		.ascii	"xTaskNotifyStateClear\000"
 15557      6B4E6F74 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 392


 15557      69667953 
 15557      74617465 
 15557      436C6561 
 15558              	.LASF24:
 15559 10d4 5F6D6273 		.ascii	"_mbstate_t\000"
 15559      74617465 
 15559      5F7400
 15560              	.LASF107:
 15561 10df 5F723438 		.ascii	"_r48\000"
 15561      00
 15562              	.LASF18:
 15563 10e4 77696E74 		.ascii	"wint_t\000"
 15563      5F7400
 15564              	.LASF359:
 15565 10eb 7578546F 		.ascii	"uxTopReadyPriority\000"
 15565      70526561 
 15565      64795072 
 15565      696F7269 
 15565      747900
 15566              	.LASF232:
 15567 10fe 70634275 		.ascii	"pcBuffer\000"
 15567      66666572 
 15567      00
 15568              	.LASF28:
 15569 1107 5F6E6578 		.ascii	"_next\000"
 15569      7400
 15570              	.LASF264:
 15571 110d 78416C72 		.ascii	"xAlreadyYielded\000"
 15571      65616479 
 15571      5969656C 
 15571      64656400 
 15572              	.LASF67:
 15573 111d 5F646174 		.ascii	"_data\000"
 15573      6100
 15574              	.LASF154:
 15575 1123 65496E76 		.ascii	"eInvalid\000"
 15575      616C6964 
 15575      00
 15576              	.LASF301:
 15577 112c 7072764C 		.ascii	"prvListTasksWithinSingleList\000"
 15577      69737454 
 15577      61736B73 
 15577      57697468 
 15577      696E5369 
 15578              	.LASF262:
 15579 1149 70785465 		.ascii	"pxTemp\000"
 15579      6D7000
 15580              	.LASF316:
 15581 1150 70784D75 		.ascii	"pxMutexHolderTCB\000"
 15581      74657848 
 15581      6F6C6465 
 15581      72544342 
 15581      00
 15582              	.LASF175:
 15583 1161 65437572 		.ascii	"eCurrentState\000"
 15583      72656E74 
 15583      53746174 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 393


 15583      6500
 15584              	.LASF344:
 15585 116f 78546173 		.ascii	"xTaskGenericNotifyFromISR\000"
 15585      6B47656E 
 15585      65726963 
 15585      4E6F7469 
 15585      66794672 
 15586              	.LASF321:
 15587 1189 75784F6E 		.ascii	"uxOnlyOneMutexHeld\000"
 15587      6C794F6E 
 15587      654D7574 
 15587      65784865 
 15587      6C6400
 15588              	.LASF210:
 15589 119c 70756353 		.ascii	"pucStackByte\000"
 15589      7461636B 
 15589      42797465 
 15589      00
 15590              	.LASF319:
 15591 11a9 75784869 		.ascii	"uxHighestPriorityWaitingTask\000"
 15591      67686573 
 15591      74507269 
 15591      6F726974 
 15591      79576169 
 15592              	.LASF313:
 15593 11c6 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 15593      6B476574 
 15593      43757272 
 15593      656E7454 
 15593      61736B48 
 15594              	.LASF381:
 15595 11e0 75784C69 		.ascii	"uxListRemove\000"
 15595      73745265 
 15595      6D6F7665 
 15595      00
 15596              	.LASF168:
 15597 11ed 756C4C65 		.ascii	"ulLengthInBytes\000"
 15597      6E677468 
 15597      496E4279 
 15597      74657300 
 15598              	.LASF351:
 15599 11fd 70784465 		.ascii	"pxDelayedTaskList\000"
 15599      6C617965 
 15599      64546173 
 15599      6B4C6973 
 15599      7400
 15600              	.LASF345:
 15601 120f 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 15601      67686572 
 15601      5072696F 
 15601      72697479 
 15601      5461736B 
 15602              	.LASF352:
 15603 1229 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 15603      6572666C 
 15603      6F774465 
 15603      6C617965 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 394


 15603      64546173 
 15604              	.LASF108:
 15605 1243 5F6D626C 		.ascii	"_mblen_state\000"
 15605      656E5F73 
 15605      74617465 
 15605      00
 15606              	.LASF7:
 15607 1250 73686F72 		.ascii	"short int\000"
 15607      7420696E 
 15607      7400
 15608              	.LASF291:
 15609 125a 78456C61 		.ascii	"xElapsedTime\000"
 15609      70736564 
 15609      54696D65 
 15609      00
 15610              	.LASF245:
 15611 1267 75784E65 		.ascii	"uxNewPriority\000"
 15611      77507269 
 15611      6F726974 
 15611      7900
 15612              	.LASF337:
 15613 1275 70756C4E 		.ascii	"pulNotificationValue\000"
 15613      6F746966 
 15613      69636174 
 15613      696F6E56 
 15613      616C7565 
 15614              	.LASF158:
 15615 128a 65496E63 		.ascii	"eIncrement\000"
 15615      72656D65 
 15615      6E7400
 15616              	.LASF46:
 15617 1295 5F666E74 		.ascii	"_fntypes\000"
 15617      79706573 
 15617      00
 15618              	.LASF259:
 15619 129e 78546173 		.ascii	"xTaskToQuery\000"
 15619      6B546F51 
 15619      75657279 
 15619      00
 15620              	.LASF199:
 15621 12ab 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 15621      74526169 
 15621      73654241 
 15621      53455052 
 15621      4900
 15622              	.LASF310:
 15623 12bd 75785175 		.ascii	"uxQueue\000"
 15623      65756500 
 15624              	.LASF39:
 15625 12c5 5F5F746D 		.ascii	"__tm_year\000"
 15625      5F796561 
 15625      7200
 15626              	.LASF276:
 15627 12cf 7078436F 		.ascii	"pxConstList\000"
 15627      6E73744C 
 15627      69737400 
 15628              	.LASF354:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 395


 15629 12db 78546173 		.ascii	"xTasksWaitingTermination\000"
 15629      6B735761 
 15629      6974696E 
 15629      67546572 
 15629      6D696E61 
 15630              	.LASF367:
 15631 12f4 756C5461 		.ascii	"ulTaskSwitchedInTime\000"
 15631      736B5377 
 15631      69746368 
 15631      6564496E 
 15631      54696D65 
 15632              	.LASF140:
 15633 1309 4C697374 		.ascii	"ListItem_t\000"
 15633      4974656D 
 15633      5F7400
 15634              	.LASF284:
 15635 1314 76546173 		.ascii	"vTaskRemoveFromUnorderedEventList\000"
 15635      6B52656D 
 15635      6F766546 
 15635      726F6D55 
 15635      6E6F7264 
 15636              	.LASF57:
 15637 1336 5F6C6266 		.ascii	"_lbfsize\000"
 15637      73697A65 
 15637      00
 15638              	.LASF379:
 15639 133f 5F726563 		.ascii	"_reclaim_reent\000"
 15639      6C61696D 
 15639      5F726565 
 15639      6E7400
 15640              	.LASF76:
 15641 134e 5F696E63 		.ascii	"_inc\000"
 15641      00
 15642              	.LASF49:
 15643 1353 5F696E64 		.ascii	"_ind\000"
 15643      00
 15644              	.LASF384:
 15645 1358 7374726C 		.ascii	"strlen\000"
 15645      656E00
 15646              	.LASF188:
 15647 135f 75785443 		.ascii	"uxTCBNumber\000"
 15647      424E756D 
 15647      62657200 
 15648              	.LASF195:
 15649 136b 5443425F 		.ascii	"TCB_t\000"
 15649      7400
 15650              	.LASF51:
 15651 1371 5F5F7362 		.ascii	"__sbuf\000"
 15651      756600
 15652              	.LASF47:
 15653 1378 5F69735F 		.ascii	"_is_cxa\000"
 15653      63786100 
 15654              	.LASF120:
 15655 1380 5F6E6578 		.ascii	"_nextf\000"
 15655      746600
 15656              	.LASF217:
 15657 1387 70765061 		.ascii	"pvParameters\000"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 396


 15657      72616D65 
 15657      74657273 
 15657      00
 15658              	.LASF306:
 15659 1394 75785461 		.ascii	"uxTask\000"
 15659      736B00
 15660              	.LASF27:
 15661 139b 5F5F554C 		.ascii	"__ULong\000"
 15661      6F6E6700 
 15662              	.LASF307:
 15663 13a3 75785461 		.ascii	"uxTaskGetSystemState\000"
 15663      736B4765 
 15663      74537973 
 15663      74656D53 
 15663      74617465 
 15664              	.LASF323:
 15665 13b8 70635772 		.ascii	"pcWriteBuffer\000"
 15665      69746542 
 15665      75666665 
 15665      7200
 15666              	.LASF241:
 15667 13c6 75785461 		.ascii	"uxTaskPriorityGetFromISR\000"
 15667      736B5072 
 15667      696F7269 
 15667      74794765 
 15667      7446726F 
 15668              	.LASF126:
 15669 13df 75696E74 		.ascii	"uint32_t\000"
 15669      33325F74 
 15669      00
 15670              	.LASF339:
 15671 13e8 78546173 		.ascii	"xTaskToNotify\000"
 15671      6B546F4E 
 15671      6F746966 
 15671      7900
 15672              	.LASF82:
 15673 13f6 5F726573 		.ascii	"_result\000"
 15673      756C7400 
 15674              	.LASF220:
 15675 13fe 78526567 		.ascii	"xRegions\000"
 15675      696F6E73 
 15675      00
 15676              	.LASF390:
 15677 1407 53746174 		.ascii	"StatisticsCounter_ReadCounter\000"
 15677      69737469 
 15677      6373436F 
 15677      756E7465 
 15677      725F5265 
 15678              	.LASF161:
 15679 1425 654E6F74 		.ascii	"eNotifyAction\000"
 15679      69667941 
 15679      6374696F 
 15679      6E00
 15680              	.LASF335:
 15681 1433 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 15681      7473546F 
 15681      436C6561 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 397


 15681      724F6E45 
 15681      6E747279 
 15682              	.LASF130:
 15683 1448 53746163 		.ascii	"StackType_t\000"
 15683      6B547970 
 15683      655F7400 
 15684              	.LASF16:
 15685 1454 5F6F6666 		.ascii	"_off_t\000"
 15685      5F7400
 15686              	.LASF203:
 15687 145b 756C4269 		.ascii	"ulBitmap\000"
 15687      746D6170 
 15687      00
 15688              	.LASF100:
 15689 1464 5F616464 		.ascii	"_add\000"
 15689      00
 15690              	.LASF394:
 15691 1469 433A5C55 		.ascii	"C:\\Users\\samue\\Desktop\\RobotRage2\\Zumo\\ZumoBo"
 15691      73657273 
 15691      5C73616D 
 15691      75655C44 
 15691      65736B74 
 15692 1496 742E6379 		.ascii	"t.cydsn\000"
 15692      64736E00 
 15693              	.LASF9:
 15694 149e 73686F72 		.ascii	"short unsigned int\000"
 15694      7420756E 
 15694      7369676E 
 15694      65642069 
 15694      6E7400
 15695              	.LASF36:
 15696 14b1 5F5F746D 		.ascii	"__tm_hour\000"
 15696      5F686F75 
 15696      7200
 15697              	.LASF388:
 15698 14bb 76506F72 		.ascii	"vPortEndScheduler\000"
 15698      74456E64 
 15698      53636865 
 15698      64756C65 
 15698      7200
 15699              	.LASF221:
 15700 14cd 70727649 		.ascii	"prvInitialiseTaskLists\000"
 15700      6E697469 
 15700      616C6973 
 15700      65546173 
 15700      6B4C6973 
 15701              	.LASF349:
 15702 14e4 7844656C 		.ascii	"xDelayedTaskList1\000"
 15702      61796564 
 15702      5461736B 
 15702      4C697374 
 15702      3100
 15703              	.LASF350:
 15704 14f6 7844656C 		.ascii	"xDelayedTaskList2\000"
 15704      61796564 
 15704      5461736B 
 15704      4C697374 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 398


 15704      3200
 15705              	.LASF116:
 15706 1508 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 15706      72746F77 
 15706      63735F73 
 15706      74617465 
 15706      00
 15707              	.LASF380:
 15708 1519 76506F72 		.ascii	"vPortFree\000"
 15708      74467265 
 15708      6500
 15709              	.LASF10:
 15710 1523 5F5F696E 		.ascii	"__int32_t\000"
 15710      7433325F 
 15710      7400
 15711              	.LASF156:
 15712 152d 654E6F41 		.ascii	"eNoAction\000"
 15712      6374696F 
 15712      6E00
 15713              	.LASF346:
 15714 1537 76546173 		.ascii	"vTaskNotifyGiveFromISR\000"
 15714      6B4E6F74 
 15714      69667947 
 15714      69766546 
 15714      726F6D49 
 15715              	.LASF169:
 15716 154e 756C5061 		.ascii	"ulParameters\000"
 15716      72616D65 
 15716      74657273 
 15716      00
 15717              	.LASF297:
 15718 155b 76546173 		.ascii	"vTaskGetInfo\000"
 15718      6B476574 
 15718      496E666F 
 15718      00
 15719              	.LASF237:
 15720 1568 65526574 		.ascii	"eReturn\000"
 15720      75726E00 
 15721              	.LASF44:
 15722 1570 5F666E61 		.ascii	"_fnargs\000"
 15722      72677300 
 15723              	.LASF42:
 15724 1578 5F5F746D 		.ascii	"__tm_isdst\000"
 15724      5F697364 
 15724      737400
 15725              	.LASF334:
 15726 1583 78546173 		.ascii	"xTaskNotifyWait\000"
 15726      6B4E6F74 
 15726      69667957 
 15726      61697400 
 15727              	.LASF35:
 15728 1593 5F5F746D 		.ascii	"__tm_min\000"
 15728      5F6D696E 
 15728      00
 15729              	.LASF113:
 15730 159c 5F676574 		.ascii	"_getdate_err\000"
 15730      64617465 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUY6PXT.s 			page 399


 15730      5F657272 
 15730      00
 15731              	.LASF135:
 15732 15a9 78497465 		.ascii	"xItemValue\000"
 15732      6D56616C 
 15732      756500
 15733              	.LASF206:
 15734 15b4 70785443 		.ascii	"pxTCB\000"
 15734      4200
 15735              	.LASF186:
 15736 15ba 75785072 		.ascii	"uxPriority\000"
 15736      696F7269 
 15736      747900
 15737              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
