ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"event_groups.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvTestWaitCondition,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	prvTestWaitCondition, %function
  24              	prvTestWaitCondition:
  25              	.LFB77:
  26              		.file 1 "..\\FreeRTOS\\Source\\event_groups.c"
   1:..\FreeRTOS\Source/event_groups.c **** /*
   2:..\FreeRTOS\Source/event_groups.c ****  * FreeRTOS Kernel V10.0.1
   3:..\FreeRTOS\Source/event_groups.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS\Source/event_groups.c ****  *
   5:..\FreeRTOS\Source/event_groups.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS\Source/event_groups.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS\Source/event_groups.c ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS\Source/event_groups.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS\Source/event_groups.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS\Source/event_groups.c ****  * subject to the following conditions:
  11:..\FreeRTOS\Source/event_groups.c ****  *
  12:..\FreeRTOS\Source/event_groups.c ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS\Source/event_groups.c ****  * copies or substantial portions of the Software.
  14:..\FreeRTOS\Source/event_groups.c ****  *
  15:..\FreeRTOS\Source/event_groups.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\FreeRTOS\Source/event_groups.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\FreeRTOS\Source/event_groups.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\FreeRTOS\Source/event_groups.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\FreeRTOS\Source/event_groups.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\FreeRTOS\Source/event_groups.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\FreeRTOS\Source/event_groups.c ****  *
  22:..\FreeRTOS\Source/event_groups.c ****  * http://www.FreeRTOS.org
  23:..\FreeRTOS\Source/event_groups.c ****  * http://aws.amazon.com/freertos
  24:..\FreeRTOS\Source/event_groups.c ****  *
  25:..\FreeRTOS\Source/event_groups.c ****  * 1 tab == 4 spaces!
  26:..\FreeRTOS\Source/event_groups.c ****  */
  27:..\FreeRTOS\Source/event_groups.c **** 
  28:..\FreeRTOS\Source/event_groups.c **** /* Standard includes. */
  29:..\FreeRTOS\Source/event_groups.c **** #include <stdlib.h>
  30:..\FreeRTOS\Source/event_groups.c **** 
  31:..\FreeRTOS\Source/event_groups.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 2


  32:..\FreeRTOS\Source/event_groups.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:..\FreeRTOS\Source/event_groups.c **** task.h is included from an application file. */
  34:..\FreeRTOS\Source/event_groups.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:..\FreeRTOS\Source/event_groups.c **** 
  36:..\FreeRTOS\Source/event_groups.c **** /* FreeRTOS includes. */
  37:..\FreeRTOS\Source/event_groups.c **** #include "FreeRTOS.h"
  38:..\FreeRTOS\Source/event_groups.c **** #include "task.h"
  39:..\FreeRTOS\Source/event_groups.c **** #include "timers.h"
  40:..\FreeRTOS\Source/event_groups.c **** #include "event_groups.h"
  41:..\FreeRTOS\Source/event_groups.c **** 
  42:..\FreeRTOS\Source/event_groups.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  43:..\FreeRTOS\Source/event_groups.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  44:..\FreeRTOS\Source/event_groups.c **** header files above, but not in this file, in order to generate the correct
  45:..\FreeRTOS\Source/event_groups.c **** privileged Vs unprivileged linkage and placement. */
  46:..\FreeRTOS\Source/event_groups.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  47:..\FreeRTOS\Source/event_groups.c **** 
  48:..\FreeRTOS\Source/event_groups.c **** /* The following bit fields convey control information in a task's event list
  49:..\FreeRTOS\Source/event_groups.c **** item value.  It is important they don't clash with the
  50:..\FreeRTOS\Source/event_groups.c **** taskEVENT_LIST_ITEM_VALUE_IN_USE definition. */
  51:..\FreeRTOS\Source/event_groups.c **** #if configUSE_16_BIT_TICKS == 1
  52:..\FreeRTOS\Source/event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x0100U
  53:..\FreeRTOS\Source/event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x0200U
  54:..\FreeRTOS\Source/event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x0400U
  55:..\FreeRTOS\Source/event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff00U
  56:..\FreeRTOS\Source/event_groups.c **** #else
  57:..\FreeRTOS\Source/event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x01000000UL
  58:..\FreeRTOS\Source/event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x02000000UL
  59:..\FreeRTOS\Source/event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x04000000UL
  60:..\FreeRTOS\Source/event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff000000UL
  61:..\FreeRTOS\Source/event_groups.c **** #endif
  62:..\FreeRTOS\Source/event_groups.c **** 
  63:..\FreeRTOS\Source/event_groups.c **** typedef struct xEventGroupDefinition
  64:..\FreeRTOS\Source/event_groups.c **** {
  65:..\FreeRTOS\Source/event_groups.c **** 	EventBits_t uxEventBits;
  66:..\FreeRTOS\Source/event_groups.c **** 	List_t xTasksWaitingForBits;		/*< List of tasks waiting for a bit to be set. */
  67:..\FreeRTOS\Source/event_groups.c **** 
  68:..\FreeRTOS\Source/event_groups.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  69:..\FreeRTOS\Source/event_groups.c **** 		UBaseType_t uxEventGroupNumber;
  70:..\FreeRTOS\Source/event_groups.c **** 	#endif
  71:..\FreeRTOS\Source/event_groups.c **** 
  72:..\FreeRTOS\Source/event_groups.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  73:..\FreeRTOS\Source/event_groups.c **** 		uint8_t ucStaticallyAllocated; /*< Set to pdTRUE if the event group is statically allocated to en
  74:..\FreeRTOS\Source/event_groups.c **** 	#endif
  75:..\FreeRTOS\Source/event_groups.c **** } EventGroup_t;
  76:..\FreeRTOS\Source/event_groups.c **** 
  77:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
  78:..\FreeRTOS\Source/event_groups.c **** 
  79:..\FreeRTOS\Source/event_groups.c **** /*
  80:..\FreeRTOS\Source/event_groups.c ****  * Test the bits set in uxCurrentEventBits to see if the wait condition is met.
  81:..\FreeRTOS\Source/event_groups.c ****  * The wait condition is defined by xWaitForAllBits.  If xWaitForAllBits is
  82:..\FreeRTOS\Source/event_groups.c ****  * pdTRUE then the wait condition is met if all the bits set in uxBitsToWaitFor
  83:..\FreeRTOS\Source/event_groups.c ****  * are also set in uxCurrentEventBits.  If xWaitForAllBits is pdFALSE then the
  84:..\FreeRTOS\Source/event_groups.c ****  * wait condition is met if any of the bits set in uxBitsToWait for are also set
  85:..\FreeRTOS\Source/event_groups.c ****  * in uxCurrentEventBits.
  86:..\FreeRTOS\Source/event_groups.c ****  */
  87:..\FreeRTOS\Source/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
  88:..\FreeRTOS\Source/event_groups.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 3


  89:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
  90:..\FreeRTOS\Source/event_groups.c **** 
  91:..\FreeRTOS\Source/event_groups.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
  92:..\FreeRTOS\Source/event_groups.c **** 
  93:..\FreeRTOS\Source/event_groups.c **** 	EventGroupHandle_t xEventGroupCreateStatic( StaticEventGroup_t *pxEventGroupBuffer )
  94:..\FreeRTOS\Source/event_groups.c **** 	{
  95:..\FreeRTOS\Source/event_groups.c **** 	EventGroup_t *pxEventBits;
  96:..\FreeRTOS\Source/event_groups.c **** 
  97:..\FreeRTOS\Source/event_groups.c **** 		/* A StaticEventGroup_t object must be provided. */
  98:..\FreeRTOS\Source/event_groups.c **** 		configASSERT( pxEventGroupBuffer );
  99:..\FreeRTOS\Source/event_groups.c **** 
 100:..\FreeRTOS\Source/event_groups.c **** 		#if( configASSERT_DEFINED == 1 )
 101:..\FreeRTOS\Source/event_groups.c **** 		{
 102:..\FreeRTOS\Source/event_groups.c **** 			/* Sanity check that the size of the structure used to declare a
 103:..\FreeRTOS\Source/event_groups.c **** 			variable of type StaticEventGroup_t equals the size of the real
 104:..\FreeRTOS\Source/event_groups.c **** 			event group structure. */
 105:..\FreeRTOS\Source/event_groups.c **** 			volatile size_t xSize = sizeof( StaticEventGroup_t );
 106:..\FreeRTOS\Source/event_groups.c **** 			configASSERT( xSize == sizeof( EventGroup_t ) );
 107:..\FreeRTOS\Source/event_groups.c **** 		}
 108:..\FreeRTOS\Source/event_groups.c **** 		#endif /* configASSERT_DEFINED */
 109:..\FreeRTOS\Source/event_groups.c **** 
 110:..\FreeRTOS\Source/event_groups.c **** 		/* The user has provided a statically allocated event group - use it. */
 111:..\FreeRTOS\Source/event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pxEventGroupBuffer; /*lint !e740 EventGroup_t and StaticEventGro
 112:..\FreeRTOS\Source/event_groups.c **** 
 113:..\FreeRTOS\Source/event_groups.c **** 		if( pxEventBits != NULL )
 114:..\FreeRTOS\Source/event_groups.c **** 		{
 115:..\FreeRTOS\Source/event_groups.c **** 			pxEventBits->uxEventBits = 0;
 116:..\FreeRTOS\Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 117:..\FreeRTOS\Source/event_groups.c **** 
 118:..\FreeRTOS\Source/event_groups.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 119:..\FreeRTOS\Source/event_groups.c **** 			{
 120:..\FreeRTOS\Source/event_groups.c **** 				/* Both static and dynamic allocation can be used, so note that
 121:..\FreeRTOS\Source/event_groups.c **** 				this event group was created statically in case the event group
 122:..\FreeRTOS\Source/event_groups.c **** 				is later deleted. */
 123:..\FreeRTOS\Source/event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdTRUE;
 124:..\FreeRTOS\Source/event_groups.c **** 			}
 125:..\FreeRTOS\Source/event_groups.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 126:..\FreeRTOS\Source/event_groups.c **** 
 127:..\FreeRTOS\Source/event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 128:..\FreeRTOS\Source/event_groups.c **** 		}
 129:..\FreeRTOS\Source/event_groups.c **** 		else
 130:..\FreeRTOS\Source/event_groups.c **** 		{
 131:..\FreeRTOS\Source/event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED();
 132:..\FreeRTOS\Source/event_groups.c **** 		}
 133:..\FreeRTOS\Source/event_groups.c **** 
 134:..\FreeRTOS\Source/event_groups.c **** 		return ( EventGroupHandle_t ) pxEventBits;
 135:..\FreeRTOS\Source/event_groups.c **** 	}
 136:..\FreeRTOS\Source/event_groups.c **** 
 137:..\FreeRTOS\Source/event_groups.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 138:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 139:..\FreeRTOS\Source/event_groups.c **** 
 140:..\FreeRTOS\Source/event_groups.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 141:..\FreeRTOS\Source/event_groups.c **** 
 142:..\FreeRTOS\Source/event_groups.c **** 	EventGroupHandle_t xEventGroupCreate( void )
 143:..\FreeRTOS\Source/event_groups.c **** 	{
 144:..\FreeRTOS\Source/event_groups.c **** 	EventGroup_t *pxEventBits;
 145:..\FreeRTOS\Source/event_groups.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 4


 146:..\FreeRTOS\Source/event_groups.c **** 		/* Allocate the event group. */
 147:..\FreeRTOS\Source/event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pvPortMalloc( sizeof( EventGroup_t ) );
 148:..\FreeRTOS\Source/event_groups.c **** 
 149:..\FreeRTOS\Source/event_groups.c **** 		if( pxEventBits != NULL )
 150:..\FreeRTOS\Source/event_groups.c **** 		{
 151:..\FreeRTOS\Source/event_groups.c **** 			pxEventBits->uxEventBits = 0;
 152:..\FreeRTOS\Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 153:..\FreeRTOS\Source/event_groups.c **** 
 154:..\FreeRTOS\Source/event_groups.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 155:..\FreeRTOS\Source/event_groups.c **** 			{
 156:..\FreeRTOS\Source/event_groups.c **** 				/* Both static and dynamic allocation can be used, so note this
 157:..\FreeRTOS\Source/event_groups.c **** 				event group was allocated statically in case the event group is
 158:..\FreeRTOS\Source/event_groups.c **** 				later deleted. */
 159:..\FreeRTOS\Source/event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdFALSE;
 160:..\FreeRTOS\Source/event_groups.c **** 			}
 161:..\FreeRTOS\Source/event_groups.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 162:..\FreeRTOS\Source/event_groups.c **** 
 163:..\FreeRTOS\Source/event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 164:..\FreeRTOS\Source/event_groups.c **** 		}
 165:..\FreeRTOS\Source/event_groups.c **** 		else
 166:..\FreeRTOS\Source/event_groups.c **** 		{
 167:..\FreeRTOS\Source/event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED();
 168:..\FreeRTOS\Source/event_groups.c **** 		}
 169:..\FreeRTOS\Source/event_groups.c **** 
 170:..\FreeRTOS\Source/event_groups.c **** 		return ( EventGroupHandle_t ) pxEventBits;
 171:..\FreeRTOS\Source/event_groups.c **** 	}
 172:..\FreeRTOS\Source/event_groups.c **** 
 173:..\FreeRTOS\Source/event_groups.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 174:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 175:..\FreeRTOS\Source/event_groups.c **** 
 176:..\FreeRTOS\Source/event_groups.c **** EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const E
 177:..\FreeRTOS\Source/event_groups.c **** {
 178:..\FreeRTOS\Source/event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 179:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 180:..\FreeRTOS\Source/event_groups.c **** BaseType_t xAlreadyYielded;
 181:..\FreeRTOS\Source/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 182:..\FreeRTOS\Source/event_groups.c **** 
 183:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 184:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 185:..\FreeRTOS\Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 186:..\FreeRTOS\Source/event_groups.c **** 	{
 187:..\FreeRTOS\Source/event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 188:..\FreeRTOS\Source/event_groups.c **** 	}
 189:..\FreeRTOS\Source/event_groups.c **** 	#endif
 190:..\FreeRTOS\Source/event_groups.c **** 
 191:..\FreeRTOS\Source/event_groups.c **** 	vTaskSuspendAll();
 192:..\FreeRTOS\Source/event_groups.c **** 	{
 193:..\FreeRTOS\Source/event_groups.c **** 		uxOriginalBitValue = pxEventBits->uxEventBits;
 194:..\FreeRTOS\Source/event_groups.c **** 
 195:..\FreeRTOS\Source/event_groups.c **** 		( void ) xEventGroupSetBits( xEventGroup, uxBitsToSet );
 196:..\FreeRTOS\Source/event_groups.c **** 
 197:..\FreeRTOS\Source/event_groups.c **** 		if( ( ( uxOriginalBitValue | uxBitsToSet ) & uxBitsToWaitFor ) == uxBitsToWaitFor )
 198:..\FreeRTOS\Source/event_groups.c **** 		{
 199:..\FreeRTOS\Source/event_groups.c **** 			/* All the rendezvous bits are now set - no need to block. */
 200:..\FreeRTOS\Source/event_groups.c **** 			uxReturn = ( uxOriginalBitValue | uxBitsToSet );
 201:..\FreeRTOS\Source/event_groups.c **** 
 202:..\FreeRTOS\Source/event_groups.c **** 			/* Rendezvous always clear the bits.  They will have been cleared
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 5


 203:..\FreeRTOS\Source/event_groups.c **** 			already unless this is the only task in the rendezvous. */
 204:..\FreeRTOS\Source/event_groups.c **** 			pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 205:..\FreeRTOS\Source/event_groups.c **** 
 206:..\FreeRTOS\Source/event_groups.c **** 			xTicksToWait = 0;
 207:..\FreeRTOS\Source/event_groups.c **** 		}
 208:..\FreeRTOS\Source/event_groups.c **** 		else
 209:..\FreeRTOS\Source/event_groups.c **** 		{
 210:..\FreeRTOS\Source/event_groups.c **** 			if( xTicksToWait != ( TickType_t ) 0 )
 211:..\FreeRTOS\Source/event_groups.c **** 			{
 212:..\FreeRTOS\Source/event_groups.c **** 				traceEVENT_GROUP_SYNC_BLOCK( xEventGroup, uxBitsToSet, uxBitsToWaitFor );
 213:..\FreeRTOS\Source/event_groups.c **** 
 214:..\FreeRTOS\Source/event_groups.c **** 				/* Store the bits that the calling task is waiting for in the
 215:..\FreeRTOS\Source/event_groups.c **** 				task's event list item so the kernel knows when a match is
 216:..\FreeRTOS\Source/event_groups.c **** 				found.  Then enter the blocked state. */
 217:..\FreeRTOS\Source/event_groups.c **** 				vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | eve
 218:..\FreeRTOS\Source/event_groups.c **** 
 219:..\FreeRTOS\Source/event_groups.c **** 				/* This assignment is obsolete as uxReturn will get set after
 220:..\FreeRTOS\Source/event_groups.c **** 				the task unblocks, but some compilers mistakenly generate a
 221:..\FreeRTOS\Source/event_groups.c **** 				warning about uxReturn being returned without being set if the
 222:..\FreeRTOS\Source/event_groups.c **** 				assignment is omitted. */
 223:..\FreeRTOS\Source/event_groups.c **** 				uxReturn = 0;
 224:..\FreeRTOS\Source/event_groups.c **** 			}
 225:..\FreeRTOS\Source/event_groups.c **** 			else
 226:..\FreeRTOS\Source/event_groups.c **** 			{
 227:..\FreeRTOS\Source/event_groups.c **** 				/* The rendezvous bits were not set, but no block time was
 228:..\FreeRTOS\Source/event_groups.c **** 				specified - just return the current event bit value. */
 229:..\FreeRTOS\Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 230:..\FreeRTOS\Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 231:..\FreeRTOS\Source/event_groups.c **** 			}
 232:..\FreeRTOS\Source/event_groups.c **** 		}
 233:..\FreeRTOS\Source/event_groups.c **** 	}
 234:..\FreeRTOS\Source/event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 235:..\FreeRTOS\Source/event_groups.c **** 
 236:..\FreeRTOS\Source/event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 237:..\FreeRTOS\Source/event_groups.c **** 	{
 238:..\FreeRTOS\Source/event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 239:..\FreeRTOS\Source/event_groups.c **** 		{
 240:..\FreeRTOS\Source/event_groups.c **** 			portYIELD_WITHIN_API();
 241:..\FreeRTOS\Source/event_groups.c **** 		}
 242:..\FreeRTOS\Source/event_groups.c **** 		else
 243:..\FreeRTOS\Source/event_groups.c **** 		{
 244:..\FreeRTOS\Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 245:..\FreeRTOS\Source/event_groups.c **** 		}
 246:..\FreeRTOS\Source/event_groups.c **** 
 247:..\FreeRTOS\Source/event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 248:..\FreeRTOS\Source/event_groups.c **** 		point either the required bits were set or the block time expired.  If
 249:..\FreeRTOS\Source/event_groups.c **** 		the required bits were set they will have been stored in the task's
 250:..\FreeRTOS\Source/event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 251:..\FreeRTOS\Source/event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 252:..\FreeRTOS\Source/event_groups.c **** 
 253:..\FreeRTOS\Source/event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 254:..\FreeRTOS\Source/event_groups.c **** 		{
 255:..\FreeRTOS\Source/event_groups.c **** 			/* The task timed out, just return the current event bit value. */
 256:..\FreeRTOS\Source/event_groups.c **** 			taskENTER_CRITICAL();
 257:..\FreeRTOS\Source/event_groups.c **** 			{
 258:..\FreeRTOS\Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 259:..\FreeRTOS\Source/event_groups.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 6


 260:..\FreeRTOS\Source/event_groups.c **** 				/* Although the task got here because it timed out before the
 261:..\FreeRTOS\Source/event_groups.c **** 				bits it was waiting for were set, it is possible that since it
 262:..\FreeRTOS\Source/event_groups.c **** 				unblocked another task has set the bits.  If this is the case
 263:..\FreeRTOS\Source/event_groups.c **** 				then it needs to clear the bits before exiting. */
 264:..\FreeRTOS\Source/event_groups.c **** 				if( ( uxReturn & uxBitsToWaitFor ) == uxBitsToWaitFor )
 265:..\FreeRTOS\Source/event_groups.c **** 				{
 266:..\FreeRTOS\Source/event_groups.c **** 					pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 267:..\FreeRTOS\Source/event_groups.c **** 				}
 268:..\FreeRTOS\Source/event_groups.c **** 				else
 269:..\FreeRTOS\Source/event_groups.c **** 				{
 270:..\FreeRTOS\Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 271:..\FreeRTOS\Source/event_groups.c **** 				}
 272:..\FreeRTOS\Source/event_groups.c **** 			}
 273:..\FreeRTOS\Source/event_groups.c **** 			taskEXIT_CRITICAL();
 274:..\FreeRTOS\Source/event_groups.c **** 
 275:..\FreeRTOS\Source/event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 276:..\FreeRTOS\Source/event_groups.c **** 		}
 277:..\FreeRTOS\Source/event_groups.c **** 		else
 278:..\FreeRTOS\Source/event_groups.c **** 		{
 279:..\FreeRTOS\Source/event_groups.c **** 			/* The task unblocked because the bits were set. */
 280:..\FreeRTOS\Source/event_groups.c **** 		}
 281:..\FreeRTOS\Source/event_groups.c **** 
 282:..\FreeRTOS\Source/event_groups.c **** 		/* Control bits might be set as the task had blocked should not be
 283:..\FreeRTOS\Source/event_groups.c **** 		returned. */
 284:..\FreeRTOS\Source/event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 285:..\FreeRTOS\Source/event_groups.c **** 	}
 286:..\FreeRTOS\Source/event_groups.c **** 
 287:..\FreeRTOS\Source/event_groups.c **** 	traceEVENT_GROUP_SYNC_END( xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTimeoutOccurred );
 288:..\FreeRTOS\Source/event_groups.c **** 
 289:..\FreeRTOS\Source/event_groups.c **** 	/* Prevent compiler warnings when trace macros are not used. */
 290:..\FreeRTOS\Source/event_groups.c **** 	( void ) xTimeoutOccurred;
 291:..\FreeRTOS\Source/event_groups.c **** 
 292:..\FreeRTOS\Source/event_groups.c **** 	return uxReturn;
 293:..\FreeRTOS\Source/event_groups.c **** }
 294:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 295:..\FreeRTOS\Source/event_groups.c **** 
 296:..\FreeRTOS\Source/event_groups.c **** EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor,
 297:..\FreeRTOS\Source/event_groups.c **** {
 298:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 299:..\FreeRTOS\Source/event_groups.c **** EventBits_t uxReturn, uxControlBits = 0;
 300:..\FreeRTOS\Source/event_groups.c **** BaseType_t xWaitConditionMet, xAlreadyYielded;
 301:..\FreeRTOS\Source/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 302:..\FreeRTOS\Source/event_groups.c **** 
 303:..\FreeRTOS\Source/event_groups.c **** 	/* Check the user is not attempting to wait on the bits used by the kernel
 304:..\FreeRTOS\Source/event_groups.c **** 	itself, and that at least one bit is being requested. */
 305:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( xEventGroup );
 306:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 307:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 308:..\FreeRTOS\Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 309:..\FreeRTOS\Source/event_groups.c **** 	{
 310:..\FreeRTOS\Source/event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 311:..\FreeRTOS\Source/event_groups.c **** 	}
 312:..\FreeRTOS\Source/event_groups.c **** 	#endif
 313:..\FreeRTOS\Source/event_groups.c **** 
 314:..\FreeRTOS\Source/event_groups.c **** 	vTaskSuspendAll();
 315:..\FreeRTOS\Source/event_groups.c **** 	{
 316:..\FreeRTOS\Source/event_groups.c **** 		const EventBits_t uxCurrentEventBits = pxEventBits->uxEventBits;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 7


 317:..\FreeRTOS\Source/event_groups.c **** 
 318:..\FreeRTOS\Source/event_groups.c **** 		/* Check to see if the wait condition is already met or not. */
 319:..\FreeRTOS\Source/event_groups.c **** 		xWaitConditionMet = prvTestWaitCondition( uxCurrentEventBits, uxBitsToWaitFor, xWaitForAllBits );
 320:..\FreeRTOS\Source/event_groups.c **** 
 321:..\FreeRTOS\Source/event_groups.c **** 		if( xWaitConditionMet != pdFALSE )
 322:..\FreeRTOS\Source/event_groups.c **** 		{
 323:..\FreeRTOS\Source/event_groups.c **** 			/* The wait condition has already been met so there is no need to
 324:..\FreeRTOS\Source/event_groups.c **** 			block. */
 325:..\FreeRTOS\Source/event_groups.c **** 			uxReturn = uxCurrentEventBits;
 326:..\FreeRTOS\Source/event_groups.c **** 			xTicksToWait = ( TickType_t ) 0;
 327:..\FreeRTOS\Source/event_groups.c **** 
 328:..\FreeRTOS\Source/event_groups.c **** 			/* Clear the wait bits if requested to do so. */
 329:..\FreeRTOS\Source/event_groups.c **** 			if( xClearOnExit != pdFALSE )
 330:..\FreeRTOS\Source/event_groups.c **** 			{
 331:..\FreeRTOS\Source/event_groups.c **** 				pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 332:..\FreeRTOS\Source/event_groups.c **** 			}
 333:..\FreeRTOS\Source/event_groups.c **** 			else
 334:..\FreeRTOS\Source/event_groups.c **** 			{
 335:..\FreeRTOS\Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 336:..\FreeRTOS\Source/event_groups.c **** 			}
 337:..\FreeRTOS\Source/event_groups.c **** 		}
 338:..\FreeRTOS\Source/event_groups.c **** 		else if( xTicksToWait == ( TickType_t ) 0 )
 339:..\FreeRTOS\Source/event_groups.c **** 		{
 340:..\FreeRTOS\Source/event_groups.c **** 			/* The wait condition has not been met, but no block time was
 341:..\FreeRTOS\Source/event_groups.c **** 			specified, so just return the current value. */
 342:..\FreeRTOS\Source/event_groups.c **** 			uxReturn = uxCurrentEventBits;
 343:..\FreeRTOS\Source/event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 344:..\FreeRTOS\Source/event_groups.c **** 		}
 345:..\FreeRTOS\Source/event_groups.c **** 		else
 346:..\FreeRTOS\Source/event_groups.c **** 		{
 347:..\FreeRTOS\Source/event_groups.c **** 			/* The task is going to block to wait for its required bits to be
 348:..\FreeRTOS\Source/event_groups.c **** 			set.  uxControlBits are used to remember the specified behaviour of
 349:..\FreeRTOS\Source/event_groups.c **** 			this call to xEventGroupWaitBits() - for use when the event bits
 350:..\FreeRTOS\Source/event_groups.c **** 			unblock the task. */
 351:..\FreeRTOS\Source/event_groups.c **** 			if( xClearOnExit != pdFALSE )
 352:..\FreeRTOS\Source/event_groups.c **** 			{
 353:..\FreeRTOS\Source/event_groups.c **** 				uxControlBits |= eventCLEAR_EVENTS_ON_EXIT_BIT;
 354:..\FreeRTOS\Source/event_groups.c **** 			}
 355:..\FreeRTOS\Source/event_groups.c **** 			else
 356:..\FreeRTOS\Source/event_groups.c **** 			{
 357:..\FreeRTOS\Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 358:..\FreeRTOS\Source/event_groups.c **** 			}
 359:..\FreeRTOS\Source/event_groups.c **** 
 360:..\FreeRTOS\Source/event_groups.c **** 			if( xWaitForAllBits != pdFALSE )
 361:..\FreeRTOS\Source/event_groups.c **** 			{
 362:..\FreeRTOS\Source/event_groups.c **** 				uxControlBits |= eventWAIT_FOR_ALL_BITS;
 363:..\FreeRTOS\Source/event_groups.c **** 			}
 364:..\FreeRTOS\Source/event_groups.c **** 			else
 365:..\FreeRTOS\Source/event_groups.c **** 			{
 366:..\FreeRTOS\Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 367:..\FreeRTOS\Source/event_groups.c **** 			}
 368:..\FreeRTOS\Source/event_groups.c **** 
 369:..\FreeRTOS\Source/event_groups.c **** 			/* Store the bits that the calling task is waiting for in the
 370:..\FreeRTOS\Source/event_groups.c **** 			task's event list item so the kernel knows when a match is
 371:..\FreeRTOS\Source/event_groups.c **** 			found.  Then enter the blocked state. */
 372:..\FreeRTOS\Source/event_groups.c **** 			vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | uxCo
 373:..\FreeRTOS\Source/event_groups.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 8


 374:..\FreeRTOS\Source/event_groups.c **** 			/* This is obsolete as it will get set after the task unblocks, but
 375:..\FreeRTOS\Source/event_groups.c **** 			some compilers mistakenly generate a warning about the variable
 376:..\FreeRTOS\Source/event_groups.c **** 			being returned without being set if it is not done. */
 377:..\FreeRTOS\Source/event_groups.c **** 			uxReturn = 0;
 378:..\FreeRTOS\Source/event_groups.c **** 
 379:..\FreeRTOS\Source/event_groups.c **** 			traceEVENT_GROUP_WAIT_BITS_BLOCK( xEventGroup, uxBitsToWaitFor );
 380:..\FreeRTOS\Source/event_groups.c **** 		}
 381:..\FreeRTOS\Source/event_groups.c **** 	}
 382:..\FreeRTOS\Source/event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 383:..\FreeRTOS\Source/event_groups.c **** 
 384:..\FreeRTOS\Source/event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 385:..\FreeRTOS\Source/event_groups.c **** 	{
 386:..\FreeRTOS\Source/event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 387:..\FreeRTOS\Source/event_groups.c **** 		{
 388:..\FreeRTOS\Source/event_groups.c **** 			portYIELD_WITHIN_API();
 389:..\FreeRTOS\Source/event_groups.c **** 		}
 390:..\FreeRTOS\Source/event_groups.c **** 		else
 391:..\FreeRTOS\Source/event_groups.c **** 		{
 392:..\FreeRTOS\Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 393:..\FreeRTOS\Source/event_groups.c **** 		}
 394:..\FreeRTOS\Source/event_groups.c **** 
 395:..\FreeRTOS\Source/event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 396:..\FreeRTOS\Source/event_groups.c **** 		point either the required bits were set or the block time expired.  If
 397:..\FreeRTOS\Source/event_groups.c **** 		the required bits were set they will have been stored in the task's
 398:..\FreeRTOS\Source/event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 399:..\FreeRTOS\Source/event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 400:..\FreeRTOS\Source/event_groups.c **** 
 401:..\FreeRTOS\Source/event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 402:..\FreeRTOS\Source/event_groups.c **** 		{
 403:..\FreeRTOS\Source/event_groups.c **** 			taskENTER_CRITICAL();
 404:..\FreeRTOS\Source/event_groups.c **** 			{
 405:..\FreeRTOS\Source/event_groups.c **** 				/* The task timed out, just return the current event bit value. */
 406:..\FreeRTOS\Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 407:..\FreeRTOS\Source/event_groups.c **** 
 408:..\FreeRTOS\Source/event_groups.c **** 				/* It is possible that the event bits were updated between this
 409:..\FreeRTOS\Source/event_groups.c **** 				task leaving the Blocked state and running again. */
 410:..\FreeRTOS\Source/event_groups.c **** 				if( prvTestWaitCondition( uxReturn, uxBitsToWaitFor, xWaitForAllBits ) != pdFALSE )
 411:..\FreeRTOS\Source/event_groups.c **** 				{
 412:..\FreeRTOS\Source/event_groups.c **** 					if( xClearOnExit != pdFALSE )
 413:..\FreeRTOS\Source/event_groups.c **** 					{
 414:..\FreeRTOS\Source/event_groups.c **** 						pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 415:..\FreeRTOS\Source/event_groups.c **** 					}
 416:..\FreeRTOS\Source/event_groups.c **** 					else
 417:..\FreeRTOS\Source/event_groups.c **** 					{
 418:..\FreeRTOS\Source/event_groups.c **** 						mtCOVERAGE_TEST_MARKER();
 419:..\FreeRTOS\Source/event_groups.c **** 					}
 420:..\FreeRTOS\Source/event_groups.c **** 				}
 421:..\FreeRTOS\Source/event_groups.c **** 				else
 422:..\FreeRTOS\Source/event_groups.c **** 				{
 423:..\FreeRTOS\Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 424:..\FreeRTOS\Source/event_groups.c **** 				}
 425:..\FreeRTOS\Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 426:..\FreeRTOS\Source/event_groups.c **** 			}
 427:..\FreeRTOS\Source/event_groups.c **** 			taskEXIT_CRITICAL();
 428:..\FreeRTOS\Source/event_groups.c **** 		}
 429:..\FreeRTOS\Source/event_groups.c **** 		else
 430:..\FreeRTOS\Source/event_groups.c **** 		{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 9


 431:..\FreeRTOS\Source/event_groups.c **** 			/* The task unblocked because the bits were set. */
 432:..\FreeRTOS\Source/event_groups.c **** 		}
 433:..\FreeRTOS\Source/event_groups.c **** 
 434:..\FreeRTOS\Source/event_groups.c **** 		/* The task blocked so control bits may have been set. */
 435:..\FreeRTOS\Source/event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 436:..\FreeRTOS\Source/event_groups.c **** 	}
 437:..\FreeRTOS\Source/event_groups.c **** 	traceEVENT_GROUP_WAIT_BITS_END( xEventGroup, uxBitsToWaitFor, xTimeoutOccurred );
 438:..\FreeRTOS\Source/event_groups.c **** 
 439:..\FreeRTOS\Source/event_groups.c **** 	/* Prevent compiler warnings when trace macros are not used. */
 440:..\FreeRTOS\Source/event_groups.c **** 	( void ) xTimeoutOccurred;
 441:..\FreeRTOS\Source/event_groups.c **** 
 442:..\FreeRTOS\Source/event_groups.c **** 	return uxReturn;
 443:..\FreeRTOS\Source/event_groups.c **** }
 444:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 445:..\FreeRTOS\Source/event_groups.c **** 
 446:..\FreeRTOS\Source/event_groups.c **** EventBits_t xEventGroupClearBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear )
 447:..\FreeRTOS\Source/event_groups.c **** {
 448:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 449:..\FreeRTOS\Source/event_groups.c **** EventBits_t uxReturn;
 450:..\FreeRTOS\Source/event_groups.c **** 
 451:..\FreeRTOS\Source/event_groups.c **** 	/* Check the user is not attempting to clear the bits used by the kernel
 452:..\FreeRTOS\Source/event_groups.c **** 	itself. */
 453:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( xEventGroup );
 454:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 455:..\FreeRTOS\Source/event_groups.c **** 
 456:..\FreeRTOS\Source/event_groups.c **** 	taskENTER_CRITICAL();
 457:..\FreeRTOS\Source/event_groups.c **** 	{
 458:..\FreeRTOS\Source/event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS( xEventGroup, uxBitsToClear );
 459:..\FreeRTOS\Source/event_groups.c **** 
 460:..\FreeRTOS\Source/event_groups.c **** 		/* The value returned is the event group value prior to the bits being
 461:..\FreeRTOS\Source/event_groups.c **** 		cleared. */
 462:..\FreeRTOS\Source/event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 463:..\FreeRTOS\Source/event_groups.c **** 
 464:..\FreeRTOS\Source/event_groups.c **** 		/* Clear the bits. */
 465:..\FreeRTOS\Source/event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 466:..\FreeRTOS\Source/event_groups.c **** 	}
 467:..\FreeRTOS\Source/event_groups.c **** 	taskEXIT_CRITICAL();
 468:..\FreeRTOS\Source/event_groups.c **** 
 469:..\FreeRTOS\Source/event_groups.c **** 	return uxReturn;
 470:..\FreeRTOS\Source/event_groups.c **** }
 471:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 472:..\FreeRTOS\Source/event_groups.c **** 
 473:..\FreeRTOS\Source/event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 474:..\FreeRTOS\Source/event_groups.c **** 
 475:..\FreeRTOS\Source/event_groups.c **** 	BaseType_t xEventGroupClearBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsTo
 476:..\FreeRTOS\Source/event_groups.c **** 	{
 477:..\FreeRTOS\Source/event_groups.c **** 		BaseType_t xReturn;
 478:..\FreeRTOS\Source/event_groups.c **** 
 479:..\FreeRTOS\Source/event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS_FROM_ISR( xEventGroup, uxBitsToClear );
 480:..\FreeRTOS\Source/event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGroup, ( 
 481:..\FreeRTOS\Source/event_groups.c **** 
 482:..\FreeRTOS\Source/event_groups.c **** 		return xReturn;
 483:..\FreeRTOS\Source/event_groups.c **** 	}
 484:..\FreeRTOS\Source/event_groups.c **** 
 485:..\FreeRTOS\Source/event_groups.c **** #endif
 486:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 487:..\FreeRTOS\Source/event_groups.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 10


 488:..\FreeRTOS\Source/event_groups.c **** EventBits_t xEventGroupGetBitsFromISR( EventGroupHandle_t xEventGroup )
 489:..\FreeRTOS\Source/event_groups.c **** {
 490:..\FreeRTOS\Source/event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 491:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 492:..\FreeRTOS\Source/event_groups.c **** EventBits_t uxReturn;
 493:..\FreeRTOS\Source/event_groups.c **** 
 494:..\FreeRTOS\Source/event_groups.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 495:..\FreeRTOS\Source/event_groups.c **** 	{
 496:..\FreeRTOS\Source/event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 497:..\FreeRTOS\Source/event_groups.c **** 	}
 498:..\FreeRTOS\Source/event_groups.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 499:..\FreeRTOS\Source/event_groups.c **** 
 500:..\FreeRTOS\Source/event_groups.c **** 	return uxReturn;
 501:..\FreeRTOS\Source/event_groups.c **** }
 502:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 503:..\FreeRTOS\Source/event_groups.c **** 
 504:..\FreeRTOS\Source/event_groups.c **** EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )
 505:..\FreeRTOS\Source/event_groups.c **** {
 506:..\FreeRTOS\Source/event_groups.c **** ListItem_t *pxListItem, *pxNext;
 507:..\FreeRTOS\Source/event_groups.c **** ListItem_t const *pxListEnd;
 508:..\FreeRTOS\Source/event_groups.c **** List_t *pxList;
 509:..\FreeRTOS\Source/event_groups.c **** EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
 510:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 511:..\FreeRTOS\Source/event_groups.c **** BaseType_t xMatchFound = pdFALSE;
 512:..\FreeRTOS\Source/event_groups.c **** 
 513:..\FreeRTOS\Source/event_groups.c **** 	/* Check the user is not attempting to set the bits used by the kernel
 514:..\FreeRTOS\Source/event_groups.c **** 	itself. */
 515:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( xEventGroup );
 516:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 517:..\FreeRTOS\Source/event_groups.c **** 
 518:..\FreeRTOS\Source/event_groups.c **** 	pxList = &( pxEventBits->xTasksWaitingForBits );
 519:..\FreeRTOS\Source/event_groups.c **** 	pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 The mini list structure is used as th
 520:..\FreeRTOS\Source/event_groups.c **** 	vTaskSuspendAll();
 521:..\FreeRTOS\Source/event_groups.c **** 	{
 522:..\FreeRTOS\Source/event_groups.c **** 		traceEVENT_GROUP_SET_BITS( xEventGroup, uxBitsToSet );
 523:..\FreeRTOS\Source/event_groups.c **** 
 524:..\FreeRTOS\Source/event_groups.c **** 		pxListItem = listGET_HEAD_ENTRY( pxList );
 525:..\FreeRTOS\Source/event_groups.c **** 
 526:..\FreeRTOS\Source/event_groups.c **** 		/* Set the bits. */
 527:..\FreeRTOS\Source/event_groups.c **** 		pxEventBits->uxEventBits |= uxBitsToSet;
 528:..\FreeRTOS\Source/event_groups.c **** 
 529:..\FreeRTOS\Source/event_groups.c **** 		/* See if the new bit value should unblock any tasks. */
 530:..\FreeRTOS\Source/event_groups.c **** 		while( pxListItem != pxListEnd )
 531:..\FreeRTOS\Source/event_groups.c **** 		{
 532:..\FreeRTOS\Source/event_groups.c **** 			pxNext = listGET_NEXT( pxListItem );
 533:..\FreeRTOS\Source/event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 534:..\FreeRTOS\Source/event_groups.c **** 			xMatchFound = pdFALSE;
 535:..\FreeRTOS\Source/event_groups.c **** 
 536:..\FreeRTOS\Source/event_groups.c **** 			/* Split the bits waited for from the control bits. */
 537:..\FreeRTOS\Source/event_groups.c **** 			uxControlBits = uxBitsWaitedFor & eventEVENT_BITS_CONTROL_BYTES;
 538:..\FreeRTOS\Source/event_groups.c **** 			uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
 539:..\FreeRTOS\Source/event_groups.c **** 
 540:..\FreeRTOS\Source/event_groups.c **** 			if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
 541:..\FreeRTOS\Source/event_groups.c **** 			{
 542:..\FreeRTOS\Source/event_groups.c **** 				/* Just looking for single bit being set. */
 543:..\FreeRTOS\Source/event_groups.c **** 				if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
 544:..\FreeRTOS\Source/event_groups.c **** 				{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 11


 545:..\FreeRTOS\Source/event_groups.c **** 					xMatchFound = pdTRUE;
 546:..\FreeRTOS\Source/event_groups.c **** 				}
 547:..\FreeRTOS\Source/event_groups.c **** 				else
 548:..\FreeRTOS\Source/event_groups.c **** 				{
 549:..\FreeRTOS\Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 550:..\FreeRTOS\Source/event_groups.c **** 				}
 551:..\FreeRTOS\Source/event_groups.c **** 			}
 552:..\FreeRTOS\Source/event_groups.c **** 			else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
 553:..\FreeRTOS\Source/event_groups.c **** 			{
 554:..\FreeRTOS\Source/event_groups.c **** 				/* All bits are set. */
 555:..\FreeRTOS\Source/event_groups.c **** 				xMatchFound = pdTRUE;
 556:..\FreeRTOS\Source/event_groups.c **** 			}
 557:..\FreeRTOS\Source/event_groups.c **** 			else
 558:..\FreeRTOS\Source/event_groups.c **** 			{
 559:..\FreeRTOS\Source/event_groups.c **** 				/* Need all bits to be set, but not all the bits were set. */
 560:..\FreeRTOS\Source/event_groups.c **** 			}
 561:..\FreeRTOS\Source/event_groups.c **** 
 562:..\FreeRTOS\Source/event_groups.c **** 			if( xMatchFound != pdFALSE )
 563:..\FreeRTOS\Source/event_groups.c **** 			{
 564:..\FreeRTOS\Source/event_groups.c **** 				/* The bits match.  Should the bits be cleared on exit? */
 565:..\FreeRTOS\Source/event_groups.c **** 				if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
 566:..\FreeRTOS\Source/event_groups.c **** 				{
 567:..\FreeRTOS\Source/event_groups.c **** 					uxBitsToClear |= uxBitsWaitedFor;
 568:..\FreeRTOS\Source/event_groups.c **** 				}
 569:..\FreeRTOS\Source/event_groups.c **** 				else
 570:..\FreeRTOS\Source/event_groups.c **** 				{
 571:..\FreeRTOS\Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 572:..\FreeRTOS\Source/event_groups.c **** 				}
 573:..\FreeRTOS\Source/event_groups.c **** 
 574:..\FreeRTOS\Source/event_groups.c **** 				/* Store the actual event flag value in the task's event list
 575:..\FreeRTOS\Source/event_groups.c **** 				item before removing the task from the event list.  The
 576:..\FreeRTOS\Source/event_groups.c **** 				eventUNBLOCKED_DUE_TO_BIT_SET bit is set so the task knows
 577:..\FreeRTOS\Source/event_groups.c **** 				that is was unblocked due to its required bits matching, rather
 578:..\FreeRTOS\Source/event_groups.c **** 				than because it timed out. */
 579:..\FreeRTOS\Source/event_groups.c **** 				vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCKED_DUE_TO
 580:..\FreeRTOS\Source/event_groups.c **** 			}
 581:..\FreeRTOS\Source/event_groups.c **** 
 582:..\FreeRTOS\Source/event_groups.c **** 			/* Move onto the next list item.  Note pxListItem->pxNext is not
 583:..\FreeRTOS\Source/event_groups.c **** 			used here as the list item may have been removed from the event list
 584:..\FreeRTOS\Source/event_groups.c **** 			and inserted into the ready/pending reading list. */
 585:..\FreeRTOS\Source/event_groups.c **** 			pxListItem = pxNext;
 586:..\FreeRTOS\Source/event_groups.c **** 		}
 587:..\FreeRTOS\Source/event_groups.c **** 
 588:..\FreeRTOS\Source/event_groups.c **** 		/* Clear any bits that matched when the eventCLEAR_EVENTS_ON_EXIT_BIT
 589:..\FreeRTOS\Source/event_groups.c **** 		bit was set in the control word. */
 590:..\FreeRTOS\Source/event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 591:..\FreeRTOS\Source/event_groups.c **** 	}
 592:..\FreeRTOS\Source/event_groups.c **** 	( void ) xTaskResumeAll();
 593:..\FreeRTOS\Source/event_groups.c **** 
 594:..\FreeRTOS\Source/event_groups.c **** 	return pxEventBits->uxEventBits;
 595:..\FreeRTOS\Source/event_groups.c **** }
 596:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 597:..\FreeRTOS\Source/event_groups.c **** 
 598:..\FreeRTOS\Source/event_groups.c **** void vEventGroupDelete( EventGroupHandle_t xEventGroup )
 599:..\FreeRTOS\Source/event_groups.c **** {
 600:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 601:..\FreeRTOS\Source/event_groups.c **** const List_t *pxTasksWaitingForBits = &( pxEventBits->xTasksWaitingForBits );
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 12


 602:..\FreeRTOS\Source/event_groups.c **** 
 603:..\FreeRTOS\Source/event_groups.c **** 	vTaskSuspendAll();
 604:..\FreeRTOS\Source/event_groups.c **** 	{
 605:..\FreeRTOS\Source/event_groups.c **** 		traceEVENT_GROUP_DELETE( xEventGroup );
 606:..\FreeRTOS\Source/event_groups.c **** 
 607:..\FreeRTOS\Source/event_groups.c **** 		while( listCURRENT_LIST_LENGTH( pxTasksWaitingForBits ) > ( UBaseType_t ) 0 )
 608:..\FreeRTOS\Source/event_groups.c **** 		{
 609:..\FreeRTOS\Source/event_groups.c **** 			/* Unblock the task, returning 0 as the event list is being deleted
 610:..\FreeRTOS\Source/event_groups.c **** 			and cannot therefore have any bits set. */
 611:..\FreeRTOS\Source/event_groups.c **** 			configASSERT( pxTasksWaitingForBits->xListEnd.pxNext != ( const ListItem_t * ) &( pxTasksWaiting
 612:..\FreeRTOS\Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 613:..\FreeRTOS\Source/event_groups.c **** 		}
 614:..\FreeRTOS\Source/event_groups.c **** 
 615:..\FreeRTOS\Source/event_groups.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 616:..\FreeRTOS\Source/event_groups.c **** 		{
 617:..\FreeRTOS\Source/event_groups.c **** 			/* The event group can only have been allocated dynamically - free
 618:..\FreeRTOS\Source/event_groups.c **** 			it again. */
 619:..\FreeRTOS\Source/event_groups.c **** 			vPortFree( pxEventBits );
 620:..\FreeRTOS\Source/event_groups.c **** 		}
 621:..\FreeRTOS\Source/event_groups.c **** 		#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 622:..\FreeRTOS\Source/event_groups.c **** 		{
 623:..\FreeRTOS\Source/event_groups.c **** 			/* The event group could have been allocated statically or
 624:..\FreeRTOS\Source/event_groups.c **** 			dynamically, so check before attempting to free the memory. */
 625:..\FreeRTOS\Source/event_groups.c **** 			if( pxEventBits->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 626:..\FreeRTOS\Source/event_groups.c **** 			{
 627:..\FreeRTOS\Source/event_groups.c **** 				vPortFree( pxEventBits );
 628:..\FreeRTOS\Source/event_groups.c **** 			}
 629:..\FreeRTOS\Source/event_groups.c **** 			else
 630:..\FreeRTOS\Source/event_groups.c **** 			{
 631:..\FreeRTOS\Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 632:..\FreeRTOS\Source/event_groups.c **** 			}
 633:..\FreeRTOS\Source/event_groups.c **** 		}
 634:..\FreeRTOS\Source/event_groups.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 635:..\FreeRTOS\Source/event_groups.c **** 	}
 636:..\FreeRTOS\Source/event_groups.c **** 	( void ) xTaskResumeAll();
 637:..\FreeRTOS\Source/event_groups.c **** }
 638:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 639:..\FreeRTOS\Source/event_groups.c **** 
 640:..\FreeRTOS\Source/event_groups.c **** /* For internal use only - execute a 'set bits' command that was pended from
 641:..\FreeRTOS\Source/event_groups.c **** an interrupt. */
 642:..\FreeRTOS\Source/event_groups.c **** void vEventGroupSetBitsCallback( void *pvEventGroup, const uint32_t ulBitsToSet )
 643:..\FreeRTOS\Source/event_groups.c **** {
 644:..\FreeRTOS\Source/event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet );
 645:..\FreeRTOS\Source/event_groups.c **** }
 646:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 647:..\FreeRTOS\Source/event_groups.c **** 
 648:..\FreeRTOS\Source/event_groups.c **** /* For internal use only - execute a 'clear bits' command that was pended from
 649:..\FreeRTOS\Source/event_groups.c **** an interrupt. */
 650:..\FreeRTOS\Source/event_groups.c **** void vEventGroupClearBitsCallback( void *pvEventGroup, const uint32_t ulBitsToClear )
 651:..\FreeRTOS\Source/event_groups.c **** {
 652:..\FreeRTOS\Source/event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear );
 653:..\FreeRTOS\Source/event_groups.c **** }
 654:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 655:..\FreeRTOS\Source/event_groups.c **** 
 656:..\FreeRTOS\Source/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
 657:..\FreeRTOS\Source/event_groups.c **** {
  27              		.loc 1 657 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 13


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 658:..\FreeRTOS\Source/event_groups.c **** BaseType_t xWaitConditionMet = pdFALSE;
 659:..\FreeRTOS\Source/event_groups.c **** 
 660:..\FreeRTOS\Source/event_groups.c **** 	if( xWaitForAllBits == pdFALSE )
  33              		.loc 1 660 0
  34 0000 1AB9     		cbnz	r2, .L2
 661:..\FreeRTOS\Source/event_groups.c **** 	{
 662:..\FreeRTOS\Source/event_groups.c **** 		/* Task only has to wait for one bit within uxBitsToWaitFor to be
 663:..\FreeRTOS\Source/event_groups.c **** 		set.  Is one already set? */
 664:..\FreeRTOS\Source/event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
  35              		.loc 1 664 0
  36 0002 0842     		tst	r0, r1
  37 0004 06D1     		bne	.L4
 658:..\FreeRTOS\Source/event_groups.c **** BaseType_t xWaitConditionMet = pdFALSE;
  38              		.loc 1 658 0
  39 0006 0020     		movs	r0, #0
  40              	.LVL1:
  41 0008 7047     		bx	lr
  42              	.LVL2:
  43              	.L2:
 665:..\FreeRTOS\Source/event_groups.c **** 		{
 666:..\FreeRTOS\Source/event_groups.c **** 			xWaitConditionMet = pdTRUE;
 667:..\FreeRTOS\Source/event_groups.c **** 		}
 668:..\FreeRTOS\Source/event_groups.c **** 		else
 669:..\FreeRTOS\Source/event_groups.c **** 		{
 670:..\FreeRTOS\Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 671:..\FreeRTOS\Source/event_groups.c **** 		}
 672:..\FreeRTOS\Source/event_groups.c **** 	}
 673:..\FreeRTOS\Source/event_groups.c **** 	else
 674:..\FreeRTOS\Source/event_groups.c **** 	{
 675:..\FreeRTOS\Source/event_groups.c **** 		/* Task has to wait for all the bits in uxBitsToWaitFor to be set.
 676:..\FreeRTOS\Source/event_groups.c **** 		Are they set already? */
 677:..\FreeRTOS\Source/event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
  44              		.loc 1 677 0
  45 000a 31EA0003 		bics	r3, r1, r0
  46 000e 03D0     		beq	.L5
 658:..\FreeRTOS\Source/event_groups.c **** 
  47              		.loc 1 658 0
  48 0010 0020     		movs	r0, #0
  49              	.LVL3:
  50 0012 7047     		bx	lr
  51              	.LVL4:
  52              	.L4:
 666:..\FreeRTOS\Source/event_groups.c **** 		}
  53              		.loc 1 666 0
  54 0014 0120     		movs	r0, #1
  55              	.LVL5:
  56 0016 7047     		bx	lr
  57              	.LVL6:
  58              	.L5:
 678:..\FreeRTOS\Source/event_groups.c **** 		{
 679:..\FreeRTOS\Source/event_groups.c **** 			xWaitConditionMet = pdTRUE;
  59              		.loc 1 679 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 14


  60 0018 0120     		movs	r0, #1
  61              	.LVL7:
 680:..\FreeRTOS\Source/event_groups.c **** 		}
 681:..\FreeRTOS\Source/event_groups.c **** 		else
 682:..\FreeRTOS\Source/event_groups.c **** 		{
 683:..\FreeRTOS\Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 684:..\FreeRTOS\Source/event_groups.c **** 		}
 685:..\FreeRTOS\Source/event_groups.c **** 	}
 686:..\FreeRTOS\Source/event_groups.c **** 
 687:..\FreeRTOS\Source/event_groups.c **** 	return xWaitConditionMet;
 688:..\FreeRTOS\Source/event_groups.c **** }
  62              		.loc 1 688 0
  63 001a 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE77:
  66              		.size	prvTestWaitCondition, .-prvTestWaitCondition
  67              		.section	.text.xEventGroupCreate,"ax",%progbits
  68              		.align	2
  69              		.global	xEventGroupCreate
  70              		.thumb
  71              		.thumb_func
  72              		.type	xEventGroupCreate, %function
  73              	xEventGroupCreate:
  74              	.LFB68:
 143:..\FreeRTOS\Source/event_groups.c **** 	EventGroup_t *pxEventBits;
  75              		.loc 1 143 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 10B5     		push	{r4, lr}
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 4, -8
  82              		.cfi_offset 14, -4
 147:..\FreeRTOS\Source/event_groups.c **** 
  83              		.loc 1 147 0
  84 0002 1C20     		movs	r0, #28
  85 0004 FFF7FEFF 		bl	pvPortMalloc
  86              	.LVL8:
 149:..\FreeRTOS\Source/event_groups.c **** 		{
  87              		.loc 1 149 0
  88 0008 0446     		mov	r4, r0
  89 000a 20B1     		cbz	r0, .L7
 151:..\FreeRTOS\Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
  90              		.loc 1 151 0
  91 000c 0023     		movs	r3, #0
  92 000e 40F8043B 		str	r3, [r0], #4
  93              	.LVL9:
 152:..\FreeRTOS\Source/event_groups.c **** 
  94              		.loc 1 152 0
  95 0012 FFF7FEFF 		bl	vListInitialise
  96              	.LVL10:
  97              	.L7:
 171:..\FreeRTOS\Source/event_groups.c **** 
  98              		.loc 1 171 0
  99 0016 2046     		mov	r0, r4
 100 0018 10BD     		pop	{r4, pc}
 101              		.cfi_endproc
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 15


 102              	.LFE68:
 103              		.size	xEventGroupCreate, .-xEventGroupCreate
 104 001a 00BF     		.section	.text.xEventGroupWaitBits,"ax",%progbits
 105              		.align	2
 106              		.global	xEventGroupWaitBits
 107              		.thumb
 108              		.thumb_func
 109              		.type	xEventGroupWaitBits, %function
 110              	xEventGroupWaitBits:
 111              	.LFB70:
 297:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 112              		.loc 1 297 0
 113              		.cfi_startproc
 114              		@ args = 4, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              	.LVL11:
 117 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 118              		.cfi_def_cfa_offset 32
 119              		.cfi_offset 3, -32
 120              		.cfi_offset 4, -28
 121              		.cfi_offset 5, -24
 122              		.cfi_offset 6, -20
 123              		.cfi_offset 7, -16
 124              		.cfi_offset 8, -12
 125              		.cfi_offset 9, -8
 126              		.cfi_offset 14, -4
 127 0004 0746     		mov	r7, r0
 128 0006 0E46     		mov	r6, r1
 129 0008 9146     		mov	r9, r2
 130 000a 9846     		mov	r8, r3
 131 000c 089D     		ldr	r5, [sp, #32]
 132              	.LVL12:
 314:..\FreeRTOS\Source/event_groups.c **** 	{
 133              		.loc 1 314 0
 134 000e FFF7FEFF 		bl	vTaskSuspendAll
 135              	.LVL13:
 136              	.LBB6:
 316:..\FreeRTOS\Source/event_groups.c **** 
 137              		.loc 1 316 0
 138 0012 3C68     		ldr	r4, [r7]
 139              	.LVL14:
 319:..\FreeRTOS\Source/event_groups.c **** 
 140              		.loc 1 319 0
 141 0014 4246     		mov	r2, r8
 142 0016 3146     		mov	r1, r6
 143 0018 2046     		mov	r0, r4
 144 001a FFF7FEFF 		bl	prvTestWaitCondition
 145              	.LVL15:
 321:..\FreeRTOS\Source/event_groups.c **** 		{
 146              		.loc 1 321 0
 147 001e 38B1     		cbz	r0, .L10
 148              	.LVL16:
 329:..\FreeRTOS\Source/event_groups.c **** 			{
 149              		.loc 1 329 0
 150 0020 B9F1000F 		cmp	r9, #0
 151 0024 18D0     		beq	.L18
 331:..\FreeRTOS\Source/event_groups.c **** 			}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 16


 152              		.loc 1 331 0
 153 0026 24EA0603 		bic	r3, r4, r6
 154 002a 3B60     		str	r3, [r7]
 326:..\FreeRTOS\Source/event_groups.c **** 
 155              		.loc 1 326 0
 156 002c 0025     		movs	r5, #0
 157 002e 14E0     		b	.L11
 158              	.LVL17:
 159              	.L10:
 338:..\FreeRTOS\Source/event_groups.c **** 		{
 160              		.loc 1 338 0
 161 0030 9DB1     		cbz	r5, .L11
 351:..\FreeRTOS\Source/event_groups.c **** 			{
 162              		.loc 1 351 0
 163 0032 B9F1000F 		cmp	r9, #0
 164 0036 01D1     		bne	.L19
 165              	.LBE6:
 299:..\FreeRTOS\Source/event_groups.c **** BaseType_t xWaitConditionMet, xAlreadyYielded;
 166              		.loc 1 299 0
 167 0038 0021     		movs	r1, #0
 168 003a 01E0     		b	.L12
 169              	.L19:
 170              	.LBB7:
 353:..\FreeRTOS\Source/event_groups.c **** 			}
 171              		.loc 1 353 0
 172 003c 4FF08071 		mov	r1, #16777216
 173              	.L12:
 174              	.LVL18:
 360:..\FreeRTOS\Source/event_groups.c **** 			{
 175              		.loc 1 360 0
 176 0040 B8F1000F 		cmp	r8, #0
 177 0044 01D0     		beq	.L13
 362:..\FreeRTOS\Source/event_groups.c **** 			}
 178              		.loc 1 362 0
 179 0046 41F08061 		orr	r1, r1, #67108864
 180              	.LVL19:
 181              	.L13:
 372:..\FreeRTOS\Source/event_groups.c **** 
 182              		.loc 1 372 0
 183 004a 2A46     		mov	r2, r5
 184 004c 3143     		orrs	r1, r1, r6
 185              	.LVL20:
 186 004e 381D     		adds	r0, r7, #4
 187              	.LVL21:
 188 0050 FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 189              	.LVL22:
 377:..\FreeRTOS\Source/event_groups.c **** 
 190              		.loc 1 377 0
 191 0054 0024     		movs	r4, #0
 192              	.LVL23:
 193 0056 00E0     		b	.L11
 194              	.LVL24:
 195              	.L18:
 326:..\FreeRTOS\Source/event_groups.c **** 
 196              		.loc 1 326 0
 197 0058 0025     		movs	r5, #0
 198              	.LVL25:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 17


 199              	.L11:
 200              	.LBE7:
 382:..\FreeRTOS\Source/event_groups.c **** 
 201              		.loc 1 382 0
 202 005a FFF7FEFF 		bl	xTaskResumeAll
 203              	.LVL26:
 384:..\FreeRTOS\Source/event_groups.c **** 	{
 204              		.loc 1 384 0
 205 005e 0DB3     		cbz	r5, .L14
 386:..\FreeRTOS\Source/event_groups.c **** 		{
 206              		.loc 1 386 0
 207 0060 38B9     		cbnz	r0, .L15
 388:..\FreeRTOS\Source/event_groups.c **** 		}
 208              		.loc 1 388 0
 209 0062 4FF08052 		mov	r2, #268435456
 210 0066 114B     		ldr	r3, .L21
 211 0068 1A60     		str	r2, [r3]
 212              		.syntax unified
 213              	@ 388 "..\FreeRTOS\Source\event_groups.c" 1
 214 006a BFF34F8F 		dsb
 215              	@ 0 "" 2
 216              	@ 388 "..\FreeRTOS\Source\event_groups.c" 1
 217 006e BFF36F8F 		isb
 218              	@ 0 "" 2
 219              		.thumb
 220              		.syntax unified
 221              	.L15:
 399:..\FreeRTOS\Source/event_groups.c **** 
 222              		.loc 1 399 0
 223 0072 FFF7FEFF 		bl	uxTaskResetEventItemValue
 224              	.LVL27:
 225 0076 0446     		mov	r4, r0
 226              	.LVL28:
 401:..\FreeRTOS\Source/event_groups.c **** 		{
 227              		.loc 1 401 0
 228 0078 10F0007F 		tst	r0, #33554432
 229 007c 10D1     		bne	.L16
 403:..\FreeRTOS\Source/event_groups.c **** 			{
 230              		.loc 1 403 0
 231 007e FFF7FEFF 		bl	vPortEnterCritical
 232              	.LVL29:
 406:..\FreeRTOS\Source/event_groups.c **** 
 233              		.loc 1 406 0
 234 0082 3C68     		ldr	r4, [r7]
 235              	.LVL30:
 410:..\FreeRTOS\Source/event_groups.c **** 				{
 236              		.loc 1 410 0
 237 0084 4246     		mov	r2, r8
 238 0086 3146     		mov	r1, r6
 239 0088 2046     		mov	r0, r4
 240 008a FFF7FEFF 		bl	prvTestWaitCondition
 241              	.LVL31:
 242 008e 28B1     		cbz	r0, .L17
 412:..\FreeRTOS\Source/event_groups.c **** 					{
 243              		.loc 1 412 0
 244 0090 B9F1000F 		cmp	r9, #0
 245 0094 02D0     		beq	.L17
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 18


 414:..\FreeRTOS\Source/event_groups.c **** 					}
 246              		.loc 1 414 0
 247 0096 24EA0606 		bic	r6, r4, r6
 248              	.LVL32:
 249 009a 3E60     		str	r6, [r7]
 250              	.L17:
 251              	.LVL33:
 427:..\FreeRTOS\Source/event_groups.c **** 		}
 252              		.loc 1 427 0
 253 009c FFF7FEFF 		bl	vPortExitCritical
 254              	.LVL34:
 255              	.L16:
 435:..\FreeRTOS\Source/event_groups.c **** 	}
 256              		.loc 1 435 0
 257 00a0 24F07F44 		bic	r4, r4, #-16777216
 258              	.LVL35:
 259              	.L14:
 443:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 260              		.loc 1 443 0
 261 00a4 2046     		mov	r0, r4
 262 00a6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 263              	.LVL36:
 264              	.L22:
 265 00aa 00BF     		.align	2
 266              	.L21:
 267 00ac 04ED00E0 		.word	-536810236
 268              		.cfi_endproc
 269              	.LFE70:
 270              		.size	xEventGroupWaitBits, .-xEventGroupWaitBits
 271              		.section	.text.xEventGroupClearBits,"ax",%progbits
 272              		.align	2
 273              		.global	xEventGroupClearBits
 274              		.thumb
 275              		.thumb_func
 276              		.type	xEventGroupClearBits, %function
 277              	xEventGroupClearBits:
 278              	.LFB71:
 447:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 279              		.loc 1 447 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              	.LVL37:
 284 0000 70B5     		push	{r4, r5, r6, lr}
 285              		.cfi_def_cfa_offset 16
 286              		.cfi_offset 4, -16
 287              		.cfi_offset 5, -12
 288              		.cfi_offset 6, -8
 289              		.cfi_offset 14, -4
 290 0002 0646     		mov	r6, r0
 291 0004 0C46     		mov	r4, r1
 292              	.LVL38:
 456:..\FreeRTOS\Source/event_groups.c **** 	{
 293              		.loc 1 456 0
 294 0006 FFF7FEFF 		bl	vPortEnterCritical
 295              	.LVL39:
 462:..\FreeRTOS\Source/event_groups.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 19


 296              		.loc 1 462 0
 297 000a 3568     		ldr	r5, [r6]
 298              	.LVL40:
 465:..\FreeRTOS\Source/event_groups.c **** 	}
 299              		.loc 1 465 0
 300 000c 25EA0404 		bic	r4, r5, r4
 301              	.LVL41:
 302 0010 3460     		str	r4, [r6]
 467:..\FreeRTOS\Source/event_groups.c **** 
 303              		.loc 1 467 0
 304 0012 FFF7FEFF 		bl	vPortExitCritical
 305              	.LVL42:
 470:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 306              		.loc 1 470 0
 307 0016 2846     		mov	r0, r5
 308 0018 70BD     		pop	{r4, r5, r6, pc}
 309              		.cfi_endproc
 310              	.LFE71:
 311              		.size	xEventGroupClearBits, .-xEventGroupClearBits
 312 001a 00BF     		.section	.text.xEventGroupGetBitsFromISR,"ax",%progbits
 313              		.align	2
 314              		.global	xEventGroupGetBitsFromISR
 315              		.thumb
 316              		.thumb_func
 317              		.type	xEventGroupGetBitsFromISR, %function
 318              	xEventGroupGetBitsFromISR:
 319              	.LFB72:
 489:..\FreeRTOS\Source/event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 320              		.loc 1 489 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 325              	.LVL43:
 326              	.LBB8:
 327              	.LBB9:
 328              		.file 2 "..\\FreeRTOS\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  15:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 20


  21:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  22:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  25:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  27:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  28:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  29:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  32:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  34:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  35:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  36:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  39:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  42:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  45:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  46:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  47:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  48:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  51:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  52:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  55:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #else
  63:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  66:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  70:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  72:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 21


  78:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  81:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  84:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
  89:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  90:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  96:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
  97:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 106:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 115:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 120:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 122:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 126:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 127:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 129:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 132:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 134:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 22


 135:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 136:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 137:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 142:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 143:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 147:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 149:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 151:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 153:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 155:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 159:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 160:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 162:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 163:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 165:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 171:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 174:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 177:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 179:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 181:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 182:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 183:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 185:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 186:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 187:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 188:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 189:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 23


 192:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 193:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 195:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 196:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 197:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	);
 203:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 204:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 205:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 206:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 207:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 209:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 211:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 329              		.loc 2 211 0
 330              		.syntax unified
 331              	@ 211 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 332 0000 EFF31183 			mrs r3, basepri											
 333 0004 4FF0A002 		mov r2, #160												
 334 0008 82F31188 		msr basepri, r2											
 335 000c BFF36F8F 		isb														
 336 0010 BFF34F8F 		dsb														
 337              	
 338              	@ 0 "" 2
 339              		.thumb
 340              		.syntax unified
 341              	.LBE9:
 342              	.LBE8:
 496:..\FreeRTOS\Source/event_groups.c **** 	}
 343              		.loc 1 496 0
 344 0014 0068     		ldr	r0, [r0]
 345              	.LVL44:
 346              	.LBB10:
 347              	.LBB11:
 212:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 213:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 215:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 217:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 218:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	);
 220:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 221:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	warnings. */
 223:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 224:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 225:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 226:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 227:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 24


 229:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 348              		.loc 2 229 0
 349              		.syntax unified
 350              	@ 229 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 351 0016 83F31188 			msr basepri, r3	
 352              	@ 0 "" 2
 353              		.thumb
 354              		.syntax unified
 355              	.LBE11:
 356              	.LBE10:
 501:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 357              		.loc 1 501 0
 358 001a 7047     		bx	lr
 359              		.cfi_endproc
 360              	.LFE72:
 361              		.size	xEventGroupGetBitsFromISR, .-xEventGroupGetBitsFromISR
 362              		.section	.text.xEventGroupSetBits,"ax",%progbits
 363              		.align	2
 364              		.global	xEventGroupSetBits
 365              		.thumb
 366              		.thumb_func
 367              		.type	xEventGroupSetBits, %function
 368              	xEventGroupSetBits:
 369              	.LFB73:
 505:..\FreeRTOS\Source/event_groups.c **** ListItem_t *pxListItem, *pxNext;
 370              		.loc 1 505 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              	.LVL45:
 375 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 376              		.cfi_def_cfa_offset 24
 377              		.cfi_offset 3, -24
 378              		.cfi_offset 4, -20
 379              		.cfi_offset 5, -16
 380              		.cfi_offset 6, -12
 381              		.cfi_offset 7, -8
 382              		.cfi_offset 14, -4
 383 0002 0446     		mov	r4, r0
 384 0004 0D46     		mov	r5, r1
 385              	.LVL46:
 519:..\FreeRTOS\Source/event_groups.c **** 	vTaskSuspendAll();
 386              		.loc 1 519 0
 387 0006 00F10C06 		add	r6, r0, #12
 388              	.LVL47:
 520:..\FreeRTOS\Source/event_groups.c **** 	{
 389              		.loc 1 520 0
 390 000a FFF7FEFF 		bl	vTaskSuspendAll
 391              	.LVL48:
 524:..\FreeRTOS\Source/event_groups.c **** 
 392              		.loc 1 524 0
 393 000e 2069     		ldr	r0, [r4, #16]
 394              	.LVL49:
 527:..\FreeRTOS\Source/event_groups.c **** 
 395              		.loc 1 527 0
 396 0010 2368     		ldr	r3, [r4]
 397 0012 1D43     		orrs	r5, r5, r3
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 25


 398              	.LVL50:
 399 0014 2560     		str	r5, [r4]
 509:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 400              		.loc 1 509 0
 401 0016 0027     		movs	r7, #0
 530:..\FreeRTOS\Source/event_groups.c **** 		{
 402              		.loc 1 530 0
 403 0018 1FE0     		b	.L27
 404              	.LVL51:
 405              	.L32:
 532:..\FreeRTOS\Source/event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 406              		.loc 1 532 0
 407 001a 4568     		ldr	r5, [r0, #4]
 408              	.LVL52:
 533:..\FreeRTOS\Source/event_groups.c **** 			xMatchFound = pdFALSE;
 409              		.loc 1 533 0
 410 001c 0368     		ldr	r3, [r0]
 411              	.LVL53:
 538:..\FreeRTOS\Source/event_groups.c **** 
 412              		.loc 1 538 0
 413 001e 23F07F42 		bic	r2, r3, #-16777216
 414              	.LVL54:
 540:..\FreeRTOS\Source/event_groups.c **** 			{
 415              		.loc 1 540 0
 416 0022 13F0806F 		tst	r3, #67108864
 417 0026 04D1     		bne	.L28
 543:..\FreeRTOS\Source/event_groups.c **** 				{
 418              		.loc 1 543 0
 419 0028 2168     		ldr	r1, [r4]
 420 002a 0A42     		tst	r2, r1
 421 002c 07D1     		bne	.L33
 534:..\FreeRTOS\Source/event_groups.c **** 
 422              		.loc 1 534 0
 423 002e 0021     		movs	r1, #0
 424 0030 08E0     		b	.L29
 425              	.L28:
 552:..\FreeRTOS\Source/event_groups.c **** 			{
 426              		.loc 1 552 0
 427 0032 2168     		ldr	r1, [r4]
 428 0034 32EA0101 		bics	r1, r2, r1
 429 0038 03D0     		beq	.L34
 534:..\FreeRTOS\Source/event_groups.c **** 
 430              		.loc 1 534 0
 431 003a 0021     		movs	r1, #0
 432 003c 02E0     		b	.L29
 433              	.L33:
 545:..\FreeRTOS\Source/event_groups.c **** 				}
 434              		.loc 1 545 0
 435 003e 0121     		movs	r1, #1
 436 0040 00E0     		b	.L29
 437              	.L34:
 555:..\FreeRTOS\Source/event_groups.c **** 			}
 438              		.loc 1 555 0
 439 0042 0121     		movs	r1, #1
 440              	.L29:
 441              	.LVL55:
 562:..\FreeRTOS\Source/event_groups.c **** 			{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 26


 442              		.loc 1 562 0
 443 0044 41B1     		cbz	r1, .L30
 565:..\FreeRTOS\Source/event_groups.c **** 				{
 444              		.loc 1 565 0
 445 0046 13F0807F 		tst	r3, #16777216
 446 004a 00D0     		beq	.L31
 567:..\FreeRTOS\Source/event_groups.c **** 				}
 447              		.loc 1 567 0
 448 004c 1743     		orrs	r7, r7, r2
 449              	.LVL56:
 450              	.L31:
 579:..\FreeRTOS\Source/event_groups.c **** 			}
 451              		.loc 1 579 0
 452 004e 2168     		ldr	r1, [r4]
 453              	.LVL57:
 454 0050 41F00071 		orr	r1, r1, #33554432
 455 0054 FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 456              	.LVL58:
 457              	.L30:
 534:..\FreeRTOS\Source/event_groups.c **** 
 458              		.loc 1 534 0
 459 0058 2846     		mov	r0, r5
 460              	.LVL59:
 461              	.L27:
 530:..\FreeRTOS\Source/event_groups.c **** 		{
 462              		.loc 1 530 0
 463 005a B042     		cmp	r0, r6
 464 005c DDD1     		bne	.L32
 590:..\FreeRTOS\Source/event_groups.c **** 	}
 465              		.loc 1 590 0
 466 005e 2368     		ldr	r3, [r4]
 467 0060 23EA0707 		bic	r7, r3, r7
 468              	.LVL60:
 469 0064 2760     		str	r7, [r4]
 592:..\FreeRTOS\Source/event_groups.c **** 
 470              		.loc 1 592 0
 471 0066 FFF7FEFF 		bl	xTaskResumeAll
 472              	.LVL61:
 595:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 473              		.loc 1 595 0
 474 006a 2068     		ldr	r0, [r4]
 475 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 476              		.cfi_endproc
 477              	.LFE73:
 478              		.size	xEventGroupSetBits, .-xEventGroupSetBits
 479 006e 00BF     		.section	.text.xEventGroupSync,"ax",%progbits
 480              		.align	2
 481              		.global	xEventGroupSync
 482              		.thumb
 483              		.thumb_func
 484              		.type	xEventGroupSync, %function
 485              	xEventGroupSync:
 486              	.LFB69:
 177:..\FreeRTOS\Source/event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 487              		.loc 1 177 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 27


 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              	.LVL62:
 492 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 493              		.cfi_def_cfa_offset 24
 494              		.cfi_offset 4, -24
 495              		.cfi_offset 5, -20
 496              		.cfi_offset 6, -16
 497              		.cfi_offset 7, -12
 498              		.cfi_offset 8, -8
 499              		.cfi_offset 14, -4
 500 0004 0546     		mov	r5, r0
 501 0006 0C46     		mov	r4, r1
 502 0008 1746     		mov	r7, r2
 503 000a 1E46     		mov	r6, r3
 504              	.LVL63:
 191:..\FreeRTOS\Source/event_groups.c **** 	{
 505              		.loc 1 191 0
 506 000c FFF7FEFF 		bl	vTaskSuspendAll
 507              	.LVL64:
 193:..\FreeRTOS\Source/event_groups.c **** 
 508              		.loc 1 193 0
 509 0010 D5F80080 		ldr	r8, [r5]
 510              	.LVL65:
 195:..\FreeRTOS\Source/event_groups.c **** 
 511              		.loc 1 195 0
 512 0014 2146     		mov	r1, r4
 513 0016 2846     		mov	r0, r5
 514 0018 FFF7FEFF 		bl	xEventGroupSetBits
 515              	.LVL66:
 197:..\FreeRTOS\Source/event_groups.c **** 		{
 516              		.loc 1 197 0
 517 001c 48EA0404 		orr	r4, r8, r4
 518              	.LVL67:
 519 0020 37EA0403 		bics	r3, r7, r4
 520 0024 05D1     		bne	.L37
 521              	.LVL68:
 204:..\FreeRTOS\Source/event_groups.c **** 
 522              		.loc 1 204 0
 523 0026 2B68     		ldr	r3, [r5]
 524 0028 23EA0703 		bic	r3, r3, r7
 525 002c 2B60     		str	r3, [r5]
 526              	.LVL69:
 206:..\FreeRTOS\Source/event_groups.c **** 		}
 527              		.loc 1 206 0
 528 002e 0026     		movs	r6, #0
 529 0030 09E0     		b	.L38
 530              	.LVL70:
 531              	.L37:
 210:..\FreeRTOS\Source/event_groups.c **** 			{
 532              		.loc 1 210 0
 533 0032 3EB1     		cbz	r6, .L39
 217:..\FreeRTOS\Source/event_groups.c **** 
 534              		.loc 1 217 0
 535 0034 3246     		mov	r2, r6
 536 0036 47F0A061 		orr	r1, r7, #83886080
 537 003a 281D     		adds	r0, r5, #4
 538 003c FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 28


 539              	.LVL71:
 223:..\FreeRTOS\Source/event_groups.c **** 			}
 540              		.loc 1 223 0
 541 0040 0024     		movs	r4, #0
 542 0042 00E0     		b	.L38
 543              	.LVL72:
 544              	.L39:
 229:..\FreeRTOS\Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 545              		.loc 1 229 0
 546 0044 2C68     		ldr	r4, [r5]
 547              	.LVL73:
 548              	.L38:
 234:..\FreeRTOS\Source/event_groups.c **** 
 549              		.loc 1 234 0
 550 0046 FFF7FEFF 		bl	xTaskResumeAll
 551              	.LVL74:
 236:..\FreeRTOS\Source/event_groups.c **** 	{
 552              		.loc 1 236 0
 553 004a DEB1     		cbz	r6, .L40
 238:..\FreeRTOS\Source/event_groups.c **** 		{
 554              		.loc 1 238 0
 555 004c 38B9     		cbnz	r0, .L41
 240:..\FreeRTOS\Source/event_groups.c **** 		}
 556              		.loc 1 240 0
 557 004e 4FF08052 		mov	r2, #268435456
 558 0052 0E4B     		ldr	r3, .L45
 559 0054 1A60     		str	r2, [r3]
 560              		.syntax unified
 561              	@ 240 "..\FreeRTOS\Source\event_groups.c" 1
 562 0056 BFF34F8F 		dsb
 563              	@ 0 "" 2
 564              	@ 240 "..\FreeRTOS\Source\event_groups.c" 1
 565 005a BFF36F8F 		isb
 566              	@ 0 "" 2
 567              		.thumb
 568              		.syntax unified
 569              	.L41:
 251:..\FreeRTOS\Source/event_groups.c **** 
 570              		.loc 1 251 0
 571 005e FFF7FEFF 		bl	uxTaskResetEventItemValue
 572              	.LVL75:
 573 0062 0446     		mov	r4, r0
 574              	.LVL76:
 253:..\FreeRTOS\Source/event_groups.c **** 		{
 575              		.loc 1 253 0
 576 0064 10F0007F 		tst	r0, #33554432
 577 0068 0AD1     		bne	.L42
 256:..\FreeRTOS\Source/event_groups.c **** 			{
 578              		.loc 1 256 0
 579 006a FFF7FEFF 		bl	vPortEnterCritical
 580              	.LVL77:
 258:..\FreeRTOS\Source/event_groups.c **** 
 581              		.loc 1 258 0
 582 006e 2C68     		ldr	r4, [r5]
 583              	.LVL78:
 264:..\FreeRTOS\Source/event_groups.c **** 				{
 584              		.loc 1 264 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 29


 585 0070 37EA0403 		bics	r3, r7, r4
 586 0074 02D1     		bne	.L43
 266:..\FreeRTOS\Source/event_groups.c **** 				}
 587              		.loc 1 266 0
 588 0076 24EA0707 		bic	r7, r4, r7
 589              	.LVL79:
 590 007a 2F60     		str	r7, [r5]
 591              	.L43:
 273:..\FreeRTOS\Source/event_groups.c **** 
 592              		.loc 1 273 0
 593 007c FFF7FEFF 		bl	vPortExitCritical
 594              	.LVL80:
 595              	.L42:
 284:..\FreeRTOS\Source/event_groups.c **** 	}
 596              		.loc 1 284 0
 597 0080 24F07F44 		bic	r4, r4, #-16777216
 598              	.LVL81:
 599              	.L40:
 293:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 600              		.loc 1 293 0
 601 0084 2046     		mov	r0, r4
 602 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 603              	.LVL82:
 604              	.L46:
 605 008a 00BF     		.align	2
 606              	.L45:
 607 008c 04ED00E0 		.word	-536810236
 608              		.cfi_endproc
 609              	.LFE69:
 610              		.size	xEventGroupSync, .-xEventGroupSync
 611              		.section	.text.vEventGroupDelete,"ax",%progbits
 612              		.align	2
 613              		.global	vEventGroupDelete
 614              		.thumb
 615              		.thumb_func
 616              		.type	vEventGroupDelete, %function
 617              	vEventGroupDelete:
 618              	.LFB74:
 599:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 619              		.loc 1 599 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              	.LVL83:
 624 0000 10B5     		push	{r4, lr}
 625              		.cfi_def_cfa_offset 8
 626              		.cfi_offset 4, -8
 627              		.cfi_offset 14, -4
 628 0002 0446     		mov	r4, r0
 629              	.LVL84:
 603:..\FreeRTOS\Source/event_groups.c **** 	{
 630              		.loc 1 603 0
 631 0004 FFF7FEFF 		bl	vTaskSuspendAll
 632              	.LVL85:
 607:..\FreeRTOS\Source/event_groups.c **** 		{
 633              		.loc 1 607 0
 634 0008 04E0     		b	.L48
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 30


 635              	.L49:
 612:..\FreeRTOS\Source/event_groups.c **** 		}
 636              		.loc 1 612 0
 637 000a 4FF00071 		mov	r1, #33554432
 638 000e 2069     		ldr	r0, [r4, #16]
 639 0010 FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 640              	.LVL86:
 641              	.L48:
 607:..\FreeRTOS\Source/event_groups.c **** 		{
 642              		.loc 1 607 0
 643 0014 6368     		ldr	r3, [r4, #4]
 644 0016 002B     		cmp	r3, #0
 645 0018 F7D1     		bne	.L49
 619:..\FreeRTOS\Source/event_groups.c **** 		}
 646              		.loc 1 619 0
 647 001a 2046     		mov	r0, r4
 648 001c FFF7FEFF 		bl	vPortFree
 649              	.LVL87:
 636:..\FreeRTOS\Source/event_groups.c **** }
 650              		.loc 1 636 0
 651 0020 FFF7FEFF 		bl	xTaskResumeAll
 652              	.LVL88:
 653 0024 10BD     		pop	{r4, pc}
 654              		.cfi_endproc
 655              	.LFE74:
 656              		.size	vEventGroupDelete, .-vEventGroupDelete
 657 0026 00BF     		.section	.text.vEventGroupSetBitsCallback,"ax",%progbits
 658              		.align	2
 659              		.global	vEventGroupSetBitsCallback
 660              		.thumb
 661              		.thumb_func
 662              		.type	vEventGroupSetBitsCallback, %function
 663              	vEventGroupSetBitsCallback:
 664              	.LFB75:
 643:..\FreeRTOS\Source/event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet );
 665              		.loc 1 643 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              	.LVL89:
 670 0000 08B5     		push	{r3, lr}
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 3, -8
 673              		.cfi_offset 14, -4
 644:..\FreeRTOS\Source/event_groups.c **** }
 674              		.loc 1 644 0
 675 0002 FFF7FEFF 		bl	xEventGroupSetBits
 676              	.LVL90:
 677 0006 08BD     		pop	{r3, pc}
 678              		.cfi_endproc
 679              	.LFE75:
 680              		.size	vEventGroupSetBitsCallback, .-vEventGroupSetBitsCallback
 681              		.section	.text.vEventGroupClearBitsCallback,"ax",%progbits
 682              		.align	2
 683              		.global	vEventGroupClearBitsCallback
 684              		.thumb
 685              		.thumb_func
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 31


 686              		.type	vEventGroupClearBitsCallback, %function
 687              	vEventGroupClearBitsCallback:
 688              	.LFB76:
 651:..\FreeRTOS\Source/event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear );
 689              		.loc 1 651 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693              	.LVL91:
 694 0000 08B5     		push	{r3, lr}
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 3, -8
 697              		.cfi_offset 14, -4
 652:..\FreeRTOS\Source/event_groups.c **** }
 698              		.loc 1 652 0
 699 0002 FFF7FEFF 		bl	xEventGroupClearBits
 700              	.LVL92:
 701 0006 08BD     		pop	{r3, pc}
 702              		.cfi_endproc
 703              	.LFE76:
 704              		.size	vEventGroupClearBitsCallback, .-vEventGroupClearBitsCallback
 705              		.section	.text.uxEventGroupGetNumber,"ax",%progbits
 706              		.align	2
 707              		.global	uxEventGroupGetNumber
 708              		.thumb
 709              		.thumb_func
 710              		.type	uxEventGroupGetNumber, %function
 711              	uxEventGroupGetNumber:
 712              	.LFB78:
 689:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 690:..\FreeRTOS\Source/event_groups.c **** 
 691:..\FreeRTOS\Source/event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 692:..\FreeRTOS\Source/event_groups.c **** 
 693:..\FreeRTOS\Source/event_groups.c **** 	BaseType_t xEventGroupSetBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSe
 694:..\FreeRTOS\Source/event_groups.c **** 	{
 695:..\FreeRTOS\Source/event_groups.c **** 	BaseType_t xReturn;
 696:..\FreeRTOS\Source/event_groups.c **** 
 697:..\FreeRTOS\Source/event_groups.c **** 		traceEVENT_GROUP_SET_BITS_FROM_ISR( xEventGroup, uxBitsToSet );
 698:..\FreeRTOS\Source/event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupSetBitsCallback, ( void * ) xEventGroup, ( ui
 699:..\FreeRTOS\Source/event_groups.c **** 
 700:..\FreeRTOS\Source/event_groups.c **** 		return xReturn;
 701:..\FreeRTOS\Source/event_groups.c **** 	}
 702:..\FreeRTOS\Source/event_groups.c **** 
 703:..\FreeRTOS\Source/event_groups.c **** #endif
 704:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 705:..\FreeRTOS\Source/event_groups.c **** 
 706:..\FreeRTOS\Source/event_groups.c **** #if (configUSE_TRACE_FACILITY == 1)
 707:..\FreeRTOS\Source/event_groups.c **** 
 708:..\FreeRTOS\Source/event_groups.c **** 	UBaseType_t uxEventGroupGetNumber( void* xEventGroup )
 709:..\FreeRTOS\Source/event_groups.c **** 	{
 713              		.loc 1 709 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717              		@ link register save eliminated.
 718              	.LVL93:
 710:..\FreeRTOS\Source/event_groups.c **** 	UBaseType_t xReturn;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 32


 711:..\FreeRTOS\Source/event_groups.c **** 	EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 712:..\FreeRTOS\Source/event_groups.c **** 
 713:..\FreeRTOS\Source/event_groups.c **** 		if( xEventGroup == NULL )
 719              		.loc 1 713 0
 720 0000 08B1     		cbz	r0, .L57
 714:..\FreeRTOS\Source/event_groups.c **** 		{
 715:..\FreeRTOS\Source/event_groups.c **** 			xReturn = 0;
 716:..\FreeRTOS\Source/event_groups.c **** 		}
 717:..\FreeRTOS\Source/event_groups.c **** 		else
 718:..\FreeRTOS\Source/event_groups.c **** 		{
 719:..\FreeRTOS\Source/event_groups.c **** 			xReturn = pxEventBits->uxEventGroupNumber;
 721              		.loc 1 719 0
 722 0002 8069     		ldr	r0, [r0, #24]
 723              	.LVL94:
 724 0004 7047     		bx	lr
 725              	.LVL95:
 726              	.L57:
 715:..\FreeRTOS\Source/event_groups.c **** 		}
 727              		.loc 1 715 0
 728 0006 0020     		movs	r0, #0
 729              	.LVL96:
 720:..\FreeRTOS\Source/event_groups.c **** 		}
 721:..\FreeRTOS\Source/event_groups.c **** 
 722:..\FreeRTOS\Source/event_groups.c **** 		return xReturn;
 723:..\FreeRTOS\Source/event_groups.c **** 	}
 730              		.loc 1 723 0
 731 0008 7047     		bx	lr
 732              		.cfi_endproc
 733              	.LFE78:
 734              		.size	uxEventGroupGetNumber, .-uxEventGroupGetNumber
 735 000a 00BF     		.section	.text.vEventGroupSetNumber,"ax",%progbits
 736              		.align	2
 737              		.global	vEventGroupSetNumber
 738              		.thumb
 739              		.thumb_func
 740              		.type	vEventGroupSetNumber, %function
 741              	vEventGroupSetNumber:
 742              	.LFB79:
 724:..\FreeRTOS\Source/event_groups.c **** 
 725:..\FreeRTOS\Source/event_groups.c **** #endif /* configUSE_TRACE_FACILITY */
 726:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 727:..\FreeRTOS\Source/event_groups.c **** 
 728:..\FreeRTOS\Source/event_groups.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 729:..\FreeRTOS\Source/event_groups.c **** 
 730:..\FreeRTOS\Source/event_groups.c **** 	void vEventGroupSetNumber( void * xEventGroup, UBaseType_t uxEventGroupNumber )
 731:..\FreeRTOS\Source/event_groups.c **** 	{
 743              		.loc 1 731 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 748              	.LVL97:
 732:..\FreeRTOS\Source/event_groups.c **** 		( ( EventGroup_t * ) xEventGroup )->uxEventGroupNumber = uxEventGroupNumber;
 749              		.loc 1 732 0
 750 0000 8161     		str	r1, [r0, #24]
 751 0002 7047     		bx	lr
 752              		.cfi_endproc
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 33


 753              	.LFE79:
 754              		.size	vEventGroupSetNumber, .-vEventGroupSetNumber
 755              		.text
 756              	.Letext0:
 757              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 758              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 759              		.file 5 "..\\FreeRTOS\\Source\\include/list.h"
 760              		.file 6 "..\\FreeRTOS\\Source\\include/event_groups.h"
 761              		.file 7 "..\\FreeRTOS\\Source\\include/portable.h"
 762              		.file 8 "..\\FreeRTOS\\Source\\include/task.h"
 763              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 764              		.section	.debug_info,"",%progbits
 765              	.Ldebug_info0:
 766 0000 96090000 		.4byte	0x996
 767 0004 0400     		.2byte	0x4
 768 0006 00000000 		.4byte	.Ldebug_abbrev0
 769 000a 04       		.byte	0x4
 770 000b 01       		.uleb128 0x1
 771 000c 42050000 		.4byte	.LASF91
 772 0010 0C       		.byte	0xc
 773 0011 9A020000 		.4byte	.LASF92
 774 0015 2E040000 		.4byte	.LASF93
 775 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 776 001d 00000000 		.4byte	0
 777 0021 00000000 		.4byte	.Ldebug_line0
 778 0025 02       		.uleb128 0x2
 779 0026 04       		.byte	0x4
 780 0027 07       		.byte	0x7
 781 0028 D2020000 		.4byte	.LASF0
 782 002c 03       		.uleb128 0x3
 783 002d 04       		.byte	0x4
 784 002e 05       		.byte	0x5
 785 002f 696E7400 		.ascii	"int\000"
 786 0033 02       		.uleb128 0x2
 787 0034 08       		.byte	0x8
 788 0035 05       		.byte	0x5
 789 0036 58010000 		.4byte	.LASF1
 790 003a 02       		.uleb128 0x2
 791 003b 08       		.byte	0x8
 792 003c 04       		.byte	0x4
 793 003d 21020000 		.4byte	.LASF2
 794 0041 02       		.uleb128 0x2
 795 0042 01       		.byte	0x1
 796 0043 06       		.byte	0x6
 797 0044 6F020000 		.4byte	.LASF3
 798 0048 02       		.uleb128 0x2
 799 0049 01       		.byte	0x1
 800 004a 08       		.byte	0x8
 801 004b 4F020000 		.4byte	.LASF4
 802 004f 02       		.uleb128 0x2
 803 0050 02       		.byte	0x2
 804 0051 05       		.byte	0x5
 805 0052 6E000000 		.4byte	.LASF5
 806 0056 02       		.uleb128 0x2
 807 0057 02       		.byte	0x2
 808 0058 07       		.byte	0x7
 809 0059 24030000 		.4byte	.LASF6
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 34


 810 005d 04       		.uleb128 0x4
 811 005e BE040000 		.4byte	.LASF8
 812 0062 03       		.byte	0x3
 813 0063 3F       		.byte	0x3f
 814 0064 68000000 		.4byte	0x68
 815 0068 02       		.uleb128 0x2
 816 0069 04       		.byte	0x4
 817 006a 05       		.byte	0x5
 818 006b 8A010000 		.4byte	.LASF7
 819 006f 04       		.uleb128 0x4
 820 0070 99000000 		.4byte	.LASF9
 821 0074 03       		.byte	0x3
 822 0075 41       		.byte	0x41
 823 0076 7A000000 		.4byte	0x7a
 824 007a 02       		.uleb128 0x2
 825 007b 04       		.byte	0x4
 826 007c 07       		.byte	0x7
 827 007d 1C040000 		.4byte	.LASF10
 828 0081 02       		.uleb128 0x2
 829 0082 08       		.byte	0x8
 830 0083 07       		.byte	0x7
 831 0084 83020000 		.4byte	.LASF11
 832 0088 02       		.uleb128 0x2
 833 0089 04       		.byte	0x4
 834 008a 07       		.byte	0x7
 835 008b E7040000 		.4byte	.LASF12
 836 008f 05       		.uleb128 0x5
 837 0090 04       		.byte	0x4
 838 0091 02       		.uleb128 0x2
 839 0092 01       		.byte	0x1
 840 0093 08       		.byte	0x8
 841 0094 79030000 		.4byte	.LASF13
 842 0098 04       		.uleb128 0x4
 843 0099 7B020000 		.4byte	.LASF14
 844 009d 04       		.byte	0x4
 845 009e 2C       		.byte	0x2c
 846 009f 5D000000 		.4byte	0x5d
 847 00a3 04       		.uleb128 0x4
 848 00a4 BC020000 		.4byte	.LASF15
 849 00a8 04       		.byte	0x4
 850 00a9 30       		.byte	0x30
 851 00aa 6F000000 		.4byte	0x6f
 852 00ae 02       		.uleb128 0x2
 853 00af 04       		.byte	0x4
 854 00b0 04       		.byte	0x4
 855 00b1 00000000 		.4byte	.LASF16
 856 00b5 02       		.uleb128 0x2
 857 00b6 08       		.byte	0x8
 858 00b7 04       		.byte	0x4
 859 00b8 16050000 		.4byte	.LASF17
 860 00bc 04       		.uleb128 0x4
 861 00bd EA020000 		.4byte	.LASF18
 862 00c1 02       		.byte	0x2
 863 00c2 38       		.byte	0x38
 864 00c3 68000000 		.4byte	0x68
 865 00c7 04       		.uleb128 0x4
 866 00c8 63040000 		.4byte	.LASF19
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 35


 867 00cc 02       		.byte	0x2
 868 00cd 39       		.byte	0x39
 869 00ce 7A000000 		.4byte	0x7a
 870 00d2 04       		.uleb128 0x4
 871 00d3 16020000 		.4byte	.LASF20
 872 00d7 02       		.byte	0x2
 873 00d8 3F       		.byte	0x3f
 874 00d9 A3000000 		.4byte	0xa3
 875 00dd 06       		.uleb128 0x6
 876 00de F6010000 		.4byte	.LASF27
 877 00e2 14       		.byte	0x14
 878 00e3 05       		.byte	0x5
 879 00e4 8B       		.byte	0x8b
 880 00e5 26010000 		.4byte	0x126
 881 00e9 07       		.uleb128 0x7
 882 00ea BA010000 		.4byte	.LASF21
 883 00ee 05       		.byte	0x5
 884 00ef 8E       		.byte	0x8e
 885 00f0 D2000000 		.4byte	0xd2
 886 00f4 00       		.byte	0
 887 00f5 07       		.uleb128 0x7
 888 00f6 8B030000 		.4byte	.LASF22
 889 00fa 05       		.byte	0x5
 890 00fb 8F       		.byte	0x8f
 891 00fc 26010000 		.4byte	0x126
 892 0100 04       		.byte	0x4
 893 0101 07       		.uleb128 0x7
 894 0102 81000000 		.4byte	.LASF23
 895 0106 05       		.byte	0x5
 896 0107 90       		.byte	0x90
 897 0108 26010000 		.4byte	0x126
 898 010c 08       		.byte	0x8
 899 010d 07       		.uleb128 0x7
 900 010e C2000000 		.4byte	.LASF24
 901 0112 05       		.byte	0x5
 902 0113 91       		.byte	0x91
 903 0114 8F000000 		.4byte	0x8f
 904 0118 0C       		.byte	0xc
 905 0119 07       		.uleb128 0x7
 906 011a F5020000 		.4byte	.LASF25
 907 011e 05       		.byte	0x5
 908 011f 92       		.byte	0x92
 909 0120 8F000000 		.4byte	0x8f
 910 0124 10       		.byte	0x10
 911 0125 00       		.byte	0
 912 0126 08       		.uleb128 0x8
 913 0127 04       		.byte	0x4
 914 0128 DD000000 		.4byte	0xdd
 915 012c 04       		.uleb128 0x4
 916 012d DF020000 		.4byte	.LASF26
 917 0131 05       		.byte	0x5
 918 0132 95       		.byte	0x95
 919 0133 DD000000 		.4byte	0xdd
 920 0137 06       		.uleb128 0x6
 921 0138 EB050000 		.4byte	.LASF28
 922 013c 0C       		.byte	0xc
 923 013d 05       		.byte	0x5
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 36


 924 013e 97       		.byte	0x97
 925 013f 68010000 		.4byte	0x168
 926 0143 07       		.uleb128 0x7
 927 0144 BA010000 		.4byte	.LASF21
 928 0148 05       		.byte	0x5
 929 0149 9A       		.byte	0x9a
 930 014a D2000000 		.4byte	0xd2
 931 014e 00       		.byte	0
 932 014f 07       		.uleb128 0x7
 933 0150 8B030000 		.4byte	.LASF22
 934 0154 05       		.byte	0x5
 935 0155 9B       		.byte	0x9b
 936 0156 26010000 		.4byte	0x126
 937 015a 04       		.byte	0x4
 938 015b 07       		.uleb128 0x7
 939 015c 81000000 		.4byte	.LASF23
 940 0160 05       		.byte	0x5
 941 0161 9C       		.byte	0x9c
 942 0162 26010000 		.4byte	0x126
 943 0166 08       		.byte	0x8
 944 0167 00       		.byte	0
 945 0168 04       		.uleb128 0x4
 946 0169 49010000 		.4byte	.LASF29
 947 016d 05       		.byte	0x5
 948 016e 9E       		.byte	0x9e
 949 016f 37010000 		.4byte	0x137
 950 0173 06       		.uleb128 0x6
 951 0174 93010000 		.4byte	.LASF30
 952 0178 14       		.byte	0x14
 953 0179 05       		.byte	0x5
 954 017a A3       		.byte	0xa3
 955 017b A4010000 		.4byte	0x1a4
 956 017f 07       		.uleb128 0x7
 957 0180 94040000 		.4byte	.LASF31
 958 0184 05       		.byte	0x5
 959 0185 A6       		.byte	0xa6
 960 0186 A4010000 		.4byte	0x1a4
 961 018a 00       		.byte	0
 962 018b 07       		.uleb128 0x7
 963 018c 29050000 		.4byte	.LASF32
 964 0190 05       		.byte	0x5
 965 0191 A7       		.byte	0xa7
 966 0192 A9010000 		.4byte	0x1a9
 967 0196 04       		.byte	0x4
 968 0197 07       		.uleb128 0x7
 969 0198 78000000 		.4byte	.LASF33
 970 019c 05       		.byte	0x5
 971 019d A8       		.byte	0xa8
 972 019e 68010000 		.4byte	0x168
 973 01a2 08       		.byte	0x8
 974 01a3 00       		.byte	0
 975 01a4 09       		.uleb128 0x9
 976 01a5 C7000000 		.4byte	0xc7
 977 01a9 08       		.uleb128 0x8
 978 01aa 04       		.byte	0x4
 979 01ab 2C010000 		.4byte	0x12c
 980 01af 04       		.uleb128 0x4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 37


 981 01b0 42010000 		.4byte	.LASF34
 982 01b4 05       		.byte	0x5
 983 01b5 AA       		.byte	0xaa
 984 01b6 73010000 		.4byte	0x173
 985 01ba 04       		.uleb128 0x4
 986 01bb D7000000 		.4byte	.LASF35
 987 01bf 06       		.byte	0x6
 988 01c0 51       		.byte	0x51
 989 01c1 8F000000 		.4byte	0x8f
 990 01c5 04       		.uleb128 0x4
 991 01c6 A4000000 		.4byte	.LASF36
 992 01ca 06       		.byte	0x6
 993 01cb 5B       		.byte	0x5b
 994 01cc D2000000 		.4byte	0xd2
 995 01d0 06       		.uleb128 0x6
 996 01d1 99010000 		.4byte	.LASF37
 997 01d5 1C       		.byte	0x1c
 998 01d6 01       		.byte	0x1
 999 01d7 3F       		.byte	0x3f
 1000 01d8 01020000 		.4byte	0x201
 1001 01dc 07       		.uleb128 0x7
 1002 01dd A5030000 		.4byte	.LASF38
 1003 01e1 01       		.byte	0x1
 1004 01e2 41       		.byte	0x41
 1005 01e3 C5010000 		.4byte	0x1c5
 1006 01e7 00       		.byte	0
 1007 01e8 07       		.uleb128 0x7
 1008 01e9 D1010000 		.4byte	.LASF39
 1009 01ed 01       		.byte	0x1
 1010 01ee 42       		.byte	0x42
 1011 01ef AF010000 		.4byte	0x1af
 1012 01f3 04       		.byte	0x4
 1013 01f4 07       		.uleb128 0x7
 1014 01f5 1F010000 		.4byte	.LASF40
 1015 01f9 01       		.byte	0x1
 1016 01fa 45       		.byte	0x45
 1017 01fb C7000000 		.4byte	0xc7
 1018 01ff 18       		.byte	0x18
 1019 0200 00       		.byte	0
 1020 0201 04       		.uleb128 0x4
 1021 0202 6B060000 		.4byte	.LASF41
 1022 0206 01       		.byte	0x1
 1023 0207 4B       		.byte	0x4b
 1024 0208 D0010000 		.4byte	0x1d0
 1025 020c 0A       		.uleb128 0xa
 1026 020d 69030000 		.4byte	.LASF94
 1027 0211 02       		.byte	0x2
 1028 0212 E3       		.byte	0xe3
 1029 0213 03       		.byte	0x3
 1030 0214 24020000 		.4byte	0x224
 1031 0218 0B       		.uleb128 0xb
 1032 0219 6F040000 		.4byte	.LASF95
 1033 021d 02       		.byte	0x2
 1034 021e E3       		.byte	0xe3
 1035 021f A3000000 		.4byte	0xa3
 1036 0223 00       		.byte	0
 1037 0224 0C       		.uleb128 0xc
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 38


 1038 0225 EA000000 		.4byte	.LASF96
 1039 0229 02       		.byte	0x2
 1040 022a CF       		.byte	0xcf
 1041 022b A3000000 		.4byte	0xa3
 1042 022f 03       		.byte	0x3
 1043 0230 4B020000 		.4byte	0x24b
 1044 0234 0D       		.uleb128 0xd
 1045 0235 5D020000 		.4byte	.LASF42
 1046 0239 02       		.byte	0x2
 1047 023a D1       		.byte	0xd1
 1048 023b A3000000 		.4byte	0xa3
 1049 023f 0D       		.uleb128 0xd
 1050 0240 18000000 		.4byte	.LASF43
 1051 0244 02       		.byte	0x2
 1052 0245 D1       		.byte	0xd1
 1053 0246 A3000000 		.4byte	0xa3
 1054 024a 00       		.byte	0
 1055 024b 0E       		.uleb128 0xe
 1056 024c 54030000 		.4byte	.LASF97
 1057 0250 01       		.byte	0x1
 1058 0251 9002     		.2byte	0x290
 1059 0253 BC000000 		.4byte	0xbc
 1060 0257 00000000 		.4byte	.LFB77
 1061 025b 1C000000 		.4byte	.LFE77-.LFB77
 1062 025f 01       		.uleb128 0x1
 1063 0260 9C       		.byte	0x9c
 1064 0261 A2020000 		.4byte	0x2a2
 1065 0265 0F       		.uleb128 0xf
 1066 0266 FB050000 		.4byte	.LASF44
 1067 026a 01       		.byte	0x1
 1068 026b 9002     		.2byte	0x290
 1069 026d A2020000 		.4byte	0x2a2
 1070 0271 00000000 		.4byte	.LLST0
 1071 0275 10       		.uleb128 0x10
 1072 0276 32010000 		.4byte	.LASF45
 1073 027a 01       		.byte	0x1
 1074 027b 9002     		.2byte	0x290
 1075 027d A2020000 		.4byte	0x2a2
 1076 0281 01       		.uleb128 0x1
 1077 0282 51       		.byte	0x51
 1078 0283 10       		.uleb128 0x10
 1079 0284 44000000 		.4byte	.LASF46
 1080 0288 01       		.byte	0x1
 1081 0289 9002     		.2byte	0x290
 1082 028b A7020000 		.4byte	0x2a7
 1083 028f 01       		.uleb128 0x1
 1084 0290 52       		.byte	0x52
 1085 0291 11       		.uleb128 0x11
 1086 0292 B0000000 		.4byte	.LASF47
 1087 0296 01       		.byte	0x1
 1088 0297 9202     		.2byte	0x292
 1089 0299 BC000000 		.4byte	0xbc
 1090 029d 6C000000 		.4byte	.LLST1
 1091 02a1 00       		.byte	0
 1092 02a2 12       		.uleb128 0x12
 1093 02a3 C5010000 		.4byte	0x1c5
 1094 02a7 12       		.uleb128 0x12
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 39


 1095 02a8 BC000000 		.4byte	0xbc
 1096 02ac 13       		.uleb128 0x13
 1097 02ad 06000000 		.4byte	.LASF49
 1098 02b1 01       		.byte	0x1
 1099 02b2 8E       		.byte	0x8e
 1100 02b3 BA010000 		.4byte	0x1ba
 1101 02b7 00000000 		.4byte	.LFB68
 1102 02bb 1A000000 		.4byte	.LFE68-.LFB68
 1103 02bf 01       		.uleb128 0x1
 1104 02c0 9C       		.byte	0x9c
 1105 02c1 F8020000 		.4byte	0x2f8
 1106 02c5 14       		.uleb128 0x14
 1107 02c6 1D050000 		.4byte	.LASF48
 1108 02ca 01       		.byte	0x1
 1109 02cb 90       		.byte	0x90
 1110 02cc F8020000 		.4byte	0x2f8
 1111 02d0 8B000000 		.4byte	.LLST2
 1112 02d4 15       		.uleb128 0x15
 1113 02d5 08000000 		.4byte	.LVL8
 1114 02d9 25090000 		.4byte	0x925
 1115 02dd E7020000 		.4byte	0x2e7
 1116 02e1 16       		.uleb128 0x16
 1117 02e2 01       		.uleb128 0x1
 1118 02e3 50       		.byte	0x50
 1119 02e4 01       		.uleb128 0x1
 1120 02e5 4C       		.byte	0x4c
 1121 02e6 00       		.byte	0
 1122 02e7 17       		.uleb128 0x17
 1123 02e8 16000000 		.4byte	.LVL10
 1124 02ec 30090000 		.4byte	0x930
 1125 02f0 16       		.uleb128 0x16
 1126 02f1 01       		.uleb128 0x1
 1127 02f2 50       		.byte	0x50
 1128 02f3 02       		.uleb128 0x2
 1129 02f4 74       		.byte	0x74
 1130 02f5 04       		.sleb128 4
 1131 02f6 00       		.byte	0
 1132 02f7 00       		.byte	0
 1133 02f8 08       		.uleb128 0x8
 1134 02f9 04       		.byte	0x4
 1135 02fa 01020000 		.4byte	0x201
 1136 02fe 18       		.uleb128 0x18
 1137 02ff 01030000 		.4byte	.LASF50
 1138 0303 01       		.byte	0x1
 1139 0304 2801     		.2byte	0x128
 1140 0306 C5010000 		.4byte	0x1c5
 1141 030a 00000000 		.4byte	.LFB70
 1142 030e B0000000 		.4byte	.LFE70-.LFB70
 1143 0312 01       		.uleb128 0x1
 1144 0313 9C       		.byte	0x9c
 1145 0314 66040000 		.4byte	0x466
 1146 0318 0F       		.uleb128 0xf
 1147 0319 FC040000 		.4byte	.LASF51
 1148 031d 01       		.byte	0x1
 1149 031e 2801     		.2byte	0x128
 1150 0320 BA010000 		.4byte	0x1ba
 1151 0324 A9000000 		.4byte	.LLST3
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 40


 1152 0328 0F       		.uleb128 0xf
 1153 0329 32010000 		.4byte	.LASF45
 1154 032d 01       		.byte	0x1
 1155 032e 2801     		.2byte	0x128
 1156 0330 A2020000 		.4byte	0x2a2
 1157 0334 D5000000 		.4byte	.LLST4
 1158 0338 0F       		.uleb128 0xf
 1159 0339 8C000000 		.4byte	.LASF52
 1160 033d 01       		.byte	0x1
 1161 033e 2801     		.2byte	0x128
 1162 0340 A7020000 		.4byte	0x2a7
 1163 0344 01010000 		.4byte	.LLST5
 1164 0348 0F       		.uleb128 0xf
 1165 0349 44000000 		.4byte	.LASF46
 1166 034d 01       		.byte	0x1
 1167 034e 2801     		.2byte	0x128
 1168 0350 A7020000 		.4byte	0x2a7
 1169 0354 2D010000 		.4byte	.LLST6
 1170 0358 0F       		.uleb128 0xf
 1171 0359 CA000000 		.4byte	.LASF53
 1172 035d 01       		.byte	0x1
 1173 035e 2801     		.2byte	0x128
 1174 0360 D2000000 		.4byte	0xd2
 1175 0364 59010000 		.4byte	.LLST7
 1176 0368 11       		.uleb128 0x11
 1177 0369 1D050000 		.4byte	.LASF48
 1178 036d 01       		.byte	0x1
 1179 036e 2A01     		.2byte	0x12a
 1180 0370 F8020000 		.4byte	0x2f8
 1181 0374 9C010000 		.4byte	.LLST8
 1182 0378 11       		.uleb128 0x11
 1183 0379 13040000 		.4byte	.LASF54
 1184 037d 01       		.byte	0x1
 1185 037e 2B01     		.2byte	0x12b
 1186 0380 C5010000 		.4byte	0x1c5
 1187 0384 C8010000 		.4byte	.LLST9
 1188 0388 11       		.uleb128 0x11
 1189 0389 D8030000 		.4byte	.LASF55
 1190 038d 01       		.byte	0x1
 1191 038e 2B01     		.2byte	0x12b
 1192 0390 C5010000 		.4byte	0x1c5
 1193 0394 13020000 		.4byte	.LLST10
 1194 0398 11       		.uleb128 0x11
 1195 0399 B0000000 		.4byte	.LASF47
 1196 039d 01       		.byte	0x1
 1197 039e 2C01     		.2byte	0x12c
 1198 03a0 BC000000 		.4byte	0xbc
 1199 03a4 3E020000 		.4byte	.LLST11
 1200 03a8 11       		.uleb128 0x11
 1201 03a9 41060000 		.4byte	.LASF56
 1202 03ad 01       		.byte	0x1
 1203 03ae 2C01     		.2byte	0x12c
 1204 03b0 BC000000 		.4byte	0xbc
 1205 03b4 5C020000 		.4byte	.LLST12
 1206 03b8 11       		.uleb128 0x11
 1207 03b9 31050000 		.4byte	.LASF57
 1208 03bd 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 41


 1209 03be 2D01     		.2byte	0x12d
 1210 03c0 BC000000 		.4byte	0xbc
 1211 03c4 6F020000 		.4byte	.LLST13
 1212 03c8 19       		.uleb128 0x19
 1213 03c9 00000000 		.4byte	.Ldebug_ranges0+0
 1214 03cd 18040000 		.4byte	0x418
 1215 03d1 11       		.uleb128 0x11
 1216 03d2 FB050000 		.4byte	.LASF44
 1217 03d6 01       		.byte	0x1
 1218 03d7 3C01     		.2byte	0x13c
 1219 03d9 A2020000 		.4byte	0x2a2
 1220 03dd 8F020000 		.4byte	.LLST14
 1221 03e1 15       		.uleb128 0x15
 1222 03e2 1E000000 		.4byte	.LVL15
 1223 03e6 4B020000 		.4byte	0x24b
 1224 03ea 01040000 		.4byte	0x401
 1225 03ee 16       		.uleb128 0x16
 1226 03ef 01       		.uleb128 0x1
 1227 03f0 50       		.byte	0x50
 1228 03f1 02       		.uleb128 0x2
 1229 03f2 74       		.byte	0x74
 1230 03f3 00       		.sleb128 0
 1231 03f4 16       		.uleb128 0x16
 1232 03f5 01       		.uleb128 0x1
 1233 03f6 51       		.byte	0x51
 1234 03f7 02       		.uleb128 0x2
 1235 03f8 76       		.byte	0x76
 1236 03f9 00       		.sleb128 0
 1237 03fa 16       		.uleb128 0x16
 1238 03fb 01       		.uleb128 0x1
 1239 03fc 52       		.byte	0x52
 1240 03fd 02       		.uleb128 0x2
 1241 03fe 78       		.byte	0x78
 1242 03ff 00       		.sleb128 0
 1243 0400 00       		.byte	0
 1244 0401 17       		.uleb128 0x17
 1245 0402 54000000 		.4byte	.LVL22
 1246 0406 3C090000 		.4byte	0x93c
 1247 040a 16       		.uleb128 0x16
 1248 040b 01       		.uleb128 0x1
 1249 040c 50       		.byte	0x50
 1250 040d 02       		.uleb128 0x2
 1251 040e 77       		.byte	0x77
 1252 040f 04       		.sleb128 4
 1253 0410 16       		.uleb128 0x16
 1254 0411 01       		.uleb128 0x1
 1255 0412 52       		.byte	0x52
 1256 0413 02       		.uleb128 0x2
 1257 0414 75       		.byte	0x75
 1258 0415 00       		.sleb128 0
 1259 0416 00       		.byte	0
 1260 0417 00       		.byte	0
 1261 0418 1A       		.uleb128 0x1a
 1262 0419 12000000 		.4byte	.LVL13
 1263 041d 48090000 		.4byte	0x948
 1264 0421 1A       		.uleb128 0x1a
 1265 0422 5E000000 		.4byte	.LVL26
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 42


 1266 0426 54090000 		.4byte	0x954
 1267 042a 1A       		.uleb128 0x1a
 1268 042b 76000000 		.4byte	.LVL27
 1269 042f 60090000 		.4byte	0x960
 1270 0433 1A       		.uleb128 0x1a
 1271 0434 82000000 		.4byte	.LVL29
 1272 0438 6C090000 		.4byte	0x96c
 1273 043c 15       		.uleb128 0x15
 1274 043d 8E000000 		.4byte	.LVL31
 1275 0441 4B020000 		.4byte	0x24b
 1276 0445 5C040000 		.4byte	0x45c
 1277 0449 16       		.uleb128 0x16
 1278 044a 01       		.uleb128 0x1
 1279 044b 50       		.byte	0x50
 1280 044c 02       		.uleb128 0x2
 1281 044d 74       		.byte	0x74
 1282 044e 00       		.sleb128 0
 1283 044f 16       		.uleb128 0x16
 1284 0450 01       		.uleb128 0x1
 1285 0451 51       		.byte	0x51
 1286 0452 02       		.uleb128 0x2
 1287 0453 76       		.byte	0x76
 1288 0454 00       		.sleb128 0
 1289 0455 16       		.uleb128 0x16
 1290 0456 01       		.uleb128 0x1
 1291 0457 52       		.byte	0x52
 1292 0458 02       		.uleb128 0x2
 1293 0459 78       		.byte	0x78
 1294 045a 00       		.sleb128 0
 1295 045b 00       		.byte	0
 1296 045c 1A       		.uleb128 0x1a
 1297 045d A0000000 		.4byte	.LVL34
 1298 0461 77090000 		.4byte	0x977
 1299 0465 00       		.byte	0
 1300 0466 18       		.uleb128 0x18
 1301 0467 01020000 		.4byte	.LASF58
 1302 046b 01       		.byte	0x1
 1303 046c BE01     		.2byte	0x1be
 1304 046e C5010000 		.4byte	0x1c5
 1305 0472 00000000 		.4byte	.LFB71
 1306 0476 1A000000 		.4byte	.LFE71-.LFB71
 1307 047a 01       		.uleb128 0x1
 1308 047b 9C       		.byte	0x9c
 1309 047c D1040000 		.4byte	0x4d1
 1310 0480 0F       		.uleb128 0xf
 1311 0481 FC040000 		.4byte	.LASF51
 1312 0485 01       		.byte	0x1
 1313 0486 BE01     		.2byte	0x1be
 1314 0488 BA010000 		.4byte	0x1ba
 1315 048c AD020000 		.4byte	.LLST15
 1316 0490 0F       		.uleb128 0xf
 1317 0491 08050000 		.4byte	.LASF59
 1318 0495 01       		.byte	0x1
 1319 0496 BE01     		.2byte	0x1be
 1320 0498 A2020000 		.4byte	0x2a2
 1321 049c CB020000 		.4byte	.LLST16
 1322 04a0 11       		.uleb128 0x11
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 43


 1323 04a1 1D050000 		.4byte	.LASF48
 1324 04a5 01       		.byte	0x1
 1325 04a6 C001     		.2byte	0x1c0
 1326 04a8 F8020000 		.4byte	0x2f8
 1327 04ac F7020000 		.4byte	.LLST17
 1328 04b0 1B       		.uleb128 0x1b
 1329 04b1 13040000 		.4byte	.LASF54
 1330 04b5 01       		.byte	0x1
 1331 04b6 C101     		.2byte	0x1c1
 1332 04b8 C5010000 		.4byte	0x1c5
 1333 04bc 01       		.uleb128 0x1
 1334 04bd 55       		.byte	0x55
 1335 04be 1A       		.uleb128 0x1a
 1336 04bf 0A000000 		.4byte	.LVL39
 1337 04c3 6C090000 		.4byte	0x96c
 1338 04c7 1A       		.uleb128 0x1a
 1339 04c8 16000000 		.4byte	.LVL42
 1340 04cc 77090000 		.4byte	0x977
 1341 04d0 00       		.byte	0
 1342 04d1 18       		.uleb128 0x18
 1343 04d2 E6030000 		.4byte	.LASF60
 1344 04d6 01       		.byte	0x1
 1345 04d7 E801     		.2byte	0x1e8
 1346 04d9 C5010000 		.4byte	0x1c5
 1347 04dd 00000000 		.4byte	.LFB72
 1348 04e1 1C000000 		.4byte	.LFE72-.LFB72
 1349 04e5 01       		.uleb128 0x1
 1350 04e6 9C       		.byte	0x9c
 1351 04e7 65050000 		.4byte	0x565
 1352 04eb 0F       		.uleb128 0xf
 1353 04ec FC040000 		.4byte	.LASF51
 1354 04f0 01       		.byte	0x1
 1355 04f1 E801     		.2byte	0x1e8
 1356 04f3 BA010000 		.4byte	0x1ba
 1357 04f7 15030000 		.4byte	.LLST18
 1358 04fb 1C       		.uleb128 0x1c
 1359 04fc C8040000 		.4byte	.LASF61
 1360 0500 01       		.byte	0x1
 1361 0501 EA01     		.2byte	0x1ea
 1362 0503 C7000000 		.4byte	0xc7
 1363 0507 11       		.uleb128 0x11
 1364 0508 1D050000 		.4byte	.LASF48
 1365 050c 01       		.byte	0x1
 1366 050d EB01     		.2byte	0x1eb
 1367 050f F8020000 		.4byte	0x2f8
 1368 0513 36030000 		.4byte	.LLST19
 1369 0517 1B       		.uleb128 0x1b
 1370 0518 13040000 		.4byte	.LASF54
 1371 051c 01       		.byte	0x1
 1372 051d EC01     		.2byte	0x1ec
 1373 051f C5010000 		.4byte	0x1c5
 1374 0523 01       		.uleb128 0x1
 1375 0524 50       		.byte	0x50
 1376 0525 1D       		.uleb128 0x1d
 1377 0526 24020000 		.4byte	0x224
 1378 052a 00000000 		.4byte	.LBB8
 1379 052e 14000000 		.4byte	.LBE8-.LBB8
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 44


 1380 0532 01       		.byte	0x1
 1381 0533 EE01     		.2byte	0x1ee
 1382 0535 4E050000 		.4byte	0x54e
 1383 0539 1E       		.uleb128 0x1e
 1384 053a 00000000 		.4byte	.LBB9
 1385 053e 14000000 		.4byte	.LBE9-.LBB9
 1386 0542 1F       		.uleb128 0x1f
 1387 0543 34020000 		.4byte	0x234
 1388 0547 1F       		.uleb128 0x1f
 1389 0548 3F020000 		.4byte	0x23f
 1390 054c 00       		.byte	0
 1391 054d 00       		.byte	0
 1392 054e 20       		.uleb128 0x20
 1393 054f 0C020000 		.4byte	0x20c
 1394 0553 16000000 		.4byte	.LBB10
 1395 0557 04000000 		.4byte	.LBE10-.LBB10
 1396 055b 01       		.byte	0x1
 1397 055c F201     		.2byte	0x1f2
 1398 055e 21       		.uleb128 0x21
 1399 055f 18020000 		.4byte	0x218
 1400 0563 00       		.byte	0
 1401 0564 00       		.byte	0
 1402 0565 18       		.uleb128 0x18
 1403 0566 00040000 		.4byte	.LASF62
 1404 056a 01       		.byte	0x1
 1405 056b F801     		.2byte	0x1f8
 1406 056d C5010000 		.4byte	0x1c5
 1407 0571 00000000 		.4byte	.LFB73
 1408 0575 6E000000 		.4byte	.LFE73-.LFB73
 1409 0579 01       		.uleb128 0x1
 1410 057a 9C       		.byte	0x9c
 1411 057b 49060000 		.4byte	0x649
 1412 057f 0F       		.uleb128 0xf
 1413 0580 FC040000 		.4byte	.LASF51
 1414 0584 01       		.byte	0x1
 1415 0585 F801     		.2byte	0x1f8
 1416 0587 BA010000 		.4byte	0x1ba
 1417 058b 57030000 		.4byte	.LLST20
 1418 058f 0F       		.uleb128 0xf
 1419 0590 51060000 		.4byte	.LASF63
 1420 0594 01       		.byte	0x1
 1421 0595 F801     		.2byte	0x1f8
 1422 0597 A2020000 		.4byte	0x2a2
 1423 059b 75030000 		.4byte	.LLST21
 1424 059f 11       		.uleb128 0x11
 1425 05a0 AF010000 		.4byte	.LASF64
 1426 05a4 01       		.byte	0x1
 1427 05a5 FA01     		.2byte	0x1fa
 1428 05a7 A9010000 		.4byte	0x1a9
 1429 05ab A1030000 		.4byte	.LLST22
 1430 05af 11       		.uleb128 0x11
 1431 05b0 8B030000 		.4byte	.LASF22
 1432 05b4 01       		.byte	0x1
 1433 05b5 FA01     		.2byte	0x1fa
 1434 05b7 A9010000 		.4byte	0x1a9
 1435 05bb BF030000 		.4byte	.LLST23
 1436 05bf 1B       		.uleb128 0x1b
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 45


 1437 05c0 54000000 		.4byte	.LASF65
 1438 05c4 01       		.byte	0x1
 1439 05c5 FB01     		.2byte	0x1fb
 1440 05c7 49060000 		.4byte	0x649
 1441 05cb 01       		.uleb128 0x1
 1442 05cc 56       		.byte	0x56
 1443 05cd 11       		.uleb128 0x11
 1444 05ce 83010000 		.4byte	.LASF66
 1445 05d2 01       		.byte	0x1
 1446 05d3 FC01     		.2byte	0x1fc
 1447 05d5 54060000 		.4byte	0x654
 1448 05d9 D2030000 		.4byte	.LLST24
 1449 05dd 11       		.uleb128 0x11
 1450 05de 08050000 		.4byte	.LASF59
 1451 05e2 01       		.byte	0x1
 1452 05e3 FD01     		.2byte	0x1fd
 1453 05e5 C5010000 		.4byte	0x1c5
 1454 05e9 F4030000 		.4byte	.LLST25
 1455 05ed 11       		.uleb128 0x11
 1456 05ee FD000000 		.4byte	.LASF67
 1457 05f2 01       		.byte	0x1
 1458 05f3 FD01     		.2byte	0x1fd
 1459 05f5 C5010000 		.4byte	0x1c5
 1460 05f9 13040000 		.4byte	.LLST26
 1461 05fd 11       		.uleb128 0x11
 1462 05fe D8030000 		.4byte	.LASF55
 1463 0602 01       		.byte	0x1
 1464 0603 FD01     		.2byte	0x1fd
 1465 0605 C5010000 		.4byte	0x1c5
 1466 0609 31040000 		.4byte	.LLST27
 1467 060d 11       		.uleb128 0x11
 1468 060e 1D050000 		.4byte	.LASF48
 1469 0612 01       		.byte	0x1
 1470 0613 FE01     		.2byte	0x1fe
 1471 0615 F8020000 		.4byte	0x2f8
 1472 0619 4B040000 		.4byte	.LLST28
 1473 061d 11       		.uleb128 0x11
 1474 061e F0040000 		.4byte	.LASF68
 1475 0622 01       		.byte	0x1
 1476 0623 FF01     		.2byte	0x1ff
 1477 0625 BC000000 		.4byte	0xbc
 1478 0629 69040000 		.4byte	.LLST29
 1479 062d 1A       		.uleb128 0x1a
 1480 062e 0E000000 		.4byte	.LVL48
 1481 0632 48090000 		.4byte	0x948
 1482 0636 1A       		.uleb128 0x1a
 1483 0637 58000000 		.4byte	.LVL58
 1484 063b 82090000 		.4byte	0x982
 1485 063f 1A       		.uleb128 0x1a
 1486 0640 6A000000 		.4byte	.LVL61
 1487 0644 54090000 		.4byte	0x954
 1488 0648 00       		.byte	0
 1489 0649 08       		.uleb128 0x8
 1490 064a 04       		.byte	0x4
 1491 064b 4F060000 		.4byte	0x64f
 1492 064f 12       		.uleb128 0x12
 1493 0650 2C010000 		.4byte	0x12c
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 46


 1494 0654 08       		.uleb128 0x8
 1495 0655 04       		.byte	0x4
 1496 0656 AF010000 		.4byte	0x1af
 1497 065a 13       		.uleb128 0x13
 1498 065b E6010000 		.4byte	.LASF69
 1499 065f 01       		.byte	0x1
 1500 0660 B0       		.byte	0xb0
 1501 0661 C5010000 		.4byte	0x1c5
 1502 0665 00000000 		.4byte	.LFB69
 1503 0669 90000000 		.4byte	.LFE69-.LFB69
 1504 066d 01       		.uleb128 0x1
 1505 066e 9C       		.byte	0x9c
 1506 066f 66070000 		.4byte	0x766
 1507 0673 22       		.uleb128 0x22
 1508 0674 FC040000 		.4byte	.LASF51
 1509 0678 01       		.byte	0x1
 1510 0679 B0       		.byte	0xb0
 1511 067a BA010000 		.4byte	0x1ba
 1512 067e 94040000 		.4byte	.LLST30
 1513 0682 22       		.uleb128 0x22
 1514 0683 51060000 		.4byte	.LASF63
 1515 0687 01       		.byte	0x1
 1516 0688 B0       		.byte	0xb0
 1517 0689 A2020000 		.4byte	0x2a2
 1518 068d C0040000 		.4byte	.LLST31
 1519 0691 22       		.uleb128 0x22
 1520 0692 32010000 		.4byte	.LASF45
 1521 0696 01       		.byte	0x1
 1522 0697 B0       		.byte	0xb0
 1523 0698 A2020000 		.4byte	0x2a2
 1524 069c EC040000 		.4byte	.LLST32
 1525 06a0 22       		.uleb128 0x22
 1526 06a1 CA000000 		.4byte	.LASF53
 1527 06a5 01       		.byte	0x1
 1528 06a6 B0       		.byte	0xb0
 1529 06a7 D2000000 		.4byte	0xd2
 1530 06ab 18050000 		.4byte	.LLST33
 1531 06af 14       		.uleb128 0x14
 1532 06b0 92030000 		.4byte	.LASF70
 1533 06b4 01       		.byte	0x1
 1534 06b5 B2       		.byte	0xb2
 1535 06b6 C5010000 		.4byte	0x1c5
 1536 06ba 4D050000 		.4byte	.LLST34
 1537 06be 14       		.uleb128 0x14
 1538 06bf 13040000 		.4byte	.LASF54
 1539 06c3 01       		.byte	0x1
 1540 06c4 B2       		.byte	0xb2
 1541 06c5 C5010000 		.4byte	0x1c5
 1542 06c9 60050000 		.4byte	.LLST35
 1543 06cd 14       		.uleb128 0x14
 1544 06ce 1D050000 		.4byte	.LASF48
 1545 06d2 01       		.byte	0x1
 1546 06d3 B3       		.byte	0xb3
 1547 06d4 F8020000 		.4byte	0x2f8
 1548 06d8 AB050000 		.4byte	.LLST36
 1549 06dc 14       		.uleb128 0x14
 1550 06dd 41060000 		.4byte	.LASF56
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 47


 1551 06e1 01       		.byte	0x1
 1552 06e2 B4       		.byte	0xb4
 1553 06e3 BC000000 		.4byte	0xbc
 1554 06e7 D7050000 		.4byte	.LLST37
 1555 06eb 14       		.uleb128 0x14
 1556 06ec 31050000 		.4byte	.LASF57
 1557 06f0 01       		.byte	0x1
 1558 06f1 B5       		.byte	0xb5
 1559 06f2 BC000000 		.4byte	0xbc
 1560 06f6 EA050000 		.4byte	.LLST38
 1561 06fa 1A       		.uleb128 0x1a
 1562 06fb 10000000 		.4byte	.LVL64
 1563 06ff 48090000 		.4byte	0x948
 1564 0703 15       		.uleb128 0x15
 1565 0704 1C000000 		.4byte	.LVL66
 1566 0708 65050000 		.4byte	0x565
 1567 070c 1D070000 		.4byte	0x71d
 1568 0710 16       		.uleb128 0x16
 1569 0711 01       		.uleb128 0x1
 1570 0712 50       		.byte	0x50
 1571 0713 02       		.uleb128 0x2
 1572 0714 75       		.byte	0x75
 1573 0715 00       		.sleb128 0
 1574 0716 16       		.uleb128 0x16
 1575 0717 01       		.uleb128 0x1
 1576 0718 51       		.byte	0x51
 1577 0719 02       		.uleb128 0x2
 1578 071a 74       		.byte	0x74
 1579 071b 00       		.sleb128 0
 1580 071c 00       		.byte	0
 1581 071d 15       		.uleb128 0x15
 1582 071e 40000000 		.4byte	.LVL71
 1583 0722 3C090000 		.4byte	0x93c
 1584 0726 41070000 		.4byte	0x741
 1585 072a 16       		.uleb128 0x16
 1586 072b 01       		.uleb128 0x1
 1587 072c 50       		.byte	0x50
 1588 072d 02       		.uleb128 0x2
 1589 072e 75       		.byte	0x75
 1590 072f 04       		.sleb128 4
 1591 0730 16       		.uleb128 0x16
 1592 0731 01       		.uleb128 0x1
 1593 0732 51       		.byte	0x51
 1594 0733 06       		.uleb128 0x6
 1595 0734 77       		.byte	0x77
 1596 0735 00       		.sleb128 0
 1597 0736 44       		.byte	0x44
 1598 0737 46       		.byte	0x46
 1599 0738 24       		.byte	0x24
 1600 0739 21       		.byte	0x21
 1601 073a 16       		.uleb128 0x16
 1602 073b 01       		.uleb128 0x1
 1603 073c 52       		.byte	0x52
 1604 073d 02       		.uleb128 0x2
 1605 073e 76       		.byte	0x76
 1606 073f 00       		.sleb128 0
 1607 0740 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 48


 1608 0741 1A       		.uleb128 0x1a
 1609 0742 4A000000 		.4byte	.LVL74
 1610 0746 54090000 		.4byte	0x954
 1611 074a 1A       		.uleb128 0x1a
 1612 074b 62000000 		.4byte	.LVL75
 1613 074f 60090000 		.4byte	0x960
 1614 0753 1A       		.uleb128 0x1a
 1615 0754 6E000000 		.4byte	.LVL77
 1616 0758 6C090000 		.4byte	0x96c
 1617 075c 1A       		.uleb128 0x1a
 1618 075d 80000000 		.4byte	.LVL80
 1619 0761 77090000 		.4byte	0x977
 1620 0765 00       		.byte	0
 1621 0766 23       		.uleb128 0x23
 1622 0767 0D010000 		.4byte	.LASF72
 1623 076b 01       		.byte	0x1
 1624 076c 5602     		.2byte	0x256
 1625 076e 00000000 		.4byte	.LFB74
 1626 0772 26000000 		.4byte	.LFE74-.LFB74
 1627 0776 01       		.uleb128 0x1
 1628 0777 9C       		.byte	0x9c
 1629 0778 E8070000 		.4byte	0x7e8
 1630 077c 0F       		.uleb128 0xf
 1631 077d FC040000 		.4byte	.LASF51
 1632 0781 01       		.byte	0x1
 1633 0782 5602     		.2byte	0x256
 1634 0784 BA010000 		.4byte	0x1ba
 1635 0788 FE050000 		.4byte	.LLST39
 1636 078c 11       		.uleb128 0x11
 1637 078d 1D050000 		.4byte	.LASF48
 1638 0791 01       		.byte	0x1
 1639 0792 5802     		.2byte	0x258
 1640 0794 F8020000 		.4byte	0x2f8
 1641 0798 1C060000 		.4byte	.LLST40
 1642 079c 11       		.uleb128 0x11
 1643 079d 1B060000 		.4byte	.LASF71
 1644 07a1 01       		.byte	0x1
 1645 07a2 5902     		.2byte	0x259
 1646 07a4 E8070000 		.4byte	0x7e8
 1647 07a8 3A060000 		.4byte	.LLST41
 1648 07ac 1A       		.uleb128 0x1a
 1649 07ad 08000000 		.4byte	.LVL85
 1650 07b1 48090000 		.4byte	0x948
 1651 07b5 15       		.uleb128 0x15
 1652 07b6 14000000 		.4byte	.LVL86
 1653 07ba 82090000 		.4byte	0x982
 1654 07be CA070000 		.4byte	0x7ca
 1655 07c2 16       		.uleb128 0x16
 1656 07c3 01       		.uleb128 0x1
 1657 07c4 51       		.byte	0x51
 1658 07c5 03       		.uleb128 0x3
 1659 07c6 40       		.byte	0x40
 1660 07c7 45       		.byte	0x45
 1661 07c8 24       		.byte	0x24
 1662 07c9 00       		.byte	0
 1663 07ca 15       		.uleb128 0x15
 1664 07cb 20000000 		.4byte	.LVL87
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 49


 1665 07cf 8E090000 		.4byte	0x98e
 1666 07d3 DE070000 		.4byte	0x7de
 1667 07d7 16       		.uleb128 0x16
 1668 07d8 01       		.uleb128 0x1
 1669 07d9 50       		.byte	0x50
 1670 07da 02       		.uleb128 0x2
 1671 07db 74       		.byte	0x74
 1672 07dc 00       		.sleb128 0
 1673 07dd 00       		.byte	0
 1674 07de 1A       		.uleb128 0x1a
 1675 07df 24000000 		.4byte	.LVL88
 1676 07e3 54090000 		.4byte	0x954
 1677 07e7 00       		.byte	0
 1678 07e8 08       		.uleb128 0x8
 1679 07e9 04       		.byte	0x4
 1680 07ea EE070000 		.4byte	0x7ee
 1681 07ee 12       		.uleb128 0x12
 1682 07ef AF010000 		.4byte	0x1af
 1683 07f3 23       		.uleb128 0x23
 1684 07f4 D0050000 		.4byte	.LASF73
 1685 07f8 01       		.byte	0x1
 1686 07f9 8202     		.2byte	0x282
 1687 07fb 00000000 		.4byte	.LFB75
 1688 07ff 08000000 		.4byte	.LFE75-.LFB75
 1689 0803 01       		.uleb128 0x1
 1690 0804 9C       		.byte	0x9c
 1691 0805 42080000 		.4byte	0x842
 1692 0809 0F       		.uleb128 0xf
 1693 080a C5020000 		.4byte	.LASF74
 1694 080e 01       		.byte	0x1
 1695 080f 8202     		.2byte	0x282
 1696 0811 8F000000 		.4byte	0x8f
 1697 0815 5C060000 		.4byte	.LLST42
 1698 0819 0F       		.uleb128 0xf
 1699 081a C5010000 		.4byte	.LASF75
 1700 081e 01       		.byte	0x1
 1701 081f 8202     		.2byte	0x282
 1702 0821 42080000 		.4byte	0x842
 1703 0825 7D060000 		.4byte	.LLST43
 1704 0829 17       		.uleb128 0x17
 1705 082a 06000000 		.4byte	.LVL90
 1706 082e 65050000 		.4byte	0x565
 1707 0832 16       		.uleb128 0x16
 1708 0833 01       		.uleb128 0x1
 1709 0834 50       		.byte	0x50
 1710 0835 03       		.uleb128 0x3
 1711 0836 F3       		.byte	0xf3
 1712 0837 01       		.uleb128 0x1
 1713 0838 50       		.byte	0x50
 1714 0839 16       		.uleb128 0x16
 1715 083a 01       		.uleb128 0x1
 1716 083b 51       		.byte	0x51
 1717 083c 03       		.uleb128 0x3
 1718 083d F3       		.byte	0xf3
 1719 083e 01       		.uleb128 0x1
 1720 083f 51       		.byte	0x51
 1721 0840 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 50


 1722 0841 00       		.byte	0
 1723 0842 12       		.uleb128 0x12
 1724 0843 A3000000 		.4byte	0xa3
 1725 0847 23       		.uleb128 0x23
 1726 0848 66010000 		.4byte	.LASF76
 1727 084c 01       		.byte	0x1
 1728 084d 8A02     		.2byte	0x28a
 1729 084f 00000000 		.4byte	.LFB76
 1730 0853 08000000 		.4byte	.LFE76-.LFB76
 1731 0857 01       		.uleb128 0x1
 1732 0858 9C       		.byte	0x9c
 1733 0859 96080000 		.4byte	0x896
 1734 085d 0F       		.uleb128 0xf
 1735 085e C5020000 		.4byte	.LASF74
 1736 0862 01       		.byte	0x1
 1737 0863 8A02     		.2byte	0x28a
 1738 0865 8F000000 		.4byte	0x8f
 1739 0869 9E060000 		.4byte	.LLST44
 1740 086d 0F       		.uleb128 0xf
 1741 086e 5D060000 		.4byte	.LASF77
 1742 0872 01       		.byte	0x1
 1743 0873 8A02     		.2byte	0x28a
 1744 0875 42080000 		.4byte	0x842
 1745 0879 BF060000 		.4byte	.LLST45
 1746 087d 17       		.uleb128 0x17
 1747 087e 06000000 		.4byte	.LVL92
 1748 0882 66040000 		.4byte	0x466
 1749 0886 16       		.uleb128 0x16
 1750 0887 01       		.uleb128 0x1
 1751 0888 50       		.byte	0x50
 1752 0889 03       		.uleb128 0x3
 1753 088a F3       		.byte	0xf3
 1754 088b 01       		.uleb128 0x1
 1755 088c 50       		.byte	0x50
 1756 088d 16       		.uleb128 0x16
 1757 088e 01       		.uleb128 0x1
 1758 088f 51       		.byte	0x51
 1759 0890 03       		.uleb128 0x3
 1760 0891 F3       		.byte	0xf3
 1761 0892 01       		.uleb128 0x1
 1762 0893 51       		.byte	0x51
 1763 0894 00       		.byte	0
 1764 0895 00       		.byte	0
 1765 0896 18       		.uleb128 0x18
 1766 0897 7E040000 		.4byte	.LASF78
 1767 089b 01       		.byte	0x1
 1768 089c C402     		.2byte	0x2c4
 1769 089e C7000000 		.4byte	0xc7
 1770 08a2 00000000 		.4byte	.LFB78
 1771 08a6 0A000000 		.4byte	.LFE78-.LFB78
 1772 08aa 01       		.uleb128 0x1
 1773 08ab 9C       		.byte	0x9c
 1774 08ac E1080000 		.4byte	0x8e1
 1775 08b0 0F       		.uleb128 0xf
 1776 08b1 FC040000 		.4byte	.LASF51
 1777 08b5 01       		.byte	0x1
 1778 08b6 C402     		.2byte	0x2c4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 51


 1779 08b8 8F000000 		.4byte	0x8f
 1780 08bc E0060000 		.4byte	.LLST46
 1781 08c0 11       		.uleb128 0x11
 1782 08c1 DF040000 		.4byte	.LASF79
 1783 08c5 01       		.byte	0x1
 1784 08c6 C602     		.2byte	0x2c6
 1785 08c8 C7000000 		.4byte	0xc7
 1786 08cc 1A070000 		.4byte	.LLST47
 1787 08d0 11       		.uleb128 0x11
 1788 08d1 1D050000 		.4byte	.LASF48
 1789 08d5 01       		.byte	0x1
 1790 08d6 C702     		.2byte	0x2c7
 1791 08d8 F8020000 		.4byte	0x2f8
 1792 08dc 38070000 		.4byte	.LLST48
 1793 08e0 00       		.byte	0
 1794 08e1 23       		.uleb128 0x23
 1795 08e2 C3030000 		.4byte	.LASF80
 1796 08e6 01       		.byte	0x1
 1797 08e7 DA02     		.2byte	0x2da
 1798 08e9 00000000 		.4byte	.LFB79
 1799 08ed 04000000 		.4byte	.LFE79-.LFB79
 1800 08f1 01       		.uleb128 0x1
 1801 08f2 9C       		.byte	0x9c
 1802 08f3 14090000 		.4byte	0x914
 1803 08f7 10       		.uleb128 0x10
 1804 08f8 FC040000 		.4byte	.LASF51
 1805 08fc 01       		.byte	0x1
 1806 08fd DA02     		.2byte	0x2da
 1807 08ff 8F000000 		.4byte	0x8f
 1808 0903 01       		.uleb128 0x1
 1809 0904 50       		.byte	0x50
 1810 0905 10       		.uleb128 0x10
 1811 0906 1F010000 		.4byte	.LASF40
 1812 090a 01       		.byte	0x1
 1813 090b DA02     		.2byte	0x2da
 1814 090d C7000000 		.4byte	0xc7
 1815 0911 01       		.uleb128 0x1
 1816 0912 51       		.byte	0x51
 1817 0913 00       		.byte	0
 1818 0914 24       		.uleb128 0x24
 1819 0915 7E030000 		.4byte	.LASF98
 1820 0919 09       		.byte	0x9
 1821 091a 1207     		.2byte	0x712
 1822 091c 20090000 		.4byte	0x920
 1823 0920 09       		.uleb128 0x9
 1824 0921 98000000 		.4byte	0x98
 1825 0925 25       		.uleb128 0x25
 1826 0926 0E060000 		.4byte	.LASF81
 1827 092a 0E060000 		.4byte	.LASF81
 1828 092e 07       		.byte	0x7
 1829 092f 81       		.byte	0x81
 1830 0930 26       		.uleb128 0x26
 1831 0931 5E000000 		.4byte	.LASF82
 1832 0935 5E000000 		.4byte	.LASF82
 1833 0939 05       		.byte	0x5
 1834 093a 5801     		.2byte	0x158
 1835 093c 26       		.uleb128 0x26
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 52


 1836 093d 25000000 		.4byte	.LASF83
 1837 0941 25000000 		.4byte	.LASF83
 1838 0945 08       		.byte	0x8
 1839 0946 7E08     		.2byte	0x87e
 1840 0948 26       		.uleb128 0x26
 1841 0949 31060000 		.4byte	.LASF84
 1842 094d 31060000 		.4byte	.LASF84
 1843 0951 08       		.byte	0x8
 1844 0952 F904     		.2byte	0x4f9
 1845 0954 26       		.uleb128 0x26
 1846 0955 15030000 		.4byte	.LASF85
 1847 0959 15030000 		.4byte	.LASF85
 1848 095d 08       		.byte	0x8
 1849 095e 2F05     		.2byte	0x52f
 1850 0960 26       		.uleb128 0x26
 1851 0961 A4040000 		.4byte	.LASF86
 1852 0965 A4040000 		.4byte	.LASF86
 1853 0969 08       		.byte	0x8
 1854 096a B608     		.2byte	0x8b6
 1855 096c 25       		.uleb128 0x25
 1856 096d 37030000 		.4byte	.LASF87
 1857 0971 37030000 		.4byte	.LASF87
 1858 0975 02       		.byte	0x2
 1859 0976 61       		.byte	0x61
 1860 0977 25       		.uleb128 0x25
 1861 0978 B1030000 		.4byte	.LASF88
 1862 097c B1030000 		.4byte	.LASF88
 1863 0980 02       		.byte	0x2
 1864 0981 62       		.byte	0x62
 1865 0982 26       		.uleb128 0x26
 1866 0983 2D020000 		.4byte	.LASF89
 1867 0987 2D020000 		.4byte	.LASF89
 1868 098b 08       		.byte	0x8
 1869 098c A608     		.2byte	0x8a6
 1870 098e 25       		.uleb128 0x25
 1871 098f 4A030000 		.4byte	.LASF90
 1872 0993 4A030000 		.4byte	.LASF90
 1873 0997 07       		.byte	0x7
 1874 0998 82       		.byte	0x82
 1875 0999 00       		.byte	0
 1876              		.section	.debug_abbrev,"",%progbits
 1877              	.Ldebug_abbrev0:
 1878 0000 01       		.uleb128 0x1
 1879 0001 11       		.uleb128 0x11
 1880 0002 01       		.byte	0x1
 1881 0003 25       		.uleb128 0x25
 1882 0004 0E       		.uleb128 0xe
 1883 0005 13       		.uleb128 0x13
 1884 0006 0B       		.uleb128 0xb
 1885 0007 03       		.uleb128 0x3
 1886 0008 0E       		.uleb128 0xe
 1887 0009 1B       		.uleb128 0x1b
 1888 000a 0E       		.uleb128 0xe
 1889 000b 55       		.uleb128 0x55
 1890 000c 17       		.uleb128 0x17
 1891 000d 11       		.uleb128 0x11
 1892 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 53


 1893 000f 10       		.uleb128 0x10
 1894 0010 17       		.uleb128 0x17
 1895 0011 00       		.byte	0
 1896 0012 00       		.byte	0
 1897 0013 02       		.uleb128 0x2
 1898 0014 24       		.uleb128 0x24
 1899 0015 00       		.byte	0
 1900 0016 0B       		.uleb128 0xb
 1901 0017 0B       		.uleb128 0xb
 1902 0018 3E       		.uleb128 0x3e
 1903 0019 0B       		.uleb128 0xb
 1904 001a 03       		.uleb128 0x3
 1905 001b 0E       		.uleb128 0xe
 1906 001c 00       		.byte	0
 1907 001d 00       		.byte	0
 1908 001e 03       		.uleb128 0x3
 1909 001f 24       		.uleb128 0x24
 1910 0020 00       		.byte	0
 1911 0021 0B       		.uleb128 0xb
 1912 0022 0B       		.uleb128 0xb
 1913 0023 3E       		.uleb128 0x3e
 1914 0024 0B       		.uleb128 0xb
 1915 0025 03       		.uleb128 0x3
 1916 0026 08       		.uleb128 0x8
 1917 0027 00       		.byte	0
 1918 0028 00       		.byte	0
 1919 0029 04       		.uleb128 0x4
 1920 002a 16       		.uleb128 0x16
 1921 002b 00       		.byte	0
 1922 002c 03       		.uleb128 0x3
 1923 002d 0E       		.uleb128 0xe
 1924 002e 3A       		.uleb128 0x3a
 1925 002f 0B       		.uleb128 0xb
 1926 0030 3B       		.uleb128 0x3b
 1927 0031 0B       		.uleb128 0xb
 1928 0032 49       		.uleb128 0x49
 1929 0033 13       		.uleb128 0x13
 1930 0034 00       		.byte	0
 1931 0035 00       		.byte	0
 1932 0036 05       		.uleb128 0x5
 1933 0037 0F       		.uleb128 0xf
 1934 0038 00       		.byte	0
 1935 0039 0B       		.uleb128 0xb
 1936 003a 0B       		.uleb128 0xb
 1937 003b 00       		.byte	0
 1938 003c 00       		.byte	0
 1939 003d 06       		.uleb128 0x6
 1940 003e 13       		.uleb128 0x13
 1941 003f 01       		.byte	0x1
 1942 0040 03       		.uleb128 0x3
 1943 0041 0E       		.uleb128 0xe
 1944 0042 0B       		.uleb128 0xb
 1945 0043 0B       		.uleb128 0xb
 1946 0044 3A       		.uleb128 0x3a
 1947 0045 0B       		.uleb128 0xb
 1948 0046 3B       		.uleb128 0x3b
 1949 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 54


 1950 0048 01       		.uleb128 0x1
 1951 0049 13       		.uleb128 0x13
 1952 004a 00       		.byte	0
 1953 004b 00       		.byte	0
 1954 004c 07       		.uleb128 0x7
 1955 004d 0D       		.uleb128 0xd
 1956 004e 00       		.byte	0
 1957 004f 03       		.uleb128 0x3
 1958 0050 0E       		.uleb128 0xe
 1959 0051 3A       		.uleb128 0x3a
 1960 0052 0B       		.uleb128 0xb
 1961 0053 3B       		.uleb128 0x3b
 1962 0054 0B       		.uleb128 0xb
 1963 0055 49       		.uleb128 0x49
 1964 0056 13       		.uleb128 0x13
 1965 0057 38       		.uleb128 0x38
 1966 0058 0B       		.uleb128 0xb
 1967 0059 00       		.byte	0
 1968 005a 00       		.byte	0
 1969 005b 08       		.uleb128 0x8
 1970 005c 0F       		.uleb128 0xf
 1971 005d 00       		.byte	0
 1972 005e 0B       		.uleb128 0xb
 1973 005f 0B       		.uleb128 0xb
 1974 0060 49       		.uleb128 0x49
 1975 0061 13       		.uleb128 0x13
 1976 0062 00       		.byte	0
 1977 0063 00       		.byte	0
 1978 0064 09       		.uleb128 0x9
 1979 0065 35       		.uleb128 0x35
 1980 0066 00       		.byte	0
 1981 0067 49       		.uleb128 0x49
 1982 0068 13       		.uleb128 0x13
 1983 0069 00       		.byte	0
 1984 006a 00       		.byte	0
 1985 006b 0A       		.uleb128 0xa
 1986 006c 2E       		.uleb128 0x2e
 1987 006d 01       		.byte	0x1
 1988 006e 03       		.uleb128 0x3
 1989 006f 0E       		.uleb128 0xe
 1990 0070 3A       		.uleb128 0x3a
 1991 0071 0B       		.uleb128 0xb
 1992 0072 3B       		.uleb128 0x3b
 1993 0073 0B       		.uleb128 0xb
 1994 0074 27       		.uleb128 0x27
 1995 0075 19       		.uleb128 0x19
 1996 0076 20       		.uleb128 0x20
 1997 0077 0B       		.uleb128 0xb
 1998 0078 01       		.uleb128 0x1
 1999 0079 13       		.uleb128 0x13
 2000 007a 00       		.byte	0
 2001 007b 00       		.byte	0
 2002 007c 0B       		.uleb128 0xb
 2003 007d 05       		.uleb128 0x5
 2004 007e 00       		.byte	0
 2005 007f 03       		.uleb128 0x3
 2006 0080 0E       		.uleb128 0xe
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 55


 2007 0081 3A       		.uleb128 0x3a
 2008 0082 0B       		.uleb128 0xb
 2009 0083 3B       		.uleb128 0x3b
 2010 0084 0B       		.uleb128 0xb
 2011 0085 49       		.uleb128 0x49
 2012 0086 13       		.uleb128 0x13
 2013 0087 00       		.byte	0
 2014 0088 00       		.byte	0
 2015 0089 0C       		.uleb128 0xc
 2016 008a 2E       		.uleb128 0x2e
 2017 008b 01       		.byte	0x1
 2018 008c 03       		.uleb128 0x3
 2019 008d 0E       		.uleb128 0xe
 2020 008e 3A       		.uleb128 0x3a
 2021 008f 0B       		.uleb128 0xb
 2022 0090 3B       		.uleb128 0x3b
 2023 0091 0B       		.uleb128 0xb
 2024 0092 27       		.uleb128 0x27
 2025 0093 19       		.uleb128 0x19
 2026 0094 49       		.uleb128 0x49
 2027 0095 13       		.uleb128 0x13
 2028 0096 20       		.uleb128 0x20
 2029 0097 0B       		.uleb128 0xb
 2030 0098 01       		.uleb128 0x1
 2031 0099 13       		.uleb128 0x13
 2032 009a 00       		.byte	0
 2033 009b 00       		.byte	0
 2034 009c 0D       		.uleb128 0xd
 2035 009d 34       		.uleb128 0x34
 2036 009e 00       		.byte	0
 2037 009f 03       		.uleb128 0x3
 2038 00a0 0E       		.uleb128 0xe
 2039 00a1 3A       		.uleb128 0x3a
 2040 00a2 0B       		.uleb128 0xb
 2041 00a3 3B       		.uleb128 0x3b
 2042 00a4 0B       		.uleb128 0xb
 2043 00a5 49       		.uleb128 0x49
 2044 00a6 13       		.uleb128 0x13
 2045 00a7 00       		.byte	0
 2046 00a8 00       		.byte	0
 2047 00a9 0E       		.uleb128 0xe
 2048 00aa 2E       		.uleb128 0x2e
 2049 00ab 01       		.byte	0x1
 2050 00ac 03       		.uleb128 0x3
 2051 00ad 0E       		.uleb128 0xe
 2052 00ae 3A       		.uleb128 0x3a
 2053 00af 0B       		.uleb128 0xb
 2054 00b0 3B       		.uleb128 0x3b
 2055 00b1 05       		.uleb128 0x5
 2056 00b2 27       		.uleb128 0x27
 2057 00b3 19       		.uleb128 0x19
 2058 00b4 49       		.uleb128 0x49
 2059 00b5 13       		.uleb128 0x13
 2060 00b6 11       		.uleb128 0x11
 2061 00b7 01       		.uleb128 0x1
 2062 00b8 12       		.uleb128 0x12
 2063 00b9 06       		.uleb128 0x6
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 56


 2064 00ba 40       		.uleb128 0x40
 2065 00bb 18       		.uleb128 0x18
 2066 00bc 9742     		.uleb128 0x2117
 2067 00be 19       		.uleb128 0x19
 2068 00bf 01       		.uleb128 0x1
 2069 00c0 13       		.uleb128 0x13
 2070 00c1 00       		.byte	0
 2071 00c2 00       		.byte	0
 2072 00c3 0F       		.uleb128 0xf
 2073 00c4 05       		.uleb128 0x5
 2074 00c5 00       		.byte	0
 2075 00c6 03       		.uleb128 0x3
 2076 00c7 0E       		.uleb128 0xe
 2077 00c8 3A       		.uleb128 0x3a
 2078 00c9 0B       		.uleb128 0xb
 2079 00ca 3B       		.uleb128 0x3b
 2080 00cb 05       		.uleb128 0x5
 2081 00cc 49       		.uleb128 0x49
 2082 00cd 13       		.uleb128 0x13
 2083 00ce 02       		.uleb128 0x2
 2084 00cf 17       		.uleb128 0x17
 2085 00d0 00       		.byte	0
 2086 00d1 00       		.byte	0
 2087 00d2 10       		.uleb128 0x10
 2088 00d3 05       		.uleb128 0x5
 2089 00d4 00       		.byte	0
 2090 00d5 03       		.uleb128 0x3
 2091 00d6 0E       		.uleb128 0xe
 2092 00d7 3A       		.uleb128 0x3a
 2093 00d8 0B       		.uleb128 0xb
 2094 00d9 3B       		.uleb128 0x3b
 2095 00da 05       		.uleb128 0x5
 2096 00db 49       		.uleb128 0x49
 2097 00dc 13       		.uleb128 0x13
 2098 00dd 02       		.uleb128 0x2
 2099 00de 18       		.uleb128 0x18
 2100 00df 00       		.byte	0
 2101 00e0 00       		.byte	0
 2102 00e1 11       		.uleb128 0x11
 2103 00e2 34       		.uleb128 0x34
 2104 00e3 00       		.byte	0
 2105 00e4 03       		.uleb128 0x3
 2106 00e5 0E       		.uleb128 0xe
 2107 00e6 3A       		.uleb128 0x3a
 2108 00e7 0B       		.uleb128 0xb
 2109 00e8 3B       		.uleb128 0x3b
 2110 00e9 05       		.uleb128 0x5
 2111 00ea 49       		.uleb128 0x49
 2112 00eb 13       		.uleb128 0x13
 2113 00ec 02       		.uleb128 0x2
 2114 00ed 17       		.uleb128 0x17
 2115 00ee 00       		.byte	0
 2116 00ef 00       		.byte	0
 2117 00f0 12       		.uleb128 0x12
 2118 00f1 26       		.uleb128 0x26
 2119 00f2 00       		.byte	0
 2120 00f3 49       		.uleb128 0x49
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 57


 2121 00f4 13       		.uleb128 0x13
 2122 00f5 00       		.byte	0
 2123 00f6 00       		.byte	0
 2124 00f7 13       		.uleb128 0x13
 2125 00f8 2E       		.uleb128 0x2e
 2126 00f9 01       		.byte	0x1
 2127 00fa 3F       		.uleb128 0x3f
 2128 00fb 19       		.uleb128 0x19
 2129 00fc 03       		.uleb128 0x3
 2130 00fd 0E       		.uleb128 0xe
 2131 00fe 3A       		.uleb128 0x3a
 2132 00ff 0B       		.uleb128 0xb
 2133 0100 3B       		.uleb128 0x3b
 2134 0101 0B       		.uleb128 0xb
 2135 0102 27       		.uleb128 0x27
 2136 0103 19       		.uleb128 0x19
 2137 0104 49       		.uleb128 0x49
 2138 0105 13       		.uleb128 0x13
 2139 0106 11       		.uleb128 0x11
 2140 0107 01       		.uleb128 0x1
 2141 0108 12       		.uleb128 0x12
 2142 0109 06       		.uleb128 0x6
 2143 010a 40       		.uleb128 0x40
 2144 010b 18       		.uleb128 0x18
 2145 010c 9742     		.uleb128 0x2117
 2146 010e 19       		.uleb128 0x19
 2147 010f 01       		.uleb128 0x1
 2148 0110 13       		.uleb128 0x13
 2149 0111 00       		.byte	0
 2150 0112 00       		.byte	0
 2151 0113 14       		.uleb128 0x14
 2152 0114 34       		.uleb128 0x34
 2153 0115 00       		.byte	0
 2154 0116 03       		.uleb128 0x3
 2155 0117 0E       		.uleb128 0xe
 2156 0118 3A       		.uleb128 0x3a
 2157 0119 0B       		.uleb128 0xb
 2158 011a 3B       		.uleb128 0x3b
 2159 011b 0B       		.uleb128 0xb
 2160 011c 49       		.uleb128 0x49
 2161 011d 13       		.uleb128 0x13
 2162 011e 02       		.uleb128 0x2
 2163 011f 17       		.uleb128 0x17
 2164 0120 00       		.byte	0
 2165 0121 00       		.byte	0
 2166 0122 15       		.uleb128 0x15
 2167 0123 898201   		.uleb128 0x4109
 2168 0126 01       		.byte	0x1
 2169 0127 11       		.uleb128 0x11
 2170 0128 01       		.uleb128 0x1
 2171 0129 31       		.uleb128 0x31
 2172 012a 13       		.uleb128 0x13
 2173 012b 01       		.uleb128 0x1
 2174 012c 13       		.uleb128 0x13
 2175 012d 00       		.byte	0
 2176 012e 00       		.byte	0
 2177 012f 16       		.uleb128 0x16
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 58


 2178 0130 8A8201   		.uleb128 0x410a
 2179 0133 00       		.byte	0
 2180 0134 02       		.uleb128 0x2
 2181 0135 18       		.uleb128 0x18
 2182 0136 9142     		.uleb128 0x2111
 2183 0138 18       		.uleb128 0x18
 2184 0139 00       		.byte	0
 2185 013a 00       		.byte	0
 2186 013b 17       		.uleb128 0x17
 2187 013c 898201   		.uleb128 0x4109
 2188 013f 01       		.byte	0x1
 2189 0140 11       		.uleb128 0x11
 2190 0141 01       		.uleb128 0x1
 2191 0142 31       		.uleb128 0x31
 2192 0143 13       		.uleb128 0x13
 2193 0144 00       		.byte	0
 2194 0145 00       		.byte	0
 2195 0146 18       		.uleb128 0x18
 2196 0147 2E       		.uleb128 0x2e
 2197 0148 01       		.byte	0x1
 2198 0149 3F       		.uleb128 0x3f
 2199 014a 19       		.uleb128 0x19
 2200 014b 03       		.uleb128 0x3
 2201 014c 0E       		.uleb128 0xe
 2202 014d 3A       		.uleb128 0x3a
 2203 014e 0B       		.uleb128 0xb
 2204 014f 3B       		.uleb128 0x3b
 2205 0150 05       		.uleb128 0x5
 2206 0151 27       		.uleb128 0x27
 2207 0152 19       		.uleb128 0x19
 2208 0153 49       		.uleb128 0x49
 2209 0154 13       		.uleb128 0x13
 2210 0155 11       		.uleb128 0x11
 2211 0156 01       		.uleb128 0x1
 2212 0157 12       		.uleb128 0x12
 2213 0158 06       		.uleb128 0x6
 2214 0159 40       		.uleb128 0x40
 2215 015a 18       		.uleb128 0x18
 2216 015b 9742     		.uleb128 0x2117
 2217 015d 19       		.uleb128 0x19
 2218 015e 01       		.uleb128 0x1
 2219 015f 13       		.uleb128 0x13
 2220 0160 00       		.byte	0
 2221 0161 00       		.byte	0
 2222 0162 19       		.uleb128 0x19
 2223 0163 0B       		.uleb128 0xb
 2224 0164 01       		.byte	0x1
 2225 0165 55       		.uleb128 0x55
 2226 0166 17       		.uleb128 0x17
 2227 0167 01       		.uleb128 0x1
 2228 0168 13       		.uleb128 0x13
 2229 0169 00       		.byte	0
 2230 016a 00       		.byte	0
 2231 016b 1A       		.uleb128 0x1a
 2232 016c 898201   		.uleb128 0x4109
 2233 016f 00       		.byte	0
 2234 0170 11       		.uleb128 0x11
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 59


 2235 0171 01       		.uleb128 0x1
 2236 0172 31       		.uleb128 0x31
 2237 0173 13       		.uleb128 0x13
 2238 0174 00       		.byte	0
 2239 0175 00       		.byte	0
 2240 0176 1B       		.uleb128 0x1b
 2241 0177 34       		.uleb128 0x34
 2242 0178 00       		.byte	0
 2243 0179 03       		.uleb128 0x3
 2244 017a 0E       		.uleb128 0xe
 2245 017b 3A       		.uleb128 0x3a
 2246 017c 0B       		.uleb128 0xb
 2247 017d 3B       		.uleb128 0x3b
 2248 017e 05       		.uleb128 0x5
 2249 017f 49       		.uleb128 0x49
 2250 0180 13       		.uleb128 0x13
 2251 0181 02       		.uleb128 0x2
 2252 0182 18       		.uleb128 0x18
 2253 0183 00       		.byte	0
 2254 0184 00       		.byte	0
 2255 0185 1C       		.uleb128 0x1c
 2256 0186 34       		.uleb128 0x34
 2257 0187 00       		.byte	0
 2258 0188 03       		.uleb128 0x3
 2259 0189 0E       		.uleb128 0xe
 2260 018a 3A       		.uleb128 0x3a
 2261 018b 0B       		.uleb128 0xb
 2262 018c 3B       		.uleb128 0x3b
 2263 018d 05       		.uleb128 0x5
 2264 018e 49       		.uleb128 0x49
 2265 018f 13       		.uleb128 0x13
 2266 0190 00       		.byte	0
 2267 0191 00       		.byte	0
 2268 0192 1D       		.uleb128 0x1d
 2269 0193 1D       		.uleb128 0x1d
 2270 0194 01       		.byte	0x1
 2271 0195 31       		.uleb128 0x31
 2272 0196 13       		.uleb128 0x13
 2273 0197 11       		.uleb128 0x11
 2274 0198 01       		.uleb128 0x1
 2275 0199 12       		.uleb128 0x12
 2276 019a 06       		.uleb128 0x6
 2277 019b 58       		.uleb128 0x58
 2278 019c 0B       		.uleb128 0xb
 2279 019d 59       		.uleb128 0x59
 2280 019e 05       		.uleb128 0x5
 2281 019f 01       		.uleb128 0x1
 2282 01a0 13       		.uleb128 0x13
 2283 01a1 00       		.byte	0
 2284 01a2 00       		.byte	0
 2285 01a3 1E       		.uleb128 0x1e
 2286 01a4 0B       		.uleb128 0xb
 2287 01a5 01       		.byte	0x1
 2288 01a6 11       		.uleb128 0x11
 2289 01a7 01       		.uleb128 0x1
 2290 01a8 12       		.uleb128 0x12
 2291 01a9 06       		.uleb128 0x6
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 60


 2292 01aa 00       		.byte	0
 2293 01ab 00       		.byte	0
 2294 01ac 1F       		.uleb128 0x1f
 2295 01ad 34       		.uleb128 0x34
 2296 01ae 00       		.byte	0
 2297 01af 31       		.uleb128 0x31
 2298 01b0 13       		.uleb128 0x13
 2299 01b1 00       		.byte	0
 2300 01b2 00       		.byte	0
 2301 01b3 20       		.uleb128 0x20
 2302 01b4 1D       		.uleb128 0x1d
 2303 01b5 01       		.byte	0x1
 2304 01b6 31       		.uleb128 0x31
 2305 01b7 13       		.uleb128 0x13
 2306 01b8 11       		.uleb128 0x11
 2307 01b9 01       		.uleb128 0x1
 2308 01ba 12       		.uleb128 0x12
 2309 01bb 06       		.uleb128 0x6
 2310 01bc 58       		.uleb128 0x58
 2311 01bd 0B       		.uleb128 0xb
 2312 01be 59       		.uleb128 0x59
 2313 01bf 05       		.uleb128 0x5
 2314 01c0 00       		.byte	0
 2315 01c1 00       		.byte	0
 2316 01c2 21       		.uleb128 0x21
 2317 01c3 05       		.uleb128 0x5
 2318 01c4 00       		.byte	0
 2319 01c5 31       		.uleb128 0x31
 2320 01c6 13       		.uleb128 0x13
 2321 01c7 00       		.byte	0
 2322 01c8 00       		.byte	0
 2323 01c9 22       		.uleb128 0x22
 2324 01ca 05       		.uleb128 0x5
 2325 01cb 00       		.byte	0
 2326 01cc 03       		.uleb128 0x3
 2327 01cd 0E       		.uleb128 0xe
 2328 01ce 3A       		.uleb128 0x3a
 2329 01cf 0B       		.uleb128 0xb
 2330 01d0 3B       		.uleb128 0x3b
 2331 01d1 0B       		.uleb128 0xb
 2332 01d2 49       		.uleb128 0x49
 2333 01d3 13       		.uleb128 0x13
 2334 01d4 02       		.uleb128 0x2
 2335 01d5 17       		.uleb128 0x17
 2336 01d6 00       		.byte	0
 2337 01d7 00       		.byte	0
 2338 01d8 23       		.uleb128 0x23
 2339 01d9 2E       		.uleb128 0x2e
 2340 01da 01       		.byte	0x1
 2341 01db 3F       		.uleb128 0x3f
 2342 01dc 19       		.uleb128 0x19
 2343 01dd 03       		.uleb128 0x3
 2344 01de 0E       		.uleb128 0xe
 2345 01df 3A       		.uleb128 0x3a
 2346 01e0 0B       		.uleb128 0xb
 2347 01e1 3B       		.uleb128 0x3b
 2348 01e2 05       		.uleb128 0x5
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 61


 2349 01e3 27       		.uleb128 0x27
 2350 01e4 19       		.uleb128 0x19
 2351 01e5 11       		.uleb128 0x11
 2352 01e6 01       		.uleb128 0x1
 2353 01e7 12       		.uleb128 0x12
 2354 01e8 06       		.uleb128 0x6
 2355 01e9 40       		.uleb128 0x40
 2356 01ea 18       		.uleb128 0x18
 2357 01eb 9742     		.uleb128 0x2117
 2358 01ed 19       		.uleb128 0x19
 2359 01ee 01       		.uleb128 0x1
 2360 01ef 13       		.uleb128 0x13
 2361 01f0 00       		.byte	0
 2362 01f1 00       		.byte	0
 2363 01f2 24       		.uleb128 0x24
 2364 01f3 34       		.uleb128 0x34
 2365 01f4 00       		.byte	0
 2366 01f5 03       		.uleb128 0x3
 2367 01f6 0E       		.uleb128 0xe
 2368 01f7 3A       		.uleb128 0x3a
 2369 01f8 0B       		.uleb128 0xb
 2370 01f9 3B       		.uleb128 0x3b
 2371 01fa 05       		.uleb128 0x5
 2372 01fb 49       		.uleb128 0x49
 2373 01fc 13       		.uleb128 0x13
 2374 01fd 3F       		.uleb128 0x3f
 2375 01fe 19       		.uleb128 0x19
 2376 01ff 3C       		.uleb128 0x3c
 2377 0200 19       		.uleb128 0x19
 2378 0201 00       		.byte	0
 2379 0202 00       		.byte	0
 2380 0203 25       		.uleb128 0x25
 2381 0204 2E       		.uleb128 0x2e
 2382 0205 00       		.byte	0
 2383 0206 3F       		.uleb128 0x3f
 2384 0207 19       		.uleb128 0x19
 2385 0208 3C       		.uleb128 0x3c
 2386 0209 19       		.uleb128 0x19
 2387 020a 6E       		.uleb128 0x6e
 2388 020b 0E       		.uleb128 0xe
 2389 020c 03       		.uleb128 0x3
 2390 020d 0E       		.uleb128 0xe
 2391 020e 3A       		.uleb128 0x3a
 2392 020f 0B       		.uleb128 0xb
 2393 0210 3B       		.uleb128 0x3b
 2394 0211 0B       		.uleb128 0xb
 2395 0212 00       		.byte	0
 2396 0213 00       		.byte	0
 2397 0214 26       		.uleb128 0x26
 2398 0215 2E       		.uleb128 0x2e
 2399 0216 00       		.byte	0
 2400 0217 3F       		.uleb128 0x3f
 2401 0218 19       		.uleb128 0x19
 2402 0219 3C       		.uleb128 0x3c
 2403 021a 19       		.uleb128 0x19
 2404 021b 6E       		.uleb128 0x6e
 2405 021c 0E       		.uleb128 0xe
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 62


 2406 021d 03       		.uleb128 0x3
 2407 021e 0E       		.uleb128 0xe
 2408 021f 3A       		.uleb128 0x3a
 2409 0220 0B       		.uleb128 0xb
 2410 0221 3B       		.uleb128 0x3b
 2411 0222 05       		.uleb128 0x5
 2412 0223 00       		.byte	0
 2413 0224 00       		.byte	0
 2414 0225 00       		.byte	0
 2415              		.section	.debug_loc,"",%progbits
 2416              	.Ldebug_loc0:
 2417              	.LLST0:
 2418 0000 00000000 		.4byte	.LVL0
 2419 0004 08000000 		.4byte	.LVL1
 2420 0008 0100     		.2byte	0x1
 2421 000a 50       		.byte	0x50
 2422 000b 08000000 		.4byte	.LVL1
 2423 000f 0A000000 		.4byte	.LVL2
 2424 0013 0400     		.2byte	0x4
 2425 0015 F3       		.byte	0xf3
 2426 0016 01       		.uleb128 0x1
 2427 0017 50       		.byte	0x50
 2428 0018 9F       		.byte	0x9f
 2429 0019 0A000000 		.4byte	.LVL2
 2430 001d 12000000 		.4byte	.LVL3
 2431 0021 0100     		.2byte	0x1
 2432 0023 50       		.byte	0x50
 2433 0024 12000000 		.4byte	.LVL3
 2434 0028 14000000 		.4byte	.LVL4
 2435 002c 0400     		.2byte	0x4
 2436 002e F3       		.byte	0xf3
 2437 002f 01       		.uleb128 0x1
 2438 0030 50       		.byte	0x50
 2439 0031 9F       		.byte	0x9f
 2440 0032 14000000 		.4byte	.LVL4
 2441 0036 16000000 		.4byte	.LVL5
 2442 003a 0100     		.2byte	0x1
 2443 003c 50       		.byte	0x50
 2444 003d 16000000 		.4byte	.LVL5
 2445 0041 18000000 		.4byte	.LVL6
 2446 0045 0400     		.2byte	0x4
 2447 0047 F3       		.byte	0xf3
 2448 0048 01       		.uleb128 0x1
 2449 0049 50       		.byte	0x50
 2450 004a 9F       		.byte	0x9f
 2451 004b 18000000 		.4byte	.LVL6
 2452 004f 1A000000 		.4byte	.LVL7
 2453 0053 0100     		.2byte	0x1
 2454 0055 50       		.byte	0x50
 2455 0056 1A000000 		.4byte	.LVL7
 2456 005a 1C000000 		.4byte	.LFE77
 2457 005e 0400     		.2byte	0x4
 2458 0060 F3       		.byte	0xf3
 2459 0061 01       		.uleb128 0x1
 2460 0062 50       		.byte	0x50
 2461 0063 9F       		.byte	0x9f
 2462 0064 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 63


 2463 0068 00000000 		.4byte	0
 2464              	.LLST1:
 2465 006c 00000000 		.4byte	.LVL0
 2466 0070 1A000000 		.4byte	.LVL7
 2467 0074 0200     		.2byte	0x2
 2468 0076 30       		.byte	0x30
 2469 0077 9F       		.byte	0x9f
 2470 0078 1A000000 		.4byte	.LVL7
 2471 007c 1C000000 		.4byte	.LFE77
 2472 0080 0100     		.2byte	0x1
 2473 0082 50       		.byte	0x50
 2474 0083 00000000 		.4byte	0
 2475 0087 00000000 		.4byte	0
 2476              	.LLST2:
 2477 008b 08000000 		.4byte	.LVL8
 2478 008f 12000000 		.4byte	.LVL9
 2479 0093 0100     		.2byte	0x1
 2480 0095 50       		.byte	0x50
 2481 0096 12000000 		.4byte	.LVL9
 2482 009a 1A000000 		.4byte	.LFE68
 2483 009e 0100     		.2byte	0x1
 2484 00a0 54       		.byte	0x54
 2485 00a1 00000000 		.4byte	0
 2486 00a5 00000000 		.4byte	0
 2487              	.LLST3:
 2488 00a9 00000000 		.4byte	.LVL11
 2489 00ad 11000000 		.4byte	.LVL13-1
 2490 00b1 0100     		.2byte	0x1
 2491 00b3 50       		.byte	0x50
 2492 00b4 11000000 		.4byte	.LVL13-1
 2493 00b8 AA000000 		.4byte	.LVL36
 2494 00bc 0100     		.2byte	0x1
 2495 00be 57       		.byte	0x57
 2496 00bf AA000000 		.4byte	.LVL36
 2497 00c3 B0000000 		.4byte	.LFE70
 2498 00c7 0400     		.2byte	0x4
 2499 00c9 F3       		.byte	0xf3
 2500 00ca 01       		.uleb128 0x1
 2501 00cb 50       		.byte	0x50
 2502 00cc 9F       		.byte	0x9f
 2503 00cd 00000000 		.4byte	0
 2504 00d1 00000000 		.4byte	0
 2505              	.LLST4:
 2506 00d5 00000000 		.4byte	.LVL11
 2507 00d9 11000000 		.4byte	.LVL13-1
 2508 00dd 0100     		.2byte	0x1
 2509 00df 51       		.byte	0x51
 2510 00e0 11000000 		.4byte	.LVL13-1
 2511 00e4 9A000000 		.4byte	.LVL32
 2512 00e8 0100     		.2byte	0x1
 2513 00ea 56       		.byte	0x56
 2514 00eb 9A000000 		.4byte	.LVL32
 2515 00ef B0000000 		.4byte	.LFE70
 2516 00f3 0400     		.2byte	0x4
 2517 00f5 F3       		.byte	0xf3
 2518 00f6 01       		.uleb128 0x1
 2519 00f7 51       		.byte	0x51
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 64


 2520 00f8 9F       		.byte	0x9f
 2521 00f9 00000000 		.4byte	0
 2522 00fd 00000000 		.4byte	0
 2523              	.LLST5:
 2524 0101 00000000 		.4byte	.LVL11
 2525 0105 11000000 		.4byte	.LVL13-1
 2526 0109 0100     		.2byte	0x1
 2527 010b 52       		.byte	0x52
 2528 010c 11000000 		.4byte	.LVL13-1
 2529 0110 AA000000 		.4byte	.LVL36
 2530 0114 0100     		.2byte	0x1
 2531 0116 59       		.byte	0x59
 2532 0117 AA000000 		.4byte	.LVL36
 2533 011b B0000000 		.4byte	.LFE70
 2534 011f 0400     		.2byte	0x4
 2535 0121 F3       		.byte	0xf3
 2536 0122 01       		.uleb128 0x1
 2537 0123 52       		.byte	0x52
 2538 0124 9F       		.byte	0x9f
 2539 0125 00000000 		.4byte	0
 2540 0129 00000000 		.4byte	0
 2541              	.LLST6:
 2542 012d 00000000 		.4byte	.LVL11
 2543 0131 11000000 		.4byte	.LVL13-1
 2544 0135 0100     		.2byte	0x1
 2545 0137 53       		.byte	0x53
 2546 0138 11000000 		.4byte	.LVL13-1
 2547 013c AA000000 		.4byte	.LVL36
 2548 0140 0100     		.2byte	0x1
 2549 0142 58       		.byte	0x58
 2550 0143 AA000000 		.4byte	.LVL36
 2551 0147 B0000000 		.4byte	.LFE70
 2552 014b 0400     		.2byte	0x4
 2553 014d F3       		.byte	0xf3
 2554 014e 01       		.uleb128 0x1
 2555 014f 53       		.byte	0x53
 2556 0150 9F       		.byte	0x9f
 2557 0151 00000000 		.4byte	0
 2558 0155 00000000 		.4byte	0
 2559              	.LLST7:
 2560 0159 00000000 		.4byte	.LVL11
 2561 015d 20000000 		.4byte	.LVL16
 2562 0161 0200     		.2byte	0x2
 2563 0163 91       		.byte	0x91
 2564 0164 00       		.sleb128 0
 2565 0165 20000000 		.4byte	.LVL16
 2566 0169 30000000 		.4byte	.LVL17
 2567 016d 0200     		.2byte	0x2
 2568 016f 30       		.byte	0x30
 2569 0170 9F       		.byte	0x9f
 2570 0171 30000000 		.4byte	.LVL17
 2571 0175 58000000 		.4byte	.LVL24
 2572 0179 0200     		.2byte	0x2
 2573 017b 91       		.byte	0x91
 2574 017c 00       		.sleb128 0
 2575 017d 58000000 		.4byte	.LVL24
 2576 0181 5A000000 		.4byte	.LVL25
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 65


 2577 0185 0200     		.2byte	0x2
 2578 0187 30       		.byte	0x30
 2579 0188 9F       		.byte	0x9f
 2580 0189 5A000000 		.4byte	.LVL25
 2581 018d AA000000 		.4byte	.LVL36
 2582 0191 0100     		.2byte	0x1
 2583 0193 55       		.byte	0x55
 2584 0194 00000000 		.4byte	0
 2585 0198 00000000 		.4byte	0
 2586              	.LLST8:
 2587 019c 0E000000 		.4byte	.LVL12
 2588 01a0 11000000 		.4byte	.LVL13-1
 2589 01a4 0100     		.2byte	0x1
 2590 01a6 50       		.byte	0x50
 2591 01a7 11000000 		.4byte	.LVL13-1
 2592 01ab AA000000 		.4byte	.LVL36
 2593 01af 0100     		.2byte	0x1
 2594 01b1 57       		.byte	0x57
 2595 01b2 AA000000 		.4byte	.LVL36
 2596 01b6 B0000000 		.4byte	.LFE70
 2597 01ba 0400     		.2byte	0x4
 2598 01bc F3       		.byte	0xf3
 2599 01bd 01       		.uleb128 0x1
 2600 01be 50       		.byte	0x50
 2601 01bf 9F       		.byte	0x9f
 2602 01c0 00000000 		.4byte	0
 2603 01c4 00000000 		.4byte	0
 2604              	.LLST9:
 2605 01c8 20000000 		.4byte	.LVL16
 2606 01cc 30000000 		.4byte	.LVL17
 2607 01d0 0100     		.2byte	0x1
 2608 01d2 54       		.byte	0x54
 2609 01d3 54000000 		.4byte	.LVL22
 2610 01d7 58000000 		.4byte	.LVL24
 2611 01db 0200     		.2byte	0x2
 2612 01dd 30       		.byte	0x30
 2613 01de 9F       		.byte	0x9f
 2614 01df 58000000 		.4byte	.LVL24
 2615 01e3 78000000 		.4byte	.LVL28
 2616 01e7 0100     		.2byte	0x1
 2617 01e9 54       		.byte	0x54
 2618 01ea 78000000 		.4byte	.LVL28
 2619 01ee 81000000 		.4byte	.LVL29-1
 2620 01f2 0100     		.2byte	0x1
 2621 01f4 50       		.byte	0x50
 2622 01f5 81000000 		.4byte	.LVL29-1
 2623 01f9 AA000000 		.4byte	.LVL36
 2624 01fd 0100     		.2byte	0x1
 2625 01ff 54       		.byte	0x54
 2626 0200 AA000000 		.4byte	.LVL36
 2627 0204 B0000000 		.4byte	.LFE70
 2628 0208 0100     		.2byte	0x1
 2629 020a 50       		.byte	0x50
 2630 020b 00000000 		.4byte	0
 2631 020f 00000000 		.4byte	0
 2632              	.LLST10:
 2633 0213 0E000000 		.4byte	.LVL12
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 66


 2634 0217 40000000 		.4byte	.LVL18
 2635 021b 0200     		.2byte	0x2
 2636 021d 30       		.byte	0x30
 2637 021e 9F       		.byte	0x9f
 2638 021f 40000000 		.4byte	.LVL18
 2639 0223 4E000000 		.4byte	.LVL20
 2640 0227 0100     		.2byte	0x1
 2641 0229 51       		.byte	0x51
 2642 022a 58000000 		.4byte	.LVL24
 2643 022e 5A000000 		.4byte	.LVL25
 2644 0232 0200     		.2byte	0x2
 2645 0234 30       		.byte	0x30
 2646 0235 9F       		.byte	0x9f
 2647 0236 00000000 		.4byte	0
 2648 023a 00000000 		.4byte	0
 2649              	.LLST11:
 2650 023e 1E000000 		.4byte	.LVL15
 2651 0242 50000000 		.4byte	.LVL21
 2652 0246 0100     		.2byte	0x1
 2653 0248 50       		.byte	0x50
 2654 0249 58000000 		.4byte	.LVL24
 2655 024d 5A000000 		.4byte	.LVL25
 2656 0251 0100     		.2byte	0x1
 2657 0253 50       		.byte	0x50
 2658 0254 00000000 		.4byte	0
 2659 0258 00000000 		.4byte	0
 2660              	.LLST12:
 2661 025c 5E000000 		.4byte	.LVL26
 2662 0260 75000000 		.4byte	.LVL27-1
 2663 0264 0100     		.2byte	0x1
 2664 0266 50       		.byte	0x50
 2665 0267 00000000 		.4byte	0
 2666 026b 00000000 		.4byte	0
 2667              	.LLST13:
 2668 026f 0E000000 		.4byte	.LVL12
 2669 0273 9C000000 		.4byte	.LVL33
 2670 0277 0200     		.2byte	0x2
 2671 0279 30       		.byte	0x30
 2672 027a 9F       		.byte	0x9f
 2673 027b 9C000000 		.4byte	.LVL33
 2674 027f A0000000 		.4byte	.LVL34
 2675 0283 0200     		.2byte	0x2
 2676 0285 31       		.byte	0x31
 2677 0286 9F       		.byte	0x9f
 2678 0287 00000000 		.4byte	0
 2679 028b 00000000 		.4byte	0
 2680              	.LLST14:
 2681 028f 14000000 		.4byte	.LVL14
 2682 0293 56000000 		.4byte	.LVL23
 2683 0297 0100     		.2byte	0x1
 2684 0299 54       		.byte	0x54
 2685 029a 58000000 		.4byte	.LVL24
 2686 029e 5A000000 		.4byte	.LVL25
 2687 02a2 0100     		.2byte	0x1
 2688 02a4 54       		.byte	0x54
 2689 02a5 00000000 		.4byte	0
 2690 02a9 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 67


 2691              	.LLST15:
 2692 02ad 00000000 		.4byte	.LVL37
 2693 02b1 09000000 		.4byte	.LVL39-1
 2694 02b5 0100     		.2byte	0x1
 2695 02b7 50       		.byte	0x50
 2696 02b8 09000000 		.4byte	.LVL39-1
 2697 02bc 1A000000 		.4byte	.LFE71
 2698 02c0 0100     		.2byte	0x1
 2699 02c2 56       		.byte	0x56
 2700 02c3 00000000 		.4byte	0
 2701 02c7 00000000 		.4byte	0
 2702              	.LLST16:
 2703 02cb 00000000 		.4byte	.LVL37
 2704 02cf 09000000 		.4byte	.LVL39-1
 2705 02d3 0100     		.2byte	0x1
 2706 02d5 51       		.byte	0x51
 2707 02d6 09000000 		.4byte	.LVL39-1
 2708 02da 10000000 		.4byte	.LVL41
 2709 02de 0100     		.2byte	0x1
 2710 02e0 54       		.byte	0x54
 2711 02e1 10000000 		.4byte	.LVL41
 2712 02e5 1A000000 		.4byte	.LFE71
 2713 02e9 0400     		.2byte	0x4
 2714 02eb F3       		.byte	0xf3
 2715 02ec 01       		.uleb128 0x1
 2716 02ed 51       		.byte	0x51
 2717 02ee 9F       		.byte	0x9f
 2718 02ef 00000000 		.4byte	0
 2719 02f3 00000000 		.4byte	0
 2720              	.LLST17:
 2721 02f7 06000000 		.4byte	.LVL38
 2722 02fb 09000000 		.4byte	.LVL39-1
 2723 02ff 0100     		.2byte	0x1
 2724 0301 50       		.byte	0x50
 2725 0302 09000000 		.4byte	.LVL39-1
 2726 0306 1A000000 		.4byte	.LFE71
 2727 030a 0100     		.2byte	0x1
 2728 030c 56       		.byte	0x56
 2729 030d 00000000 		.4byte	0
 2730 0311 00000000 		.4byte	0
 2731              	.LLST18:
 2732 0315 00000000 		.4byte	.LVL43
 2733 0319 16000000 		.4byte	.LVL44
 2734 031d 0100     		.2byte	0x1
 2735 031f 50       		.byte	0x50
 2736 0320 16000000 		.4byte	.LVL44
 2737 0324 1C000000 		.4byte	.LFE72
 2738 0328 0400     		.2byte	0x4
 2739 032a F3       		.byte	0xf3
 2740 032b 01       		.uleb128 0x1
 2741 032c 50       		.byte	0x50
 2742 032d 9F       		.byte	0x9f
 2743 032e 00000000 		.4byte	0
 2744 0332 00000000 		.4byte	0
 2745              	.LLST19:
 2746 0336 00000000 		.4byte	.LVL43
 2747 033a 16000000 		.4byte	.LVL44
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 68


 2748 033e 0100     		.2byte	0x1
 2749 0340 50       		.byte	0x50
 2750 0341 16000000 		.4byte	.LVL44
 2751 0345 1C000000 		.4byte	.LFE72
 2752 0349 0400     		.2byte	0x4
 2753 034b F3       		.byte	0xf3
 2754 034c 01       		.uleb128 0x1
 2755 034d 50       		.byte	0x50
 2756 034e 9F       		.byte	0x9f
 2757 034f 00000000 		.4byte	0
 2758 0353 00000000 		.4byte	0
 2759              	.LLST20:
 2760 0357 00000000 		.4byte	.LVL45
 2761 035b 0D000000 		.4byte	.LVL48-1
 2762 035f 0100     		.2byte	0x1
 2763 0361 50       		.byte	0x50
 2764 0362 0D000000 		.4byte	.LVL48-1
 2765 0366 6E000000 		.4byte	.LFE73
 2766 036a 0100     		.2byte	0x1
 2767 036c 54       		.byte	0x54
 2768 036d 00000000 		.4byte	0
 2769 0371 00000000 		.4byte	0
 2770              	.LLST21:
 2771 0375 00000000 		.4byte	.LVL45
 2772 0379 0D000000 		.4byte	.LVL48-1
 2773 037d 0100     		.2byte	0x1
 2774 037f 51       		.byte	0x51
 2775 0380 0D000000 		.4byte	.LVL48-1
 2776 0384 14000000 		.4byte	.LVL50
 2777 0388 0100     		.2byte	0x1
 2778 038a 55       		.byte	0x55
 2779 038b 14000000 		.4byte	.LVL50
 2780 038f 6E000000 		.4byte	.LFE73
 2781 0393 0400     		.2byte	0x4
 2782 0395 F3       		.byte	0xf3
 2783 0396 01       		.uleb128 0x1
 2784 0397 51       		.byte	0x51
 2785 0398 9F       		.byte	0x9f
 2786 0399 00000000 		.4byte	0
 2787 039d 00000000 		.4byte	0
 2788              	.LLST22:
 2789 03a1 10000000 		.4byte	.LVL49
 2790 03a5 57000000 		.4byte	.LVL58-1
 2791 03a9 0100     		.2byte	0x1
 2792 03ab 50       		.byte	0x50
 2793 03ac 5A000000 		.4byte	.LVL59
 2794 03b0 69000000 		.4byte	.LVL61-1
 2795 03b4 0100     		.2byte	0x1
 2796 03b6 50       		.byte	0x50
 2797 03b7 00000000 		.4byte	0
 2798 03bb 00000000 		.4byte	0
 2799              	.LLST23:
 2800 03bf 1C000000 		.4byte	.LVL52
 2801 03c3 5A000000 		.4byte	.LVL59
 2802 03c7 0100     		.2byte	0x1
 2803 03c9 55       		.byte	0x55
 2804 03ca 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 69


 2805 03ce 00000000 		.4byte	0
 2806              	.LLST24:
 2807 03d2 06000000 		.4byte	.LVL46
 2808 03d6 0D000000 		.4byte	.LVL48-1
 2809 03da 0300     		.2byte	0x3
 2810 03dc 70       		.byte	0x70
 2811 03dd 04       		.sleb128 4
 2812 03de 9F       		.byte	0x9f
 2813 03df 0D000000 		.4byte	.LVL48-1
 2814 03e3 6E000000 		.4byte	.LFE73
 2815 03e7 0300     		.2byte	0x3
 2816 03e9 74       		.byte	0x74
 2817 03ea 04       		.sleb128 4
 2818 03eb 9F       		.byte	0x9f
 2819 03ec 00000000 		.4byte	0
 2820 03f0 00000000 		.4byte	0
 2821              	.LLST25:
 2822 03f4 06000000 		.4byte	.LVL46
 2823 03f8 1A000000 		.4byte	.LVL51
 2824 03fc 0200     		.2byte	0x2
 2825 03fe 30       		.byte	0x30
 2826 03ff 9F       		.byte	0x9f
 2827 0400 1A000000 		.4byte	.LVL51
 2828 0404 64000000 		.4byte	.LVL60
 2829 0408 0100     		.2byte	0x1
 2830 040a 57       		.byte	0x57
 2831 040b 00000000 		.4byte	0
 2832 040f 00000000 		.4byte	0
 2833              	.LLST26:
 2834 0413 1E000000 		.4byte	.LVL53
 2835 0417 22000000 		.4byte	.LVL54
 2836 041b 0100     		.2byte	0x1
 2837 041d 53       		.byte	0x53
 2838 041e 22000000 		.4byte	.LVL54
 2839 0422 57000000 		.4byte	.LVL58-1
 2840 0426 0100     		.2byte	0x1
 2841 0428 52       		.byte	0x52
 2842 0429 00000000 		.4byte	0
 2843 042d 00000000 		.4byte	0
 2844              	.LLST27:
 2845 0431 1E000000 		.4byte	.LVL53
 2846 0435 57000000 		.4byte	.LVL58-1
 2847 0439 0800     		.2byte	0x8
 2848 043b 73       		.byte	0x73
 2849 043c 00       		.sleb128 0
 2850 043d 40       		.byte	0x40
 2851 043e 44       		.byte	0x44
 2852 043f 24       		.byte	0x24
 2853 0440 1F       		.byte	0x1f
 2854 0441 1A       		.byte	0x1a
 2855 0442 9F       		.byte	0x9f
 2856 0443 00000000 		.4byte	0
 2857 0447 00000000 		.4byte	0
 2858              	.LLST28:
 2859 044b 06000000 		.4byte	.LVL46
 2860 044f 0D000000 		.4byte	.LVL48-1
 2861 0453 0100     		.2byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 70


 2862 0455 50       		.byte	0x50
 2863 0456 0D000000 		.4byte	.LVL48-1
 2864 045a 6E000000 		.4byte	.LFE73
 2865 045e 0100     		.2byte	0x1
 2866 0460 54       		.byte	0x54
 2867 0461 00000000 		.4byte	0
 2868 0465 00000000 		.4byte	0
 2869              	.LLST29:
 2870 0469 06000000 		.4byte	.LVL46
 2871 046d 1A000000 		.4byte	.LVL51
 2872 0471 0200     		.2byte	0x2
 2873 0473 30       		.byte	0x30
 2874 0474 9F       		.byte	0x9f
 2875 0475 1E000000 		.4byte	.LVL53
 2876 0479 44000000 		.4byte	.LVL55
 2877 047d 0200     		.2byte	0x2
 2878 047f 30       		.byte	0x30
 2879 0480 9F       		.byte	0x9f
 2880 0481 44000000 		.4byte	.LVL55
 2881 0485 50000000 		.4byte	.LVL57
 2882 0489 0100     		.2byte	0x1
 2883 048b 51       		.byte	0x51
 2884 048c 00000000 		.4byte	0
 2885 0490 00000000 		.4byte	0
 2886              	.LLST30:
 2887 0494 00000000 		.4byte	.LVL62
 2888 0498 0F000000 		.4byte	.LVL64-1
 2889 049c 0100     		.2byte	0x1
 2890 049e 50       		.byte	0x50
 2891 049f 0F000000 		.4byte	.LVL64-1
 2892 04a3 8A000000 		.4byte	.LVL82
 2893 04a7 0100     		.2byte	0x1
 2894 04a9 55       		.byte	0x55
 2895 04aa 8A000000 		.4byte	.LVL82
 2896 04ae 90000000 		.4byte	.LFE69
 2897 04b2 0400     		.2byte	0x4
 2898 04b4 F3       		.byte	0xf3
 2899 04b5 01       		.uleb128 0x1
 2900 04b6 50       		.byte	0x50
 2901 04b7 9F       		.byte	0x9f
 2902 04b8 00000000 		.4byte	0
 2903 04bc 00000000 		.4byte	0
 2904              	.LLST31:
 2905 04c0 00000000 		.4byte	.LVL62
 2906 04c4 0F000000 		.4byte	.LVL64-1
 2907 04c8 0100     		.2byte	0x1
 2908 04ca 51       		.byte	0x51
 2909 04cb 0F000000 		.4byte	.LVL64-1
 2910 04cf 20000000 		.4byte	.LVL67
 2911 04d3 0100     		.2byte	0x1
 2912 04d5 54       		.byte	0x54
 2913 04d6 20000000 		.4byte	.LVL67
 2914 04da 90000000 		.4byte	.LFE69
 2915 04de 0400     		.2byte	0x4
 2916 04e0 F3       		.byte	0xf3
 2917 04e1 01       		.uleb128 0x1
 2918 04e2 51       		.byte	0x51
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 71


 2919 04e3 9F       		.byte	0x9f
 2920 04e4 00000000 		.4byte	0
 2921 04e8 00000000 		.4byte	0
 2922              	.LLST32:
 2923 04ec 00000000 		.4byte	.LVL62
 2924 04f0 0F000000 		.4byte	.LVL64-1
 2925 04f4 0100     		.2byte	0x1
 2926 04f6 52       		.byte	0x52
 2927 04f7 0F000000 		.4byte	.LVL64-1
 2928 04fb 7A000000 		.4byte	.LVL79
 2929 04ff 0100     		.2byte	0x1
 2930 0501 57       		.byte	0x57
 2931 0502 7A000000 		.4byte	.LVL79
 2932 0506 90000000 		.4byte	.LFE69
 2933 050a 0400     		.2byte	0x4
 2934 050c F3       		.byte	0xf3
 2935 050d 01       		.uleb128 0x1
 2936 050e 52       		.byte	0x52
 2937 050f 9F       		.byte	0x9f
 2938 0510 00000000 		.4byte	0
 2939 0514 00000000 		.4byte	0
 2940              	.LLST33:
 2941 0518 00000000 		.4byte	.LVL62
 2942 051c 0F000000 		.4byte	.LVL64-1
 2943 0520 0100     		.2byte	0x1
 2944 0522 53       		.byte	0x53
 2945 0523 0F000000 		.4byte	.LVL64-1
 2946 0527 2E000000 		.4byte	.LVL69
 2947 052b 0100     		.2byte	0x1
 2948 052d 56       		.byte	0x56
 2949 052e 2E000000 		.4byte	.LVL69
 2950 0532 32000000 		.4byte	.LVL70
 2951 0536 0200     		.2byte	0x2
 2952 0538 30       		.byte	0x30
 2953 0539 9F       		.byte	0x9f
 2954 053a 32000000 		.4byte	.LVL70
 2955 053e 8A000000 		.4byte	.LVL82
 2956 0542 0100     		.2byte	0x1
 2957 0544 56       		.byte	0x56
 2958 0545 00000000 		.4byte	0
 2959 0549 00000000 		.4byte	0
 2960              	.LLST34:
 2961 054d 14000000 		.4byte	.LVL65
 2962 0551 8A000000 		.4byte	.LVL82
 2963 0555 0100     		.2byte	0x1
 2964 0557 58       		.byte	0x58
 2965 0558 00000000 		.4byte	0
 2966 055c 00000000 		.4byte	0
 2967              	.LLST35:
 2968 0560 26000000 		.4byte	.LVL68
 2969 0564 32000000 		.4byte	.LVL70
 2970 0568 0100     		.2byte	0x1
 2971 056a 54       		.byte	0x54
 2972 056b 40000000 		.4byte	.LVL71
 2973 056f 44000000 		.4byte	.LVL72
 2974 0573 0200     		.2byte	0x2
 2975 0575 30       		.byte	0x30
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 72


 2976 0576 9F       		.byte	0x9f
 2977 0577 46000000 		.4byte	.LVL73
 2978 057b 64000000 		.4byte	.LVL76
 2979 057f 0100     		.2byte	0x1
 2980 0581 54       		.byte	0x54
 2981 0582 64000000 		.4byte	.LVL76
 2982 0586 6D000000 		.4byte	.LVL77-1
 2983 058a 0100     		.2byte	0x1
 2984 058c 50       		.byte	0x50
 2985 058d 6D000000 		.4byte	.LVL77-1
 2986 0591 8A000000 		.4byte	.LVL82
 2987 0595 0100     		.2byte	0x1
 2988 0597 54       		.byte	0x54
 2989 0598 8A000000 		.4byte	.LVL82
 2990 059c 90000000 		.4byte	.LFE69
 2991 05a0 0100     		.2byte	0x1
 2992 05a2 50       		.byte	0x50
 2993 05a3 00000000 		.4byte	0
 2994 05a7 00000000 		.4byte	0
 2995              	.LLST36:
 2996 05ab 0C000000 		.4byte	.LVL63
 2997 05af 0F000000 		.4byte	.LVL64-1
 2998 05b3 0100     		.2byte	0x1
 2999 05b5 50       		.byte	0x50
 3000 05b6 0F000000 		.4byte	.LVL64-1
 3001 05ba 8A000000 		.4byte	.LVL82
 3002 05be 0100     		.2byte	0x1
 3003 05c0 55       		.byte	0x55
 3004 05c1 8A000000 		.4byte	.LVL82
 3005 05c5 90000000 		.4byte	.LFE69
 3006 05c9 0400     		.2byte	0x4
 3007 05cb F3       		.byte	0xf3
 3008 05cc 01       		.uleb128 0x1
 3009 05cd 50       		.byte	0x50
 3010 05ce 9F       		.byte	0x9f
 3011 05cf 00000000 		.4byte	0
 3012 05d3 00000000 		.4byte	0
 3013              	.LLST37:
 3014 05d7 4A000000 		.4byte	.LVL74
 3015 05db 61000000 		.4byte	.LVL75-1
 3016 05df 0100     		.2byte	0x1
 3017 05e1 50       		.byte	0x50
 3018 05e2 00000000 		.4byte	0
 3019 05e6 00000000 		.4byte	0
 3020              	.LLST38:
 3021 05ea 0C000000 		.4byte	.LVL63
 3022 05ee 46000000 		.4byte	.LVL73
 3023 05f2 0200     		.2byte	0x2
 3024 05f4 30       		.byte	0x30
 3025 05f5 9F       		.byte	0x9f
 3026 05f6 00000000 		.4byte	0
 3027 05fa 00000000 		.4byte	0
 3028              	.LLST39:
 3029 05fe 00000000 		.4byte	.LVL83
 3030 0602 07000000 		.4byte	.LVL85-1
 3031 0606 0100     		.2byte	0x1
 3032 0608 50       		.byte	0x50
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 73


 3033 0609 07000000 		.4byte	.LVL85-1
 3034 060d 26000000 		.4byte	.LFE74
 3035 0611 0100     		.2byte	0x1
 3036 0613 54       		.byte	0x54
 3037 0614 00000000 		.4byte	0
 3038 0618 00000000 		.4byte	0
 3039              	.LLST40:
 3040 061c 04000000 		.4byte	.LVL84
 3041 0620 07000000 		.4byte	.LVL85-1
 3042 0624 0100     		.2byte	0x1
 3043 0626 50       		.byte	0x50
 3044 0627 07000000 		.4byte	.LVL85-1
 3045 062b 26000000 		.4byte	.LFE74
 3046 062f 0100     		.2byte	0x1
 3047 0631 54       		.byte	0x54
 3048 0632 00000000 		.4byte	0
 3049 0636 00000000 		.4byte	0
 3050              	.LLST41:
 3051 063a 04000000 		.4byte	.LVL84
 3052 063e 07000000 		.4byte	.LVL85-1
 3053 0642 0300     		.2byte	0x3
 3054 0644 70       		.byte	0x70
 3055 0645 04       		.sleb128 4
 3056 0646 9F       		.byte	0x9f
 3057 0647 07000000 		.4byte	.LVL85-1
 3058 064b 26000000 		.4byte	.LFE74
 3059 064f 0300     		.2byte	0x3
 3060 0651 74       		.byte	0x74
 3061 0652 04       		.sleb128 4
 3062 0653 9F       		.byte	0x9f
 3063 0654 00000000 		.4byte	0
 3064 0658 00000000 		.4byte	0
 3065              	.LLST42:
 3066 065c 00000000 		.4byte	.LVL89
 3067 0660 05000000 		.4byte	.LVL90-1
 3068 0664 0100     		.2byte	0x1
 3069 0666 50       		.byte	0x50
 3070 0667 05000000 		.4byte	.LVL90-1
 3071 066b 08000000 		.4byte	.LFE75
 3072 066f 0400     		.2byte	0x4
 3073 0671 F3       		.byte	0xf3
 3074 0672 01       		.uleb128 0x1
 3075 0673 50       		.byte	0x50
 3076 0674 9F       		.byte	0x9f
 3077 0675 00000000 		.4byte	0
 3078 0679 00000000 		.4byte	0
 3079              	.LLST43:
 3080 067d 00000000 		.4byte	.LVL89
 3081 0681 05000000 		.4byte	.LVL90-1
 3082 0685 0100     		.2byte	0x1
 3083 0687 51       		.byte	0x51
 3084 0688 05000000 		.4byte	.LVL90-1
 3085 068c 08000000 		.4byte	.LFE75
 3086 0690 0400     		.2byte	0x4
 3087 0692 F3       		.byte	0xf3
 3088 0693 01       		.uleb128 0x1
 3089 0694 51       		.byte	0x51
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 74


 3090 0695 9F       		.byte	0x9f
 3091 0696 00000000 		.4byte	0
 3092 069a 00000000 		.4byte	0
 3093              	.LLST44:
 3094 069e 00000000 		.4byte	.LVL91
 3095 06a2 05000000 		.4byte	.LVL92-1
 3096 06a6 0100     		.2byte	0x1
 3097 06a8 50       		.byte	0x50
 3098 06a9 05000000 		.4byte	.LVL92-1
 3099 06ad 08000000 		.4byte	.LFE76
 3100 06b1 0400     		.2byte	0x4
 3101 06b3 F3       		.byte	0xf3
 3102 06b4 01       		.uleb128 0x1
 3103 06b5 50       		.byte	0x50
 3104 06b6 9F       		.byte	0x9f
 3105 06b7 00000000 		.4byte	0
 3106 06bb 00000000 		.4byte	0
 3107              	.LLST45:
 3108 06bf 00000000 		.4byte	.LVL91
 3109 06c3 05000000 		.4byte	.LVL92-1
 3110 06c7 0100     		.2byte	0x1
 3111 06c9 51       		.byte	0x51
 3112 06ca 05000000 		.4byte	.LVL92-1
 3113 06ce 08000000 		.4byte	.LFE76
 3114 06d2 0400     		.2byte	0x4
 3115 06d4 F3       		.byte	0xf3
 3116 06d5 01       		.uleb128 0x1
 3117 06d6 51       		.byte	0x51
 3118 06d7 9F       		.byte	0x9f
 3119 06d8 00000000 		.4byte	0
 3120 06dc 00000000 		.4byte	0
 3121              	.LLST46:
 3122 06e0 00000000 		.4byte	.LVL93
 3123 06e4 04000000 		.4byte	.LVL94
 3124 06e8 0100     		.2byte	0x1
 3125 06ea 50       		.byte	0x50
 3126 06eb 04000000 		.4byte	.LVL94
 3127 06ef 06000000 		.4byte	.LVL95
 3128 06f3 0400     		.2byte	0x4
 3129 06f5 F3       		.byte	0xf3
 3130 06f6 01       		.uleb128 0x1
 3131 06f7 50       		.byte	0x50
 3132 06f8 9F       		.byte	0x9f
 3133 06f9 06000000 		.4byte	.LVL95
 3134 06fd 08000000 		.4byte	.LVL96
 3135 0701 0100     		.2byte	0x1
 3136 0703 50       		.byte	0x50
 3137 0704 08000000 		.4byte	.LVL96
 3138 0708 0A000000 		.4byte	.LFE78
 3139 070c 0400     		.2byte	0x4
 3140 070e F3       		.byte	0xf3
 3141 070f 01       		.uleb128 0x1
 3142 0710 50       		.byte	0x50
 3143 0711 9F       		.byte	0x9f
 3144 0712 00000000 		.4byte	0
 3145 0716 00000000 		.4byte	0
 3146              	.LLST47:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 75


 3147 071a 04000000 		.4byte	.LVL94
 3148 071e 06000000 		.4byte	.LVL95
 3149 0722 0100     		.2byte	0x1
 3150 0724 50       		.byte	0x50
 3151 0725 08000000 		.4byte	.LVL96
 3152 0729 0A000000 		.4byte	.LFE78
 3153 072d 0100     		.2byte	0x1
 3154 072f 50       		.byte	0x50
 3155 0730 00000000 		.4byte	0
 3156 0734 00000000 		.4byte	0
 3157              	.LLST48:
 3158 0738 00000000 		.4byte	.LVL93
 3159 073c 04000000 		.4byte	.LVL94
 3160 0740 0100     		.2byte	0x1
 3161 0742 50       		.byte	0x50
 3162 0743 04000000 		.4byte	.LVL94
 3163 0747 06000000 		.4byte	.LVL95
 3164 074b 0400     		.2byte	0x4
 3165 074d F3       		.byte	0xf3
 3166 074e 01       		.uleb128 0x1
 3167 074f 50       		.byte	0x50
 3168 0750 9F       		.byte	0x9f
 3169 0751 06000000 		.4byte	.LVL95
 3170 0755 08000000 		.4byte	.LVL96
 3171 0759 0100     		.2byte	0x1
 3172 075b 50       		.byte	0x50
 3173 075c 08000000 		.4byte	.LVL96
 3174 0760 0A000000 		.4byte	.LFE78
 3175 0764 0400     		.2byte	0x4
 3176 0766 F3       		.byte	0xf3
 3177 0767 01       		.uleb128 0x1
 3178 0768 50       		.byte	0x50
 3179 0769 9F       		.byte	0x9f
 3180 076a 00000000 		.4byte	0
 3181 076e 00000000 		.4byte	0
 3182              		.section	.debug_aranges,"",%progbits
 3183 0000 74000000 		.4byte	0x74
 3184 0004 0200     		.2byte	0x2
 3185 0006 00000000 		.4byte	.Ldebug_info0
 3186 000a 04       		.byte	0x4
 3187 000b 00       		.byte	0
 3188 000c 0000     		.2byte	0
 3189 000e 0000     		.2byte	0
 3190 0010 00000000 		.4byte	.LFB77
 3191 0014 1C000000 		.4byte	.LFE77-.LFB77
 3192 0018 00000000 		.4byte	.LFB68
 3193 001c 1A000000 		.4byte	.LFE68-.LFB68
 3194 0020 00000000 		.4byte	.LFB70
 3195 0024 B0000000 		.4byte	.LFE70-.LFB70
 3196 0028 00000000 		.4byte	.LFB71
 3197 002c 1A000000 		.4byte	.LFE71-.LFB71
 3198 0030 00000000 		.4byte	.LFB72
 3199 0034 1C000000 		.4byte	.LFE72-.LFB72
 3200 0038 00000000 		.4byte	.LFB73
 3201 003c 6E000000 		.4byte	.LFE73-.LFB73
 3202 0040 00000000 		.4byte	.LFB69
 3203 0044 90000000 		.4byte	.LFE69-.LFB69
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 76


 3204 0048 00000000 		.4byte	.LFB74
 3205 004c 26000000 		.4byte	.LFE74-.LFB74
 3206 0050 00000000 		.4byte	.LFB75
 3207 0054 08000000 		.4byte	.LFE75-.LFB75
 3208 0058 00000000 		.4byte	.LFB76
 3209 005c 08000000 		.4byte	.LFE76-.LFB76
 3210 0060 00000000 		.4byte	.LFB78
 3211 0064 0A000000 		.4byte	.LFE78-.LFB78
 3212 0068 00000000 		.4byte	.LFB79
 3213 006c 04000000 		.4byte	.LFE79-.LFB79
 3214 0070 00000000 		.4byte	0
 3215 0074 00000000 		.4byte	0
 3216              		.section	.debug_ranges,"",%progbits
 3217              	.Ldebug_ranges0:
 3218 0000 12000000 		.4byte	.LBB6
 3219 0004 38000000 		.4byte	.LBE6
 3220 0008 3C000000 		.4byte	.LBB7
 3221 000c 5A000000 		.4byte	.LBE7
 3222 0010 00000000 		.4byte	0
 3223 0014 00000000 		.4byte	0
 3224 0018 00000000 		.4byte	.LFB77
 3225 001c 1C000000 		.4byte	.LFE77
 3226 0020 00000000 		.4byte	.LFB68
 3227 0024 1A000000 		.4byte	.LFE68
 3228 0028 00000000 		.4byte	.LFB70
 3229 002c B0000000 		.4byte	.LFE70
 3230 0030 00000000 		.4byte	.LFB71
 3231 0034 1A000000 		.4byte	.LFE71
 3232 0038 00000000 		.4byte	.LFB72
 3233 003c 1C000000 		.4byte	.LFE72
 3234 0040 00000000 		.4byte	.LFB73
 3235 0044 6E000000 		.4byte	.LFE73
 3236 0048 00000000 		.4byte	.LFB69
 3237 004c 90000000 		.4byte	.LFE69
 3238 0050 00000000 		.4byte	.LFB74
 3239 0054 26000000 		.4byte	.LFE74
 3240 0058 00000000 		.4byte	.LFB75
 3241 005c 08000000 		.4byte	.LFE75
 3242 0060 00000000 		.4byte	.LFB76
 3243 0064 08000000 		.4byte	.LFE76
 3244 0068 00000000 		.4byte	.LFB78
 3245 006c 0A000000 		.4byte	.LFE78
 3246 0070 00000000 		.4byte	.LFB79
 3247 0074 04000000 		.4byte	.LFE79
 3248 0078 00000000 		.4byte	0
 3249 007c 00000000 		.4byte	0
 3250              		.section	.debug_line,"",%progbits
 3251              	.Ldebug_line0:
 3252 0000 6F030000 		.section	.debug_str,"MS",%progbits,1
 3252      0200E001 
 3252      00000201 
 3252      FB0E0D00 
 3252      01010101 
 3253              	.LASF16:
 3254 0000 666C6F61 		.ascii	"float\000"
 3254      7400
 3255              	.LASF49:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 77


 3256 0006 78457665 		.ascii	"xEventGroupCreate\000"
 3256      6E744772 
 3256      6F757043 
 3256      72656174 
 3256      6500
 3257              	.LASF43:
 3258 0018 756C4E65 		.ascii	"ulNewBASEPRI\000"
 3258      77424153 
 3258      45505249 
 3258      00
 3259              	.LASF83:
 3260 0025 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 3260      6B506C61 
 3260      63654F6E 
 3260      556E6F72 
 3260      64657265 
 3261              	.LASF46:
 3262 0044 78576169 		.ascii	"xWaitForAllBits\000"
 3262      74466F72 
 3262      416C6C42 
 3262      69747300 
 3263              	.LASF65:
 3264 0054 70784C69 		.ascii	"pxListEnd\000"
 3264      7374456E 
 3264      6400
 3265              	.LASF82:
 3266 005e 764C6973 		.ascii	"vListInitialise\000"
 3266      74496E69 
 3266      7469616C 
 3266      69736500 
 3267              	.LASF5:
 3268 006e 73686F72 		.ascii	"short int\000"
 3268      7420696E 
 3268      7400
 3269              	.LASF33:
 3270 0078 784C6973 		.ascii	"xListEnd\000"
 3270      74456E64 
 3270      00
 3271              	.LASF23:
 3272 0081 70785072 		.ascii	"pxPrevious\000"
 3272      6576696F 
 3272      757300
 3273              	.LASF52:
 3274 008c 78436C65 		.ascii	"xClearOnExit\000"
 3274      61724F6E 
 3274      45786974 
 3274      00
 3275              	.LASF9:
 3276 0099 5F5F7569 		.ascii	"__uint32_t\000"
 3276      6E743332 
 3276      5F7400
 3277              	.LASF36:
 3278 00a4 4576656E 		.ascii	"EventBits_t\000"
 3278      74426974 
 3278      735F7400 
 3279              	.LASF47:
 3280 00b0 78576169 		.ascii	"xWaitConditionMet\000"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 78


 3280      74436F6E 
 3280      64697469 
 3280      6F6E4D65 
 3280      7400
 3281              	.LASF24:
 3282 00c2 70764F77 		.ascii	"pvOwner\000"
 3282      6E657200 
 3283              	.LASF53:
 3284 00ca 78546963 		.ascii	"xTicksToWait\000"
 3284      6B73546F 
 3284      57616974 
 3284      00
 3285              	.LASF35:
 3286 00d7 4576656E 		.ascii	"EventGroupHandle_t\000"
 3286      7447726F 
 3286      75704861 
 3286      6E646C65 
 3286      5F7400
 3287              	.LASF96:
 3288 00ea 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 3288      72745261 
 3288      69736542 
 3288      41534550 
 3288      524900
 3289              	.LASF67:
 3290 00fd 75784269 		.ascii	"uxBitsWaitedFor\000"
 3290      74735761 
 3290      69746564 
 3290      466F7200 
 3291              	.LASF72:
 3292 010d 76457665 		.ascii	"vEventGroupDelete\000"
 3292      6E744772 
 3292      6F757044 
 3292      656C6574 
 3292      6500
 3293              	.LASF40:
 3294 011f 75784576 		.ascii	"uxEventGroupNumber\000"
 3294      656E7447 
 3294      726F7570 
 3294      4E756D62 
 3294      657200
 3295              	.LASF45:
 3296 0132 75784269 		.ascii	"uxBitsToWaitFor\000"
 3296      7473546F 
 3296      57616974 
 3296      466F7200 
 3297              	.LASF34:
 3298 0142 4C697374 		.ascii	"List_t\000"
 3298      5F7400
 3299              	.LASF29:
 3300 0149 4D696E69 		.ascii	"MiniListItem_t\000"
 3300      4C697374 
 3300      4974656D 
 3300      5F7400
 3301              	.LASF1:
 3302 0158 6C6F6E67 		.ascii	"long long int\000"
 3302      206C6F6E 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 79


 3302      6720696E 
 3302      7400
 3303              	.LASF76:
 3304 0166 76457665 		.ascii	"vEventGroupClearBitsCallback\000"
 3304      6E744772 
 3304      6F757043 
 3304      6C656172 
 3304      42697473 
 3305              	.LASF66:
 3306 0183 70784C69 		.ascii	"pxList\000"
 3306      737400
 3307              	.LASF7:
 3308 018a 6C6F6E67 		.ascii	"long int\000"
 3308      20696E74 
 3308      00
 3309              	.LASF30:
 3310 0193 784C4953 		.ascii	"xLIST\000"
 3310      5400
 3311              	.LASF37:
 3312 0199 78457665 		.ascii	"xEventGroupDefinition\000"
 3312      6E744772 
 3312      6F757044 
 3312      6566696E 
 3312      6974696F 
 3313              	.LASF64:
 3314 01af 70784C69 		.ascii	"pxListItem\000"
 3314      73744974 
 3314      656D00
 3315              	.LASF21:
 3316 01ba 78497465 		.ascii	"xItemValue\000"
 3316      6D56616C 
 3316      756500
 3317              	.LASF75:
 3318 01c5 756C4269 		.ascii	"ulBitsToSet\000"
 3318      7473546F 
 3318      53657400 
 3319              	.LASF39:
 3320 01d1 78546173 		.ascii	"xTasksWaitingForBits\000"
 3320      6B735761 
 3320      6974696E 
 3320      67466F72 
 3320      42697473 
 3321              	.LASF69:
 3322 01e6 78457665 		.ascii	"xEventGroupSync\000"
 3322      6E744772 
 3322      6F757053 
 3322      796E6300 
 3323              	.LASF27:
 3324 01f6 784C4953 		.ascii	"xLIST_ITEM\000"
 3324      545F4954 
 3324      454D00
 3325              	.LASF58:
 3326 0201 78457665 		.ascii	"xEventGroupClearBits\000"
 3326      6E744772 
 3326      6F757043 
 3326      6C656172 
 3326      42697473 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 80


 3327              	.LASF20:
 3328 0216 5469636B 		.ascii	"TickType_t\000"
 3328      54797065 
 3328      5F7400
 3329              	.LASF2:
 3330 0221 6C6F6E67 		.ascii	"long double\000"
 3330      20646F75 
 3330      626C6500 
 3331              	.LASF89:
 3332 022d 76546173 		.ascii	"vTaskRemoveFromUnorderedEventList\000"
 3332      6B52656D 
 3332      6F766546 
 3332      726F6D55 
 3332      6E6F7264 
 3333              	.LASF4:
 3334 024f 756E7369 		.ascii	"unsigned char\000"
 3334      676E6564 
 3334      20636861 
 3334      7200
 3335              	.LASF42:
 3336 025d 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 3336      6967696E 
 3336      616C4241 
 3336      53455052 
 3336      4900
 3337              	.LASF3:
 3338 026f 7369676E 		.ascii	"signed char\000"
 3338      65642063 
 3338      68617200 
 3339              	.LASF14:
 3340 027b 696E7433 		.ascii	"int32_t\000"
 3340      325F7400 
 3341              	.LASF11:
 3342 0283 6C6F6E67 		.ascii	"long long unsigned int\000"
 3342      206C6F6E 
 3342      6720756E 
 3342      7369676E 
 3342      65642069 
 3343              	.LASF92:
 3344 029a 2E2E5C46 		.ascii	"..\\FreeRTOS\\Source\\event_groups.c\000"
 3344      72656552 
 3344      544F535C 
 3344      536F7572 
 3344      63655C65 
 3345              	.LASF15:
 3346 02bc 75696E74 		.ascii	"uint32_t\000"
 3346      33325F74 
 3346      00
 3347              	.LASF74:
 3348 02c5 70764576 		.ascii	"pvEventGroup\000"
 3348      656E7447 
 3348      726F7570 
 3348      00
 3349              	.LASF0:
 3350 02d2 756E7369 		.ascii	"unsigned int\000"
 3350      676E6564 
 3350      20696E74 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 81


 3350      00
 3351              	.LASF26:
 3352 02df 4C697374 		.ascii	"ListItem_t\000"
 3352      4974656D 
 3352      5F7400
 3353              	.LASF18:
 3354 02ea 42617365 		.ascii	"BaseType_t\000"
 3354      54797065 
 3354      5F7400
 3355              	.LASF25:
 3356 02f5 7076436F 		.ascii	"pvContainer\000"
 3356      6E746169 
 3356      6E657200 
 3357              	.LASF50:
 3358 0301 78457665 		.ascii	"xEventGroupWaitBits\000"
 3358      6E744772 
 3358      6F757057 
 3358      61697442 
 3358      69747300 
 3359              	.LASF85:
 3360 0315 78546173 		.ascii	"xTaskResumeAll\000"
 3360      6B526573 
 3360      756D6541 
 3360      6C6C00
 3361              	.LASF6:
 3362 0324 73686F72 		.ascii	"short unsigned int\000"
 3362      7420756E 
 3362      7369676E 
 3362      65642069 
 3362      6E7400
 3363              	.LASF87:
 3364 0337 76506F72 		.ascii	"vPortEnterCritical\000"
 3364      74456E74 
 3364      65724372 
 3364      69746963 
 3364      616C00
 3365              	.LASF90:
 3366 034a 76506F72 		.ascii	"vPortFree\000"
 3366      74467265 
 3366      6500
 3367              	.LASF97:
 3368 0354 70727654 		.ascii	"prvTestWaitCondition\000"
 3368      65737457 
 3368      61697443 
 3368      6F6E6469 
 3368      74696F6E 
 3369              	.LASF94:
 3370 0369 76506F72 		.ascii	"vPortSetBASEPRI\000"
 3370      74536574 
 3370      42415345 
 3370      50524900 
 3371              	.LASF13:
 3372 0379 63686172 		.ascii	"char\000"
 3372      00
 3373              	.LASF98:
 3374 037e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3374      52784275 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 82


 3374      66666572 
 3374      00
 3375              	.LASF22:
 3376 038b 70784E65 		.ascii	"pxNext\000"
 3376      787400
 3377              	.LASF70:
 3378 0392 75784F72 		.ascii	"uxOriginalBitValue\000"
 3378      6967696E 
 3378      616C4269 
 3378      7456616C 
 3378      756500
 3379              	.LASF38:
 3380 03a5 75784576 		.ascii	"uxEventBits\000"
 3380      656E7442 
 3380      69747300 
 3381              	.LASF88:
 3382 03b1 76506F72 		.ascii	"vPortExitCritical\000"
 3382      74457869 
 3382      74437269 
 3382      74696361 
 3382      6C00
 3383              	.LASF80:
 3384 03c3 76457665 		.ascii	"vEventGroupSetNumber\000"
 3384      6E744772 
 3384      6F757053 
 3384      65744E75 
 3384      6D626572 
 3385              	.LASF55:
 3386 03d8 7578436F 		.ascii	"uxControlBits\000"
 3386      6E74726F 
 3386      6C426974 
 3386      7300
 3387              	.LASF60:
 3388 03e6 78457665 		.ascii	"xEventGroupGetBitsFromISR\000"
 3388      6E744772 
 3388      6F757047 
 3388      65744269 
 3388      74734672 
 3389              	.LASF62:
 3390 0400 78457665 		.ascii	"xEventGroupSetBits\000"
 3390      6E744772 
 3390      6F757053 
 3390      65744269 
 3390      747300
 3391              	.LASF54:
 3392 0413 75785265 		.ascii	"uxReturn\000"
 3392      7475726E 
 3392      00
 3393              	.LASF10:
 3394 041c 6C6F6E67 		.ascii	"long unsigned int\000"
 3394      20756E73 
 3394      69676E65 
 3394      6420696E 
 3394      7400
 3395              	.LASF93:
 3396 042e 433A5C55 		.ascii	"C:\\Users\\samue\\Desktop\\RobotRage2\\Zumo\\ZumoBo"
 3396      73657273 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 83


 3396      5C73616D 
 3396      75655C44 
 3396      65736B74 
 3397 045b 742E6379 		.ascii	"t.cydsn\000"
 3397      64736E00 
 3398              	.LASF19:
 3399 0463 55426173 		.ascii	"UBaseType_t\000"
 3399      65547970 
 3399      655F7400 
 3400              	.LASF95:
 3401 046f 756C4E65 		.ascii	"ulNewMaskValue\000"
 3401      774D6173 
 3401      6B56616C 
 3401      756500
 3402              	.LASF78:
 3403 047e 75784576 		.ascii	"uxEventGroupGetNumber\000"
 3403      656E7447 
 3403      726F7570 
 3403      4765744E 
 3403      756D6265 
 3404              	.LASF31:
 3405 0494 75784E75 		.ascii	"uxNumberOfItems\000"
 3405      6D626572 
 3405      4F664974 
 3405      656D7300 
 3406              	.LASF86:
 3407 04a4 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 3407      736B5265 
 3407      73657445 
 3407      76656E74 
 3407      4974656D 
 3408              	.LASF8:
 3409 04be 5F5F696E 		.ascii	"__int32_t\000"
 3409      7433325F 
 3409      7400
 3410              	.LASF61:
 3411 04c8 75785361 		.ascii	"uxSavedInterruptStatus\000"
 3411      76656449 
 3411      6E746572 
 3411      72757074 
 3411      53746174 
 3412              	.LASF79:
 3413 04df 78526574 		.ascii	"xReturn\000"
 3413      75726E00 
 3414              	.LASF12:
 3415 04e7 73697A65 		.ascii	"sizetype\000"
 3415      74797065 
 3415      00
 3416              	.LASF68:
 3417 04f0 784D6174 		.ascii	"xMatchFound\000"
 3417      6368466F 
 3417      756E6400 
 3418              	.LASF51:
 3419 04fc 78457665 		.ascii	"xEventGroup\000"
 3419      6E744772 
 3419      6F757000 
 3420              	.LASF59:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 84


 3421 0508 75784269 		.ascii	"uxBitsToClear\000"
 3421      7473546F 
 3421      436C6561 
 3421      7200
 3422              	.LASF17:
 3423 0516 646F7562 		.ascii	"double\000"
 3423      6C6500
 3424              	.LASF48:
 3425 051d 70784576 		.ascii	"pxEventBits\000"
 3425      656E7442 
 3425      69747300 
 3426              	.LASF32:
 3427 0529 7078496E 		.ascii	"pxIndex\000"
 3427      64657800 
 3428              	.LASF57:
 3429 0531 7854696D 		.ascii	"xTimeoutOccurred\000"
 3429      656F7574 
 3429      4F636375 
 3429      72726564 
 3429      00
 3430              	.LASF91:
 3431 0542 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3431      43313120 
 3431      352E342E 
 3431      31203230 
 3431      31363036 
 3432 0575 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3432      20726576 
 3432      6973696F 
 3432      6E203233 
 3432      37373135 
 3433 05a8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3433      66756E63 
 3433      74696F6E 
 3433      2D736563 
 3433      74696F6E 
 3434              	.LASF73:
 3435 05d0 76457665 		.ascii	"vEventGroupSetBitsCallback\000"
 3435      6E744772 
 3435      6F757053 
 3435      65744269 
 3435      74734361 
 3436              	.LASF28:
 3437 05eb 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 3437      495F4C49 
 3437      53545F49 
 3437      54454D00 
 3438              	.LASF44:
 3439 05fb 75784375 		.ascii	"uxCurrentEventBits\000"
 3439      7272656E 
 3439      74457665 
 3439      6E744269 
 3439      747300
 3440              	.LASF81:
 3441 060e 7076506F 		.ascii	"pvPortMalloc\000"
 3441      72744D61 
 3441      6C6C6F63 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccR5T69m.s 			page 85


 3441      00
 3442              	.LASF71:
 3443 061b 70785461 		.ascii	"pxTasksWaitingForBits\000"
 3443      736B7357 
 3443      61697469 
 3443      6E67466F 
 3443      72426974 
 3444              	.LASF84:
 3445 0631 76546173 		.ascii	"vTaskSuspendAll\000"
 3445      6B537573 
 3445      70656E64 
 3445      416C6C00 
 3446              	.LASF56:
 3447 0641 78416C72 		.ascii	"xAlreadyYielded\000"
 3447      65616479 
 3447      5969656C 
 3447      64656400 
 3448              	.LASF63:
 3449 0651 75784269 		.ascii	"uxBitsToSet\000"
 3449      7473546F 
 3449      53657400 
 3450              	.LASF77:
 3451 065d 756C4269 		.ascii	"ulBitsToClear\000"
 3451      7473546F 
 3451      436C6561 
 3451      7200
 3452              	.LASF41:
 3453 066b 4576656E 		.ascii	"EventGroup_t\000"
 3453      7447726F 
 3453      75705F74 
 3453      00
 3454              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
